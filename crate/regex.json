{"root":"0:0:1613","crate_version":"1.6.0","includes_private":false,"index":{"0:2812":{"id":"0:2812","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2814:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:3226-0:2497:3454":{"id":"a:2:9222:3226-0:2497:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10262:119":{"id":"2:10262:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10263:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9222:3226-0:2646:1576":{"id":"a:2:9222:3226-0:2646:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3252:209":{"id":"2:3252:209","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1135":{"id":"0:1135","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[87,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1136:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3067:648":{"id":"0:3067:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2497:3454":{"id":"b:2:3969-0:2497:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13399:58532":{"id":"2:13399:58532","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12997:1556","prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2694:1575":{"id":"b:2:3179-0:2694:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3701:137":{"id":"2:3701:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3703:675"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5713:5987":{"id":"1:5713:5987","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5714:8120","1:5715:56430","1:5716:56431"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9223:3225-0:1565:1568":{"id":"a:2:9223:3225-0:1565:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:4878-0:2954:1570":{"id":"a:2:3281:4878-0:2954:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1539":{"id":"0:1539","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[772,0],"end":[772,50]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:8436:3823","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3252:209-0:2788:2885":{"id":"a:2:3252:209-0:2788:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2862:104":{"id":"2:2862:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2863:397","2:2864:399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13383:58516":{"id":"2:13383:58516","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15845:4421"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2497:3454":{"id":"b:2:3179-0:2497:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1172:3770":{"id":"0:1172:3770","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_bytes.rs","begin":[556,4],"end":[558,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2799:648":{"id":"0:2799:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:1243:1568":{"id":"a:2:9222:3226-0:1243:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6776:5968":{"id":"1:6776:5968","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6777:9402"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1173:2773":{"id":"0:1173:2773","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_bytes.rs","begin":[566,4],"end":[572,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1079:4676":{"id":"1:1079:4676","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:3756","1:1081:1997","1:1082:56014","1:1083:56015","1:1084:56016","1:1085:56017","1:1086:56018"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13379:58497":{"id":"2:13379:58497","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:3058:1572":{"id":"a:2:3240:200-0:3058:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2928:167":{"id":"2:2928:167","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2929:404","2:2930:2022","2:2931:2020","2:2932:5344"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3240:200-0:3031:1566":{"id":"a:2:3240:200-0:3031:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3684:4828":{"id":"2:3684:4828","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3615:4827","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3179-0:1243:1568":{"id":"b:2:3179-0:1243:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3016":{"id":"0:3016","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3017:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1487:3602":{"id":"0:1487:3602","crate_id":0,"name":"find_iter","span":{"filename":"src/re_unicode.rs","begin":[244,4],"end":[246,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 Unicode\nword characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13475:62060":{"id":"2:13475:62060","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8411:120":{"id":"2:8411:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8412:4107","2:8413:5346","2:8414:5347","2:8415:5348","2:8419:5349","2:8422:5350"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3173-0:2703:1572":{"id":"b:2:3173-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2755:766":{"id":"0:2755:766","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3323:4805":{"id":"2:3323:4805","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3325:171","2:3326:547"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8371-0:2628:1571":{"id":"b:2:8371-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2843-0:2703:1572":{"id":"b:2:2843-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:2599:1570":{"id":"b:2:2843-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2848:1731":{"id":"0:2848:1731","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:1565:1568":{"id":"b:2:2843-0:1565:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2611:648":{"id":"0:2611:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5783:5985":{"id":"1:5783:5985","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5784:8120"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1132:669":{"id":"0:1132:669","crate_id":0,"name":"from","span":{"filename":"src/re_bytes.rs","begin":[61,4],"end":[63,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45737:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8371-0:2805:4100":{"id":"b:2:8371-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2754:780":{"id":"0:2754:780","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:2646:1576":{"id":"b:2:3173-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1551":{"id":"0:1551","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[824,0],"end":[850,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1554:2004","0:1555:909","0:1556:3818"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1323:3754":{"id":"0:1323:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1198,4],"end":[1200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2681:1578":{"id":"a:2:3240:200-0:2681:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2843-0:2895:4067":{"id":"b:2:2843-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2655:1577":{"id":"b:2:3173-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2497:3454":{"id":"b:2:3173-0:2497:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2983:1567":{"id":"b:2:3184-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2800:4101":{"id":"b:2:3184-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2890:2885":{"id":"0:2890:2885","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::bytes::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(b\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(b\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(b\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(b\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Match":"0:2954:1570","crate::Regex":"0:2978:1573","crate::Captures":"0:1565:1568"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2840","a:2:9222:3226-0:2890:2885","a:2:3252:209-0:2890:2885","a:2:3240:200-0:2890:2885","a:2:9223:3225-0:2890:2885","a:2:3281:4878-0:2890:2885","b:2:2843-0:2890:2885","b:2:3169-0:2890:2885","b:2:3173-0:2890:2885","b:2:3184-0:2890:2885","b:2:3969-0:2890:2885","b:2:2846-0:2890:2885","b:2:3179-0:2890:2885","b:5:787-0:2890:2885","0:2893","0:2886"]}},"0:2976:593":{"id":"0:2976:593","crate_id":0,"name":"eq","span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:2528:3454":{"id":"a:2:9222:3226-0:2528:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:2954:1570":{"id":"b:5:787-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1511":{"id":"0:1511","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[592,0],"end":[709,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1512:3770","0:1513:2773","0:1514:2774","0:1515:2775","0:1518:3786","0:1520:2776"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1222:3818":{"id":"0:1222:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[805,4],"end":[807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3018:1578":{"id":"0:3018:1578","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1082,0],"end":[1085,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:3018:1578","a:2:3252:209-0:3018:1578","a:2:3240:200-0:3018:1578","a:2:9223:3225-0:3018:1578","a:2:3281:4878-0:3018:1578","b:2:2843-0:3018:1578","b:2:3169-0:3018:1578","b:2:3173-0:3018:1578","b:2:3184-0:3018:1578","b:2:3969-0:3018:1578","b:2:8371-0:3018:1578","b:2:2846-0:3018:1578","b:2:3179-0:3018:1578","b:5:787-0:3018:1578","0:3023","0:3027","0:1608","0:1617","0:1620"]}},"a:2:9222:3226-0:2694:1575":{"id":"a:2:9222:3226-0:2694:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:10538:5496":{"id":"2:10538:5496","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10539:146","2:10540:35917","2:10541:55819"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10270:5317":{"id":"2:10270:5317","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10271:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:3058:1572":{"id":"b:2:3173-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3172:2096":{"id":"2:3172:2096","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3146:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1482":{"id":"0:1482","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[169,0],"end":[589,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1483:907","0:1484:2236","0:1485:2495","0:1487:3602","0:1490:1877","0:1493:3659","0:1496:1887","0:1499:3680","0:1502:2443","0:1505:3750","0:1508:3744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2881:4107":{"id":"0:2881:4107","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:3018:1578":{"id":"a:2:3240:200-0:3018:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9222:3226-0:2017:127":{"id":"a:2:9222:3226-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2670:397":{"id":"0:2670:397","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[818,9],"end":[818,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2528:3454":{"id":"0:2528:3454","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2515","a:2:9222:3226-0:2528:3454","a:2:3252:209-0:2528:3454","a:2:3240:200-0:2528:3454","a:2:9223:3225-0:2528:3454","a:2:3281:4878-0:2528:3454","b:2:2843-0:2528:3454","b:2:3169-0:2528:3454","b:2:3173-0:2528:3454","b:2:3184-0:2528:3454","b:2:3969-0:2528:3454","b:2:2846-0:2528:3454","b:2:3179-0:2528:3454","0:2531"]}},"a:2:3240:200-0:2703:1572":{"id":"a:2:3240:200-0:2703:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2800:4101":{"id":"a:2:3252:209-0:2800:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:4878-0:3058:1572":{"id":"a:2:3281:4878-0:3058:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3544:3541":{"id":"2:3544:3541","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3546:171","2:3547:740"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2770:4107":{"id":"0:2770:4107","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2681:1578":{"id":"b:2:3184-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5775:5991":{"id":"1:5775:5991","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:56687"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1189:3642":{"id":"0:1189:3642","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_bytes.rs","begin":[672,4],"end":[674,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4687:6024":{"id":"1:4687:6024","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4688:60402","1:4689:42043","1:4690:60403","1:4691:60404"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2959":{"id":"0:2959","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,9],"end":[28,13]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3045":{"id":"0:3045","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3048:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2978:1573":{"id":"b:2:3179-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3252:209-0:2983:1567":{"id":"a:2:3252:209-0:2983:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2843-0:2890:2885":{"id":"b:2:2843-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1311:3754":{"id":"0:1311:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1168,4],"end":[1170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6945:5969":{"id":"1:6945:5969","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6946:56607"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:2954:1570":{"id":"a:2:3252:209-0:2954:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3184-0:2793:4067":{"id":"b:2:3184-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:3002:1577":{"id":"b:2:3173-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[744,0],"end":[766,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1212:2004","0:1213:909"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2851:1773":{"id":"0:2851:1773","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2895:4067":{"id":"b:2:2846-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2864:3372":{"id":"0:2864:3372","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"b:2:3179-0:1565:1568":{"id":"b:2:3179-0:1565:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3398:4822":{"id":"2:3398:4822","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3400:343"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1326:3757":{"id":"0:1326:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1140:126":{"id":"0:1140:126","crate_id":0,"name":"Err","span":{"filename":"src/re_bytes.rs","begin":[105,4],"end":[105,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"b:2:3969-0:2694:1575":{"id":"b:2:3969-0:2694:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9223:3225-0:2637:1566":{"id":"a:2:9223:3225-0:2637:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:791:5394":{"id":"5:791:5394","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2800:4101":{"id":"0:2800:4101","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2800:4101","a:2:3252:209-0:2800:4101","a:2:3240:200-0:2800:4101","a:2:9223:3225-0:2800:4101","a:2:3281:4878-0:2800:4101","b:2:2843-0:2800:4101","b:2:3169-0:2800:4101","b:2:3173-0:2800:4101","b:2:3184-0:2800:4101","b:2:3969-0:2800:4101","b:2:8371-0:2800:4101","b:2:2846-0:2800:4101","b:2:3179-0:2800:4101","0:2803","0:2765","0:2769","0:2771"]}},"a:2:9222:3226-0:2800:4101":{"id":"a:2:9222:3226-0:2800:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2528:3454":{"id":"b:2:3169-0:2528:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3252:209-0:2978:1573":{"id":"a:2:3252:209-0:2978:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2519:2743":{"id":"0:2519:2743","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:3018:1578":{"id":"a:2:3281:4878-0:3018:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'t","bounds":[{"outlives":"'c"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3967:68":{"id":"2:3967:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3968:1408"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"b:2:3169-0:3040:1571":{"id":"b:2:3169-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:3058:1572":{"id":"a:2:9222:3226-0:3058:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2846:2236":{"id":"0:2846:2236","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1291":{"id":"0:1291","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1092,0],"end":[1100,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1294:2004","0:1295:909"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3240:200-0:2788:2885":{"id":"a:2:3240:200-0:2788:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2655:1577":{"id":"b:2:3169-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2518:2742":{"id":"0:2518:2742","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2805:4100":{"id":"b:2:3179-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2759:755":{"id":"0:2759:755","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8367:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1579:780":{"id":"0:1579:780","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[997,4],"end":[999,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2694:1575":{"id":"b:2:3184-0:2694:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3057:648":{"id":"0:3057:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2890:2885":{"id":"a:2:3281:4878-0:2890:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2989:397":{"id":"0:2989:397","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2497:3454":{"id":"b:2:3169-0:2497:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1254:766":{"id":"0:1254:766","crate_id":0,"name":"iter","span":{"filename":"src/re_bytes.rs","begin":[953,4],"end":[955,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'c","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1171":{"id":"0:1171","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[534,0],"end":[651,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1172:3770","0:1173:2773","0:1174:2774","0:1175:2775","0:1178:3786","0:1180:2776"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4694:6007":{"id":"1:4694:6007","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4695:56149","1:4696:56150","1:4697:56151","1:4699:6026","1:4700:56152","1:4702:1887","1:4703:6974"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4612:5999","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3173-0:2895:4067":{"id":"b:2:3173-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2547:907":{"id":"0:2547:907","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3137:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2693:648":{"id":"0:2693:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1086,16],"end":[1086,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1243:1568":{"id":"0:1243:1568","crate_id":0,"name":"Captures","span":{"filename":"src/re_bytes.rs","begin":[912,0],"end":[916,1]},"visibility":"public","docs":"Captures represents a group of captured byte strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched byte string is *also* available via the\n`name` method. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1248","a:2:9222:3226-0:1243:1568","a:2:3252:209-0:1243:1568","a:2:3240:200-0:1243:1568","a:2:9223:3225-0:1243:1568","a:2:3281:4878-0:1243:1568","b:2:2843-0:1243:1568","b:2:3169-0:1243:1568","b:2:3173-0:1243:1568","b:2:3184-0:1243:1568","b:2:3969-0:1243:1568","b:2:2846-0:1243:1568","b:2:3179-0:1243:1568","0:1258","0:1277","0:1283"]}},"a:2:9222:3226-0:2993:1576":{"id":"a:2:9222:3226-0:2993:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2746:1731":{"id":"0:2746:1731","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6097:62699":{"id":"5:6097:62699","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8352:205","`Box<str>`":"5:432:1996"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1996","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:5414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3548:4826":{"id":"2:3548:4826","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3550:741"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3544:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3179-0:2800:4101":{"id":"b:2:3179-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3489:131":{"id":"2:3489:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3491:366"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3492:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2876:2004":{"id":"0:2876:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:3173-0:1565:1568":{"id":"b:2:3173-0:1565:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3169-0:2664:1567":{"id":"b:2:3169-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1505:3750":{"id":"0:1505:3750","crate_id":0,"name":"replace_all","span":{"filename":"src/re_unicode.rs","begin":[520,4],"end":[526,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1470":{"id":"0:1470","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[74,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45737:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"items":["0:1472:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2608:397":{"id":"0:2608:397","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2702:648":{"id":"0:2702:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1161,9],"end":[1161,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:3011:1565":{"id":"b:2:2843-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2902:4101":{"id":"a:2:3240:200-0:2902:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3173-0:2594:3534":{"id":"b:2:3173-0:2594:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:2561:3534":{"id":"b:2:2843-0:2561:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1212:2004":{"id":"0:1212:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[745,4],"end":[745,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}},"b:2:3969-0:2017:127":{"id":"b:2:3969-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6845:5970":{"id":"1:6845:5970","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6846:55982"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3355:4813":{"id":"2:3355:4813","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3357:1090"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:4878-0:2664:1567":{"id":"a:2:3281:4878-0:2664:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3149:217":{"id":"2:3149:217","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3151:127","2:3152:1395"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2523:1535":{"id":"0:2523:1535","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2553:2744":{"id":"0:2553:2744","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1206":{"id":"0:1206","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[732,0],"end":[732,56]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1232:3818":{"id":"0:1232:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[831,4],"end":[833,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2756":{"id":"0:2756","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2757:3372","0:2758:2004","0:2759:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:3002:1577":{"id":"b:2:3179-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2938:174":{"id":"2:2938:174","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2940:984","2:2941:813","2:2942:779","2:2943:701","2:2944:684"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2768:3818":{"id":"0:2768:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:3058:1572":{"id":"b:2:2846-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:2594:3534":{"id":"a:2:9222:3226-0:2594:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2599:1570":{"id":"b:2:3179-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1641:1574":{"id":"0:1641:1574","crate_id":0,"name":"Replacer","span":{"filename":"src/re_unicode.rs","begin":[1162,0],"end":[1207,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a string.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&str` along with other\nvariants of string types and `FnMut(&Captures) -> String` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<str>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1642:3757","0:1643:3754","0:1645:3943"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1647","0:1652","0:1656","0:1660","0:1663","0:1667","0:1673","0:1677"]}},"0:1240:1784":{"id":"0:1240:1784","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[876,4],"end":[878,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2978:1573":{"id":"b:2:3169-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2637:1566":{"id":"a:2:3281:4878-0:2637:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3240:200-0:2895:4067":{"id":"a:2:3240:200-0:2895:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3173-0:3018:1578":{"id":"b:2:3173-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2495:2130":{"id":"0:2495:2130","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:3002:1577":{"id":"b:2:2843-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2550:2749":{"id":"0:2550:2749","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1514:2774":{"id":"0:1514:2774","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_unicode.rs","begin":[638,4],"end":[640,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1512:3770":{"id":"0:1512:3770","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_unicode.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3036":{"id":"0:3036","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3039:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:448:648":{"id":"0:448:648","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[34,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2902:4101":{"id":"b:2:3179-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:3011:1565":{"id":"a:2:3240:200-0:3011:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3218:115":{"id":"2:3218:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3219:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13446:62050":{"id":"2:13446:62050","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:15845:4421","self::pattern":"2:12997:1556","`DoubleEndedIterator`":"2:8411:120","prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49488:4865","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2788:2885":{"id":"b:2:3169-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1660":{"id":"0:1660","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1244,0],"end":[1252,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1661:3757","0:1662:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3969-0:2703:1572":{"id":"b:2:3969-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1548":{"id":"0:1548","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[810,0],"end":[810,47]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13388:34841":{"id":"2:13388:34841","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15845:4421"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49594:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2805:4100":{"id":"a:2:3281:4878-0:2805:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3526:4833":{"id":"2:3526:4833","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3528:226","2:3529:196","2:3530:61191"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3969-0:2681:1578":{"id":"b:2:3969-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2992:648":{"id":"0:2992:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1502:2443":{"id":"0:1502:2443","crate_id":0,"name":"replace","span":{"filename":"src/re_unicode.rs","begin":[506,4],"end":[512,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.\n\nIf no match is found, then a copy of the string is returned unchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal string:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(\"1078910\", \"\"), \"1010\");\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example,\na closure of type `|&Captures| -> String` provides direct access to the\ncaptures corresponding to a match. This allows one to access\ncapturing group matches easily:\n\n```rust\n# use regex::Regex;\n# use regex::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", |caps: &Captures| {\n    format!(\"{} {}\", &caps[2], &caps[1])\n});\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", \"$first $last\");\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(\"deep fried\", \"${first}_$second\");\nassert_eq!(result, \"deep_fried\");\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::Regex;\n# fn main() {\nuse regex::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", NoExpand(\"$2 $last\"));\nassert_eq!(result, \"$2 $last\");\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13361:780":{"id":"2:13361:780","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2594:3534":{"id":"a:2:9223:3225-0:2594:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13486:2562":{"id":"2:13486:2562","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15839:4416"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49628:4678","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2954:1570":{"id":"b:2:3969-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2978:1573":{"id":"0:2978:1573","crate_id":0,"name":"Regex","span":{"filename":"src/re_unicode.rs","begin":[136,0],"end":[136,23]},"visibility":"public","docs":"A compiled regular expression for matching Unicode strings.\n\nIt is represented as either a sequence of bytecode instructions (dynamic)\nor as a specialized Rust function (native). It can be used to search, split\nor replace text. All searching is done with an implicit `.*?` at the\nbeginning and end of an expression. To force an expression to match the\nwhole string (or a prefix or a suffix), you must use an anchor like `^` or\n`$` (or `\\A` and `\\z`).\n\nWhile this crate will handle Unicode strings (whether in the regular\nexpression or in the search text), all positions returned are **byte\nindices**. Every byte index is guaranteed to be at a Unicode code point\nboundary.\n\nThe lifetimes `'r` and `'t` in this crate correspond to the lifetime of a\ncompiled regular expression and text to search, respectively.\n\nThe only methods that allocate new strings are the string replacement\nmethods. All other methods (searching and splitting) return borrowed\npointers into the string given.\n\n# Examples\n\nFind the location of a US phone number:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(\"[0-9]{3}-[0-9]{3}-[0-9]{4}\").unwrap();\nlet mat = re.find(\"phone: 111-222-3333\").unwrap();\nassert_eq!((mat.start(), mat.end()), (7, 19));\n```\n\n# Using the `std::str::pattern` methods with `Regex`\n\n> **Note**: This section requires that this crate is compiled with the\n> `pattern` Cargo feature enabled, which **requires nightly Rust**.\n\nSince `Regex` implements `Pattern`, you can use regexes with methods\ndefined on `&str`. For example, `is_match`, `find`, `find_iter`\nand `split` can be replaced with `str::contains`, `str::find`,\n`str::match_indices` and `str::split`.\n\nHere are some examples:\n\n```rust,ignore\n# use regex::Regex;\nlet re = Regex::new(r\"\\d+\").unwrap();\nlet haystack = \"a111b222c\";\n\nassert!(haystack.contains(&re));\nassert_eq!(haystack.find(&re), Some(1));\nassert_eq!(haystack.match_indices(&re).collect::<Vec<_>>(),\n           vec![(1, \"111\"), (5, \"222\")]);\nassert_eq!(haystack.split(&re).collect::<Vec<_>>(), vec![\"a\", \"b\", \"c\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1482","0:1511","0:1525","a:2:9222:3226-0:2978:1573","a:2:3252:209-0:2978:1573","a:2:3240:200-0:2978:1573","a:2:9223:3225-0:2978:1573","a:2:3281:4878-0:2978:1573","b:2:2843-0:2978:1573","b:2:3169-0:2978:1573","b:2:3173-0:2978:1573","b:2:3184-0:2978:1573","b:2:3969-0:2978:1573","b:2:2846-0:2978:1573","b:2:3179-0:2978:1573","b:5:6406-0:2978:1573","b:5:787-0:2978:1573","0:2981","0:1473","0:1475","0:1479"]}},"a:2:3240:200-0:3002:1577":{"id":"a:2:3240:200-0:3002:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2491:2746":{"id":"0:2491:2746","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4018:5717":{"id":"2:4018:5717","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4019:5725"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13480:1997":{"id":"2:13480:1997","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8376:4630":{"id":"2:8376:4630","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8378:2543","2:8380:5351","2:8381:5352"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3382:4819":{"id":"2:3382:4819","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3384:171","2:3385:1212"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2027:397":{"id":"0:2027:397","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2993:1576":{"id":"b:2:2846-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2646:1576":{"id":"a:2:3240:200-0:2646:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2614":{"id":"0:2614","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,29],"end":[20,31]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:7781:6180":{"id":"1:7781:6180","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7782:56756"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13391:62043":{"id":"2:13391:62043","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49584:4863","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5832:4848":{"id":"5:5832:4848","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5834:171","5:5835:3304"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1194:2004":{"id":"0:1194:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[698,4],"end":[698,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"a:2:9223:3225-0:3011:1565":{"id":"a:2:9223:3225-0:3011:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9223:3225-0:2895:4067":{"id":"a:2:9223:3225-0:2895:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2852:3535":{"id":"0:2852:3535","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2628:1571":{"id":"0:2628:1571","crate_id":0,"name":"Matches","span":{"filename":"src/re_bytes.rs","begin":[695,0],"end":[695,66]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a tuple of integers corresponding to the start and end\nof the match. The indices are byte offsets. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2628:1571","a:2:3252:209-0:2628:1571","a:2:3240:200-0:2628:1571","a:2:9223:3225-0:2628:1571","a:2:3281:4878-0:2628:1571","b:2:2843-0:2628:1571","b:2:3169-0:2628:1571","b:2:3173-0:2628:1571","b:2:3184-0:2628:1571","b:2:3969-0:2628:1571","b:2:8371-0:2628:1571","b:2:2846-0:2628:1571","b:2:3179-0:2628:1571","0:2633","0:1191","0:1197"]}},"2:3360:4818":{"id":"2:3360:4818","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3361:171","2:3362:939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2843-0:2646:1576":{"id":"b:2:2843-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1460":{"id":"0:1460","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[35,0],"end":[66,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1462:1304","0:1463:588","0:1464:2058","0:1465:295"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2843-0:2983:1567":{"id":"b:2:2843-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1280:740":{"id":"0:1280:740","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1048,4],"end":[1052,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:3049:1575":{"id":"b:2:3173-0:3049:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:3040:1571":{"id":"a:2:3281:4878-0:3040:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:3058:1572":{"id":"b:2:3179-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3153:216":{"id":"2:3153:216","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3155:127","2:3156:1394"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:3031:1566":{"id":"b:2:3173-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1203:2004":{"id":"0:1203:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[721,4],"end":[721,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"b:2:2843-0:2623:1573":{"id":"b:2:2843-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2497:3454":{"id":"b:2:3184-0:2497:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2758:2004":{"id":"0:2758:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"a:2:3240:200-0:2655:1577":{"id":"a:2:3240:200-0:2655:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13393:2392":{"id":"2:13393:2392","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8371-0:3031:1566":{"id":"b:2:8371-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1319:3757":{"id":"0:1319:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1184,4],"end":[1186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2762:3372":{"id":"0:2762:3372","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"5:6077:62696":{"id":"5:6077:62696","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1996","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:5414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1996","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:5414","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13387:1580":{"id":"2:13387:1580","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49306:1791","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2023:1518":{"id":"0:2023:1518","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[11,19],"end":[11,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"5:6084:62697":{"id":"5:6084:62697","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2767:909":{"id":"0:2767:909","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3031:1566":{"id":"0:3031:1566","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1117,0],"end":[1119,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:3031:1566","a:2:3252:209-0:3031:1566","a:2:3240:200-0:3031:1566","a:2:9223:3225-0:3031:1566","a:2:3281:4878-0:3031:1566","b:2:2843-0:3031:1566","b:2:3169-0:3031:1566","b:2:3173-0:3031:1566","b:2:3184-0:3031:1566","b:2:3969-0:3031:1566","b:2:8371-0:3031:1566","b:2:2846-0:3031:1566","b:2:3179-0:3031:1566","0:3036","0:1623","0:1629"]}},"0:2584:2742":{"id":"0:2584:2742","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13371:293":{"id":"2:13371:293","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15845:4421","`u8`":"1:15856:4430"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2785:648":{"id":"0:2785:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2902:4101":{"id":"b:2:3969-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1643:3754":{"id":"0:1643:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1179,4],"end":[1181,5]},"visibility":"default","docs":"Return a fixed unchanging replacement string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:3058:1572":{"id":"b:2:3969-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2914":{"id":"0:2914","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2916:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1669:3757":{"id":"0:1669:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1265,4],"end":[1267,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2780":{"id":"0:2780","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2710":{"id":"0:2710","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1249,16],"end":[1249,21]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2712:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1187:2895":{"id":"0:1187:2895","crate_id":0,"name":"capture_names","span":{"filename":"src/re_bytes.rs","begin":[661,4],"end":[663,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1565:1568":{"id":"0:1565:1568","crate_id":0,"name":"Captures","span":{"filename":"src/re_unicode.rs","begin":[922,0],"end":[926,1]},"visibility":"public","docs":"Captures represents a group of captured strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched string is *also* available via the `name`\nmethod. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1570","a:2:9222:3226-0:1565:1568","a:2:3252:209-0:1565:1568","a:2:3240:200-0:1565:1568","a:2:9223:3225-0:1565:1568","a:2:3281:4878-0:1565:1568","b:2:2843-0:1565:1568","b:2:3169-0:1565:1568","b:2:3173-0:1565:1568","b:2:3184-0:1565:1568","b:2:3969-0:1565:1568","b:2:2846-0:1565:1568","b:2:3179-0:1565:1568","0:1580","0:1594","0:1600"]}},"a:2:3252:209-0:2497:3454":{"id":"a:2:3252:209-0:2497:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2671":{"id":"0:2671","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[818,16],"end":[818,21]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2673:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3252:209-0:3011:1565":{"id":"a:2:3252:209-0:3011:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:3058:1572":{"id":"b:2:3169-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3696:213":{"id":"2:3696:213","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3697:171","2:3698:4830","2:3699:674","2:3700:358"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3701:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2845:3305":{"id":"2:2845:3305","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:2637:1566":{"id":"b:2:3173-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5828:1979":{"id":"5:5828:1979","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5830:171","5:5831:421"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2751":{"id":"0:2751","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2752:4069","0:2753:1771","0:2754:780","0:2755:766"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2788:2885":{"id":"b:2:3179-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:2594:3534":{"id":"b:2:3969-0:2594:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2800:4101":{"id":"b:2:3173-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1294:2004":{"id":"0:1294:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[1093,4],"end":[1093,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"2:10255:109":{"id":"2:10255:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10256:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3406:4824":{"id":"2:3406:4824","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:1213"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1611:2004":{"id":"0:1611:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1088,4],"end":[1088,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"b:2:3173-0:2694:1575":{"id":"b:2:3173-0:2694:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3252:209-0:2890:2885":{"id":"a:2:3252:209-0:2890:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9223:3225-0:2646:1576":{"id":"a:2:9223:3225-0:2646:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1260:648":{"id":"0:1260:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[993,4],"end":[995,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2599:1570":{"id":"a:2:3240:200-0:2599:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2868:2004":{"id":"0:2868:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"a:2:3252:209-0:3040:1571":{"id":"a:2:3252:209-0:3040:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3707:4830":{"id":"2:3707:4830","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3709:57448"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3240:200-0:3049:1575":{"id":"a:2:3240:200-0:3049:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6404:212":{"id":"5:6404:212","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6405:1376"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9223:3225-0:2681:1578":{"id":"a:2:9223:3225-0:2681:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:4878-0:2674:1565":{"id":"a:2:3281:4878-0:2674:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2626":{"id":"0:2626","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2627:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1305:3943":{"id":"0:1305:3943","crate_id":0,"name":"by_ref","span":{"filename":"src/re_bytes.rs","begin":[1153,4],"end":[1155,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::bytes::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &[u8],\n    mut rep: R,\n) -> Vec<u8> {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2594:3534":{"id":"b:2:3169-0:2594:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2895:4067":{"id":"a:2:3281:4878-0:2895:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:3018:1578":{"id":"a:2:3252:209-0:3018:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2805:4100":{"id":"a:2:3252:209-0:2805:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3173-0:2561:3534":{"id":"b:2:3173-0:2561:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2793:4067":{"id":"a:2:3240:200-0:2793:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2521:2745":{"id":"0:2521:2745","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:1243:1568":{"id":"b:2:2846-0:1243:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2590:2741":{"id":"0:2590:2741","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2561:3534":{"id":"0:2561:3534","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2546","a:2:9222:3226-0:2561:3534","a:2:3252:209-0:2561:3534","a:2:3240:200-0:2561:3534","a:2:9223:3225-0:2561:3534","a:2:3281:4878-0:2561:3534","b:2:2843-0:2561:3534","b:2:3169-0:2561:3534","b:2:3173-0:2561:3534","b:2:3184-0:2561:3534","b:2:3969-0:2561:3534","b:2:2846-0:2561:3534","b:2:3179-0:2561:3534","0:2564"]}},"b:2:3179-0:2623:1573":{"id":"b:2:3179-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2017:127":{"id":"b:5:787-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1623":{"id":"0:1623","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1121,0],"end":[1131,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1626:2004","0:1627:909"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2859:3372":{"id":"0:2859:3372","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"a:2:3240:200-0:1565:1568":{"id":"a:2:3240:200-0:1565:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1229:909":{"id":"0:1229:909","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[824,4],"end":[829,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13469:62058":{"id":"2:13469:62058","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2874":{"id":"0:2874","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2876:2004","0:2877:909","0:2878:3818"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2026":{"id":"0:2026","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":{"restricted":{"parent":"0:438:1559","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2027:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2501:648":{"id":"0:2501:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2592:2130":{"id":"0:2592:2130","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8326:4632":{"id":"2:8326:4632","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8328:3440"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8565:157":{"id":"2:8565:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8566:2004","2:8567:909","2:8568:5353","2:8571:3818","2:8572:484","2:8574:3670","2:8577:5354","2:8578:5355","2:8579:5356","2:8580:5357","2:8582:2969","2:8584:5358","2:8585:5359","2:8587:828","2:8590:5360","2:8597:5361","2:8599:5362","2:8602:1886","2:8603:2062","2:8604:5363","2:8606:5364","2:8608:5365","2:8611:1287","2:8612:2031","2:8613:5366","2:8617:5367","2:8620:5368","2:8621:5369","2:8622:5370","2:8624:3943","2:8625:1890","2:8627:5371","2:8630:5372","2:8632:5373","2:8642:5374","2:8657:5375","2:8659:5376","2:8663:5377","2:8672:5378","2:8675:5379","2:8677:5380","2:8680:265","2:8687:283","2:8694:2495","2:8701:5381","2:8710:5382","2:8720:1001","2:8727:5383","2:8734:2022","2:8735:2020","2:8736:4766","2:8748:4765","2:8755:4764","2:8767:4763","2:8774:1982","2:8775:5384","2:8780:2998","2:8783:2536","2:8786:5385","2:8787:3440","2:8789:5386","2:8791:404","2:8794:5387","2:8797:984","2:8800:5388","2:8803:593","2:8806:5389","2:8809:894","2:8811:813","2:8813:779","2:8815:701","2:8817:684","2:8819:5390","2:8820:5391","2:8828:5392"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3742:4694":{"id":"2:3742:4694","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1520:2776":{"id":"0:1520:2776","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_unicode.rs","begin":[683,4],"end":[693,5]},"visibility":"public","docs":"Returns the same as captures, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1543":{"id":"0:1543","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[786,0],"end":[808,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1546:2004","0:1547:909"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3394:4821":{"id":"2:3394:4821","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3396:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3969-0:3002:1577":{"id":"b:2:3969-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:2497:3454":{"id":"b:2:2846-0:2497:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1313":{"id":"0:1313","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1173,0],"end":[1181,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:1315:3757","0:1316:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2805:4100":{"id":"0:2805:4100","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2805:4100","a:2:3252:209-0:2805:4100","a:2:3240:200-0:2805:4100","a:2:9223:3225-0:2805:4100","a:2:3281:4878-0:2805:4100","b:2:2843-0:2805:4100","b:2:3169-0:2805:4100","b:2:3173-0:2805:4100","b:2:3184-0:2805:4100","b:2:3969-0:2805:4100","b:2:8371-0:2805:4100","b:2:2846-0:2805:4100","b:2:3179-0:2805:4100","b:5:787-0:2805:4100","0:2809","0:2812","0:2772","0:2777","0:2780"]}},"b:2:3184-0:2664:1567":{"id":"b:2:3184-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:2674:1565":{"id":"b:2:2843-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2528:3454":{"id":"a:2:3281:4878-0:2528:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13456:62055":{"id":"2:13456:62055","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2902:4101":{"id":"0:2902:4101","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2902:4101","a:2:3252:209-0:2902:4101","a:2:3240:200-0:2902:4101","a:2:9223:3225-0:2902:4101","a:2:3281:4878-0:2902:4101","b:2:2843-0:2902:4101","b:2:3169-0:2902:4101","b:2:3173-0:2902:4101","b:2:3184-0:2902:4101","b:2:3969-0:2902:4101","b:2:8371-0:2902:4101","b:2:2846-0:2902:4101","b:2:3179-0:2902:4101","0:2905","0:2867","0:2871","0:2873"]}},"b:5:787-0:2907:4100":{"id":"b:5:787-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:3002:1577":{"id":"b:2:3184-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:3011:1565":{"id":"a:2:3281:4878-0:3011:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3969-0:3018:1578":{"id":"b:2:3969-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13381:6082":{"id":"2:13381:6082","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3544:3541","`str`":"1:15845:4421","str::slice_mut_unchecked":"1:15845:4421"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2599:1570":{"id":"b:5:787-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:1243:1568":{"id":"b:2:3184-0:1243:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2517:2749":{"id":"0:2517:2749","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:2674:1565":{"id":"a:2:9222:3226-0:2674:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2843-0:3031:1566":{"id":"b:2:2843-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1191":{"id":"0:1191","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[697,0],"end":[704,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1194:2004","0:1195:909"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1615:3818":{"id":"0:1615:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[1096,4],"end":[1098,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2497:3454":{"id":"a:2:9223:3225-0:2497:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2490:2745":{"id":"0:2490:2745","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2894:397":{"id":"0:2894:397","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1340:3757":{"id":"0:1340:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1253,4],"end":[1255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2489:2744":{"id":"0:2489:2744","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:2497:3454":{"id":"b:2:2843-0:2497:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3001:648":{"id":"0:3001:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3308:4804":{"id":"2:3308:4804","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3310:171","2:3311:254"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2854:4069":{"id":"0:2854:4069","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8374:3372":{"id":"2:8374:3372","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"b:5:787-0:3058:1572":{"id":"b:5:787-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:3040:1571":{"id":"b:2:3969-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3169-0:2674:1565":{"id":"b:2:3169-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1508:3744":{"id":"0:1508:3744","crate_id":0,"name":"replacen","span":{"filename":"src/re_unicode.rs","begin":[534,4],"end":[588,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2561:3534":{"id":"b:2:3184-0:2561:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1234":{"id":"0:1234","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[840,0],"end":[840,50]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:8436:3823","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13437:1731":{"id":"2:13437:1731","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:8411:120","prim@char":"1:15839:4416","str::matches":"1:15845:4421","self::pattern":"2:12997:1556"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49524:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13375:11111":{"id":"2:13375:11111","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2655:1577":{"id":"a:2:9223:3225-0:2655:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3367:4815":{"id":"2:3367:4815","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3369:171","2:3370:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1612:909":{"id":"0:1612:909","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1090,4],"end":[1094,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2788:2885":{"id":"b:5:787-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2855:1771":{"id":"0:2855:1771","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["regex_index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2628:1571":{"id":"b:2:3969-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1533:2004":{"id":"0:1533:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[754,4],"end":[754,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}},"0:1200":{"id":"0:1200","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[720,0],"end":[730,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1203:2004","0:1204:909"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1188:3798":{"id":"0:1188:3798","crate_id":0,"name":"captures_len","span":{"filename":"src/re_bytes.rs","begin":[666,4],"end":[668,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2895:4067":{"id":"b:2:3169-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:2793:4067":{"id":"b:2:2846-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1002,0],"end":[1006,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1582:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:3226-0:2978:1573":{"id":"a:2:9222:3226-0:2978:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3184-0:3031:1566":{"id":"b:2:3184-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1310:3757":{"id":"0:1310:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1165,4],"end":[1167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2811:397":{"id":"0:2811:397","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2636:648":{"id":"0:2636:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[694,9],"end":[694,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2895:4067":{"id":"b:2:3969-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3459:116":{"id":"2:3459:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:210","2:3461:532"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:2674:1565":{"id":"a:2:3252:209-0:2674:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2872:4107":{"id":"0:2872:4107","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:3002:1577":{"id":"a:2:9223:3225-0:3002:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2967":{"id":"0:2967","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3249:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2858":{"id":"0:2858","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2859:3372","0:2860:2004","0:2861:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:3226-0:2681:1578":{"id":"a:2:9222:3226-0:2681:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1185":{"id":"0:1185","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[654,0],"end":[684,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1186:295","0:1187:2895","0:1188:3798","0:1189:3642"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2752:4069":{"id":"0:2752:4069","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2664:1567":{"id":"b:2:2846-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3169-0:3002:1577":{"id":"b:2:3169-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2993:1576":{"id":"a:2:3281:4878-0:2993:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2664:1567":{"id":"0:2664:1567","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_bytes.rs","begin":[819,0],"end":[819,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2664:1567","a:2:3252:209-0:2664:1567","a:2:3240:200-0:2664:1567","a:2:9223:3225-0:2664:1567","a:2:3281:4878-0:2664:1567","b:2:2843-0:2664:1567","b:2:3169-0:2664:1567","b:2:3173-0:2664:1567","b:2:3184-0:2664:1567","b:2:3969-0:2664:1567","b:2:8371-0:2664:1567","b:2:2846-0:2664:1567","b:2:3179-0:2664:1567","b:5:787-0:2664:1567","0:2668","0:2671","0:1226","0:1234","0:1236"]}},"0:2633":{"id":"0:2633","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[694,9],"end":[694,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2636:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2866:755":{"id":"0:2866:755","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8367:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1134:648":{"id":"0:1134:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1493:3659":{"id":"0:1493:3659","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_unicode.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    println!(\"Movie: {:?}, Released: {:?}\",\n             &caps[\"title\"], &caps[\"year\"]);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:3018:1578":{"id":"a:2:9223:3225-0:3018:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2850:780":{"id":"0:2850:780","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2861:755":{"id":"0:2861:755","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8367:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2599:1570":{"id":"0:2599:1570","crate_id":0,"name":"Match","span":{"filename":"src/re_bytes.rs","begin":[21,0],"end":[25,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1123","a:2:9222:3226-0:2599:1570","a:2:3252:209-0:2599:1570","a:2:3240:200-0:2599:1570","a:2:9223:3225-0:2599:1570","a:2:3281:4878-0:2599:1570","b:2:2843-0:2599:1570","b:2:3169-0:2599:1570","b:2:3173-0:2599:1570","b:2:3184-0:2599:1570","b:2:3969-0:2599:1570","b:2:2846-0:2599:1570","b:2:3179-0:2599:1570","b:5:787-0:2599:1570","0:2604","0:2606","0:2609","0:2612","0:2614","0:2617","0:2619","0:1130"]}},"0:1233:484":{"id":"0:1233:484","crate_id":0,"name":"count","span":{"filename":"src/re_bytes.rs","begin":[835,4],"end":[837,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9222:3226":{"id":"2:9222:3226","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10264:5314":{"id":"2:10264:5314","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10265:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8371-0:3002:1577":{"id":"b:2:8371-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3169-0:2983:1567":{"id":"b:2:3169-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:783:211":{"id":"5:783:211","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:3756","5:785:2564","5:786:5394"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1665:3757":{"id":"0:1665:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1255,4],"end":[1257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2029":{"id":"0:2029","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:438:1559","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2030:593","0:2031:894"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2846-0:3011:1565":{"id":"b:2:2846-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2623:1573":{"id":"b:2:3173-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2674:1565":{"id":"0:2674:1565","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_bytes.rs","begin":[860,0],"end":[860,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1239","a:2:9222:3226-0:2674:1565","a:2:3252:209-0:2674:1565","a:2:3240:200-0:2674:1565","a:2:9223:3225-0:2674:1565","a:2:3281:4878-0:2674:1565","b:2:2843-0:2674:1565","b:2:3169-0:2674:1565","b:2:3173-0:2674:1565","b:2:3184-0:2674:1565","b:2:3969-0:2674:1565","b:2:2846-0:2674:1565","b:2:3179-0:2674:1565","b:5:787-0:2674:1565","0:2677","0:2679"]}},"0:2760":{"id":"0:2760","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:2762:3372","0:2763:2004","0:2764:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9223:3225-0:2703:1572":{"id":"a:2:9223:3225-0:2703:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2895:4067":{"id":"a:2:3252:209-0:2895:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2803":{"id":"0:2803","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2804:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3030:648":{"id":"0:3030:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2628:1571":{"id":"a:2:3240:200-0:2628:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13364:62039":{"id":"2:13364:62039","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8843:3540":{"id":"2:8843:3540","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1250:1784":{"id":"0:1250:1784","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[938,4],"end":[940,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(b\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(&b\"\"[..], |m| m.as_bytes());\nlet text2 = caps.get(2).map_or(&b\"\"[..], |m| m.as_bytes());\nassert_eq!(text1, &b\"123\"[..]);\nassert_eq!(text2, &b\"\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2757:3372":{"id":"0:2757:3372","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[21,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:438:1559","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","backtrace","provide","description","cause","source"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:446:2607"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1277":{"id":"0:1277","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1045,0],"end":[1053,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3544:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1279:171","0:1280:740"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2857:766":{"id":"0:2857:766","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:3018:1578":{"id":"b:2:2846-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2703:1572":{"id":"b:2:3184-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6100:56015":{"id":"5:6100:56015","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15845:4421"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2895:4067":{"id":"b:2:3184-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:1243:1568":{"id":"b:2:3969-0:1243:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2599:1570":{"id":"a:2:3281:4878-0:2599:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3010:648":{"id":"0:3010:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3615:4827":{"id":"2:3615:4827","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3617:60568","2:3618:60569","2:3619:2392"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2961":{"id":"0:2961","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2963:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2709:397":{"id":"0:2709:397","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1249,9],"end":[1249,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:2703:1572":{"id":"a:2:3252:209-0:2703:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2791":{"id":"0:2791","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2792:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13007:4845":{"id":"2:13007:4845","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13009:3129","2:13010:61357","2:13011:61362","2:13012:61358","2:13013:61360","2:13014:61359","2:13015:61361"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1474:648":{"id":"0:1474:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[140,4],"end":[142,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2660":{"id":"0:2660","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[776,9],"end":[776,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2663:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6081:3744":{"id":"5:6081:3744","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2890:2885":{"id":"b:2:3179-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2784":{"id":"0:2784","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2785:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2748:780":{"id":"0:2748:780","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13483:56018":{"id":"2:13483:56018","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2978:1573":{"id":"b:2:2846-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2487:2742":{"id":"0:2487:2742","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2867":{"id":"0:2867","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2868:2004","0:2869:909","0:2870:3818"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2846-0:2788:2885":{"id":"b:2:2846-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6445:6003":{"id":"1:6445:6003","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6446:56485","1:6447:10350","1:6448:56486","1:6449:56487","1:6450:56488","1:6451:56489"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3014":{"id":"0:3014","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3015:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1145:2495":{"id":"0:1145:2495","crate_id":0,"name":"find","span":{"filename":"src/re_bytes.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nASCII word bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!((mat.start(), mat.end()), (2, 15));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:2646:1576":{"id":"a:2:3252:209-0:2646:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2846-0:3049:1575":{"id":"b:2:2846-0:3049:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3248:207":{"id":"2:3248:207","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13428:58529":{"id":"2:13428:58529","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:12997:1556","prim@char":"1:15839:4416","str::splitn":"1:15845:4421"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49442:4868","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1147:3602":{"id":"0:1147:3602","crate_id":0,"name":"find_iter","span":{"filename":"src/re_bytes.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 ASCII\nword bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6773:5966":{"id":"1:6773:5966","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6774:55850","1:6775:56392"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2788:2885":{"id":"0:2788:2885","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Regex":"0:2978:1573","crate::Captures":"0:1565:1568","crate::Match":"0:2954:1570"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2738","a:2:9222:3226-0:2788:2885","a:2:3252:209-0:2788:2885","a:2:3240:200-0:2788:2885","a:2:9223:3225-0:2788:2885","a:2:3281:4878-0:2788:2885","b:2:2843-0:2788:2885","b:2:3169-0:2788:2885","b:2:3173-0:2788:2885","b:2:3184-0:2788:2885","b:2:3969-0:2788:2885","b:2:2846-0:2788:2885","b:2:3179-0:2788:2885","b:5:787-0:2788:2885","0:2791","0:2784"]}},"1:5771:5990":{"id":"1:5771:5990","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5772:56760"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:4878-0:2628:1571":{"id":"a:2:3281:4878-0:2628:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13402:2495":{"id":"2:13402:2495","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47356:166","self::pattern":"2:12997:1556","prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:1243:1568":{"id":"a:2:3240:200-0:1243:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1563:780":{"id":"0:1563:780","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[895,4],"end":[897,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:2954:1570":{"id":"a:2:9222:3226-0:2954:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3240:200-0:2954:1570":{"id":"a:2:3240:200-0:2954:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1338":{"id":"0:1338","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1252,0],"end":[1260,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1340:3757","0:1341:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2558:1824":{"id":"0:2558:1824","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:3049:1575":{"id":"a:2:3281:4878-0:3049:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2843-0:2694:1575":{"id":"b:2:2843-0:2694:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23655:6421":{"id":"2:23655:6421","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23656:6444"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23651:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2486:2749":{"id":"0:2486:2749","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1538:484":{"id":"0:1538:484","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3027":{"id":"0:3027","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3030:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2843-0:2805:4100":{"id":"b:2:2843-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:3040:1571":{"id":"b:2:3173-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13370:62041":{"id":"2:13370:62041","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8371-0:2902:4101":{"id":"b:2:8371-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1331:3754":{"id":"0:1331:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1218,4],"end":[1220,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1186:295":{"id":"0:1186:295","crate_id":0,"name":"as_str","span":{"filename":"src/re_bytes.rs","begin":[656,4],"end":[658,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2993:1576":{"id":"a:2:9223:3225-0:2993:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2646:1576":{"id":"b:2:3169-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1627:909":{"id":"0:1627:909","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1124,4],"end":[1130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2804:648":{"id":"0:2804:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3240:200":{"id":"2:3240:200","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9223:3225-0:2623:1573":{"id":"a:2:9223:3225-0:2623:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2893":{"id":"0:2893","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2894:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2681:1578":{"id":"b:5:787-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2805:4100":{"id":"a:2:3240:200-0:2805:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2739:907":{"id":"0:2739:907","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3137:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2793:4067":{"id":"a:2:3281:4878-0:2793:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2555:2746":{"id":"0:2555:2746","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3188:1394":{"id":"2:3188:1394","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:2902:4101":{"id":"a:2:9222:3226-0:2902:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3240:200-0:2664:1567":{"id":"a:2:3240:200-0:2664:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1496:1887":{"id":"0:1496:1887","crate_id":0,"name":"split","span":{"filename":"src/re_unicode.rs","begin":[370,4],"end":[372,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&str> = re.split(\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\"a\", \"b\", \"c\", \"d\", \"e\"]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1658:3757":{"id":"0:1658:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1235,4],"end":[1237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:3002:1577":{"id":"b:2:2846-0:3002:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13369:2772":{"id":"2:13369:2772","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12468:3000"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1518:3786":{"id":"0:1518:3786","crate_id":0,"name":"captures_read","span":{"filename":"src/re_unicode.rs","begin":[669,4],"end":[675,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2800:4101":{"id":"b:2:2846-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2856:780":{"id":"0:2856:780","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2901:648":{"id":"0:2901:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:3002:1577":{"id":"a:2:9222:3226-0:3002:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:3031:1566":{"id":"a:2:3252:209-0:3031:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2860:2004":{"id":"0:2860:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:2559:2130":{"id":"0:2559:2130","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1556:3818":{"id":"0:1556:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[847,4],"end":[849,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13443:62049":{"id":"2:13443:62049","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:15839:4416","str::rmatch_indices":"1:15845:4421","self::pattern":"2:12997:1556","`DoubleEndedIterator`":"2:8411:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49470:4864","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2987":{"id":"0:2987","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2989:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:4878-0:1565:1568":{"id":"a:2:3281:4878-0:1565:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2846-0:2599:1570":{"id":"b:2:2846-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:2664:1567":{"id":"a:2:9222:3226-0:2664:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1159:3680":{"id":"0:1159:3680","crate_id":0,"name":"splitn","span":{"filename":"src/re_bytes.rs","begin":[341,4],"end":[347,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&[u8]> = re.splitn(b\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec![&b\"Hey\"[..], &b\"How\"[..], &b\"are you?\"[..]]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1217":{"id":"0:1217","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[782,0],"end":[808,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1220:2004","0:1221:909","0:1222:3818"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3351:4811":{"id":"2:3351:4811","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3353:548"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:2694:1575":{"id":"a:2:3252:209-0:2694:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9223:3225-0:1243:1568":{"id":"a:2:9223:3225-0:1243:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2628:1571":{"id":"b:2:3179-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14109:141":{"id":"2:14109:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14110:266","2:14111:507","2:14112:269","2:14113:1066"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:0:1613":{"id":"0:0:1613","crate_id":0,"name":"regex","span":{"filename":"src/lib.rs","begin":[1,0],"end":[766,1]},"visibility":"public","docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.\n\nThis crate's documentation provides some simple examples, describes\n[Unicode support](#unicode) and exhaustively lists the\n[supported syntax](#syntax).\n\nFor more specific details on the API for regular expressions, please see the\ndocumentation for the [`Regex`](struct.Regex.html) type.\n\n# Usage\n\nThis crate is [on crates.io](https://crates.io/crates/regex) and can be\nused by adding `regex` to your dependencies in your project's `Cargo.toml`.\n\n```toml\n[dependencies]\nregex = \"1\"\n```\n\n# Example: find a date\n\nGeneral use of regular expressions in this package involves compiling an\nexpression and then using it to search, split or replace text. For example,\nto confirm that some text resembles a date:\n\n```rust\nuse regex::Regex;\nlet re = Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\nassert!(re.is_match(\"2014-01-01\"));\n```\n\nNotice the use of the `^` and `$` anchors. In this crate, every expression\nis executed with an implicit `.*?` at the beginning and end, which allows\nit to match anywhere in the text. Anchors can be used to ensure that the\nfull text matches an expression.\n\nThis example also demonstrates the utility of\n[raw strings](https://doc.rust-lang.org/stable/reference/tokens.html#raw-string-literals)\nin Rust, which\nare just like regular strings except they are prefixed with an `r` and do\nnot process any escape sequences. For example, `\"\\\\d\"` is the same\nexpression as `r\"\\d\"`.\n\n# Example: Avoid compiling the same regex in a loop\n\nIt is an anti-pattern to compile the same regular expression in a loop\nsince compilation is typically expensive. (It takes anywhere from a few\nmicroseconds to a few **milliseconds** depending on the size of the\nregex.) Not only is compilation itself expensive, but this also prevents\noptimizations that reuse allocations internally to the matching engines.\n\nIn Rust, it can sometimes be a pain to pass regular expressions around if\nthey're used from inside a helper function. Instead, we recommend using the\n[`lazy_static`](https://crates.io/crates/lazy_static) crate to ensure that\nregular expressions are compiled exactly once.\n\nFor example:\n\n```rust\nuse lazy_static::lazy_static;\nuse regex::Regex;\n\nfn some_helper_function(text: &str) -> bool {\n    lazy_static! {\n        static ref RE: Regex = Regex::new(\"...\").unwrap();\n    }\n    RE.is_match(text)\n}\n\nfn main() {}\n```\n\nSpecifically, in this example, the regex will be compiled when it is used for\nthe first time. On subsequent uses, it will reuse the previous compilation.\n\n# Example: iterating over capture groups\n\nThis crate provides convenient iterators for matching an expression\nrepeatedly against a search string to find successive non-overlapping\nmatches. For example, to find all dates in a string and be able to access\nthem by their component pieces:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();\nlet text = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nfor cap in re.captures_iter(text) {\n    println!(\"Month: {} Day: {} Year: {}\", &cap[2], &cap[3], &cap[1]);\n}\n// Output:\n// Month: 03 Day: 14 Year: 2012\n// Month: 01 Day: 01 Year: 2013\n// Month: 07 Day: 05 Year: 2014\n# }\n```\n\nNotice that the year is in the capture group indexed at `1`. This is\nbecause the *entire match* is stored in the capture group at index `0`.\n\n# Example: replacement with named capture groups\n\nBuilding on the previous example, perhaps we'd like to rearrange the date\nformats. This can be done with text replacement. But to make the code\nclearer, we can *name*  our capture groups and use those names as variables\nin our replacement text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<y>\\d{4})-(?P<m>\\d{2})-(?P<d>\\d{2})\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nThe `replace` methods are actually polymorphic in the replacement, which\nprovides more flexibility than is seen here. (See the documentation for\n`Regex::replace` for more details.)\n\nNote that if your regex gets complicated, you can use the `x` flag to\nenable insignificant whitespace mode, which also lets you write comments:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?x)\n  (?P<y>\\d{4}) # the year\n  -\n  (?P<m>\\d{2}) # the month\n  -\n  (?P<d>\\d{2}) # the day\n\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nIf you wish to match against whitespace in this mode, you can still use `\\s`,\n`\\n`, `\\t`, etc. For escaping a single space character, you can escape it\ndirectly with `\\ `, use its hex character code `\\x20` or temporarily disable\nthe `x` flag, e.g., `(?-x: )`.\n\n# Example: match multiple regular expressions simultaneously\n\nThis demonstrates how to use a `RegexSet` to match multiple (possibly\noverlapping) regular expressions in a single scan of the search text:\n\n```rust\nuse regex::RegexSet;\n\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\n\n// Iterate over and collect all of the matches.\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```\n\n# Pay for what you use\n\nWith respect to searching text with a regular expression, there are three\nquestions that can be asked:\n\n1. Does the text match this expression?\n2. If so, where does it match?\n3. Where did the capturing groups match?\n\nGenerally speaking, this crate could provide a function to answer only #3,\nwhich would subsume #1 and #2 automatically. However, it can be significantly\nmore expensive to compute the location of capturing group matches, so it's best\nnot to do it if you don't need to.\n\nTherefore, only use what you need. For example, don't use `find` if you\nonly need to test if an expression matches a string. (Use `is_match`\ninstead.)\n\n# Unicode\n\nThis implementation executes regular expressions **only** on valid UTF-8\nwhile exposing match locations as byte indices into the search string. (To\nrelax this restriction, use the [`bytes`](bytes/index.html) sub-module.)\n\nOnly simple case folding is supported. Namely, when matching\ncase-insensitively, the characters are first mapped using the \"simple\" case\nfolding rules defined by Unicode.\n\nRegular expressions themselves are **only** interpreted as a sequence of\nUnicode scalar values. This means you can use Unicode characters directly\nin your expression:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)Δ+\").unwrap();\nlet mat = re.find(\"ΔδΔ\").unwrap();\nassert_eq!((mat.start(), mat.end()), (0, 6));\n# }\n```\n\nMost features of the regular expressions in this crate are Unicode aware. Here\nare some examples:\n\n* `.` will match any valid UTF-8 encoded Unicode scalar value except for `\\n`.\n  (To also match `\\n`, enable the `s` flag, e.g., `(?s:.)`.)\n* `\\w`, `\\d` and `\\s` are Unicode aware. For example, `\\s` will match all forms\n  of whitespace categorized by Unicode.\n* `\\b` matches a Unicode word boundary.\n* Negated character classes like `[^a]` match all Unicode scalar values except\n  for `a`.\n* `^` and `$` are **not** Unicode aware in multi-line mode. Namely, they only\n  recognize `\\n` and not any of the other forms of line terminators defined\n  by Unicode.\n\nUnicode general categories, scripts, script extensions, ages and a smattering\nof boolean properties are available as character classes. For example, you can\nmatch a sequence of numerals, Greek or Cherokee letters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[\\pN\\p{Greek}\\p{Cherokee}]+\").unwrap();\nlet mat = re.find(\"abcΔᎠβⅠᏴγδⅡxyz\").unwrap();\nassert_eq!((mat.start(), mat.end()), (3, 23));\n# }\n```\n\nFor a more detailed breakdown of Unicode support with respect to\n[UTS#18](https://unicode.org/reports/tr18/),\nplease see the\n[UNICODE](https://github.com/rust-lang/regex/blob/master/UNICODE.md)\ndocument in the root of the regex repository.\n\n# Opt out of Unicode support\n\nThe `bytes` sub-module provides a `Regex` type that can be used to match\non `&[u8]`. By default, text is interpreted as UTF-8 just like it is with\nthe main `Regex` type. However, this behavior can be disabled by turning\noff the `u` flag, even if doing so could result in matching invalid UTF-8.\nFor example, when the `u` flag is disabled, `.` will match any byte instead\nof any Unicode scalar value.\n\nDisabling the `u` flag is also possible with the standard `&str`-based `Regex`\ntype, but it is only allowed where the UTF-8 invariant is maintained. For\nexample, `(?-u:\\w)` is an ASCII-only `\\w` character class and is legal in an\n`&str`-based `Regex`, but `(?-u:\\xFF)` will attempt to match the raw byte\n`\\xFF`, which is invalid UTF-8 and therefore is illegal in `&str`-based\nregexes.\n\nFinally, since Unicode support requires bundling large Unicode data\ntables, this crate exposes knobs to disable the compilation of those\ndata tables, which can be useful for shrinking binary size and reducing\ncompilation times. For details on how to do that, see the section on [crate\nfeatures](#crate-features).\n\n# Syntax\n\nThe syntax supported in this crate is documented below.\n\nNote that the regular expression parser and abstract syntax are exposed in\na separate crate, [`regex-syntax`](https://docs.rs/regex-syntax).\n\n## Matching one character\n\n<pre class=\"rust\">\n.             any character except new line (includes new line with s flag)\n\\d            digit (\\p{Nd})\n\\D            not digit\n\\pN           One-letter name Unicode character class\n\\p{Greek}     Unicode character class (general category or script)\n\\PN           Negated one-letter name Unicode character class\n\\P{Greek}     negated Unicode character class (general category or script)\n</pre>\n\n### Character classes\n\n<pre class=\"rust\">\n[xyz]         A character class matching either x, y or z (union).\n[^xyz]        A character class matching any character except x, y and z.\n[a-z]         A character class matching any character in range a-z.\n[[:alpha:]]   ASCII character class ([A-Za-z])\n[[:^alpha:]]  Negated ASCII character class ([^A-Za-z])\n[x[^xyz]]     Nested/grouping character class (matching any character except y and z)\n[a-y&&xyz]    Intersection (matching x or y)\n[0-9&&[^4]]   Subtraction using intersection and negation (matching 0-9 except 4)\n[0-9--4]      Direct subtraction (matching 0-9 except 4)\n[a-g~~b-h]    Symmetric difference (matching `a` and `h` only)\n[\\[\\]]        Escaping in character classes (matching [ or ])\n</pre>\n\nAny named character class may appear inside a bracketed `[...]` character\nclass. For example, `[\\p{Greek}[:digit:]]` matches any Greek or ASCII\ndigit. `[\\p{Greek}&&\\pL]` matches Greek letters.\n\nPrecedence in character classes, from most binding to least:\n\n1. Ranges: `a-cd` == `[a-c]d`\n2. Union: `ab&&bc` == `[ab]&&[bc]`\n3. Intersection: `^a-z&&b` == `^[a-z&&b]`\n4. Negation\n\n## Composites\n\n<pre class=\"rust\">\nxy    concatenation (x followed by y)\nx|y   alternation (x or y, prefer x)\n</pre>\n\n## Repetitions\n\n<pre class=\"rust\">\nx*        zero or more of x (greedy)\nx+        one or more of x (greedy)\nx?        zero or one of x (greedy)\nx*?       zero or more of x (ungreedy/lazy)\nx+?       one or more of x (ungreedy/lazy)\nx??       zero or one of x (ungreedy/lazy)\nx{n,m}    at least n x and at most m x (greedy)\nx{n,}     at least n x (greedy)\nx{n}      exactly n x\nx{n,m}?   at least n x and at most m x (ungreedy/lazy)\nx{n,}?    at least n x (ungreedy/lazy)\nx{n}?     exactly n x\n</pre>\n\n## Empty matches\n\n<pre class=\"rust\">\n^     the beginning of text (or start-of-line with multi-line mode)\n$     the end of text (or end-of-line with multi-line mode)\n\\A    only the beginning of text (even with multi-line mode enabled)\n\\z    only the end of text (even with multi-line mode enabled)\n\\b    a Unicode word boundary (\\w on one side and \\W, \\A, or \\z on other)\n\\B    not a Unicode word boundary\n</pre>\n\n## Grouping and flags\n\n<pre class=\"rust\">\n(exp)          numbered capture group (indexed by opening parenthesis)\n(?P&lt;name&gt;exp)  named (also numbered) capture group (allowed chars: [_0-9a-zA-Z.\\[\\]])\n(?:exp)        non-capturing group\n(?flags)       set flags within current group\n(?flags:exp)   set flags for exp (non-capturing)\n</pre>\n\nFlags are each a single character. For example, `(?x)` sets the flag `x`\nand `(?-x)` clears the flag `x`. Multiple flags can be set or cleared at\nthe same time: `(?xy)` sets both the `x` and `y` flags and `(?x-y)` sets\nthe `x` flag and clears the `y` flag.\n\nAll flags are by default disabled unless stated otherwise. They are:\n\n<pre class=\"rust\">\ni     case-insensitive: letters match both upper and lower case\nm     multi-line mode: ^ and $ match begin/end of line\ns     allow . to match \\n\nU     swap the meaning of x* and x*?\nu     Unicode support (enabled by default)\nx     ignore whitespace and allow line comments (starting with `#`)\n</pre>\n\nFlags can be toggled within a pattern. Here's an example that matches\ncase-insensitively for the first part but case-sensitively for the second part:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)a+(?-i)b+\").unwrap();\nlet cap = re.captures(\"AaAaAbbBBBb\").unwrap();\nassert_eq!(&cap[0], \"AaAaAbb\");\n# }\n```\n\nNotice that the `a+` matches either `a` or `A`, but the `b+` only matches\n`b`.\n\nMulti-line mode means `^` and `$` no longer match just at the beginning/end of\nthe input, but at the beginning/end of lines:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^line \\d+\").unwrap();\nlet m = re.find(\"line one\\nline 2\\n\").unwrap();\nassert_eq!(m.as_str(), \"line 2\");\n```\n\nNote that `^` matches after new lines, even at the end of input:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^\").unwrap();\nlet m = re.find_iter(\"test\\n\").last().unwrap();\nassert_eq!((m.start(), m.end()), (5, 5));\n```\n\nHere is an example that uses an ASCII word boundary instead of a Unicode\nword boundary:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?-u:\\b).+(?-u:\\b)\").unwrap();\nlet cap = re.captures(\"$$abc$$\").unwrap();\nassert_eq!(&cap[0], \"abc\");\n# }\n```\n\n## Escape sequences\n\n<pre class=\"rust\">\n\\*          literal *, works for any punctuation character: \\.+*?()|[]{}^$\n\\a          bell (\\x07)\n\\f          form feed (\\x0C)\n\\t          horizontal tab\n\\n          new line\n\\r          carriage return\n\\v          vertical tab (\\x0B)\n\\123        octal character code (up to three digits) (when enabled)\n\\x7F        hex character code (exactly two digits)\n\\x{10FFFF}  any hex character code corresponding to a Unicode code point\n\\u007F      hex character code (exactly four digits)\n\\u{7F}      any hex character code corresponding to a Unicode code point\n\\U0000007F  hex character code (exactly eight digits)\n\\U{7F}      any hex character code corresponding to a Unicode code point\n</pre>\n\n## Perl character classes (Unicode friendly)\n\nThese classes are based on the definitions provided in\n[UTS#18](https://www.unicode.org/reports/tr18/#Compatibility_Properties):\n\n<pre class=\"rust\">\n\\d     digit (\\p{Nd})\n\\D     not digit\n\\s     whitespace (\\p{White_Space})\n\\S     not whitespace\n\\w     word character (\\p{Alphabetic} + \\p{M} + \\d + \\p{Pc} + \\p{Join_Control})\n\\W     not word character\n</pre>\n\n## ASCII character classes\n\n<pre class=\"rust\">\n[[:alnum:]]    alphanumeric ([0-9A-Za-z])\n[[:alpha:]]    alphabetic ([A-Za-z])\n[[:ascii:]]    ASCII ([\\x00-\\x7F])\n[[:blank:]]    blank ([\\t ])\n[[:cntrl:]]    control ([\\x00-\\x1F\\x7F])\n[[:digit:]]    digits ([0-9])\n[[:graph:]]    graphical ([!-~])\n[[:lower:]]    lower case ([a-z])\n[[:print:]]    printable ([ -~])\n[[:punct:]]    punctuation ([!-/:-@\\[-`{-~])\n[[:space:]]    whitespace ([\\t\\n\\v\\f\\r ])\n[[:upper:]]    upper case ([A-Z])\n[[:word:]]     word characters ([0-9A-Za-z_])\n[[:xdigit:]]   hex digit ([0-9A-Fa-f])\n</pre>\n\n# Crate features\n\nBy default, this crate tries pretty hard to make regex matching both as fast\nas possible and as correct as it can be, within reason. This means that there\nis a lot of code dedicated to performance, the handling of Unicode data and the\nUnicode data itself. Overall, this leads to more dependencies, larger binaries\nand longer compile times.  This trade off may not be appropriate in all cases,\nand indeed, even when all Unicode and performance features are disabled, one\nis still left with a perfectly serviceable regex engine that will work well\nin many cases.\n\nThis crate exposes a number of features for controlling that trade off. Some\nof these features are strictly performance oriented, such that disabling them\nwon't result in a loss of functionality, but may result in worse performance.\nOther features, such as the ones controlling the presence or absence of Unicode\ndata, can result in a loss of functionality. For example, if one disables the\n`unicode-case` feature (described below), then compiling the regex `(?i)a`\nwill fail since Unicode case insensitivity is enabled by default. Instead,\ncallers must use `(?i-u)a` instead to disable Unicode case folding. Stated\ndifferently, enabling or disabling any of the features below can only add or\nsubtract from the total set of valid regular expressions. Enabling or disabling\na feature will never modify the match semantics of a regular expression.\n\nAll features below are enabled by default.\n\n### Ecosystem features\n\n* **std** -\n  When enabled, this will cause `regex` to use the standard library. Currently,\n  disabling this feature will always result in a compilation error. It is\n  intended to add `alloc`-only support to regex in the future.\n\n### Performance features\n\n* **perf** -\n  Enables all performance related features. This feature is enabled by default\n  and will always cover all features that improve performance, even if more\n  are added in the future.\n* **perf-dfa** -\n  Enables the use of a lazy DFA for matching. The lazy DFA is used to compile\n  portions of a regex to a very fast DFA on an as-needed basis. This can\n  result in substantial speedups, usually by an order of magnitude on large\n  haystacks. The lazy DFA does not bring in any new dependencies, but it can\n  make compile times longer.\n* **perf-inline** -\n  Enables the use of aggressive inlining inside match routines. This reduces\n  the overhead of each match. The aggressive inlining, however, increases\n  compile times and binary size.\n* **perf-literal** -\n  Enables the use of literal optimizations for speeding up matches. In some\n  cases, literal optimizations can result in speedups of _several_ orders of\n  magnitude. Disabling this drops the `aho-corasick` and `memchr` dependencies.\n* **perf-cache** -\n  This feature used to enable a faster internal cache at the cost of using\n  additional dependencies, but this is no longer an option. A fast internal\n  cache is now used unconditionally with no additional dependencies. This may\n  change in the future.\n\n### Unicode features\n\n* **unicode** -\n  Enables all Unicode features. This feature is enabled by default, and will\n  always cover all Unicode features, even if more are added in the future.\n* **unicode-age** -\n  Provide the data for the\n  [Unicode `Age` property](https://www.unicode.org/reports/tr44/tr44-24.html#Character_Age).\n  This makes it possible to use classes like `\\p{Age:6.0}` to refer to all\n  codepoints first introduced in Unicode 6.0\n* **unicode-bool** -\n  Provide the data for numerous Unicode boolean properties. The full list\n  is not included here, but contains properties like `Alphabetic`, `Emoji`,\n  `Lowercase`, `Math`, `Uppercase` and `White_Space`.\n* **unicode-case** -\n  Provide the data for case insensitive matching using\n  [Unicode's \"simple loose matches\" specification](https://www.unicode.org/reports/tr18/#Simple_Loose_Matches).\n* **unicode-gencat** -\n  Provide the data for\n  [Unicode general categories](https://www.unicode.org/reports/tr44/tr44-24.html#General_Category_Values).\n  This includes, but is not limited to, `Decimal_Number`, `Letter`,\n  `Math_Symbol`, `Number` and `Punctuation`.\n* **unicode-perl** -\n  Provide the data for supporting the Unicode-aware Perl character classes,\n  corresponding to `\\w`, `\\s` and `\\d`. This is also necessary for using\n  Unicode-aware word boundary assertions. Note that if this feature is\n  disabled, the `\\s` and `\\d` character classes are still available if the\n  `unicode-bool` and `unicode-gencat` features are enabled, respectively.\n* **unicode-script** -\n  Provide the data for\n  [Unicode scripts and script extensions](https://www.unicode.org/reports/tr24/).\n  This includes, but is not limited to, `Arabic`, `Cyrillic`, `Hebrew`,\n  `Latin` and `Thai`.\n* **unicode-segment** -\n  Provide the data necessary to provide the properties used to implement the\n  [Unicode text segmentation algorithms](https://www.unicode.org/reports/tr29/).\n  This enables using classes like `\\p{gcb=Extend}`, `\\p{wb=Katakana}` and\n  `\\p{sb=ATerm}`.\n\n\n# Untrusted input\n\nThis crate can handle both untrusted regular expressions and untrusted\nsearch text.\n\nUntrusted regular expressions are handled by capping the size of a compiled\nregular expression.\n(See [`RegexBuilder::size_limit`](struct.RegexBuilder.html#method.size_limit).)\nWithout this, it would be trivial for an attacker to exhaust your system's\nmemory with expressions like `a{100}{100}{100}`.\n\nUntrusted search text is allowed because the matching engine(s) in this\ncrate have time complexity `O(mn)` (with `m ~ regex` and `n ~ search\ntext`), which means there's no way to cause exponential blow-up like with\nsome other regular expression engines. (We pay for this by disallowing\nfeatures like arbitrary look-ahead and backreferences.)\n\nWhen a DFA is used, pathological cases with exponential state blow-up are\navoided by constructing the DFA lazily or in an \"online\" manner. Therefore,\nat most one new state can be created for each byte of input. This satisfies\nour time complexity guarantees, but can lead to memory growth\nproportional to the size of the input. As a stopgap, the DFA is only\nallowed to store a fixed number of states. When the limit is reached, its\nstates are wiped and continues on, possibly duplicating previous work. If\nthe limit is reached too frequently, it gives up and hands control off to\nanother matching engine with fixed memory requirements.\n(The DFA size limit can also be tweaked. See\n[`RegexBuilder::dfa_size_limit`](struct.RegexBuilder.html#method.dfa_size_limit).)","links":{},"attrs":["#![deny(missing_docs)]","#![warn(missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:55:1580","0:2017:127","0:2594:3534","0:2528:3454","0:2788:2885","0:2793:4067","0:2800:4101","0:2805:4100","0:1459:1564","0:3011:1565","0:3031:1566","0:2983:1567","0:1565:1568","0:2954:1570","0:3040:1571","0:3058:1572","0:2978:1573","0:1641:1574","0:3049:1575","0:2993:1576","0:3002:1577","0:3018:1578"]}},"b:2:3179-0:2993:1576":{"id":"b:2:3179-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:3031:1566":{"id":"a:2:9222:3226-0:3031:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1676:3757":{"id":"0:1676:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1287,4],"end":[1289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2619":{"id":"0:2619","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2621:593","0:2622:894"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2846-0:2805:4100":{"id":"b:2:2846-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3187:127":{"id":"2:3187:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38669:5714","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:1526:295":{"id":"0:1526:295","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[714,4],"end":[716,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2554:2745":{"id":"0:2554:2745","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13449:62051":{"id":"2:13449:62051","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1126:588":{"id":"0:1126:588","crate_id":0,"name":"end","span":{"filename":"src/re_bytes.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13422:62045":{"id":"2:13422:62045","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12997:1556","prim@char":"1:15839:4416","str::split_terminator":"1:15845:4421","str::split":"1:15845:4421"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49388:4869","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2031:894":{"id":"0:2031:894","crate_id":0,"name":"ne","span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2703:1572":{"id":"b:5:787-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1645:3943":{"id":"0:1645:3943","crate_id":0,"name":"by_ref","span":{"filename":"src/re_unicode.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &str,\n    mut rep: R,\n) -> String {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10268:5316":{"id":"2:10268:5316","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10269:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2814:648":{"id":"0:2814:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2655:1577":{"id":"a:2:3281:4878-0:2655:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3969-0:2978:1573":{"id":"b:2:3969-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13478:2737":{"id":"2:13478:2737","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12936:3542","FromStr::Err":"2:12936:3542"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:3542","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:3542","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2585:2743":{"id":"0:2585:2743","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:3049:1575":{"id":"b:2:2843-0:3049:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:2561:3534":{"id":"a:2:9222:3226-0:2561:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6847:5972":{"id":"1:6847:5972","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6848:56456"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8371-0:2907:4100":{"id":"b:2:8371-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:3026:397":{"id":"0:3026:397","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:2788:2885":{"id":"b:2:2843-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3175:669":{"id":"2:3175:669","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2017:127":{"id":"0:2017:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[6,0],"end":[19,1]},"visibility":"public","docs":"An error that occurred during parsing or compiling a regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2018:1961","0:2021:2045"],"impls":["a:2:9222:3226-0:2017:127","a:2:3252:209-0:2017:127","a:2:3240:200-0:2017:127","a:2:9223:3225-0:2017:127","a:2:3281:4878-0:2017:127","b:2:2843-0:2017:127","b:2:3169-0:2017:127","b:2:3173-0:2017:127","b:2:3184-0:2017:127","b:2:3969-0:2017:127","b:2:2846-0:2017:127","b:2:3179-0:2017:127","b:5:6406-0:2017:127","b:5:787-0:2017:127","0:2026","0:2028","0:2029","0:445","0:447","0:449"]}},"1:6423:5968":{"id":"1:6423:5968","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6424:6264","1:6425:6265","1:6426:9401","1:6427:60241","1:6429:60244","1:6431:1586","1:6432:60242","1:6434:60243"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2846-0:2983:1567":{"id":"b:2:2846-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2954:1570":{"id":"b:2:3173-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1635:2004":{"id":"0:1635:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1146,4],"end":[1146,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"5:6408:1376":{"id":"5:6408:1376","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1168:3744":{"id":"0:1168:3744","crate_id":0,"name":"replacen","span":{"filename":"src/re_bytes.rs","begin":[485,4],"end":[530,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2599:1570":{"id":"b:2:3184-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:2655:1577":{"id":"a:2:9222:3226-0:2655:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9222:3226-0:2895:4067":{"id":"a:2:9222:3226-0:2895:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2793:4067":{"id":"b:2:3169-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1334":{"id":"0:1334","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1231,0],"end":[1239,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"generic","inner":"T"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3137:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"generic","inner":"F"},"items":["0:1337:3757"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1467":{"id":"0:1467","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[68,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1469:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3054":{"id":"0:3054","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:3057:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2663:648":{"id":"0:2663:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[776,9],"end":[776,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2488:2743":{"id":"0:2488:2743","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:3049:1575":{"id":"a:2:9223:3225-0:3049:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2983:1567":{"id":"0:2983:1567","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_unicode.rs","begin":[751,0],"end":[751,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2983:1567","a:2:3252:209-0:2983:1567","a:2:3240:200-0:2983:1567","a:2:9223:3225-0:2983:1567","a:2:3281:4878-0:2983:1567","b:2:2843-0:2983:1567","b:2:3169-0:2983:1567","b:2:3173-0:2983:1567","b:2:3184-0:2983:1567","b:2:3969-0:2983:1567","b:2:8371-0:2983:1567","b:2:2846-0:2983:1567","b:2:3179-0:2983:1567","b:5:787-0:2983:1567","0:2987","0:2990","0:1531","0:1539","0:1541"]}},"0:2706:1518":{"id":"0:2706:1518","crate_id":0,"name":"0","span":{"filename":"src/re_bytes.rs","begin":[1250,24],"end":[1250,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"b:2:8371-0:2800:4101":{"id":"b:2:8371-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1322:3757":{"id":"0:1322:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1194,4],"end":[1196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:2664:1567":{"id":"b:2:2843-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2963:397":{"id":"0:2963:397","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2899:397":{"id":"0:2899:397","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:2528:3454":{"id":"a:2:3252:209-0:2528:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2902:4101":{"id":"b:2:3169-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2681:1578":{"id":"0:2681:1578","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[1087,0],"end":[1090,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2681:1578","a:2:3252:209-0:2681:1578","a:2:3240:200-0:2681:1578","a:2:9223:3225-0:2681:1578","a:2:3281:4878-0:2681:1578","b:2:2843-0:2681:1578","b:2:3169-0:2681:1578","b:2:3173-0:2681:1578","b:2:3184-0:2681:1578","b:2:3969-0:2681:1578","b:2:8371-0:2681:1578","b:2:2846-0:2681:1578","b:2:3179-0:2681:1578","b:5:787-0:2681:1578","0:2686","0:2690","0:1291","0:1298"]}},"b:2:3184-0:2978:1573":{"id":"b:2:3184-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2497:3454":{"id":"a:2:3281:4878-0:2497:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2707":{"id":"0:2707","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1249,9],"end":[1249,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2709:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9223:3225-0:3040:1571":{"id":"a:2:9223:3225-0:3040:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:1243:1568":{"id":"b:2:3169-0:1243:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1127:2058":{"id":"0:1127:2058","crate_id":0,"name":"range","span":{"filename":"src/re_bytes.rs","begin":[43,4],"end":[45,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45737:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1252:886":{"id":"0:1252:886","crate_id":0,"name":"name","span":{"filename":"src/re_bytes.rs","begin":[944,4],"end":[946,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8371-0:2681:1578":{"id":"b:2:8371-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2846-0:2681:1578":{"id":"b:2:2846-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:3018:1578":{"id":"a:2:9222:3226-0:3018:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13360":{"id":"2:13360","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12457:1319","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13361:780","2:13362:1773","2:13363:62038","2:13364:62039","2:13366:62040","2:13369:2772","2:13370:62041","2:13371:293","2:13372:11122","2:13373:1784","2:13375:11111","2:13377:2372","2:13379:58497","2:13381:6082","2:13382:62042","2:13383:58516","2:13384:58517","2:13385:3174","2:13386:6380","2:13387:1580","2:13388:34841","2:13389:34831","2:13390:6974","2:13391:62043","2:13392:34826","2:13393:2392","2:13396:58531","2:13399:58532","2:13402:2495","2:13406:5350","2:13410:1887","2:13413:34698","2:13416:58526","2:13419:62044","2:13422:62045","2:13425:3680","2:13428:58529","2:13431:62046","2:13434:62047","2:13437:1731","2:13440:62048","2:13443:62049","2:13446:62050","2:13449:62051","2:13451:62052","2:13453:62053","2:13455:62054","2:13456:62055","2:13457:62056","2:13460:62057","2:13463:17617","2:13466:58533","2:13469:62058","2:13472:62059","2:13475:62060","2:13478:2737","2:13480:1997","2:13481:56016","2:13482:56017","2:13483:56018","2:13484:62061","2:13486:2562","2:13487:4740"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3969-0:2800:4101":{"id":"b:2:3969-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:3031:1566":{"id":"b:2:2846-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13392:34826":{"id":"2:13392:34826","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49612:4849","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3372:4816":{"id":"2:3372:4816","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:171","2:3375:342"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2981":{"id":"0:2981","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2982:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2690":{"id":"0:2690","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1086,16],"end":[1086,21]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2693:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:4878-0:2907:4100":{"id":"a:2:3281:4878-0:2907:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1464:2058":{"id":"0:1464:2058","crate_id":0,"name":"range","span":{"filename":"src/re_unicode.rs","begin":[51,4],"end":[53,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45737:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2646:1576":{"id":"b:2:3179-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2890:2885":{"id":"b:5:787-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1650:3757":{"id":"0:1650:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1216,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8371-0:2983:1567":{"id":"b:2:8371-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1303:3754":{"id":"0:1303:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1128,4],"end":[1130,5]},"visibility":"default","docs":"Return a fixed unchanging replacement byte string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2771":{"id":"0:2771","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10503:146":{"id":"2:10503:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10504:640","2:10505:2611","2:10506:56508","2:10507:56509","2:10508:56510","2:10509:56511","2:10510:56512","2:10511:56513","2:10512:56514","2:10513:56515","2:10514:56516","2:10515:56517","2:10516:56518","2:10517:56519","2:10518:56520","2:10519:1509"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2673:648":{"id":"0:2673:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[818,16],"end":[818,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2983:1567":{"id":"b:2:3969-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2493:2741":{"id":"0:2493:2741","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9223:3225":{"id":"2:9223:3225","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1142":{"id":"0:1142","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[114,0],"end":[531,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1143:907","0:1144:2236","0:1145:2495","0:1147:3602","0:1150:1877","0:1153:3659","0:1156:1887","0:1159:3680","0:1162:2443","0:1165:3750","0:1168:3744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1178:3786":{"id":"0:1178:3786","crate_id":0,"name":"captures_read","span":{"filename":"src/re_bytes.rs","begin":[611,4],"end":[617,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2668":{"id":"0:2668","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[818,9],"end":[818,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2670:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2552:2743":{"id":"0:2552:2743","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2612":{"id":"0:2612","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,29],"end":[20,31]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3249:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13386:6380":{"id":"2:13386:6380","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49296:4854","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:3049:1575":{"id":"a:2:3252:209-0:3049:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3137:75":{"id":"2:3137:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3139:294"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3249:206":{"id":"2:3249:206","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1608":{"id":"0:1608","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1087,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1611:2004","0:1612:909","0:1615:3818","0:1616:484"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13385:3174":{"id":"2:13385:3174","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49290:4855","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1485:2495":{"id":"0:1485:2495","crate_id":0,"name":"find","span":{"filename":"src/re_unicode.rs","begin":[222,4],"end":[224,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!(mat.start(), 2);\nassert_eq!(mat.end(), 15);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2623:1573":{"id":"0:2623:1573","crate_id":0,"name":"Regex","span":{"filename":"src/re_bytes.rs","begin":[78,0],"end":[78,23]},"visibility":"public","docs":"A compiled regular expression for matching arbitrary bytes.\n\nIt can be used to search, split or replace text. All searching is done with\nan implicit `.*?` at the beginning and end of an expression. To force an\nexpression to match the whole string (or a prefix or a suffix), you must\nuse an anchor like `^` or `$` (or `\\A` and `\\z`).\n\nLike the `Regex` type in the parent module, matches with this regex return\nbyte offsets into the search text. **Unlike** the parent `Regex` type,\nthese byte offsets may not correspond to UTF-8 sequence boundaries since\nthe regexes in this module can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1142","0:1171","0:1185","a:2:9222:3226-0:2623:1573","a:2:3252:209-0:2623:1573","a:2:3240:200-0:2623:1573","a:2:9223:3225-0:2623:1573","a:2:3281:4878-0:2623:1573","b:2:2843-0:2623:1573","b:2:3169-0:2623:1573","b:2:3173-0:2623:1573","b:2:3184-0:2623:1573","b:2:3969-0:2623:1573","b:2:2846-0:2623:1573","b:2:3179-0:2623:1573","b:5:6406-0:2623:1573","b:5:787-0:2623:1573","0:2626","0:1133","0:1135","0:1139"]}},"0:1578:1587":{"id":"0:1578:1587","crate_id":0,"name":"expand","span":{"filename":"src/re_unicode.rs","begin":[988,4],"end":[990,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of characters is permitted. If the sequence\ndoes not refer to a capture group name in the corresponding regex, then\nit is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["replacement",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8371-0:3018:1578":{"id":"b:2:8371-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:9223:3225-0:2800:4101":{"id":"a:2:9223:3225-0:2800:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1626:2004":{"id":"0:1626:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1122,4],"end":[1122,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"0:2606":{"id":"0:2606","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2608:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3971:1408":{"id":"2:3971:1408","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45892:5718","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1616:484":{"id":"0:1616:484","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[1100,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13372:11122":{"id":"2:13372:11122","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15856:4430"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1307":{"id":"0:1307","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1164,0],"end":[1171,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:1310:3757","0:1311:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1656":{"id":"0:1656","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1234,0],"end":[1242,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:1658:3757","0:1659:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2879":{"id":"0:2879","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8411:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2881:4107"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1527:2895":{"id":"0:1527:2895","crate_id":0,"name":"capture_names","span":{"filename":"src/re_unicode.rs","begin":[719,4],"end":[721,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2628:1571":{"id":"b:2:3184-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2902:4101":{"id":"b:2:3173-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2964":{"id":"0:2964","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2966:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3184-0:1565:1568":{"id":"b:2:3184-0:1565:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5727:5982":{"id":"1:5727:5982","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728:9932","1:5729:56760","1:5730:8120","1:5731:56761","1:5732:6264","1:5733:6265","1:5734:56762","1:5735:1283","1:5736:56763","1:5737:56764","1:5738:56765","1:5739:56766","1:5740:56767","1:5741:56768","1:5742:56769","1:5743:56770"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:3018:1578":{"id":"b:2:3184-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2589:1535":{"id":"0:2589:1535","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1295:909":{"id":"0:1295:909","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[1095,4],"end":[1099,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3486:130":{"id":"2:3486:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3488:365"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3489:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3240:200-0:2978:1573":{"id":"a:2:3240:200-0:2978:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4612:5999":{"id":"1:4612:5999","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4613:6203","1:4614:58237","1:4616:58238","1:4617:58239","1:4618:6021","1:4619:58240","1:4620:56080","1:4622:58241","1:4623:3943","1:4624:1580","1:4625:5357","1:4627:2031"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1476:648":{"id":"0:1476:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1661:3757":{"id":"0:1661:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1245,4],"end":[1247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6098:2030":{"id":"5:6098:2030","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1153:3659":{"id":"0:1153:3659","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_bytes.rs","begin":[290,4],"end":[295,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use std::str; use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    let title = str::from_utf8(&caps[\"title\"]).unwrap();\n    let year = str::from_utf8(&caps[\"year\"]).unwrap();\n    println!(\"Movie: {:?}, Released: {:?}\", title, year);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2890:2885":{"id":"b:2:3969-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5721:5988":{"id":"1:5721:5988","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5722:8120","1:5723:9406"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1529:3642":{"id":"0:1529:3642","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_unicode.rs","begin":[730,4],"end":[732,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3313:4809":{"id":"2:3313:4809","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3315:171","2:3316:1334"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1479":{"id":"0:1479","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[159,0],"end":[166,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:3542","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1480:126","0:1481:3565"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2492:1535":{"id":"0:2492:1535","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2622:894":{"id":"0:2622:894","crate_id":0,"name":"ne","span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:3018:1578":{"id":"b:2:3179-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:2703:1572":{"id":"b:2:2846-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12936:3542":{"id":"2:12936:3542","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12937:126","2:12938:3565"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2777":{"id":"0:2777","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8411:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2779:4107"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3169-0:2637:1566":{"id":"b:2:3169-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:1565:1568":{"id":"a:2:9222:3226-0:1565:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2680:648":{"id":"0:2680:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[859,16],"end":[859,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2645:648":{"id":"0:2645:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[715,9],"end":[715,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2017:127":{"id":"b:2:3184-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3250:106":{"id":"2:3250:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:450:648":{"id":"0:450:648","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[52,4],"end":[70,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2712:648":{"id":"0:2712:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1249,16],"end":[1249,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2599:1570":{"id":"a:2:9223:3225-0:2599:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1490:1877":{"id":"0:1490:1877","crate_id":0,"name":"captures","span":{"filename":"src/re_unicode.rs","begin":[311,4],"end":[318,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.get(2).unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], \"Citizen Kane\");\nassert_eq!(&caps[2], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], \"Citizen Kane\");\nassert_eq!(&caps[\"year\"], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1258":{"id":"0:1258","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[992,0],"end":[996,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1260:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2560:2748":{"id":"0:2560:2748","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3388:4820":{"id":"2:3388:4820","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:171","2:3391:1215"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2637:1566":{"id":"0:2637:1566","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[716,0],"end":[718,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2637:1566","a:2:3252:209-0:2637:1566","a:2:3240:200-0:2637:1566","a:2:9223:3225-0:2637:1566","a:2:3281:4878-0:2637:1566","b:2:2843-0:2637:1566","b:2:3169-0:2637:1566","b:2:3173-0:2637:1566","b:2:3184-0:2637:1566","b:2:3969-0:2637:1566","b:2:8371-0:2637:1566","b:2:2846-0:2637:1566","b:2:3179-0:2637:1566","0:2642","0:1200","0:1206"]}},"b:2:3169-0:2703:1572":{"id":"b:2:3169-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2878:3818":{"id":"0:2878:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:3058:1572":{"id":"b:2:2843-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2766:2004":{"id":"0:2766:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:3184-0:3058:1572":{"id":"b:2:3184-0:3058:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1472:669":{"id":"0:1472:669","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45737:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2599:1570":{"id":"b:2:3169-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2907:4100":{"id":"0:2907:4100","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2907:4100","a:2:3252:209-0:2907:4100","a:2:3240:200-0:2907:4100","a:2:9223:3225-0:2907:4100","a:2:3281:4878-0:2907:4100","b:2:2843-0:2907:4100","b:2:3169-0:2907:4100","b:2:3173-0:2907:4100","b:2:3184-0:2907:4100","b:2:3969-0:2907:4100","b:2:8371-0:2907:4100","b:2:2846-0:2907:4100","b:2:3179-0:2907:4100","b:5:787-0:2907:4100","0:2911","0:2914","0:2874","0:2879","0:2882"]}},"0:1315:3757":{"id":"0:1315:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1174,4],"end":[1176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10272:179":{"id":"2:10272:179","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10273:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2500":{"id":"0:2500","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2471:1580","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2501:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2018:1961":{"id":"0:2018:1961","crate_id":0,"name":"Syntax","span":{"filename":"src/error.rs","begin":[8,4],"end":[8,18]},"visibility":"default","docs":"A syntax error.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"0:2594:3534":{"id":"0:2594:3534","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2579","a:2:9222:3226-0:2594:3534","a:2:3252:209-0:2594:3534","a:2:3240:200-0:2594:3534","a:2:9223:3225-0:2594:3534","a:2:3281:4878-0:2594:3534","b:2:2843-0:2594:3534","b:2:3169-0:2594:3534","b:2:3173-0:2594:3534","b:2:3184-0:2594:3534","b:2:3969-0:2594:3534","b:2:2846-0:2594:3534","b:2:3179-0:2594:3534","0:2597"]}},"0:2763:2004":{"id":"0:2763:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:3969-0:2793:4067":{"id":"b:2:3969-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3252:209-0:1243:1568":{"id":"a:2:3252:209-0:1243:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2703:1572":{"id":"0:2703:1572","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_bytes.rs","begin":[1250,0],"end":[1250,38]},"visibility":"public","docs":"`NoExpand` indicates literal byte string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal byte string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:2706:1518"],"impls":["a:2:9222:3226-0:2703:1572","a:2:3252:209-0:2703:1572","a:2:3240:200-0:2703:1572","a:2:9223:3225-0:2703:1572","a:2:3281:4878-0:2703:1572","b:2:2843-0:2703:1572","b:2:3169-0:2703:1572","b:2:3173-0:2703:1572","b:2:3184-0:2703:1572","b:2:3969-0:2703:1572","b:2:2846-0:2703:1572","b:2:3179-0:2703:1572","b:5:787-0:2703:1572","0:2707","0:2710","0:1338"]}},"a:2:3240:200-0:2561:3534":{"id":"a:2:3240:200-0:2561:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1143:907":{"id":"0:1143:907","crate_id":0,"name":"new","span":{"filename":"src/re_bytes.rs","begin":[119,4],"end":[121,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2588:2746":{"id":"0:2588:2746","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:2788:2885":{"id":"b:2:3173-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1283":{"id":"0:1283","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1067,0],"end":[1075,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3544:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1286:171","0:1287:740"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1594":{"id":"0:1594","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1040,0],"end":[1048,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3544:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1596:171","0:1597:740"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1561":{"id":"0:1561","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[880,0],"end":[909,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1562:1784","0:1563:780"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8850:4629":{"id":"2:8850:4629","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7891:4617","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2627:397":{"id":"0:2627:397","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2564":{"id":"0:2564","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2533:1581","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2565:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2882":{"id":"0:2882","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2870:3818":{"id":"0:2870:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1128:2772":{"id":"0:1128:2772","crate_id":0,"name":"as_bytes","span":{"filename":"src/re_bytes.rs","begin":[49,4],"end":[51,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1554:2004":{"id":"0:1554:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[825,4],"end":[825,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"0:1320:3754":{"id":"0:1320:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1188,4],"end":[1190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:3058:1572":{"id":"a:2:9223:3225-0:3058:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8371-0:2637:1566":{"id":"b:2:8371-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:9223:3225-0:2017:127":{"id":"a:2:9223:3225-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2637:1566":{"id":"b:2:3179-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1221:909":{"id":"0:1221:909","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[785,4],"end":[803,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2664:1567":{"id":"b:2:3179-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9323:5960":{"id":"1:9323:5960","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9324:56736","1:9325:56737","1:9326:56738","1:9327:56739","1:9328:6590","1:9329:41571","1:9330:56735"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3240:200-0:2637:1566":{"id":"a:2:3240:200-0:2637:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13484:62061":{"id":"2:13484:62061","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15839:4416"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49619:4859","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1165:3750":{"id":"0:1165:3750","crate_id":0,"name":"replace_all","span":{"filename":"src/re_bytes.rs","begin":[471,4],"end":[477,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1576:766":{"id":"0:1576:766","crate_id":0,"name":"iter","span":{"filename":"src/re_unicode.rs","begin":[963,4],"end":[965,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'c","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2579":{"id":"0:2579","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2566:1561","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2580:907","0:2583:2749","0:2584:2742","0:2585:2743","0:2586:2744","0:2587:2745","0:2588:2746","0:2589:1535","0:2590:2741","0:2591:1824","0:2592:2130","0:2593:2748"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:3226-0:2637:1566":{"id":"a:2:9222:3226-0:2637:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6076":{"id":"5:6076","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5896:1319","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6077:62696","5:6078:2443","5:6081:3744","5:6084:62697","5:6096:62698","5:6097:62699","5:6098:2030","5:6099:56014","5:6100:56015"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8371-0:2664:1567":{"id":"b:2:8371-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:5:6406-0:2623:1573":{"id":"b:5:6406-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:1376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2898":{"id":"0:2898","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2899:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:3226-0:2793:4067":{"id":"a:2:9222:3226-0:2793:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2604":{"id":"0:2604","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,9],"end":[20,13]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10274:5318":{"id":"2:10274:5318","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10275:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1652":{"id":"0:1652","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1224,0],"end":[1232,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1654:3757","0:1655:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3184-0:2623:1573":{"id":"b:2:3184-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2017:127":{"id":"a:2:3281:4878-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3411:4825":{"id":"2:3411:4825","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:1216"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9223:3225-0:2788:2885":{"id":"a:2:9223:3225-0:2788:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1287:740":{"id":"0:1287:740","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1070,4],"end":[1074,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8371-0:3040:1571":{"id":"b:2:8371-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3245:3946":{"id":"2:3245:3946","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1679:3757":{"id":"0:1679:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1304,4],"end":[1306,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2907:4100":{"id":"b:2:3169-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2030:593":{"id":"0:2030:593","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2841:907":{"id":"0:2841:907","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3137:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2561:3534":{"id":"b:2:3169-0:2561:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:3011:1565":{"id":"a:2:9222:3226-0:3011:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2617":{"id":"0:2617","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3248:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3252:209-0:1565:1568":{"id":"a:2:3252:209-0:1565:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3969-0:3031:1566":{"id":"b:2:3969-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:2637:1566":{"id":"b:2:3969-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1324":{"id":"0:1324","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1203,0],"end":[1211,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"items":["0:1326:3757","0:1327:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2892:173":{"id":"2:2892:173","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2894:593","2:2895:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3169-0:2954:1570":{"id":"b:2:3169-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6406-0:2017:127":{"id":"b:5:6406-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:1376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2749:1773":{"id":"0:2749:1773","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:3049:1575":{"id":"b:2:3184-0:3049:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1662:3754":{"id":"0:1662:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1249,4],"end":[1251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13362:1773":{"id":"2:13362:1773","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:2907:4100":{"id":"b:2:2843-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:2993:1576":{"id":"b:2:3969-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8373:2004":{"id":"2:8373:2004","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"0:1680:3754":{"id":"0:1680:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1308,4],"end":[1310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1480:126":{"id":"0:1480:126","crate_id":0,"name":"Err","span":{"filename":"src/re_unicode.rs","begin":[160,4],"end":[160,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:2837:97":{"id":"2:2837:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2839:3305"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2527:2748":{"id":"0:2527:2748","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1620":{"id":"0:1620","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1107,0],"end":[1107,59]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2972":{"id":"0:2972","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3248:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9223:3225-0:2907:4100":{"id":"a:2:9223:3225-0:2907:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3062":{"id":"0:3062","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3064:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3969-0:2599:1570":{"id":"b:2:3969-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9223:3225-0:2954:1570":{"id":"a:2:9223:3225-0:2954:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2516:907":{"id":"0:2516:907","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2793:4067":{"id":"b:5:787-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1647":{"id":"0:1647","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1215,0],"end":[1222,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:1650:3757","0:1651:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2846-0:2655:1577":{"id":"b:2:2846-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1483:907":{"id":"0:1483:907","crate_id":0,"name":"new","span":{"filename":"src/re_unicode.rs","begin":[174,4],"end":[176,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2853":{"id":"0:2853","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2854:4069","0:2855:1771","0:2856:780","0:2857:766"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2776:3818":{"id":"0:2776:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3377:4817":{"id":"2:3377:4817","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:171","2:3380:345"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2524:2741":{"id":"0:2524:2741","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:3011:1565":{"id":"b:2:3169-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1596:171":{"id":"0:1596:171","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1041,4],"end":[1041,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:1659:3754":{"id":"0:1659:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1239,4],"end":[1241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2628:1571":{"id":"b:2:3169-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:2907:4100":{"id":"b:2:3969-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:2628:1571":{"id":"b:2:2843-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3039:648":{"id":"0:3039:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1150:1877":{"id":"0:1150:1877","crate_id":0,"name":"captures","span":{"filename":"src/re_bytes.rs","begin":[255,4],"end":[262,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_bytes(), &b\"Citizen Kane\"[..]);\nassert_eq!(caps.get(2).unwrap().as_bytes(), &b\"1941\"[..]);\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], b\"Citizen Kane\");\nassert_eq!(&caps[2], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_bytes(), b\"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_bytes(), b\"1941\");\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], b\"Citizen Kane\");\nassert_eq!(&caps[\"year\"], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6543:6000":{"id":"1:6543:6000","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6544:56680","1:6545:56681"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3492:132":{"id":"2:3492:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3494:171","2:3495:367"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3281:4878":{"id":"2:3281:4878","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:2664:1567":{"id":"a:2:3252:209-0:2664:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1175:2775":{"id":"0:1175:2775","crate_id":0,"name":"find_at","span":{"filename":"src/re_bytes.rs","begin":[590,4],"end":[599,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2886":{"id":"0:2886","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2887:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1481:3565":{"id":"0:1481:3565","crate_id":0,"name":"from_str","span":{"filename":"src/re_unicode.rs","begin":[163,4],"end":[165,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2998":{"id":"0:2998","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3001:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9223:3225-0:2664:1567":{"id":"a:2:9223:3225-0:2664:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9222:3226-0:2907:4100":{"id":"a:2:9222:3226-0:2907:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1239":{"id":"0:1239","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[870,0],"end":[899,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1240:1784","0:1241:780"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2846-0:2674:1565":{"id":"b:2:2846-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1279:171":{"id":"0:1279:171","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1046,4],"end":[1046,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"a:2:3281:4878-0:2978:1573":{"id":"a:2:3281:4878-0:2978:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1257:780":{"id":"0:1257:780","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[987,4],"end":[989,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2744:2236":{"id":"0:2744:2236","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:789:3756":{"id":"5:789:3756","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:55:1580":{"id":"0:55:1580","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[725,0],"end":[725,13]},"visibility":"public","docs":"Match regular expressions on arbitrary bytes.\n\nThis module provides a nearly identical API to the one found in the\ntop-level of this crate. There are two important differences:\n\n1. Matching is done on `&[u8]` instead of `&str`. Additionally, `Vec<u8>`\nis used where `String` would have been used.\n2. Unicode support can be disabled even when disabling it would result in\nmatching invalid UTF-8 bytes.\n\n# Example: match null terminated string\n\nThis shows how to find all null-terminated strings in a slice of bytes:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"(?-u)(?P<cstr>[^\\x00]+)\\x00\").unwrap();\nlet text = b\"foo\\x00bar\\x00baz\\x00\";\n\n// Extract all of the strings without the null terminator from each match.\n// The unwrap is OK here since a match requires the `cstr` capture to match.\nlet cstrs: Vec<&[u8]> =\n    re.captures_iter(text)\n      .map(|c| c.name(\"cstr\").unwrap().as_bytes())\n      .collect();\nassert_eq!(vec![&b\"foo\"[..], &b\"bar\"[..], &b\"baz\"[..]], cstrs);\n```\n\n# Example: selectively enable Unicode support\n\nThis shows how to match an arbitrary byte pattern followed by a UTF-8 encoded\nstring (e.g., to extract a title from a Matroska file):\n\n```rust\n# use std::str;\n# use regex::bytes::Regex;\nlet re = Regex::new(\n    r\"(?-u)\\x7b\\xa9(?:[\\x80-\\xfe]|[\\x40-\\xff].)(?u:(.*))\"\n).unwrap();\nlet text = b\"\\x12\\xd0\\x3b\\x5f\\x7b\\xa9\\x85\\xe2\\x98\\x83\\x80\\x98\\x54\\x76\\x68\\x65\";\nlet caps = re.captures(text).unwrap();\n\n// Notice that despite the `.*` at the end, it will only match valid UTF-8\n// because Unicode mode was enabled with the `u` flag. Without the `u` flag,\n// the `.*` would match the rest of the bytes.\nlet mat = caps.get(1).unwrap();\nassert_eq!((7, 10), (mat.start(), mat.end()));\n\n// If there was a match, Unicode mode guarantees that `title` is valid UTF-8.\nlet title = str::from_utf8(&caps[1]).unwrap();\nassert_eq!(\"☃\", title);\n```\n\nIn general, if the Unicode flag is enabled in a capture group and that capture\nis part of the overall match, then the capture is *guaranteed* to be valid\nUTF-8.\n\n# Syntax\n\nThe supported syntax is pretty much the same as the syntax for Unicode\nregular expressions with a few changes that make sense for matching arbitrary\nbytes:\n\n1. The `u` flag can be disabled even when disabling it might cause the regex to\nmatch invalid UTF-8. When the `u` flag is disabled, the regex is said to be in\n\"ASCII compatible\" mode.\n2. In ASCII compatible mode, neither Unicode scalar values nor Unicode\ncharacter classes are allowed.\n3. In ASCII compatible mode, Perl character classes (`\\w`, `\\d` and `\\s`)\nrevert to their typical ASCII definition. `\\w` maps to `[[:word:]]`, `\\d` maps\nto `[[:digit:]]` and `\\s` maps to `[[:space:]]`.\n4. In ASCII compatible mode, word boundaries use the ASCII compatible `\\w` to\ndetermine whether a byte is a word byte or not.\n5. Hexadecimal notation can be used to specify arbitrary bytes instead of\nUnicode codepoints. For example, in ASCII compatible mode, `\\xFF` matches the\nliteral byte `\\xFF`, while in Unicode mode, `\\xFF` is a Unicode codepoint that\nmatches its UTF-8 encoding of `\\xC3\\xBF`. Similarly for octal notation when\nenabled.\n6. In ASCII compatible mode, `.` matches any *byte* except for `\\n`. When the\n`s` flag is additionally enabled, `.` matches any byte.\n\n# Performance\n\nIn general, one should expect performance on `&[u8]` to be roughly similar to\nperformance on `&str`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2497:3454","0:2561:3534","0:2599:1570","0:2623:1573","0:2628:1571","0:2637:1566","0:2646:1576","0:2655:1577","0:2664:1567","0:2674:1565","0:1243:1568","0:2681:1578","0:1301:1574","0:2694:1575","0:2703:1572","0:2890:2885","0:2895:4067","0:2902:4101","0:2907:4100"]}},"a:2:9222:3226-0:2983:1567":{"id":"a:2:9222:3226-0:2983:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3969-0:2664:1567":{"id":"b:2:3969-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2840:4838":{"id":"2:2840:4838","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2842:1756"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2982:397":{"id":"0:2982:397","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1298":{"id":"0:1298","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1102,0],"end":[1102,59]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1204:909":{"id":"0:1204:909","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[723,4],"end":[729,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1638":{"id":"0:1638","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1154,0],"end":[1154,49]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2556:1535":{"id":"0:2556:1535","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2017:127":{"id":"b:2:3179-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13416:58526":{"id":"2:13416:58526","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556","`DoubleEndedIterator`":"2:8411:120","str::split":"1:15845:4421"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49338:4867","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:2561:3534":{"id":"a:2:3252:209-0:2561:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3402:4823":{"id":"2:3402:4823","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3404:346"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1123":{"id":"0:1123","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[27,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1125:1304","0:1126:588","0:1127:2058","0:1128:2772"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1666:3754":{"id":"0:1666:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1259,4],"end":[1261,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23006:6445":{"id":"2:23006:6445","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23655:6421","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22997:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3184-0:3040:1571":{"id":"b:2:3184-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:3040:1571":{"id":"a:2:3240:200-0:3040:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:4878-0:3031:1566":{"id":"a:2:3281:4878-0:3031:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2599:1570":{"id":"a:2:3252:209-0:2599:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2913:397":{"id":"0:2913:397","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:2664:1567":{"id":"b:2:3173-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:3011:1565":{"id":"b:2:3969-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2750:3535":{"id":"0:2750:3535","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2907:4100":{"id":"b:2:3179-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6406-0:2978:1573":{"id":"b:5:6406-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:1376"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10493:142":{"id":"2:10493:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10494:703","2:10496:5501"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2793:4067":{"id":"0:2793:4067","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2751","a:2:9222:3226-0:2793:4067","a:2:3252:209-0:2793:4067","a:2:3240:200-0:2793:4067","a:2:9223:3225-0:2793:4067","a:2:3281:4878-0:2793:4067","b:2:2843-0:2793:4067","b:2:3169-0:2793:4067","b:2:3173-0:2793:4067","b:2:3184-0:2793:4067","b:2:3969-0:2793:4067","b:2:2846-0:2793:4067","b:2:3179-0:2793:4067","b:5:787-0:2793:4067","0:2796","0:2798","0:2756","0:2760"]}},"1:6849:5973":{"id":"1:6849:5973","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6850:58386"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:4878-0:2594:3534":{"id":"a:2:3281:4878-0:2594:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2769":{"id":"0:2769","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8411:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2770:4107"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1174:2774":{"id":"0:1174:2774","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_bytes.rs","begin":[580,4],"end":[582,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:3002:1577":{"id":"a:2:3281:4878-0:3002:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2591:1824":{"id":"0:2591:1824","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13377:2372":{"id":"2:13377:2372","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2020:1518":{"id":"0:2020:1518","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[8,11],"end":[8,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:1327:3754":{"id":"0:1327:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1208,4],"end":[1210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13373:1784":{"id":"2:13373:1784","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5705:5986":{"id":"1:5705:5986","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5706:60487","1:5707:60489","1:5708:60488","1:5709:60490"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1162:2443":{"id":"0:1162:2443","crate_id":0,"name":"replace","span":{"filename":"src/re_bytes.rs","begin":[457,4],"end":[463,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced byte string.\n\nIf no match is found, then a copy of the byte string is returned\nunchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal byte string:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(b\"1078910\", &b\"\"[..]), &b\"1010\"[..]);\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example, a\nclosure of type `|&Captures| -> Vec<u8>` provides direct access to the\ncaptures corresponding to a match. This allows one to access capturing\ngroup matches easily:\n\n```rust\n# use regex::bytes::Regex;\n# use regex::bytes::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", |caps: &Captures| {\n    let mut replacement = caps[2].to_owned();\n    replacement.push(b' ');\n    replacement.extend(&caps[1]);\n    replacement\n});\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", &b\"$first $last\"[..]);\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(b\"deep fried\", &b\"${first}_$second\"[..]);\nassert_eq!(result, &b\"deep_fried\"[..]);\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nuse regex::bytes::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", NoExpand(b\"$2 $last\"));\nassert_eq!(result, &b\"$2 $last\"[..]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1241:780":{"id":"0:1241:780","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[885,4],"end":[887,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:1565:1568":{"id":"b:2:3169-0:1565:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3252:209-0:2793:4067":{"id":"a:2:3252:209-0:2793:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3002:1577":{"id":"0:3002:1577","crate_id":0,"name":"SplitN","span":{"filename":"src/re_unicode.rs","begin":[819,0],"end":[822,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:3002:1577","a:2:3252:209-0:3002:1577","a:2:3240:200-0:3002:1577","a:2:9223:3225-0:3002:1577","a:2:3281:4878-0:3002:1577","b:2:2843-0:3002:1577","b:2:3169-0:3002:1577","b:2:3173-0:3002:1577","b:2:3184-0:3002:1577","b:2:3969-0:3002:1577","b:2:8371-0:3002:1577","b:2:2846-0:3002:1577","b:2:3179-0:3002:1577","0:3007","0:1551","0:1557"]}},"0:3023":{"id":"0:3023","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3026:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3169-0:2694:1575":{"id":"b:2:3169-0:2694:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:3049:1575":{"id":"b:2:3179-0:3049:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3146:135":{"id":"2:3146:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3148:669"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2765":{"id":"0:2765","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2766:2004","0:2767:909","0:2768:3818"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2664:1567":{"id":"b:5:787-0:2664:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[51,0],"end":[71,1]},"visibility":{"restricted":{"parent":"0:438:1559","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:450:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:4878-0:2694:1575":{"id":"a:2:3281:4878-0:2694:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13027:4844":{"id":"2:13027:4844","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2843-0:2681:1578":{"id":"b:2:2843-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2772":{"id":"0:2772","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2774:2004","0:2775:909","0:2776:3818"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9223:3225-0:2890:2885":{"id":"a:2:9223:3225-0:2890:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2843-0:2594:3534":{"id":"b:2:2843-0:2594:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10205:5309":{"id":"2:10205:5309","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10206:1509","2:10207:61484","2:10209:5191"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2990":{"id":"0:2990","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2992:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1180:2776":{"id":"0:1180:2776","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_bytes.rs","begin":[625,4],"end":[635,5]},"visibility":"public","docs":"Returns the same as `captures_read`, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1655:3754":{"id":"0:1655:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1229,4],"end":[1231,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2528:3454":{"id":"b:2:3969-0:2528:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2993:1576":{"id":"a:2:3240:200-0:2993:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2907:4100":{"id":"a:2:3252:209-0:2907:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2873":{"id":"0:2873","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2871":{"id":"0:2871","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8411:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2872:4107"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2966:648":{"id":"0:2966:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:1243:1568":{"id":"b:2:3173-0:1243:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:2561:3534":{"id":"b:2:2846-0:2561:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2969":{"id":"0:2969","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2494:1824":{"id":"0:2494:1824","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13382:62042":{"id":"2:13382:62042","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15845:4421","crate::ops::IndexMut":"2:3548:4826","str::slice_unchecked":"1:15845:4421"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:3011:1565":{"id":"b:2:3173-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13434:62047":{"id":"2:13434:62047","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:2902:4101":{"id":"a:2:3252:209-0:2902:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1133,0],"end":[1133,56]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1141:3565":{"id":"0:1141:3565","crate_id":0,"name":"from_str","span":{"filename":"src/re_bytes.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2993:1576":{"id":"b:2:3184-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13366:62040":{"id":"2:13366:62040","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15845:4421"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1582:648":{"id":"0:1582:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1003,4],"end":[1005,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2623:1573":{"id":"a:2:3281:4878-0:2623:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2561:3534":{"id":"b:2:3179-0:2561:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2525:1824":{"id":"0:2525:1824","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2594:3534":{"id":"a:2:3240:200-0:2594:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2796":{"id":"0:2796","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2797:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13710:138":{"id":"2:13710:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13711:171","2:13712:1000"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2484":{"id":"0:2484","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2471:1580","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2485:907","0:2486:2749","0:2487:2742","0:2488:2743","0:2489:2744","0:2490:2745","0:2491:2746","0:2492:1535","0:2493:2741","0:2494:1824","0:2495:2130","0:2496:2748"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2797:397":{"id":"0:2797:397","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:2902:4101":{"id":"b:2:2843-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1139":{"id":"0:1139","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[104,0],"end":[111,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:3542","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1140:126","0:1141:3565"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13406:5350":{"id":"2:13406:5350","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47356:166","self::pattern":"2:12997:1556","prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:2983:1567":{"id":"b:2:3173-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2977:894":{"id":"0:2977:894","crate_id":0,"name":"ne","span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1534:909":{"id":"0:1534:909","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[756,4],"end":[761,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13725:150":{"id":"2:13725:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13726:171","2:13727:150","2:13728:754"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:2703:1572":{"id":"b:2:3179-0:2703:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2485:907":{"id":"0:2485:907","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2621:593":{"id":"0:2621:593","crate_id":0,"name":"eq","span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2655:1577":{"id":"b:2:3969-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1570":{"id":"0:1570","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[928,0],"end":[1000,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1572:1784","0:1574:886","0:1576:766","0:1578:1587","0:1579:780"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2843-0:2793:4067":{"id":"b:2:2843-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2628:1571":{"id":"b:2:3173-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13410:1887":{"id":"2:13410:1887","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:15845:4421","self::pattern":"2:12997:1556","prim@char":"1:15839:4416","`DoubleEndedIterator`":"2:8411:120","str::rsplit":"1:15845:4421"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49320:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2694:1575":{"id":"b:2:2846-0:2694:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3064:397":{"id":"0:3064:397","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2021:2045":{"id":"0:2021:2045","crate_id":0,"name":"CompiledTooBig","span":{"filename":"src/error.rs","begin":[11,4],"end":[11,25]},"visibility":"default","docs":"The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"}]}},"2:13431:62046":{"id":"2:13431:62046","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3339:4810":{"id":"2:3339:4810","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:255"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:2637:1566":{"id":"b:2:3184-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3343:4814":{"id":"2:3343:4814","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3345:1335"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1555:909":{"id":"0:1555:909","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[827,4],"end":[845,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2642":{"id":"0:2642","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[715,9],"end":[715,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2645:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8367:151":{"id":"2:8367:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8368:2004","2:8369:3372","2:8370:755"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9223:3225-0:3031:1566":{"id":"a:2:9223:3225-0:3031:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1632":{"id":"0:1632","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1145,0],"end":[1152,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1635:2004","0:1636:909"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22812:5963":{"id":"2:22812:5963","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22802:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1459:1564":{"id":"0:1459:1564","crate_id":0,"name":"escape","span":{"filename":"src/re_unicode.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Escapes all regular expression meta characters in `text`.\n\nThe string returned may be safely used as a literal in a regular\nexpression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3252:209-0:2594:3534":{"id":"a:2:3252:209-0:2594:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2655:1577":{"id":"a:2:3252:209-0:2655:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3969-0:2674:1565":{"id":"b:2:3969-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2764:755":{"id":"0:2764:755","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8367:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2532:648":{"id":"0:2532:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8330:4631":{"id":"2:8330:4631","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8332:5386"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13463:17617":{"id":"2:13463:17617","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3472:4695":{"id":"2:3472:4695","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3473:534"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3459:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3179-0:2954:1570":{"id":"b:2:3179-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2779:4107":{"id":"0:2779:4107","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2978:1573":{"id":"b:5:787-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3252:209-0:2681:1578":{"id":"a:2:3252:209-0:2681:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2805:4100":{"id":"b:2:3169-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[33,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:438:1559","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:448:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3143:149":{"id":"2:3143:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3145:2096"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1156:1887":{"id":"0:1156:1887","crate_id":0,"name":"split","span":{"filename":"src/re_bytes.rs","begin":[317,4],"end":[319,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&[u8]> = re.split(b\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\n    &b\"a\"[..], &b\"b\"[..], &b\"c\"[..], &b\"d\"[..], &b\"e\"[..],\n]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2654:648":{"id":"0:2654:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[738,9],"end":[738,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2983:1567":{"id":"a:2:3281:4878-0:2983:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13487:4740":{"id":"2:13487:4740","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15839:4416"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49637:4860","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2694:1575":{"id":"0:2694:1575","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_bytes.rs","begin":[1162,0],"end":[1162,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2694:1575","a:2:3252:209-0:2694:1575","a:2:3240:200-0:2694:1575","a:2:9223:3225-0:2694:1575","a:2:3281:4878-0:2694:1575","b:2:2843-0:2694:1575","b:2:3169-0:2694:1575","b:2:3173-0:2694:1575","b:2:3184-0:2694:1575","b:2:3969-0:2694:1575","b:2:2846-0:2694:1575","b:2:3179-0:2694:1575","0:2699","0:1307"]}},"2:3779:4835":{"id":"2:3779:4835","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2846-0:2646:1576":{"id":"b:2:2846-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:2800:4101":{"id":"b:2:2843-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2528:3454":{"id":"b:2:3184-0:2528:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2594:3534":{"id":"b:2:3184-0:2594:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2954:1570":{"id":"0:2954:1570","crate_id":0,"name":"Match","span":{"filename":"src/re_unicode.rs","begin":[29,0],"end":[33,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1460","a:2:9222:3226-0:2954:1570","a:2:3252:209-0:2954:1570","a:2:3240:200-0:2954:1570","a:2:9223:3225-0:2954:1570","a:2:3281:4878-0:2954:1570","b:2:2843-0:2954:1570","b:2:3169-0:2954:1570","b:2:3173-0:2954:1570","b:2:3184-0:2954:1570","b:2:3969-0:2954:1570","b:2:2846-0:2954:1570","b:2:3179-0:2954:1570","b:5:787-0:2954:1570","0:2959","0:2961","0:2964","0:2967","0:2969","0:2972","0:2974","0:1467","0:1470"]}},"0:2844:2738":{"id":"0:2844:2738","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:3040:1571":{"id":"b:2:3179-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1600":{"id":"0:1600","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1062,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3544:3541","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1603:171","0:1604:740"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3173-0:2907:4100":{"id":"b:2:3173-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1547:909":{"id":"0:1547:909","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[789,4],"end":[807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2694:1575":{"id":"a:2:9223:3225-0:2694:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9222:3226-0:2890:2885":{"id":"a:2:9222:3226-0:2890:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2637:1566":{"id":"a:2:3252:209-0:2637:1566","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:3040:1571":{"id":"0:3040:1571","crate_id":0,"name":"Matches","span":{"filename":"src/re_unicode.rs","begin":[1143,0],"end":[1143,69]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a `Match` value. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:3040:1571","a:2:3252:209-0:3040:1571","a:2:3240:200-0:3040:1571","a:2:9223:3225-0:3040:1571","a:2:3281:4878-0:3040:1571","b:2:2843-0:3040:1571","b:2:3169-0:3040:1571","b:2:3173-0:3040:1571","b:2:3184-0:3040:1571","b:2:3969-0:3040:1571","b:2:8371-0:3040:1571","b:2:2846-0:3040:1571","b:2:3179-0:3040:1571","0:3045","0:1632","0:1638"]}},"0:2753:1771":{"id":"0:2753:1771","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["regex_index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2628:1571":{"id":"b:2:2846-0:2628:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2655:1577":{"id":"0:2655:1577","crate_id":0,"name":"SplitN","span":{"filename":"src/re_bytes.rs","begin":[777,0],"end":[780,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2655:1577","a:2:3252:209-0:2655:1577","a:2:3240:200-0:2655:1577","a:2:9223:3225-0:2655:1577","a:2:3281:4878-0:2655:1577","b:2:2843-0:2655:1577","b:2:3169-0:2655:1577","b:2:3173-0:2655:1577","b:2:3184-0:2655:1577","b:2:3969-0:2655:1577","b:2:8371-0:2655:1577","b:2:2846-0:2655:1577","b:2:3179-0:2655:1577","0:2660","0:1217","0:1223"]}},"b:2:3184-0:2890:2885":{"id":"b:2:3184-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2906:648":{"id":"0:2906:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2686":{"id":"0:2686","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1086,9],"end":[1086,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2689:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10897:203":{"id":"2:10897:203","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10899:171","2:10900:1784","2:10901:11111","2:10902:2372","2:10903:58497","2:10904:740","2:10905:741"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10888:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2609":{"id":"0:2609","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,27]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2611:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2655:1577":{"id":"b:2:3179-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6671:5982":{"id":"1:6671:5982","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6672:56631","1:6673:10275","1:6674:10276","1:6675:10278","1:6676:10277","1:6677:10279","1:6678:10280","1:6679:10282","1:6680:8161","1:6681:10285","1:6682:10286","1:6683:10287","1:6684:10288","1:6685:10289","1:6686:10290","1:6687:10283","1:6688:10284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:2993:1576":{"id":"b:2:3173-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1531":{"id":"0:1531","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[753,0],"end":[770,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:1533:2004","0:1534:909","0:1537:3818","0:1538:484"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2681:1578":{"id":"b:2:3179-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2793:4067":{"id":"b:2:3173-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1667":{"id":"0:1667","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1264,0],"end":[1272,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:1669:3757","0:1670:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:4878-0:1243:1568":{"id":"a:2:3281:4878-0:1243:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3184-0:2902:4101":{"id":"b:2:3184-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:2805:4100":{"id":"b:2:3969-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2775:909":{"id":"0:2775:909","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2862":{"id":"0:2862","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:2864:3372","0:2865:2004","0:2866:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1197":{"id":"0:1197","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[706,0],"end":[706,49]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1537:3818":{"id":"0:1537:3818","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[763,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2694:1575":{"id":"a:2:3240:200-0:2694:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3240:200-0:2983:1567":{"id":"a:2:3240:200-0:2983:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3252:209-0:2017:127":{"id":"a:2:3252:209-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:3018:1578":{"id":"b:5:787-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1248":{"id":"0:1248","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[918,0],"end":[990,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1250:1784","0:1252:886","0:1254:766","0:1256:1587","0:1257:780"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2551:2742":{"id":"0:2551:2742","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3058:1572":{"id":"0:3058:1572","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_unicode.rs","begin":[1301,0],"end":[1301,37]},"visibility":"public","docs":"`NoExpand` indicates literal string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:3061:1518"],"impls":["a:2:9222:3226-0:3058:1572","a:2:3252:209-0:3058:1572","a:2:3240:200-0:3058:1572","a:2:9223:3225-0:3058:1572","a:2:3281:4878-0:3058:1572","b:2:2843-0:3058:1572","b:2:3169-0:3058:1572","b:2:3173-0:3058:1572","b:2:3184-0:3058:1572","b:2:3969-0:3058:1572","b:2:2846-0:3058:1572","b:2:3179-0:3058:1572","b:5:787-0:3058:1572","0:3062","0:3065","0:1677"]}},"2:13451:62052":{"id":"2:13451:62052","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4972:6060":{"id":"1:4972:6060","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4973:3373","1:4974:58421"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3969-0:1565:1568":{"id":"b:2:3969-0:1565:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2681:1578":{"id":"b:2:3173-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3011:1565":{"id":"0:3011:1565","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_unicode.rs","begin":[870,0],"end":[870,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1561","a:2:9222:3226-0:3011:1565","a:2:3252:209-0:3011:1565","a:2:3240:200-0:3011:1565","a:2:9223:3225-0:3011:1565","a:2:3281:4878-0:3011:1565","b:2:2843-0:3011:1565","b:2:3169-0:3011:1565","b:2:3173-0:3011:1565","b:2:3184-0:3011:1565","b:2:3969-0:3011:1565","b:2:2846-0:3011:1565","b:2:3179-0:3011:1565","b:5:787-0:3011:1565","0:3014","0:3016"]}},"a:2:3281:4878-0:2902:4101":{"id":"a:2:3281:4878-0:2902:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3007":{"id":"0:3007","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3010:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3169-0:3018:1578":{"id":"b:2:3169-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2911":{"id":"0:2911","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2913:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3182:127":{"id":"2:3182:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"a:2:9223:3225-0:2674:1565":{"id":"a:2:9223:3225-0:2674:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2800:4101":{"id":"b:2:3169-0:2800:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9223:3225-0:2561:3534":{"id":"a:2:9223:3225-0:2561:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10276:5319":{"id":"2:10276:5319","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10277:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2580:907":{"id":"0:2580:907","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3137:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:2890:2885":{"id":"b:2:3173-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2599:1570":{"id":"b:2:3173-0:2599:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:7891:4617":{"id":"2:7891:4617","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7892:61645","2:7893:61646","2:7894:2346","2:7895:61642","2:7896:61647","2:7897:61644","2:7898:61643"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13472:62059":{"id":"2:13472:62059","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12997:1556","prim@char":"1:15839:4416"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2528:3454":{"id":"a:2:3240:200-0:2528:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13457:62056":{"id":"2:13457:62056","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:12997:1556","prim@char":"1:15839:4416"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13027:4844","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13425:3680":{"id":"2:13425:3680","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:12997:1556","prim@char":"1:15839:4416","str::rsplitn":"1:15845:4421"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49424:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13419:62044":{"id":"2:13419:62044","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:15839:4416","str::rsplit_terminator":"1:15845:4421","self::pattern":"2:12997:1556","str::split":"1:15845:4421","`DoubleEndedIterator`":"2:8411:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49370:4870","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2978:1573":{"id":"a:2:9223:3225-0:2978:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3969-0:2561:3534":{"id":"b:2:3969-0:2561:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1499:3680":{"id":"0:1499:3680","crate_id":0,"name":"splitn","span":{"filename":"src/re_unicode.rs","begin":[394,4],"end":[400,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&str> = re.splitn(\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec!(\"Hey\", \"How\", \"are you?\"));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2895:4067":{"id":"b:2:3179-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13482:56017":{"id":"2:13482:56017","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2674:1565":{"id":"a:2:3240:200-0:2674:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2895:4067":{"id":"0:2895:4067","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2853","a:2:9222:3226-0:2895:4067","a:2:3252:209-0:2895:4067","a:2:3240:200-0:2895:4067","a:2:9223:3225-0:2895:4067","a:2:3281:4878-0:2895:4067","b:2:2843-0:2895:4067","b:2:3169-0:2895:4067","b:2:3173-0:2895:4067","b:2:3184-0:2895:4067","b:2:3969-0:2895:4067","b:2:2846-0:2895:4067","b:2:3179-0:2895:4067","b:5:787-0:2895:4067","0:2898","0:2900","0:2858","0:2862"]}},"0:1321":{"id":"0:1321","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1193,0],"end":[1201,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:1322:3757","0:1323:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2846-0:2890:2885":{"id":"b:2:2846-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2546":{"id":"0:2546","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2533:1581","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2547:907","0:2550:2749","0:2551:2742","0:2552:2743","0:2553:2744","0:2554:2745","0:2555:2746","0:2556:1535","0:2557:2741","0:2558:1824","0:2559:2130","0:2560:2748"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:3226-0:2805:4100":{"id":"a:2:9222:3226-0:2805:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3065":{"id":"0:3065","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3067:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1484:2236":{"id":"0:1484:2236","crate_id":0,"name":"is_match","span":{"filename":"src/re_unicode.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2522:2746":{"id":"0:2522:2746","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:2890:2885":{"id":"b:2:3169-0:2890:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2983:1567":{"id":"b:2:3179-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"21:1184:4728":{"id":"21:1184:4728","crate_id":21,"name":"StateID","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:1185:677","21:1186:63838","21:1187:63839"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"21:1178:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10493:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2928:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13389:34831":{"id":"2:13389:34831","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15845:4421"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49603:4850","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2520:2744":{"id":"0:2520:2744","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:446:2607":{"id":"0:446:2607","crate_id":0,"name":"description","span":{"filename":"src/error.rs","begin":[24,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:3040:1571":{"id":"b:2:2843-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1286:171":{"id":"0:1286:171","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1068,4],"end":[1068,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"b:2:2843-0:2637:1566":{"id":"b:2:2843-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:2623:1573":{"id":"b:2:3969-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:2993:1576":{"id":"b:2:2843-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2907:4100":{"id":"a:2:3240:200-0:2907:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2846-0:2528:3454":{"id":"b:2:2846-0:2528:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2017:127":{"id":"a:2:3240:200-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1574:886":{"id":"0:1574:886","crate_id":0,"name":"name","span":{"filename":"src/re_unicode.rs","begin":[954,4],"end":[956,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2800:4101":{"id":"a:2:3240:200-0:2800:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13363:62038":{"id":"2:13363:62038","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2017:127":{"id":"b:2:2846-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:1565:1568":{"id":"b:2:2846-0:1565:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:4878-0:2788:2885":{"id":"a:2:3281:4878-0:2788:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2597":{"id":"0:2597","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2566:1561","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2598:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3252:209-0:2993:1576":{"id":"a:2:3252:209-0:2993:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1546:2004":{"id":"0:1546:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[787,4],"end":[787,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"0:2587:2745":{"id":"0:2587:2745","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1226":{"id":"0:1226","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[821,0],"end":[838,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_fold","gt","inspect","take_while","intersperse","cloned","collect","zip","last","eq_by","skip","rposition","try_for_each","rev","try_collect","map_while","intersperse_with","take","next_chunk","position","ge","cmp","eq","peekable","is_sorted","unzip","fold","find","collect_into","scan","for_each","sum","size_hint","advance_by","count","min","enumerate","any","min_by","partial_cmp","lt","is_sorted_by","all","cycle","reduce","partition","flat_map","filter","nth","min_by_key","is_sorted_by_key","product","try_reduce","partition_in_place","ne","flatten","filter_map","step_by","max","max_by","__iterator_get_unchecked","cmp_by","le","find_map","is_partitioned","map","fuse","copied","skip_while","chain","by_ref","max_by_key","partial_cmp_by","try_find"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:1228:2004","0:1229:909","0:1232:3818","0:1233:484"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1302:3757":{"id":"0:1302:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1119,4],"end":[1119,73]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.extend(&caps[0])`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3169-0:3049:1575":{"id":"b:2:3169-0:3049:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2674:1565":{"id":"b:2:3179-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1337:3757":{"id":"0:1337:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1236,4],"end":[1238,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2793:4067":{"id":"a:2:9223:3225-0:2793:4067","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9223:3225-0:2983:1567":{"id":"a:2:9223:3225-0:2983:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13384:58517":{"id":"2:13384:58517","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15845:4421"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1651:3754":{"id":"0:1651:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1219,4],"end":[1221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:3049:1575":{"id":"b:2:3969-0:3049:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2983:1567":{"id":"b:5:787-0:2983:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:2497:3454":{"id":"a:2:3240:200-0:2497:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1670:3754":{"id":"0:1670:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1269,4],"end":[1271,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1136:648":{"id":"0:1136:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[89,4],"end":[91,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1256:1587":{"id":"0:1256:1587","crate_id":0,"name":"expand","span":{"filename":"src/re_bytes.rs","begin":[978,4],"end":[980,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of valid UTF-8 bytes is permitted. If the\nsequence does not refer to a capture group name in the corresponding\nregex, then it is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["replacement",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:3049:1575":{"id":"a:2:9222:3226-0:3049:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9222:3226-0:2788:2885":{"id":"a:2:9222:3226-0:2788:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2677":{"id":"0:2677","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[859,9],"end":[859,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2678:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1677":{"id":"0:1677","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1303,0],"end":[1311,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1679:3757","0:1680:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1572:1784":{"id":"0:1572:1784","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[948,4],"end":[950,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(\"\", |m| m.as_str());\nlet text2 = caps.get(2).map_or(\"\", |m| m.as_str());\nassert_eq!(text1, \"123\");\nassert_eq!(text2, \"\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:2788:2885":{"id":"b:2:3969-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3169-0:2623:1573":{"id":"b:2:3169-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2907:4100":{"id":"b:2:3184-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:2907:4100":{"id":"b:2:2846-0:2907:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2699":{"id":"0:2699","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1161,9],"end":[1161,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:2702:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:3031:1566":{"id":"b:2:3179-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13022:4846":{"id":"2:13022:4846","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13024:4107","2:13025:61162","2:13026:61163"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13016:3129","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13390:6974":{"id":"2:13390:6974","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49574:4862","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:2954:1570":{"id":"b:2:2843-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3169-0:2681:1578":{"id":"b:2:3169-0:2681:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13455:62054":{"id":"2:13455:62054","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:3002:1577":{"id":"a:2:3252:209-0:3002:1577","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2028":{"id":"0:2028","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:438:1559","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3248:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8371-0:2655:1577":{"id":"b:2:8371-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2916:648":{"id":"0:2916:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1236":{"id":"0:1236","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[842,0],"end":[842,46]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:3011:1565":{"id":"b:5:787-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:2528:3454":{"id":"b:2:2843-0:2528:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1654:3757":{"id":"0:1654:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1225,4],"end":[1227,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2738":{"id":"0:2738","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2739:907","0:2742:2738","0:2744:2236","0:2746:1731","0:2748:780","0:2749:1773","0:2750:3535"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6096:62698":{"id":"5:6096:62698","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3183:1395":{"id":"2:3183:1395","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13466:58533":{"id":"2:13466:58533","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8846:4628":{"id":"2:8846:4628","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8363:136":{"id":"2:8363:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8365:672"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3075:6341":{"id":"2:3075:6341","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3074:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1473":{"id":"0:1473","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[138,0],"end":[143,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1474:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:3226-0:2703:1572":{"id":"a:2:9222:3226-0:2703:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:22961:18990":{"id":"2:22961:18990","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22962:9507","2:22963:60558","2:22964:60559"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22954:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2848:1756":{"id":"2:2848:1756","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2993:1576":{"id":"0:2993:1576","crate_id":0,"name":"Split","span":{"filename":"src/re_unicode.rs","begin":[781,0],"end":[784,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2993:1576","a:2:3252:209-0:2993:1576","a:2:3240:200-0:2993:1576","a:2:9223:3225-0:2993:1576","a:2:3281:4878-0:2993:1576","b:2:2843-0:2993:1576","b:2:3169-0:2993:1576","b:2:3173-0:2993:1576","b:2:3184-0:2993:1576","b:2:3969-0:2993:1576","b:2:8371-0:2993:1576","b:2:2846-0:2993:1576","b:2:3179-0:2993:1576","0:2998","0:1543","0:1548"]}},"b:2:3184-0:2655:1577":{"id":"b:2:3184-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9223:3225-0:2805:4100":{"id":"a:2:9223:3225-0:2805:4100","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5633:6058":{"id":"1:5633:6058","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5634:56361","1:5635:4919"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:2895:4067":{"id":"b:5:787-0:2895:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8436:3823":{"id":"2:8436:3823","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8437:780","2:8438:1773"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6078:2443":{"id":"5:6078:2443","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2703:1572":{"id":"a:2:3281:4878-0:2703:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13016:3129":{"id":"2:13016:3129","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13018:3053","2:13019:909","2:13020:61592","2:13021:61593"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1301:1574":{"id":"0:1301:1574","crate_id":0,"name":"Replacer","span":{"filename":"src/re_bytes.rs","begin":[1111,0],"end":[1156,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a byte\nstring.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&[u8]` along with other\nvariants of bytes types and `FnMut(&Captures) -> Vec<u8>` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<[u8]>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1302:3757","0:1303:3754","0:1305:3943"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1307","0:1313","0:1317","0:1321","0:1324","0:1328","0:1334","0:1338"]}},"0:1663":{"id":"0:1663","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1254,0],"end":[1262,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"items":["0:1665:3757","0:1666:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1541":{"id":"0:1541","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[774,0],"end":[774,46]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2846-0:2954:1570":{"id":"b:2:2846-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:2646:1576":{"id":"b:2:3969-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:2623:1573":{"id":"b:2:2846-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2887:648":{"id":"0:2887:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2897:124":{"id":"2:2897:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2846-0:2902:4101":{"id":"b:2:2846-0:2902:4101","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2805:4100":{"id":"b:2:3184-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3329:4808":{"id":"2:3329:4808","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3331:171","2:3332:1089"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2586:2744":{"id":"0:2586:2744","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5761:5989":{"id":"1:5761:5989","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5762:56343","1:5763:56344","1:5764:56345","1:5765:56346"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2557:2741":{"id":"0:2557:2741","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14183:5413":{"id":"2:14183:5413","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14184:58182","2:14185:58183","2:14186:58184","2:14187:58185","2:14188:58186","2:14189:58187","2:14190:3943"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:2623:1573":{"id":"a:2:3252:209-0:2623:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1213:909":{"id":"0:1213:909","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[747,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1316:3754":{"id":"0:1316:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1178,4],"end":[1180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:3040:1571":{"id":"b:2:2846-0:3040:1571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:1243:1568":{"id":"b:2:2843-0:1243:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2774:2004":{"id":"0:2774:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"1:5639:6056":{"id":"1:5639:6056","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5640:7431","1:5641:2772"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10545:5964","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3169-0:2017:127":{"id":"b:2:3169-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1130":{"id":"0:1130","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[60,0],"end":[64,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45737:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"items":["0:1132:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2565:648":{"id":"0:2565:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3017:648":{"id":"0:3017:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12444:6691":{"id":"2:12444:6691","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12445:2004","2:12446:61639"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4669:5309":{"id":"1:4669:5309","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4670:2611","1:4671:55852","1:4673:55853","1:4674:6897","1:4675:55854","1:4676:55855","1:4677:5191","1:4686:3943"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1144:2236":{"id":"0:1144:2236","crate_id":0,"name":"is_match","span":{"filename":"src/re_bytes.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13 ASCII word\nbytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13413:34698":{"id":"2:13413:34698","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12789:4851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1105,0],"end":[1105,63]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:8436:3823","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2674:1565":{"id":"b:5:787-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1525":{"id":"0:1525","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[712,0],"end":[742,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1526:295","0:1527:2895","0:1528:3798","0:1529:3642"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2526:2130":{"id":"0:2526:2130","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2646:1576":{"id":"b:2:3184-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1475":{"id":"0:1475","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[145,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1476:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8371-0:2646:1576":{"id":"b:2:8371-0:2646:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3184-0:3011:1565":{"id":"b:2:3184-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1133":{"id":"0:1133","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[80,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1134:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3252:209-0:3058:1572":{"id":"a:2:3252:209-0:3058:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13396:58531":{"id":"2:13396:58531","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3061:1518":{"id":"0:3061:1518","crate_id":0,"name":"0","span":{"filename":"src/re_unicode.rs","begin":[1301,24],"end":[1301,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"a:2:3240:200-0:2623:1573":{"id":"a:2:3240:200-0:2623:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3184-0:2788:2885":{"id":"b:2:3184-0:2788:2885","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2805:4100":{"id":"b:2:3173-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1463:588":{"id":"0:1463:588","crate_id":0,"name":"end","span":{"filename":"src/re_unicode.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:2954:1570":{"id":"b:2:3184-0:2954:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3015:397":{"id":"0:3015:397","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2805:4100":{"id":"b:5:787-0:2805:4100","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13453:62053":{"id":"2:13453:62053","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2902:4101":{"id":"a:2:9223:3225-0:2902:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:4878-0:2681:1578":{"id":"a:2:3281:4878-0:2681:1578","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'t","bounds":[{"outlives":"'c"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2651":{"id":"0:2651","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[738,9],"end":[738,14]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2654:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2623:1573":{"id":"b:5:787-0:2623:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3756","5:790:2564","5:791:5394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1636:909":{"id":"0:1636:909","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1148,4],"end":[1151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:2628:1571":{"id":"a:2:9222:3226-0:2628:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10266:5315":{"id":"2:10266:5315","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10267:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2742:2738":{"id":"0:2742:2738","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2809":{"id":"0:2809","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4100","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2811:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3173-0:2674:1565":{"id":"b:2:3173-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2594:3534":{"id":"b:2:3179-0:2594:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1515:2775":{"id":"0:1515:2775","crate_id":0,"name":"find_at","span":{"filename":"src/re_unicode.rs","begin":[648,4],"end":[657,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:3226-0:2623:1573":{"id":"a:2:9222:3226-0:2623:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:3031:1566":{"id":"b:2:3169-0:3031:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3173-0:2978:1573":{"id":"b:2:3173-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1673":{"id":"0:1673","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1282,0],"end":[1290,1]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"generic","inner":"T"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3137:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"generic","inner":"F"},"items":["0:1676:3757"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2840":{"id":"0:2840","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2841:907","0:2844:2738","0:2846:2236","0:2848:1731","0:2850:780","0:2851:1773","0:2852:3535"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2515":{"id":"0:2515","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2502:1535","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2516:907","0:2517:2749","0:2518:2742","0:2519:2743","0:2520:2744","0:2521:2745","0:2522:2746","0:2523:1535","0:2524:2741","0:2525:1824","0:2526:2130","0:2527:2748"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2497:3454":{"id":"0:2497:3454","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2484","a:2:9222:3226-0:2497:3454","a:2:3252:209-0:2497:3454","a:2:3240:200-0:2497:3454","a:2:9223:3225-0:2497:3454","a:2:3281:4878-0:2497:3454","b:2:2843-0:2497:3454","b:2:3169-0:2497:3454","b:2:3173-0:2497:3454","b:2:3184-0:2497:3454","b:2:3969-0:2497:3454","b:2:2846-0:2497:3454","b:2:3179-0:2497:3454","0:2500"]}},"a:2:3252:209-0:2628:1571":{"id":"a:2:3252:209-0:2628:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:3281:4878-0:2800:4101":{"id":"a:2:3281:4878-0:2800:4101","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3049:1575":{"id":"0:3049:1575","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_unicode.rs","begin":[1213,0],"end":[1213,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:3049:1575","a:2:3252:209-0:3049:1575","a:2:3240:200-0:3049:1575","a:2:9223:3225-0:3049:1575","a:2:3281:4878-0:3049:1575","b:2:2843-0:3049:1575","b:2:3169-0:3049:1575","b:2:3173-0:3049:1575","b:2:3184-0:3049:1575","b:2:3969-0:3049:1575","b:2:2846-0:3049:1575","b:2:3179-0:3049:1575","0:3054","0:1647"]}},"2:3347:4812":{"id":"2:3347:4812","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:880"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:2793:4067":{"id":"b:2:3179-0:2793:4067","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1341:3754":{"id":"0:1341:3754","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1257,4],"end":[1259,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1603:171":{"id":"0:1603:171","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1063,4],"end":[1063,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"a:2:3281:4878-0:2646:1576":{"id":"a:2:3281:4878-0:2646:1576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2792:397":{"id":"0:2792:397","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1528:3798":{"id":"0:1528:3798","crate_id":0,"name":"captures_len","span":{"filename":"src/re_unicode.rs","begin":[724,4],"end":[726,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1597:740":{"id":"0:1597:740","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1043,4],"end":[1047,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1562:1784":{"id":"0:1562:1784","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13481:56016":{"id":"2:13481:56016","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1513:2773":{"id":"0:1513:2773","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_unicode.rs","begin":[624,4],"end":[630,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2528:3454":{"id":"b:2:3179-0:2528:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3318:4806":{"id":"2:3318:4806","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:171","2:3321:879"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3483:3293":{"id":"2:3483:3293","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3484:567"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9222:3226-0:3040:1571":{"id":"a:2:9222:3226-0:3040:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1557":{"id":"0:1557","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[852,0],"end":[852,48]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2843-0:2978:1573":{"id":"b:2:2843-0:2978:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1573","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2798":{"id":"0:2798","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1535","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2799:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1223":{"id":"0:1223","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[810,0],"end":[810,48]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1228:2004":{"id":"0:1228:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[822,4],"end":[822,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}},"0:2900":{"id":"0:2900","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4067","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2901:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2843-0:3018:1578":{"id":"b:2:2843-0:3018:1578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2593:2748":{"id":"0:2593:2748","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:4878-0:2561:3534":{"id":"a:2:3281:4878-0:2561:3534","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:4878","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13440:62048":{"id":"2:13440:62048","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12997:1556","str::matches":"1:15845:4421","prim@char":"1:15839:4416","`DoubleEndedIterator`":"2:8411:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49542:4866","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2646:1576":{"id":"0:2646:1576","crate_id":0,"name":"Split","span":{"filename":"src/re_bytes.rs","begin":[739,0],"end":[742,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3226-0:2646:1576","a:2:3252:209-0:2646:1576","a:2:3240:200-0:2646:1576","a:2:9223:3225-0:2646:1576","a:2:3281:4878-0:2646:1576","b:2:2843-0:2646:1576","b:2:3169-0:2646:1576","b:2:3173-0:2646:1576","b:2:3184-0:2646:1576","b:2:3969-0:2646:1576","b:2:8371-0:2646:1576","b:2:2846-0:2646:1576","b:2:3179-0:2646:1576","0:2651","0:1209","0:1214"]}},"0:1220:2004":{"id":"0:1220:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[783,4],"end":[783,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}},"0:2869:909":{"id":"0:2869:909","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2528:3454":{"id":"a:2:9223:3225-0:2528:3454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2689:397":{"id":"0:2689:397","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1086,9],"end":[1086,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1578","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2905":{"id":"0:2905","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1580","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2906:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:5723","1:2579:4400","1:2580:2607","1:2581:5724","1:2582:5725"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3335:4807":{"id":"2:3335:4807","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3336:171","2:3337:900"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2865:2004":{"id":"0:2865:2004","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:2679":{"id":"0:2679","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[859,16],"end":[859,21]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2680:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2598:648":{"id":"0:2598:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1469:669":{"id":"0:1469:669","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:2017:127":{"id":"b:2:3173-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2974":{"id":"0:2974","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1404:1563","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2976:593","0:2977:894"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2583:2749":{"id":"0:2583:2749","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:2564":{"id":"5:790:2564","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1328":{"id":"0:1328","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1213,0],"end":[1221,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}},"items":["0:1330:3757","0:1331:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1330:3757":{"id":"0:1330:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1214,4],"end":[1216,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2496:2748":{"id":"0:2496:2748","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:2890:2885":{"id":"a:2:3240:200-0:2890:2885","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2885","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3173-0:2528:3454":{"id":"b:2:3173-0:2528:3454","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1125:1304":{"id":"0:1125:1304","crate_id":0,"name":"start","span":{"filename":"src/re_bytes.rs","begin":[30,4],"end":[32,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:2017:127":{"id":"b:2:2843-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3226-0:2599:1570":{"id":"a:2:9222:3226-0:2599:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:2993:1576":{"id":"b:2:3169-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:2096"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:2674:1565":{"id":"b:2:3184-0:2674:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1214":{"id":"0:1214","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[768,0],"end":[768,47]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8843:3540","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1195:909":{"id":"0:1195:909","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[700,4],"end":[703,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1570","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1465:295":{"id":"0:1465:295","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[57,4],"end":[59,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1462:1304":{"id":"0:1462:1304","crate_id":0,"name":"start","span":{"filename":"src/re_unicode.rs","begin":[38,4],"end":[40,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2531":{"id":"0:2531","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2502:1535","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3454","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2532:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1604:740":{"id":"0:1604:740","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1065,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3048:648":{"id":"0:3048:648","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6099:56014":{"id":"5:6099:56014","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15845:4421"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4750:5462":{"id":"2:4750:5462","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4751:2004","2:4752:61516","2:4753:3818"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3140:74":{"id":"2:3140:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3142:5345"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8375:755":{"id":"2:8375:755","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1642:3757":{"id":"0:1642:3757","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1170,4],"end":[1170,72]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.push_str(caps.get(0).unwrap().as_str())`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2877:909":{"id":"0:2877:909","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:3011:1565":{"id":"b:2:3179-0:3011:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8371-0:2993:1576":{"id":"b:2:8371-0:2993:1576","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8367:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1576","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8373:2004","2:8374:3372","2:8375:755"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:13460:62057":{"id":"2:13460:62057","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15839:4416","self::pattern":"2:12997:1556"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:2594:3534":{"id":"b:2:2846-0:2594:3534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3534","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1317":{"id":"0:1317","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1183,0],"end":[1191,1]},"visibility":{"restricted":{"parent":"0:1068:1582","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1574","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:1319:3757","0:1320:3754"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2843-0:2655:1577":{"id":"b:2:2843-0:2655:1577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1577","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3305"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2678:397":{"id":"0:2678:397","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[859,9],"end":[859,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1565","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3225-0:2628:1571":{"id":"a:2:9223:3225-0:2628:1571","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3225","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1571","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2846-0:2637:1566":{"id":"b:2:2846-0:2637:1566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:4838","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1566","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:1756"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"17:11822:8217":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:14499:6023":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:13520:8641":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:4401:9974":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:5152:4689":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:13582:8656":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"21:1635:4725":{"crate_id":21,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"1:5916:6294":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"12:840:6096":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:9186:7355":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:5469:10197":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:10546:5909":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:15075:6085":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:10211:8033":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:605:9578":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9088:48869":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:10270:5317":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:10820:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:4506:8812":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:11986:56085":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"18:152:4757":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:13465:8625":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:15821:56399":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:9809:63232":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:47913:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:51679:9241":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"18:169:4758":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:49220:5945":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:7928:6438":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"0:2637:1566":{"crate_id":0,"path":["regex","bytes","CaptureMatches"],"kind":"struct"},"2:50202:191":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:599:9575":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"12:1159:6924":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:7493:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"21:1493:7763":{"crate_id":21,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"17:9943:63234":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:11250:9380":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:5199:393":{"crate_id":2,"path":["core","char"],"kind":"module"},"2:3153:216":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:13163:8550":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:7406:7113":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:4707:6406":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:51236:6446":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:11738:8189":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"20:2669:1993":{"crate_id":20,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"17:10331:7403":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:8846:4628":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:22954:5964":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:46653:4656":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"20:346:7456":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"2:47703:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:45913:6438":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"21:1894:7796":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"0:1243:1568":{"crate_id":0,"path":["regex","bytes","Captures"],"kind":"struct"},"1:6671:5982":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:10403:7399":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:15864:4438":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:48359:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:13884:8753":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:3472:4695":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:1623:6106":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:9245:7348":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:1572:9621":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"22:977:5863":{"crate_id":22,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:12741:8383":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"21:1423:6194":{"crate_id":21,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"1:2923:169":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:9404:7917":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4046:9847":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:1522:6103":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:10264:5314":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"22:905:63237":{"crate_id":22,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:13772:8724":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:4112:9881":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:4823:8821":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"21:1825:63853":{"crate_id":21,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"17:10844:7403":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:10988:8098":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:9160:9320":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:46591:4651":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"0:2628:1571":{"crate_id":0,"path":["regex","bytes","Matches"],"kind":"struct"},"2:3149:217":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:5815:7022":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:5938:6296":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:10081:7401":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:8181:3372":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:11231:7377":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:88:41937":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:2866:7276":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:13477:8626":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:50032:6573":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"22:1042:5868":{"crate_id":22,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:15853:4427":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:6208:7156":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:11118:6062":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:9886:8017":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"12:354:9504":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:11584:6154":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:1156:9306":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:5068:4686":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:14880:6177":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:11344:6263":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:38669:5714":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"22:153:4757":{"crate_id":22,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"22:1005:5865":{"crate_id":22,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"21:1383:5726":{"crate_id":21,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"1:8724:4554":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:6881:10398":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:10266:5315":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:10649:6110":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"16:7870:7116":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:9841:7658":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"0:2983:1567":{"crate_id":0,"path":["regex","CaptureNames"],"kind":"struct"},"21:1801:7781":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"17:13377:8602":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:1708:9714":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"22:1061:5869":{"crate_id":22,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:11060:6025":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:6773:5966":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:563:9555":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"20:3132:1937":{"crate_id":20,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"9:234:6818":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:51069:6477":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:10106:7447":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13497:8633":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:13296:8580":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:4386:8808":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:1680:184":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:670:42335":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"5:3834:7612":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:8843:3540":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"0:2978:1573":{"crate_id":0,"path":["regex","Regex"],"kind":"struct"},"2:10262:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:3978:9815":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:8143:4533":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:10420:7385":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:3075:6341":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:6949:7320":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"12:877:5416":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:7571:7106":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:11319:5946":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:13318:8584":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:46145:4678":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4145:9899":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"20:3246:1952":{"crate_id":20,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"21:1598:7520":{"crate_id":21,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"17:10543:8040":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:6091:10302":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"22:930:63238":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:7205:5418":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:14138:6044":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:6923:5974":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"9:157:6810":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"17:13933:8768":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:12652:6201":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:22605:61446":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:2257:6760":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:48496:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:14424:5976":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:11208:5939":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:10788:8084":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"22:820:5874":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:11126:1576":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:1613:3372":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:5:1480":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:3981:6194":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:5927:7026":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:2938:2626":{"crate_id":20,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"17:11482:8137":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"21:1517:7765":{"crate_id":21,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"6:6005:10274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:3074:5964":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:3146:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:7823:7121":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:24513:6605":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:13027:4844":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:5191:10071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:3043:61962":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"20:2951:1937":{"crate_id":20,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"17:9005:48866":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:9896:63233":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"21:1947:7807":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"17:11434:8122":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:12632:8372":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:1646:6108":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:12212:6117":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:4246:6048":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"6:5312:10133":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:10656:14902":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:15849:4423":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:49388:4869":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:9280:8006":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"21:1527:5828":{"crate_id":21,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"6:1729:6256":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:37512:4762":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:1655:6109":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:2843:7275":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:10268:5316":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:5882:7622":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:46552:4658":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:49061:6561":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"12:160:6928":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:15845:4421":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:10771:5983":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:3945:9802":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:8929:48865":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:6269:7159":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:7360:184":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:3323:4805":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:13119:8545":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:46189:5810":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:9222:3226":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"0:2623:1573":{"crate_id":0,"path":["regex","bytes","Regex"],"kind":"struct"},"6:1617:9652":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:48140:5317":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:1215:6757":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:2862:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:56055:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4164:9900":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:51990:6483":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:6028:10292":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"22:826:5871":{"crate_id":22,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:12659:8374":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:6357:7160":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:6910:10405":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"9:900:9512":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:11227:56083":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:5547:13904":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:9839:7403":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:15863:4437":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"21:1752:7774":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"16:6424:7162":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:46173:6506":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"14:47:9078":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:11871:5940":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"16:7119:7040":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"14:244:9082":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:4734:8818":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:9481:1099":{"crate_id":2,"path":["core","result"],"kind":"module"},"18:801:5863":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"20:3227:1999":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"20:2967:7819":{"crate_id":20,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"16:5580:7009":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"12:1688:6939":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:4517:10022":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:1236:7927":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:4300:9927":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:2754:7032":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:3181:6203":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"21:1887:7746":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"1:10919:6192":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:51864:6491":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:15862:4436":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:6032:7039":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:10489:7424":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"20:2113:6778":{"crate_id":20,"path":["regex_syntax","ast","Position"],"kind":"struct"},"6:1622:9654":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:11178:6187":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"21:1843:5875":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"2:47527:3373":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:5295:47290":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:4419:6045":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"20:3181:4578":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"18:754:63238":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:7626:5423":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"18:837:3129":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"20:2023:4576":{"crate_id":20,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"5:8346:10412":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:2166:5418":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:6870:10394":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:11904:5941":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"6:4331:9942":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:9719:8014":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:10557:58405":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"16:5736:7016":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:7604:5422":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:15589:7668":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"22:290:3107":{"crate_id":22,"path":["memchr","memchr","memchr2"],"kind":"function"},"1:4340:6228":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:8275:5896":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"12:1144:6108":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:52908:6480":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:10599:8047":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:13818:6173":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:1658:9684":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"18:644:5874":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"0:1565:1568":{"crate_id":0,"path":["regex","Captures"],"kind":"struct"},"2:46850:4621":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:48681:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"18:650:5871":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:1136:5719":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"20:3446:55416":{"crate_id":20,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"12:784:6099":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:48703:9223":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:32037:6656":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:51197:6461":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"20:3284:1972":{"crate_id":20,"path":["regex_syntax","hir","Group"],"kind":"struct"},"5:8130:61829":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"20:3220:4580":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"2:50099:6644":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"12:377:6931":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:49290:4855":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"20:2777:7495":{"crate_id":20,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"2:46314:5809":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:46581:4650":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:11678:8175":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:13547:8648":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:3320:7339":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:11628:8168":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:13073:6360":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:8430:5416":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"15:230:6946":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:46563:4649":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"12:747:3373":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:12315:7669":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"16:3392:7292":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:6305:6261":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:14449:5997":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"6:161:42004":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:13331:8590":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:12307:8296":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:10545:5964":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"0:3058:1572":{"crate_id":0,"path":["regex","NoExpand"],"kind":"struct"},"5:5604:1288":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"1:10677:6766":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:9440:7918":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6072:7092":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:49916:6371":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:22603:61444":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:15846:4422":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"21:1336:7505":{"crate_id":21,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"1:8959:4555":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:1194:11357":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"20:1970:7464":{"crate_id":20,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"16:3118:7291":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:9574:7379":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:10503:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:7918:11360":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:13834:11362":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"14:250:9083":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"20:3318:1985":{"crate_id":20,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"2:24025:41260":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"20:2992:55413":{"crate_id":20,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"2:32218:4613":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:22802:5964":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:12051:8252":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"21:1809:7785":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"2:49906:6370":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:12097:6133":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:10377:7392":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:49612:4849":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:49306:1791":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:5210:10073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:511:7814":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:3308:4804":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:3218:7283":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:10558:8043":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:3218:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:14:2611":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:4852:4697":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:7808:7624":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:7216:7180":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:2381:4696":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:52447:6472":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:10914:6191":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:11270:6245":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:8954:7357":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:5639:6056":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:2773:7301":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"20:2431:7482":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"1:1486:5416":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:4033:5716":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:47543:3372":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:13272:8578":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:1690:9707":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:5123:4687":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:6935:10408":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"11:0:4393":{"crate_id":11,"path":["adler"],"kind":"module"},"1:10802:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:56003:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:15852:4426":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:1492:6098":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:45783:188":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:53238:6452":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"0:0:1613":{"crate_id":0,"path":["regex"],"kind":"module"},"17:4157:7360":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:14183:5413":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"21:1934:7805":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"16:3549:8800":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:14962:9408":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:3918:9779":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:4:966":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:6744:7314":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:12521:8346":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:11039:6047":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"22:843:5876":{"crate_id":22,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:4028:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:5472:7003":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:7804:7119":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:11993:10495":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"16:6682:7123":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"12:853:6097":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:47661:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:3391:6091":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"12:2005:3373":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:6864:10393":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"18:885:5869":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:11363:5967":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:5197:10072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:7833:7628":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:15838:4415":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:55977:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9528:1791":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:1528:6104":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:7333:7128":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:3367:4815":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13963:8773":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"20:2197:1983":{"crate_id":20,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"2:49159:5926":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"22:708:7501":{"crate_id":22,"path":["memchr","cow","Imp"],"kind":"enum"},"2:49278:4858":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"21:1694:6444":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"2:3411:4825":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:9046:4548":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:13856:6175":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:14073:191":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"16:7146:7174":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:52230:6463":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11159:8107":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:9296:7915":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:3394:4821":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"18:820:5864":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:5410:6013":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:6731:7313":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:46412:7630":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"21:1656:7531":{"crate_id":21,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"17:11794:8207":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:2928:167":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"18:660:5875":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:15255:6250":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:11588:8163":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:7467:7111":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:5456:7000":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:5783:7612":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:7295:7127":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:1934:5416":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"1:9698:6237":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"1:9751:7657":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:15318:58406":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:47535:5453":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:3319:6212":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:45920:6439":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:38732:5305":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:10623:8049":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:4955:8825":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:5941:179":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:8314:6742":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"12:0:4394":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"16:6101:7105":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:51404:6485":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:45806:187":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"18:744:63235":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:6219:7157":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:12671:8375":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:13022:4846":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:11112:4862":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:1596:9638":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:3506:7287":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"20:3441:4572":{"crate_id":20,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"6:1676:9696":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:2840:4838":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:4033:9842":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11714:8185":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"20:1981:7465":{"crate_id":20,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"2:47398:3373":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"5:3889:6746":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:3459:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:12137:4542":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:14669:6178":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"19:117:9455":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:6543:6000":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:4262:9907":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:10274:5318":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:5379:10167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"21:1225:7501":{"crate_id":21,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"21:1686:1600":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"17:10149:8017":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:4932:4679":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"20:3150:1943":{"crate_id":20,"path":["regex_syntax","hir","Class"],"kind":"enum"},"12:2323:9509":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:7453:7110":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:15839:4416":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:14784:7665":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:53113:6449":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"21:1537:1600":{"crate_id":21,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"1:11148:6068":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"6:569:9558":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:9619:11299":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"17:14000:8780":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:12234:8283":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:49881:6368":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"0:3018:1578":{"crate_id":0,"path":["regex","SubCaptureMatches"],"kind":"struct"},"17:12221:8281":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:1630:9659":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:24093:10417":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:8375:6702":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"9:686:6791":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:2892:173":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"21:1252:4726":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"2:3313:4809":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11835:8218":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:3178:6202":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:5433:6999":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"0:2902:4101":{"crate_id":0,"path":["regex","bytes","SetMatchesIntoIter"],"kind":"struct"},"1:8474:6129":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:823:7658":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"1:13929:6174":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:12738:6565":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:13506:8634":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:7378:7114":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:49769:6365":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:7279:7325":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:23930:10414":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:15041:6077":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:6852:10391":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:2945:7300":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:13453:8619":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"15:0:4396":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:11246:5949":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:11525:6151":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:50309:5467":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:5548:10223":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:50279:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:3318:4806":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:13554:6166":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:4417:6044":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"21:1278:7502":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"1:10828:6224":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:8902:48864":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:14109:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:14022:6583":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:11389:5971":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:3714:8801":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:12155:8273":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:3429:7035":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"22:836:5875":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:1921:2627":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"20:1958:7463":{"crate_id":20,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"1:5967:6300":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"12:949:6103":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:4890:8823":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:53391:9294":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:4215:9904":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:46492:4106":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:3372:4816":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:11519:8151":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:3176:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:2543:7420":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:14216:5446":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"12:469:10871":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:8328:6743":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"20:2602:7491":{"crate_id":20,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"20:2554:7488":{"crate_id":20,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"6:5167:10055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:48392:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:11604:8164":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:6554:7165":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"5:8363:6701":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:4317:9936":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:920:63235":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:5707:7013":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:12468:3000":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:4347:9951":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:3351:4811":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:49619:4859":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:74:1414":{"crate_id":2,"path":["core","u32"],"kind":"module"},"1:15837:4414":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:50056:6571":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:51255:9236":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:46204:5812":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:6923:10406":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:7226:7181":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:11378:7350":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"9:41:6843":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"6:4425:9984":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:9574:7654":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"9:996:6859":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"12:181:6932":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:12598:8359":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"9:776:6840":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:50052:6577":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:3508:6032":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"11:46:9511":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:11374:4868":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:9368:7916":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:10160:8030":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:14509:56428":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"5:8114:5418":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:3143:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:11199:8110":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:9726:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"21:1908:7799":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"20:3518:1804":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"5:1441:6106":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:11254:7375":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"20:3333:1993":{"crate_id":20,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"20:1945:7462":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"17:13627:8666":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"20:2127:7473":{"crate_id":20,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"6:5269:10104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:5078:2981":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:23651:5964":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"21:1393:7752":{"crate_id":21,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"2:47389:2004":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:23999:9184":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:3317:6211":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"9:927:46941":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:69:5415":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:4972:6060":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"17:11981:8243":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:4439:9992":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"20:2100:4583":{"crate_id":20,"path":["regex_syntax","ast","Span"],"kind":"struct"},"2:21:660":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"21:1184:4728":{"crate_id":21,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"0:2594:3534":{"crate_id":0,"path":["regex","RegexSetBuilder"],"kind":"struct"},"1:12172:6115":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:13836:9177":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:10205:5309":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:5360:6243":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:13402:8607":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:12343:8302":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:53297:9288":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"12:930:6101":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:47552:168":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:46643:4655":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:10117:7448":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"22:812:7726":{"crate_id":22,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:4304:8806":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"18:712:4762":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"18:136:4756":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:23891:9178":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"21:1615:3129":{"crate_id":21,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"17:12442:8335":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:5185:10068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:2187:6090":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"12:968:6104":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:5954:6299":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:12287:8290":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:11406:8118":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:6685:10289":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:11595:6155":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"22:1025:5866":{"crate_id":22,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:12208:8280":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:10673:49055":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:9125:4551":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:46473:4635":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:13590:8658":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:681:7926":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:616:9583":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"20:2568:7489":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"9:692:6793":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:3137:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"20:2292:7477":{"crate_id":20,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"2:3377:4817":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"0:2793:4067":{"crate_id":0,"path":["regex","SetMatches"],"kind":"struct"},"6:5386:10168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"12:2009:3372":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:4478:10007":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:5844:6291":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:2437:9313":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:49139:5936":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"21:1589:3163":{"crate_id":21,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"20:1893:1803":{"crate_id":20,"path":["regex_syntax","is_word_byte"],"kind":"function"},"5:1639:6097":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:1457:6108":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:49320:1576":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:53199:6487":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4371:9964":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:4380:6043":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:9731:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"0:55:1580":{"crate_id":0,"path":["regex","bytes"],"kind":"module"},"19:0:981":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:7663:6173":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:8330:4631":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:6176:10355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:5790:7021":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"0:2646:1576":{"crate_id":0,"path":["regex","bytes","Split"],"kind":"struct"},"2:47466:5236":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:9759:8015":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:6085:10300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"12:2315:63222":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:13733:8709":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"14:216:47219":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"21:1358:7751":{"crate_id":21,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"1:10781:5997":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"20:2929:4586":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"22:996:5864":{"crate_id":22,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:10844:6036":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"0:2694:1575":{"crate_id":0,"path":["regex","bytes","ReplacerRef"],"kind":"struct"},"16:3195:7282":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"0:1459:1564":{"crate_id":0,"path":["regex","escape"],"kind":"function"},"21:1268:4727":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"7:0:1459":{"crate_id":7,"path":["unwind"],"kind":"module"},"20:2898:134":{"crate_id":20,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"1:2192:6091":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:49185:5924":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:1527:9599":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:5855:7023":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:12507:8343":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:374:5468":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"21:1679:5828":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"17:11328:8114":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:10410:9173":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:5753:7019":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:4852:8822":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:12034:6127":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"5:6468:5418":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:49198:5925":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:4431:9987":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:15855:4429":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:4040:9845":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:8144:3372":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:2751:5712":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:52654:6492":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:2169:567":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:9224:2622":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11568:6152":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:6893:10400":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:9034:48867":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:7781:6180":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:11975:56400":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"0:2497:3454":{"crate_id":0,"path":["regex","bytes","RegexBuilder"],"kind":"struct"},"16:6644:7168":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:11954:5932":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:15333:6955":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:10028:8024":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:51038:6489":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:56029:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"20:2309:1943":{"crate_id":20,"path":["regex_syntax","ast","Class"],"kind":"enum"},"2:51005:6456":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"21:1901:7797":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"17:11186:8108":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:13192:8557":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:903:5908":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"18:790:4725":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:5347:10154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:5400:10179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:53453:9296":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"21:1764:7776":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"2:10204:195":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:48711:9224":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:49723:6358":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:45885:4829":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:13540:8647":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:1630:6096":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:7174:7176":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:543:9538":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:7392:7115":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"14:0:4395":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:5945:10241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:10590:5446":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:45892:5718":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:10448:7423":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:50888:9232":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:4241:9906":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:9649:8013":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:9614:7655":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:46663:4657":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:7718:6175":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:49370:4870":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:46464:4634":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:519:9527":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"20:3188:1951":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"17:12552:8352":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:6636:7126":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:2837:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"20:3420:4571":{"crate_id":20,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"22:292:3108":{"crate_id":22,"path":["memchr","memchr","memchr3"],"kind":"function"},"18:667:5876":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:45762:185":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:3713:4832":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"22:915:7731":{"crate_id":22,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:3767:5453":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"20:1992:7817":{"crate_id":20,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"2:53160:6467":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:4127:9888":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:3338:7030":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:47955:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:23971:6525":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10611:8048":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"12:2303:1972":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:9065:48868":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:8367:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:6718:7312":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:12645:8373":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:13488:8630":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:45852:4516":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:6250:5422":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:6136:7148":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:6106:10306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:46364:6636":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:3241:7284":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:7635:6171":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:3329:4808":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:9607:11361":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"20:3094:1933":{"crate_id":20,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"2:49239:5944":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:3306:950":{"crate_id":2,"path":["core","ops"],"kind":"module"},"16:5346:7108":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:23655:6421":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:50909:9233":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"21:1297:7503":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"21:1457:4576":{"crate_id":21,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"1:14970:6184":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:13282:8579":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:23946:2982":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:10255:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"5:8234:4522":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"12:396:6930":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:3965:7612":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"0:2805:4100":{"crate_id":0,"path":["regex","SetMatchesIter"],"kind":"struct"},"1:11312:6062":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:12685:8376":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:4458:6041":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:584:9567":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:1723:9723":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:10912:8089":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:4018:5717":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:4377:9967":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:4719:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:46334:6634":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:6491:7163":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"0:2021:2045":{"crate_id":0,"path":["regex","Error","CompiledTooBig"],"kind":"variant"},"21:703:965":{"crate_id":21,"path":["aho_corasick","packed"],"kind":"module"},"5:8247:4523":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:3250:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:6768:7316":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:12946:8419":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:12789:4851":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:24615:6607":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:4203:9903":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"21:1308:2624":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"6:1736:9726":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:4694:7616":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:47356:166":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"5:1658:6099":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:4888:4698":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:13780:8727":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"20:2345:7479":{"crate_id":20,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"6:4449:9998":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:6068:10295":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12073:8261":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"20:2362:7480":{"crate_id":20,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"16:5029:8827":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:14444:10498":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"21:1838:7788":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"2:51092:6481":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"20:2655:7493":{"crate_id":20,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"1:2401:9312":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6413:6943":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:15309:9411":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:11696:8184":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:14135:6042":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:13609:8663":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"20:1870:4594":{"crate_id":20,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"16:4477:8811":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:8850:4629":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:46543:4648":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:4301:5453":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:5717:7015":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"0:2993:1576":{"crate_id":0,"path":["regex","Split"],"kind":"struct"},"17:11555:8156":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:7241:9318":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:3301:6206":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:3258:4692":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:5407:6997":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:50982:6468":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:12936:3542":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:24717:6609":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:13258:8574":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:6780:7170":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:3725:6389":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:3252:209":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:8366:5896":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"21:1758:7775":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"2:45927:2981":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"20:1894:7459":{"crate_id":20,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"2:8070:1935":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"20:2453:7483":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"5:3370:6723":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:4230:8805":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"21:1861:3128":{"crate_id":21,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"2:24128:6623":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:15844:4420":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:12610:8361":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:3488:7288":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:2938:174":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:3522:7932":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:11640:8171":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:12385:8323":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:6605:7124":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:13842:8748":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"0:1641:1574":{"crate_id":0,"path":["regex","Replacer"],"kind":"trait"},"6:4120:9886":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:11358:7351":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:3892:9759":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:13788:8728":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:849:5866":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"20:2727:1974":{"crate_id":20,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"16:2816:7294":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:5505:7005":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:4052:9849":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"18:866:5868":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:2733:7033":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:6087:7107":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:5761:5989":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:12162:4552":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:52183:6459":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:10567:5828":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:12152:4543":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"20:2690:2015":{"crate_id":20,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"1:7103:4702":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:1689:6755":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:12068:6131":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:1161:13902":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:11485:2257":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:3343:4814":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:12040:8251":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:1419:3373":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:5975:7150":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:47406:5453":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:5001:4680":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:4193:9902":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:4922:8824":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:10673:9329":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"20:2961:7817":{"crate_id":20,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"5:8264:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:7366:3372":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:14462:9407":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"20:3168:4577":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"1:15810:13903":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:14652:9329":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:9746:7656":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"2:49149:5937":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"21:1342:7741":{"crate_id":21,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"5:3946:5416":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:1669:6100":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:10215:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:5896:1319":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:2274:6426":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:10529:8039":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:10656:8052":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:6577:7166":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:3939:8804":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:46329:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:4641:8815":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:10639:6094":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:2897:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:13221:8565":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"12:2331:4522":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:7549:7118":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:53266:9285":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:4255:6262":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:10258:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:3684:4828":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:7894:7145":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"20:2584:7490":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"16:7205:7179":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:1744:9730":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:2201:1037":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"20:2984:7896":{"crate_id":20,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"1:6845:5970":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:525:9530":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:3245:3946":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"21:1714:1601":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"2:57312:9304":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:7303:7184":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:1153:9305":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:7236:7182":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:50265:6582":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13760:8721":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:4281:9919":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6518:7164":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:6021:7274":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:9942:6549":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:10304:7389":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"11:54:6914":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:7272:9318":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:4417:8809":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:8326:4632":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:24377:6602":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:23006:6445":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"21:1771:7777":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"17:2512:7387":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"20:2485:7485":{"crate_id":20,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"9:809:2257":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:13317:6257":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:11539:8152":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:3743:7343":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:12182:8277":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:15843:4419":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:2176:4608":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"12:1100:6106":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:6966:1480":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"16:6126:7153":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:10276:5319":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:45972:6539":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"18:857:5867":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:6856:4659":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:5721:5988":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:1045:5898":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:5436:10189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:5006:4681":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:9551:7374":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:57291:9303":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:50957:6476":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"9:963:6858":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:2460:7669":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:4510:6733":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"20:2748:1977":{"crate_id":20,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"2:3281:4878":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:1942:1988":{"crate_id":2,"path":["core","mem"],"kind":"module"},"12:1667:6938":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:46235:5804":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:49594:4852":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:14912:10500":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:10897:203":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:6591:7167":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:10618:13899":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:46274:4859":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:1700:9713":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"0:2599:1570":{"crate_id":0,"path":["regex","bytes","Match"],"kind":"struct"},"2:11360:1577":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:50220:180":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:6200:10365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:11172:6069":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:51303:6490":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"21:1625:7521":{"crate_id":21,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"12:1118:6107":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:8160:6700":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:783:211":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:3877:6036":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:12715:6564":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:46347:6635":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4669:5309":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:4535:8813":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:52296:6448":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:14656:6059":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:12582:8355":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:4790:8820":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:10179:8031":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:4346:6230":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:49574:4862":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:12118:8268":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:47577:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:3862:9741":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:48907:5927":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:3406:4824":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:5632:7011":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:15850:4424":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:47619:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"21:1916:7802":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"6:4523:10025":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:8436:3823":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"15:248:6947":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"18:896:5870":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:5978:10264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:13725:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:15856:4430":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:6620:7307":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:51602:6450":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:1079:4676":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"20:2211:1979":{"crate_id":20,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"5:3754:3373":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:3544:3541":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"6:6051:10293":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"13:0:4388":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:7891:4617":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:13370:8600":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:22565:61348":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:1665:9688":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:51381:6482":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:8894:4544":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:11169:4851":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:6100:10305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:7420:7130":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:3707:4830":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:10071:7452":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:23984:6526":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:11118:48873":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:10346:7926":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:48664:9218":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:9799:8016":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:10543:5497":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:3264:7285":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:8625:4539":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:10468:7422":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:51759:9243":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:48383:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:12537:8348":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:52797:6460":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:48444:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"16:7195:7178":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:1442:3372":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:53277:9286":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:8090:5414":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"21:1566:7771":{"crate_id":21,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"2:5375:5799":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:6945:5969":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:4419:9983":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:4687:6024":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:1584:9630":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:13227:10877":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"2:8363:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:24649:6181":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"22:300:3109":{"crate_id":22,"path":["memchr","memmem"],"kind":"module"},"2:46252:4678":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:4023:9839":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:12467:8338":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:11920:171":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:47787:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:24100:6661":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:10950:8095":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:13446:8618":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12028:8249":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:3967:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:4073:9860":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:12373:8321":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"5:5531:4537":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:4995:8826":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:15805:1734":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"20:3012:7899":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"0:2017:127":{"crate_id":0,"path":["regex","Error"],"kind":"enum"},"2:3248:207":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:8789:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:2325:6759":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:6068:6252":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13865:8749":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:47414:3372":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:15854:4428":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:9447:10910":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:46600:4652":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:8199:2030":{"crate_id":2,"path":["core","iter","sources","repeat","repeat"],"kind":"function"},"2:3335:4807":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:51143:6469":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:3972:9812":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:3631:6028":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:12699:8379":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:537:9535":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:7615:6170":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:11026:8101":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:2181:6089":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:4410:9977":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:6124:10316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:46612:4653":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:14439:10496":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:12645:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:1011:3373":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"12:937:6102":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:7649:6172":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:6887:10399":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:10788:5998":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:6644:10389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:157:42003":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"21:1706:7524":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"2:11402:5947":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:13554:8649":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"20:3535:1806":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"2:14012:5464":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:4272:9914":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:1476:5418":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:6683:10287":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"20:3482:1805":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"2:8376:4630":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:51554:6465":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"20:1929:4571":{"crate_id":20,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"1:4456:6040":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:4623:224":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:13306:8581":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:3064:7337":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:3615:4827":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:47475:178":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:11847:8221":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12275:8289":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:13482:10878":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"21:1363:7506":{"crate_id":21,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"17:11779:8201":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:3355:4813":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:24047:41252":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"9:469:10618":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:2060:6013":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"20:2002:7820":{"crate_id":20,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"22:170:4758":{"crate_id":22,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"0:3049:1575":{"crate_id":0,"path":["regex","ReplacerRef"],"kind":"struct"},"1:12157:4545":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:51943:6479":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:8152:184":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:56016:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:3492:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:11142:6063":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:47829:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:7761:7186":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"0:3011:1565":{"crate_id":0,"path":["regex","CaptureLocations"],"kind":"struct"},"1:2399:9311":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"12:761:5453":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:11388:5948":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"21:1548:7768":{"crate_id":21,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"20:0:1612":{"crate_id":20,"path":["regex_syntax"],"kind":"module"},"17:294:7921":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:46632:4639":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:13054:8509":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:3742:4694":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:49700:6357":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:10572:5894":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"2:23820:6599":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"21:1481:2257":{"crate_id":21,"path":["aho_corasick","nfa","State"],"kind":"struct"},"17:2314:7393":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:4060:9854":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:13906:61513":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"17:10279:7401":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:9332:7418":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:51727:9242":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:5522:10208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"18:811:3172":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:10128:7449":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"9:1020:6860":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"21:1868:7791":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"1:10407:7659":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:6238:7112":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"22:987:3172":{"crate_id":22,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:5953:10246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:531:9533":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:46295:5808":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:5292:10117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:32212:4612":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"21:1239:4725":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"5:994:1815":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:10962:8096":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"22:0:1529":{"crate_id":22,"path":["memchr"],"kind":"module"},"1:0:1310":{"crate_id":1,"path":["std"],"kind":"module"},"1:11367:10274":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:51111:9234":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:10266:7390":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"22:950:7726":{"crate_id":22,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"1:6445:6003":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"12:2025:6088":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"20:2240:7475":{"crate_id":20,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"21:1778:7778":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"1:8118:5896":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"18:636:7726":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"20:2791:7496":{"crate_id":20,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"5:8447:5417":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"21:1467:7507":{"crate_id":21,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"2:23913:6530":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"0:2788:2885":{"crate_id":0,"path":["regex","RegexSet"],"kind":"struct"},"17:13386:8603":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:9729:63228":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:15174:6071":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:5384:6996":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"5:7764:223":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:52021:6486":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:2492:5463":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:4133:9890":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:7250:7183":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:4553:4622":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"18:739:7731":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:9264:8005":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:6155:10341":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"20:2977:7895":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"1:14806:7667":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:0:477":{"crate_id":2,"path":["core"],"kind":"module"},"12:1253:6109":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:50297:5715":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:3997:9828":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:13978:8774":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:2968:7278":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:12026:3373":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:22550:61348":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:3604:7936":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"5:3357:6090":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:7342:7142":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"18:766:7736":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:3240:200":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:8179:7640":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"6:578:9564":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:11077:3373":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:49424:1577":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:5960:7028":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:12004:7636":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:5159:10053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"0:2664:1567":{"crate_id":0,"path":["regex","bytes","CaptureNames"],"kind":"struct"},"1:9323:5960":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:49130:5938":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:49542:4866":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"20:2155:7457":{"crate_id":20,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"2:8127:10876":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:8013:5896":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"6:3966:9810":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:46834:4619":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:1472:6107":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:4438:3373":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:7738:7185":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:12756:8387":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:50044:6578":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:3388:4820":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:4358:9959":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"13:120:47185":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:46214:5813":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:9133:48870":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:3701:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:51783:9244":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"12:1762:7610":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:1602:9640":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:6401:4646":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:4630:6022":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:5946:6297":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:13564:8652":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"21:1607:5828":{"crate_id":21,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"6:6221:10377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:923:6748":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:11001:8099":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:2265:6425":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:53361:9292":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:5407:10181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:7821:6441":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:11264:6244":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"12:892:6916":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:9937:6548":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:11948:6177":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:2195:7613":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:49112:5935":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"20:3025:7495":{"crate_id":20,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"12:1200:6926":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:11281:4867":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:11082:7356":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:11101:5453":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:46572:4637":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:4612:5999":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:51453:6470":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"20:2971:7820":{"crate_id":20,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"2:48480:5313":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"6:6185:10358":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:7185:7177":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:10502:8038":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:5314:8005":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:24445:6604":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:5766:7020":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:11932:8229":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"21:1451:127":{"crate_id":21,"path":["aho_corasick","error","Error"],"kind":"struct"},"17:12262:8288":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:49603:4850":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:4083:9867":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:55990:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:50036:6575":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:15069:6084":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:49442:4868":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:5563:10234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:46520:9215":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"14:194:47213":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:10814:7346":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:11324:6298":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:6166:7154":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:13681:6183":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"21:1817:7786":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"1:2366:589":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:5273:7037":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:4494:10012":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"0:3031:1566":{"crate_id":0,"path":["regex","CaptureMatches"],"kind":"struct"},"1:11578:3373":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:7856:7188":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:4448:8810":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:1497:6099":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:46160:5811":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"20:2616:7492":{"crate_id":20,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"20:3460:63823":{"crate_id":20,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"1:6776:5968":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:10975:8097":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"0:2954:1570":{"crate_id":0,"path":["regex","Match"],"kind":"struct"},"6:5221:10081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:1554:9610":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:7913:5895":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"1:8825:9320":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"21:1746:7773":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"1:12081:6132":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:46482:4643":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:49121:5934":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:4594:7614":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:11015:8100":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:13180:8552":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:47483:195":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"18:782:7726":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:2170:5416":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:6185:6260":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:10682:4642":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:11963:6178":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:5330:8006":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:10095:7446":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:6858:10392":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:15196:6242":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:10827:7347":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:46227:4860":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:15840:4417":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:3140:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:6681:10285":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"14:56:8137":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:3526:4833":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:1547:9607":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:3347:4812":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:8122:6750":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:8411:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:3295:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:4008:7930":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:2794:7034":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:9713:6238":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:13463:9313":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:3091:7338":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:49929:9226":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:8374:2257":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"5:6681:6707":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:11416:4703":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:9049:4549":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:22812:5963":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:15861:4435":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:3382:4819":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:49211:5942":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:12168:8057":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:1450:6096":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:13685:8708":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:23749:6598":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:9476:7919":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:50256:6581":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:22865:6444":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:6899:10401":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6999:7172":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:3800:8803":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:12048:6130":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4325:9940":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"12:2018:5416":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"16:5231:8828":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:12771:8114":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:8565:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:7961:7640":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:3360:4818":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:10938:8094":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:50048:6576":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:46288:5807":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:8849:7373":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:10493:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:50086:6119":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"17:11767:8198":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:4395:9973":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:5998:10270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:7786:7120":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:14893:6116":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:49229:5943":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:12712:8380":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:12456:8337":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"9:603:10628":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"0:2561:3534":{"crate_id":0,"path":["regex","bytes","RegexSetBuilder"],"kind":"struct"},"20:3053:4576":{"crate_id":20,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:3779:4835":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:5633:6058":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"12:866:5418":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:3018:7279":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:15851:4425":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:32278:61472":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"9:1056:6853":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:49844:6367":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:11304:48874":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:11947:8233":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:10432:7661":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:4350:8807":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"21:1955:1570":{"crate_id":21,"path":["aho_corasick","Match"],"kind":"struct"},"17:10052:8026":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:1522:9597":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:12982:8450":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"12:976:6105":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:10776:6201":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:7719:4641":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"5:2548:6763":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:13154:8546":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:22584:61442":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:11092:4655":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:46442:4633":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:3339:4810":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:8105:6749":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:5528:10209":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:32177:4611":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:6464:7122":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"21:1316:2625":{"crate_id":21,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"21:1560:7770":{"crate_id":21,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"1:8911:6276":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"17:12247:8285":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"22:1072:5870":{"crate_id":22,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:4183:9901":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"0:2674:1565":{"crate_id":0,"path":["regex","bytes","CaptureLocations"],"kind":"struct"},"20:3376:4581":{"crate_id":20,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"1:11508:6150":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:49296:4854":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"21:1503:2173":{"crate_id":21,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"1:1463:6097":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:8632:4540":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:11207:4583":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"10:0:4392":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:46151:9208":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:4378:6042":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:2251:6423":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:4637:6013":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"5:6645:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:9961:8019":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:10272:179":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:5228:10083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"21:1663:4845":{"crate_id":21,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"2:24683:6608":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:11175:6070":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"17:9689:63225":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:5484:6250":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:50040:6574":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"21:1940:7806":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"1:5783:5985":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:48656:5499":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"20:2503:7486":{"crate_id":20,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"1:11048:6023":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:47997:4538":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:9344:4845":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"9:749:6795":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:4704:8817":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:12783:8390":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:14141:6040":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"20:3427:127":{"crate_id":20,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"2:53286:9287":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:3398:4822":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:11338:6244":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"20:2330:7478":{"crate_id":20,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"20:3207:4579":{"crate_id":20,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"20:2225:1937":{"crate_id":20,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"16:2889:7295":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:49628:4678":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:2598:9315":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"17:13942:8770":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:46258:5805":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"17:12917:8399":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:3772:8802":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:1534:6105":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:13710:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:5241:10092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"21:1571:2625":{"crate_id":21,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"16:7884:7117":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13924:8764":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:5595:7010":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:6964:4710":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:4013:9833":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"12:812:6100":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:10407:7386":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:8099:3372":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:49470:4864":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:11337:7419":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:49738:6361":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:1195:10875":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:5310:190":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:48903:6693":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:46422:9214":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:4750:5462":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:49637:4860":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:2213:6725":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:6636:10387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:7633:2969":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:11914:6174":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:5359:10159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:48133:5316":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"0:2907:4100":{"crate_id":0,"path":["regex","bytes","SetMatchesIter"],"kind":"struct"},"17:11458:8136":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:53414:9295":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:3329:6217":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:4005:9830":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"0:3002:1577":{"crate_id":0,"path":["regex","SplitN"],"kind":"struct"},"5:5832:4848":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"22:288:1529":{"crate_id":22,"path":["memchr","memchr","memchr"],"kind":"function"},"2:3402:4823":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:24751:6610":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13637:8671":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"6:6239:10380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:6014:7152":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:48693:2257":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"5:5088:648":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:46859:4622":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:5996:7151":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:3685:6035":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:25121:6509":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"21:1853:5828":{"crate_id":21,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"2:51500:6458":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"12:925:6098":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:7264:7125":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:0:4397":{"crate_id":16,"path":["gimli"],"kind":"module"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:37488:168":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:7042:7324":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:53323:9290":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"12:2013:5418":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:15234:6243":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:6849:5973":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"18:774:7726":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:12431:8333":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:8676:4541":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:10888:5964":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:27932:6339":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:12725:8381":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:11809:8213":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:3034:61963":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:4210:5418":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:5969:10258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"18:704:7726":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"12:1180:6925":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"18:610:5872":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:542:7043":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:53376:9293":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:3172:7281":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"20:2846:7467":{"crate_id":20,"path":["regex_syntax","either","Either"],"kind":"enum"},"5:3743:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"18:694:5877":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"9:722:6794":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:5459:10195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:13172:8551":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:6597:61515":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:12195:8278":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:50212:9231":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:45721:186":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"5:6757:6013":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:22806:5961":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:7477:7131":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:10001:48918":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:4614:8814":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"20:2416:4577":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"12:1235:6927":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:4695:6405":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:3868:9742":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:0:4398":{"crate_id":17,"path":["object"],"kind":"module"},"1:6847:5972":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"5:5868:7620":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:49488:4865":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:14002:7664":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:5488:7004":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:11616:8167":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:49263:4861":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:4501:10015":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"14:189:9078":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:10253:7391":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:5987:10265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:5175:4690":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:1648:6098":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:3489:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:11275:6246":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:45737:184":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:299:7922":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:11665:8174":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:12494:8342":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:13429:8611":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:50060:6572":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13746:8715":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"5:6947:6695":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:13760:61589":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:22997:5964":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:5414:10182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:3696:213":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:4066:9857":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"22:870:5877":{"crate_id":22,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:46534:4647":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:10571:8045":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11750:8190":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:5371:10166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:3324:3373":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:5421:6998":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:3483:3293":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:3303:6207":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"20:2008:127":{"crate_id":20,"path":["regex_syntax","ast","Error"],"kind":"struct"},"22:853:142":{"crate_id":22,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:47457:4711":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:6176:7155":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:12042:3372":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:4364:9962":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:13810:8733":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:3249:206":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"6:5282:10110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:4237:7612":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:15842:4418":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:2991:7289":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:6214:10374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:3597:6033":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:10633:13901":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:7778:6179":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"0:2895:4067":{"crate_id":0,"path":["regex","bytes","SetMatches"],"kind":"struct"},"5:1486:6109":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"14:231:6704":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"20:2267:7476":{"crate_id":20,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"4:0:4389":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:1540:9605":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:10236:7372":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:1908:43306":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:4678:56734":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:5274:10105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:46511:4645":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"20:2470:7484":{"crate_id":20,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"17:9600:63226":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:1511:6102":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"21:1413:7754":{"crate_id":21,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:3287:7286":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"9:1075:6861":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:51627:6451":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:48377:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:46451:4642":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"20:2712:1972":{"crate_id":20,"path":["regex_syntax","ast","Group"],"kind":"struct"},"5:3039:61960":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:8460:192":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"5:0:266":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:13062:8511":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:51216:9235":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:49817:6366":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"20:3436:4589":{"crate_id":20,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"1:786:7658":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:13222:9175":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"22:137:4756":{"crate_id":22,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:10836:6034":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"13:232:9503":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:1501:6100":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:8187:3372":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:4026:195":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:7601:6169":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:1505:6101":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"7:85:46844":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:5775:5991":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:24063:41261":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:49584:4863":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:48422:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:1602:5453":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:5132:4688":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:4585:6013":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:13532:8644":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:1533:9602":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"21:1793:7780":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"22:1033:5867":{"crate_id":22,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:45645:4836":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:10924:4576":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:6812:10390":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"21:1444:5828":{"crate_id":21,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"6:3905:9769":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:49895:6369":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:53050:6484":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"3:300:195":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"20:3080:1802":{"crate_id":20,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"17:10061:8027":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:13240:8566":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:10477:7421":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:2175:6088":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:12192:6116":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:4638:7616":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:7514:7129":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:55897:6417":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"20:3411:2627":{"crate_id":20,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"5:1592:3373":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:10538:5496":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:2484:48956":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:3365:6088":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"9:27:6842":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:12408:8332":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:14867:6176":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:13007:4845":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:7073:7173":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:5428:10187":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:23556:5962":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:46879:4626":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:48410:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"16:3041:7280":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:10041:8025":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:53257:9284":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:22582:61447":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:4671:8816":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:9162:7376":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"21:1879:7745":{"crate_id":21,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"2:9223:3225":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:8396:6745":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"16:6691:7169":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"20:3265:1960":{"crate_id":20,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"6:624:9588":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:5255:10103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:11499:8141":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:632:9593":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:8282:6741":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:13801:177":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:610:9580":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:8467:6128":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:11915:8223":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:52987:6464":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"0:3040:1571":{"crate_id":0,"path":["regex","Matches"],"kind":"struct"},"2:24115:6624":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:10357:9412":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:45829:189":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:9659:63229":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:12568:8353":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:1838:7612":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"0:1301:1574":{"crate_id":0,"path":["regex","bytes","Replacer"],"kind":"trait"},"17:10864:8087":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:3483:5416":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:49752:6364":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:3548:4826":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:6404:212":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:9210:48871":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"0:2890:2885":{"crate_id":0,"path":["regex","bytes","RegexSet"],"kind":"struct"},"2:46281:5806":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:13205:8562":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:11045:48872":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:4997:2621":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"21:1925:7804":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"2:3268:5304":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:12678:6563":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"21:0:1611":{"crate_id":21,"path":["aho_corasick"],"kind":"module"},"2:52104:6471":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:897:5907":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4293:9926":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"21:1215:2623":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"1:12167:4553":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:13598:8659":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:6474:4636":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"0:2681:1578":{"crate_id":0,"path":["regex","bytes","SubCaptureMatches"],"kind":"struct"},"2:3486:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:13098:8540":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:4762:8819":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"0:2703:1572":{"crate_id":0,"path":["regex","bytes","NoExpand"],"kind":"struct"},"16:7843:7187":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:5771:5990":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:11971:10494":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"0:2528:3454":{"crate_id":0,"path":["regex","RegexBuilder"],"kind":"struct"},"20:540:1801":{"crate_id":20,"path":["regex_syntax","hir"],"kind":"module"},"12:112:10869":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:45673:4834":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"21:1785:7779":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"14:11:9078":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:3336:6722":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:10635:8050":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:8352:205":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"21:1350:7749":{"crate_id":21,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"1:14932:6115":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"5:7250:7612":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:2793:5713":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:7158:7175":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:1021:5896":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:15859:4433":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"7:38:46837":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:11277:8111":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:3951:9803":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:591:9570":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"22:942:7736":{"crate_id":22,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6152:7109":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"20:2909:4585":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"21:1645:7522":{"crate_id":21,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"17:10584:7359":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:15344:6955":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:4511:10020":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:1760:9735":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:15858:4432":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:46868:4624":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7024:7323":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:10801:8086":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:5568:6494":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:5705:5986":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"12:429:6929":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:10317:7388":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:510:7923":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"12:2309:9507":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:11032:1935":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:4101:9876":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:49338:4867":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:4095:9873":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:11099:1791":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:6391:7161":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:10200:8032":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:11572:8158":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:22961:18990":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:5672:7012":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:7104:7624":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"20:332:7455":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"16:5522:7006":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:6252:7158":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:51531:6462":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13574:8655":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:11970:8240":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:5360:6995":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:49524:1571":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"21:1178:5964":{"crate_id":21,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"8:0:4390":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12095:8262":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"18:829:5865":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"20:2639:1985":{"crate_id":20,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"1:15857:4431":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:10435:8036":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:47423:4710":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:6569:7309":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:1091:7612":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"21:1670:7523":{"crate_id":21,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"2:48119:5315":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:5420:10185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:1432:5453":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:3607:7638":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:51350:6478":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:10887:8088":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:0:785":{"crate_id":6,"path":["libc"],"kind":"module"},"17:13898:8755":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"3:0:419":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:15860:4434":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:12142:8270":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:23008:6444":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:11082:4642":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:13394:8605":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:4694:6007":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:3035:10410":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:50028:6570":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"6:3957:9805":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:46622:4654":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:46841:4544":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:13348:8595":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"22:966:4725":{"crate_id":22,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:3145:7290":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"22:1013:3129":{"crate_id":22,"path":["memchr","memmem","Searcher"],"kind":"struct"},"20:2878:127":{"crate_id":20,"path":["regex_syntax","error","Error"],"kind":"enum"},"6:4387:9970":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"20:2141:7474":{"crate_id":20,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"6:3990:9824":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:2159:3373":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"5:5828:1979":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:607:7925":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:14492:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"22:698:5872":{"crate_id":22,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:52261:6466":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"22:888:4762":{"crate_id":22,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:12480:8340":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:4470:10005":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:10516:7425":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:6110:7147":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:15056:6078":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"12:2032:6089":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:3033:3756":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"20:3298:1974":{"crate_id":20,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"2:13016:3129":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:32378:61471":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"15:269:6951":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:48672:5498":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:24411:6603":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:48126:5314":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:5561:7008":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:11653:8173":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"20:2805:7497":{"crate_id":20,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"6:4459:9999":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"12:463:10870":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:10140:7403":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"20:2539:7487":{"crate_id":20,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"1:14800:7666":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"20:1998:7819":{"crate_id":20,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"2:24479:5901":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"12:2039:6090":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:2305:6776":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:11993:8245":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"18:729:63237":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6366:6944":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:6423:5968":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:11105:1576":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:5713:5987":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:2772:6762":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:5727:5982":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:1637:6107":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:4306:9930":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"9:0:4391":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"20:2763:7494":{"crate_id":20,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"1:5357:6242":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13356:8598":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6614:10386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:2163:3372":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"0:2018:1961":{"crate_id":0,"path":["regex","Error","Syntax"],"kind":"variant"},"2:22537:4762":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"18:0:1529":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:2135:658":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"1:11319:6295":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:2753:568":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:24547:5902":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"20:3038:127":{"crate_id":20,"path":["regex_syntax","hir","Error"],"kind":"struct"},"1:11145:6064":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"12:774:3372":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:56042:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:1651:6937":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:12795:8397":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:11933:6176":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"12:2045:6091":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:9769:63231":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:4345:3372":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:15025:6076":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:699:5277":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:6807:7171":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:8297:6635":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:7427:175":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:10353:7394":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:12654:7663":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"20:2822:6279":{"crate_id":20,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"2:53338:9291":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:9971:63227":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:12754:6566":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:10224:8034":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:547:7017":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:4341:9948":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:24007:9185":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:32226:61474":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:2920:170":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:12444:6691":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:1717:9720":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:51174:6457":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:13620:8664":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:3184:6021":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:7318:176":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:432:1996":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:24581:6606":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:3331:6089":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:50934:6488":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:5130:10029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:13986:8777":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11100:7380":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:11434:6140":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:9933:8018":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"20:3354:2015":{"crate_id":20,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"1:14475:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:11726:8188":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:11330:6255":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"22:958:7726":{"crate_id":22,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:1235:6758":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:3881:9751":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:13912:8762":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:1563:9615":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:2912:7277":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:7437:7612":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"22:896:7727":{"crate_id":22,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:13819:8735":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:12010:8248":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"22:880:7726":{"crate_id":22,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"18:720:7727":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:47745:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:10458:7967":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:12997:1556":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:1311:7453":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:5594:766":{"crate_id":2,"path":["core","iter"],"kind":"module"},"18:620:7501":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4227:9905":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:4343:6229":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:46502:4644":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:11147:8106":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:47871:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:12327:8297":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:13041:8502":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"20:2377:7481":{"crate_id":20,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"17:11962:8238":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:2462:9314":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13799:8732":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:3365:7031":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"0:2655:1577":{"crate_id":0,"path":["regex","bytes","SplitN"],"kind":"struct"},"5:6665:4537":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:51579:6447":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:10926:8093":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"0:2800:4101":{"crate_id":0,"path":["regex","SetMatchesIntoIter"],"kind":"struct"},"1:12113:6134":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:53312:9289":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:50064:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:3246:4693":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:9849:63230":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"21:1403:7753":{"crate_id":21,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"}},"external_crates":{"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"aho_corasick","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"regex_syntax","html_root_url":null},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"memchr","html_root_url":null}},"format_version":15}