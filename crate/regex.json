{"root":"0:0:1610","crate_version":"1.6.0","includes_private":false,"index":{"2:10265:5313":{"id":"2:10265:5313","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10266:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3018:1575":{"id":"0:3018:1575","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1082,0],"end":[1085,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:3018:1575","a:2:9217:3222-0:3018:1575","a:2:3235:200-0:3018:1575","a:2:3247:209-0:3018:1575","a:2:9218:3221-0:3018:1575","b:2:3164-0:3018:1575","b:2:2838-0:3018:1575","b:2:3964-0:3018:1575","b:2:8366-0:3018:1575","b:2:3179-0:3018:1575","b:2:3174-0:3018:1575","b:2:2841-0:3018:1575","b:2:3168-0:3018:1575","b:5:787-0:3018:1575","0:3023","0:3027","0:1608","0:1617","0:1620"]}},"a:2:3235:200-0:2664:1564":{"id":"a:2:3235:200-0:2664:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2612":{"id":"0:2612","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,29],"end":[20,31]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9217:3222-0:3031:1563":{"id":"a:2:9217:3222-0:3031:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:2594:3530":{"id":"a:2:9218:3221-0:2594:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3964-0:3058:1569":{"id":"b:2:3964-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1236":{"id":"0:1236","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[842,0],"end":[842,46]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3164-0:2594:3530":{"id":"b:2:3164-0:2594:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:2655:1574":{"id":"b:2:3174-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2621:591":{"id":"0:2621:591","crate_id":0,"name":"eq","span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1327:3750":{"id":"0:1327:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1208,4],"end":[1210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2558:1819":{"id":"0:2558:1819","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:3002:1574":{"id":"b:2:2838-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1481:3561":{"id":"0:1481:3561","crate_id":0,"name":"from_str","span":{"filename":"src/re_unicode.rs","begin":[163,4],"end":[165,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2526:2126":{"id":"0:2526:2126","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2805:4096":{"id":"b:2:3179-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3148:216":{"id":"2:3148:216","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3150:127","2:3151:1391"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2608:396":{"id":"0:2608:396","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2561:3530":{"id":"b:2:3964-0:2561:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3966:1405":{"id":"2:3966:1405","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45883:5712","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1513:2769":{"id":"0:1513:2769","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_unicode.rs","begin":[624,4],"end":[630,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:2594:3530":{"id":"a:2:9217:3222-0:2594:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1596:171":{"id":"0:1596:171","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1041,4],"end":[1041,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"a:2:3247:209-0:2623:1570":{"id":"a:2:3247:209-0:2623:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3276:4874-0:2674:1562":{"id":"a:2:3276:4874-0:2674:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3247:209-0:2902:4097":{"id":"a:2:3247:209-0:2902:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:2664:1564":{"id":"b:5:787-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:2805:4096":{"id":"b:2:3964-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2893":{"id":"0:2893","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2894:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1537:3814":{"id":"0:1537:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[763,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2528:3450":{"id":"b:2:3179-0:2528:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1310:3753":{"id":"0:1310:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1165,4],"end":[1167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2583:2745":{"id":"0:2583:2745","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2768:3814":{"id":"0:2768:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2645:646":{"id":"0:2645:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[715,9],"end":[715,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1243:1565":{"id":"0:1243:1565","crate_id":0,"name":"Captures","span":{"filename":"src/re_bytes.rs","begin":[912,0],"end":[916,1]},"visibility":"public","docs":"Captures represents a group of captured byte strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched byte string is *also* available via the\n`name` method. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1248","a:2:3276:4874-0:1243:1565","a:2:9217:3222-0:1243:1565","a:2:3235:200-0:1243:1565","a:2:3247:209-0:1243:1565","a:2:9218:3221-0:1243:1565","b:2:3164-0:1243:1565","b:2:2838-0:1243:1565","b:2:3964-0:1243:1565","b:2:3179-0:1243:1565","b:2:3174-0:1243:1565","b:2:2841-0:1243:1565","b:2:3168-0:1243:1565","0:1258","0:1277","0:1283"]}},"b:2:2841-0:2497:3450":{"id":"b:2:2841-0:2497:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1570":{"id":"0:1570","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[928,0],"end":[1000,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1572:1779","0:1574:884","0:1576:764","0:1578:1584","0:1579:778"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3174-0:2017:127":{"id":"b:2:3174-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:3031:1563":{"id":"b:2:3174-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2497:3450":{"id":"0:2497:3450","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2484","a:2:3276:4874-0:2497:3450","a:2:9217:3222-0:2497:3450","a:2:3235:200-0:2497:3450","a:2:3247:209-0:2497:3450","a:2:9218:3221-0:2497:3450","b:2:3164-0:2497:3450","b:2:2838-0:2497:3450","b:2:3964-0:2497:3450","b:2:3179-0:2497:3450","b:2:3174-0:2497:3450","b:2:2841-0:2497:3450","b:2:3168-0:2497:3450","0:2500"]}},"0:2591:1819":{"id":"0:2591:1819","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1483:905":{"id":"0:1483:905","crate_id":0,"name":"new","span":{"filename":"src/re_unicode.rs","begin":[174,4],"end":[176,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2993:1573":{"id":"a:2:3235:200-0:2993:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1485:2491":{"id":"0:1485:2491","crate_id":0,"name":"find","span":{"filename":"src/re_unicode.rs","begin":[222,4],"end":[224,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!(mat.start(), 2);\nassert_eq!(mat.end(), 15);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2993:1573":{"id":"b:2:3179-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2594:3530":{"id":"b:2:3179-0:2594:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:1610":{"id":"0:0:1610","crate_id":0,"name":"regex","span":{"filename":"src/lib.rs","begin":[1,0],"end":[766,1]},"visibility":"public","docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.\n\nThis crate's documentation provides some simple examples, describes\n[Unicode support](#unicode) and exhaustively lists the\n[supported syntax](#syntax).\n\nFor more specific details on the API for regular expressions, please see the\ndocumentation for the [`Regex`](struct.Regex.html) type.\n\n# Usage\n\nThis crate is [on crates.io](https://crates.io/crates/regex) and can be\nused by adding `regex` to your dependencies in your project's `Cargo.toml`.\n\n```toml\n[dependencies]\nregex = \"1\"\n```\n\n# Example: find a date\n\nGeneral use of regular expressions in this package involves compiling an\nexpression and then using it to search, split or replace text. For example,\nto confirm that some text resembles a date:\n\n```rust\nuse regex::Regex;\nlet re = Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\nassert!(re.is_match(\"2014-01-01\"));\n```\n\nNotice the use of the `^` and `$` anchors. In this crate, every expression\nis executed with an implicit `.*?` at the beginning and end, which allows\nit to match anywhere in the text. Anchors can be used to ensure that the\nfull text matches an expression.\n\nThis example also demonstrates the utility of\n[raw strings](https://doc.rust-lang.org/stable/reference/tokens.html#raw-string-literals)\nin Rust, which\nare just like regular strings except they are prefixed with an `r` and do\nnot process any escape sequences. For example, `\"\\\\d\"` is the same\nexpression as `r\"\\d\"`.\n\n# Example: Avoid compiling the same regex in a loop\n\nIt is an anti-pattern to compile the same regular expression in a loop\nsince compilation is typically expensive. (It takes anywhere from a few\nmicroseconds to a few **milliseconds** depending on the size of the\nregex.) Not only is compilation itself expensive, but this also prevents\noptimizations that reuse allocations internally to the matching engines.\n\nIn Rust, it can sometimes be a pain to pass regular expressions around if\nthey're used from inside a helper function. Instead, we recommend using the\n[`lazy_static`](https://crates.io/crates/lazy_static) crate to ensure that\nregular expressions are compiled exactly once.\n\nFor example:\n\n```rust\nuse lazy_static::lazy_static;\nuse regex::Regex;\n\nfn some_helper_function(text: &str) -> bool {\n    lazy_static! {\n        static ref RE: Regex = Regex::new(\"...\").unwrap();\n    }\n    RE.is_match(text)\n}\n\nfn main() {}\n```\n\nSpecifically, in this example, the regex will be compiled when it is used for\nthe first time. On subsequent uses, it will reuse the previous compilation.\n\n# Example: iterating over capture groups\n\nThis crate provides convenient iterators for matching an expression\nrepeatedly against a search string to find successive non-overlapping\nmatches. For example, to find all dates in a string and be able to access\nthem by their component pieces:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();\nlet text = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nfor cap in re.captures_iter(text) {\n    println!(\"Month: {} Day: {} Year: {}\", &cap[2], &cap[3], &cap[1]);\n}\n// Output:\n// Month: 03 Day: 14 Year: 2012\n// Month: 01 Day: 01 Year: 2013\n// Month: 07 Day: 05 Year: 2014\n# }\n```\n\nNotice that the year is in the capture group indexed at `1`. This is\nbecause the *entire match* is stored in the capture group at index `0`.\n\n# Example: replacement with named capture groups\n\nBuilding on the previous example, perhaps we'd like to rearrange the date\nformats. This can be done with text replacement. But to make the code\nclearer, we can *name*  our capture groups and use those names as variables\nin our replacement text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<y>\\d{4})-(?P<m>\\d{2})-(?P<d>\\d{2})\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nThe `replace` methods are actually polymorphic in the replacement, which\nprovides more flexibility than is seen here. (See the documentation for\n`Regex::replace` for more details.)\n\nNote that if your regex gets complicated, you can use the `x` flag to\nenable insignificant whitespace mode, which also lets you write comments:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?x)\n  (?P<y>\\d{4}) # the year\n  -\n  (?P<m>\\d{2}) # the month\n  -\n  (?P<d>\\d{2}) # the day\n\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nIf you wish to match against whitespace in this mode, you can still use `\\s`,\n`\\n`, `\\t`, etc. For escaping a single space character, you can escape it\ndirectly with `\\ `, use its hex character code `\\x20` or temporarily disable\nthe `x` flag, e.g., `(?-x: )`.\n\n# Example: match multiple regular expressions simultaneously\n\nThis demonstrates how to use a `RegexSet` to match multiple (possibly\noverlapping) regular expressions in a single scan of the search text:\n\n```rust\nuse regex::RegexSet;\n\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\n\n// Iterate over and collect all of the matches.\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```\n\n# Pay for what you use\n\nWith respect to searching text with a regular expression, there are three\nquestions that can be asked:\n\n1. Does the text match this expression?\n2. If so, where does it match?\n3. Where did the capturing groups match?\n\nGenerally speaking, this crate could provide a function to answer only #3,\nwhich would subsume #1 and #2 automatically. However, it can be significantly\nmore expensive to compute the location of capturing group matches, so it's best\nnot to do it if you don't need to.\n\nTherefore, only use what you need. For example, don't use `find` if you\nonly need to test if an expression matches a string. (Use `is_match`\ninstead.)\n\n# Unicode\n\nThis implementation executes regular expressions **only** on valid UTF-8\nwhile exposing match locations as byte indices into the search string. (To\nrelax this restriction, use the [`bytes`](bytes/index.html) sub-module.)\n\nOnly simple case folding is supported. Namely, when matching\ncase-insensitively, the characters are first mapped using the \"simple\" case\nfolding rules defined by Unicode.\n\nRegular expressions themselves are **only** interpreted as a sequence of\nUnicode scalar values. This means you can use Unicode characters directly\nin your expression:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)Δ+\").unwrap();\nlet mat = re.find(\"ΔδΔ\").unwrap();\nassert_eq!((mat.start(), mat.end()), (0, 6));\n# }\n```\n\nMost features of the regular expressions in this crate are Unicode aware. Here\nare some examples:\n\n* `.` will match any valid UTF-8 encoded Unicode scalar value except for `\\n`.\n  (To also match `\\n`, enable the `s` flag, e.g., `(?s:.)`.)\n* `\\w`, `\\d` and `\\s` are Unicode aware. For example, `\\s` will match all forms\n  of whitespace categorized by Unicode.\n* `\\b` matches a Unicode word boundary.\n* Negated character classes like `[^a]` match all Unicode scalar values except\n  for `a`.\n* `^` and `$` are **not** Unicode aware in multi-line mode. Namely, they only\n  recognize `\\n` and not any of the other forms of line terminators defined\n  by Unicode.\n\nUnicode general categories, scripts, script extensions, ages and a smattering\nof boolean properties are available as character classes. For example, you can\nmatch a sequence of numerals, Greek or Cherokee letters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[\\pN\\p{Greek}\\p{Cherokee}]+\").unwrap();\nlet mat = re.find(\"abcΔᎠβⅠᏴγδⅡxyz\").unwrap();\nassert_eq!((mat.start(), mat.end()), (3, 23));\n# }\n```\n\nFor a more detailed breakdown of Unicode support with respect to\n[UTS#18](https://unicode.org/reports/tr18/),\nplease see the\n[UNICODE](https://github.com/rust-lang/regex/blob/master/UNICODE.md)\ndocument in the root of the regex repository.\n\n# Opt out of Unicode support\n\nThe `bytes` sub-module provides a `Regex` type that can be used to match\non `&[u8]`. By default, text is interpreted as UTF-8 just like it is with\nthe main `Regex` type. However, this behavior can be disabled by turning\noff the `u` flag, even if doing so could result in matching invalid UTF-8.\nFor example, when the `u` flag is disabled, `.` will match any byte instead\nof any Unicode scalar value.\n\nDisabling the `u` flag is also possible with the standard `&str`-based `Regex`\ntype, but it is only allowed where the UTF-8 invariant is maintained. For\nexample, `(?-u:\\w)` is an ASCII-only `\\w` character class and is legal in an\n`&str`-based `Regex`, but `(?-u:\\xFF)` will attempt to match the raw byte\n`\\xFF`, which is invalid UTF-8 and therefore is illegal in `&str`-based\nregexes.\n\nFinally, since Unicode support requires bundling large Unicode data\ntables, this crate exposes knobs to disable the compilation of those\ndata tables, which can be useful for shrinking binary size and reducing\ncompilation times. For details on how to do that, see the section on [crate\nfeatures](#crate-features).\n\n# Syntax\n\nThe syntax supported in this crate is documented below.\n\nNote that the regular expression parser and abstract syntax are exposed in\na separate crate, [`regex-syntax`](https://docs.rs/regex-syntax).\n\n## Matching one character\n\n<pre class=\"rust\">\n.             any character except new line (includes new line with s flag)\n\\d            digit (\\p{Nd})\n\\D            not digit\n\\pN           One-letter name Unicode character class\n\\p{Greek}     Unicode character class (general category or script)\n\\PN           Negated one-letter name Unicode character class\n\\P{Greek}     negated Unicode character class (general category or script)\n</pre>\n\n### Character classes\n\n<pre class=\"rust\">\n[xyz]         A character class matching either x, y or z (union).\n[^xyz]        A character class matching any character except x, y and z.\n[a-z]         A character class matching any character in range a-z.\n[[:alpha:]]   ASCII character class ([A-Za-z])\n[[:^alpha:]]  Negated ASCII character class ([^A-Za-z])\n[x[^xyz]]     Nested/grouping character class (matching any character except y and z)\n[a-y&&xyz]    Intersection (matching x or y)\n[0-9&&[^4]]   Subtraction using intersection and negation (matching 0-9 except 4)\n[0-9--4]      Direct subtraction (matching 0-9 except 4)\n[a-g~~b-h]    Symmetric difference (matching `a` and `h` only)\n[\\[\\]]        Escaping in character classes (matching [ or ])\n</pre>\n\nAny named character class may appear inside a bracketed `[...]` character\nclass. For example, `[\\p{Greek}[:digit:]]` matches any Greek or ASCII\ndigit. `[\\p{Greek}&&\\pL]` matches Greek letters.\n\nPrecedence in character classes, from most binding to least:\n\n1. Ranges: `a-cd` == `[a-c]d`\n2. Union: `ab&&bc` == `[ab]&&[bc]`\n3. Intersection: `^a-z&&b` == `^[a-z&&b]`\n4. Negation\n\n## Composites\n\n<pre class=\"rust\">\nxy    concatenation (x followed by y)\nx|y   alternation (x or y, prefer x)\n</pre>\n\n## Repetitions\n\n<pre class=\"rust\">\nx*        zero or more of x (greedy)\nx+        one or more of x (greedy)\nx?        zero or one of x (greedy)\nx*?       zero or more of x (ungreedy/lazy)\nx+?       one or more of x (ungreedy/lazy)\nx??       zero or one of x (ungreedy/lazy)\nx{n,m}    at least n x and at most m x (greedy)\nx{n,}     at least n x (greedy)\nx{n}      exactly n x\nx{n,m}?   at least n x and at most m x (ungreedy/lazy)\nx{n,}?    at least n x (ungreedy/lazy)\nx{n}?     exactly n x\n</pre>\n\n## Empty matches\n\n<pre class=\"rust\">\n^     the beginning of text (or start-of-line with multi-line mode)\n$     the end of text (or end-of-line with multi-line mode)\n\\A    only the beginning of text (even with multi-line mode enabled)\n\\z    only the end of text (even with multi-line mode enabled)\n\\b    a Unicode word boundary (\\w on one side and \\W, \\A, or \\z on other)\n\\B    not a Unicode word boundary\n</pre>\n\n## Grouping and flags\n\n<pre class=\"rust\">\n(exp)          numbered capture group (indexed by opening parenthesis)\n(?P&lt;name&gt;exp)  named (also numbered) capture group (allowed chars: [_0-9a-zA-Z.\\[\\]])\n(?:exp)        non-capturing group\n(?flags)       set flags within current group\n(?flags:exp)   set flags for exp (non-capturing)\n</pre>\n\nFlags are each a single character. For example, `(?x)` sets the flag `x`\nand `(?-x)` clears the flag `x`. Multiple flags can be set or cleared at\nthe same time: `(?xy)` sets both the `x` and `y` flags and `(?x-y)` sets\nthe `x` flag and clears the `y` flag.\n\nAll flags are by default disabled unless stated otherwise. They are:\n\n<pre class=\"rust\">\ni     case-insensitive: letters match both upper and lower case\nm     multi-line mode: ^ and $ match begin/end of line\ns     allow . to match \\n\nU     swap the meaning of x* and x*?\nu     Unicode support (enabled by default)\nx     ignore whitespace and allow line comments (starting with `#`)\n</pre>\n\nFlags can be toggled within a pattern. Here's an example that matches\ncase-insensitively for the first part but case-sensitively for the second part:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)a+(?-i)b+\").unwrap();\nlet cap = re.captures(\"AaAaAbbBBBb\").unwrap();\nassert_eq!(&cap[0], \"AaAaAbb\");\n# }\n```\n\nNotice that the `a+` matches either `a` or `A`, but the `b+` only matches\n`b`.\n\nMulti-line mode means `^` and `$` no longer match just at the beginning/end of\nthe input, but at the beginning/end of lines:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^line \\d+\").unwrap();\nlet m = re.find(\"line one\\nline 2\\n\").unwrap();\nassert_eq!(m.as_str(), \"line 2\");\n```\n\nNote that `^` matches after new lines, even at the end of input:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^\").unwrap();\nlet m = re.find_iter(\"test\\n\").last().unwrap();\nassert_eq!((m.start(), m.end()), (5, 5));\n```\n\nHere is an example that uses an ASCII word boundary instead of a Unicode\nword boundary:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?-u:\\b).+(?-u:\\b)\").unwrap();\nlet cap = re.captures(\"$$abc$$\").unwrap();\nassert_eq!(&cap[0], \"abc\");\n# }\n```\n\n## Escape sequences\n\n<pre class=\"rust\">\n\\*          literal *, works for any punctuation character: \\.+*?()|[]{}^$\n\\a          bell (\\x07)\n\\f          form feed (\\x0C)\n\\t          horizontal tab\n\\n          new line\n\\r          carriage return\n\\v          vertical tab (\\x0B)\n\\123        octal character code (up to three digits) (when enabled)\n\\x7F        hex character code (exactly two digits)\n\\x{10FFFF}  any hex character code corresponding to a Unicode code point\n\\u007F      hex character code (exactly four digits)\n\\u{7F}      any hex character code corresponding to a Unicode code point\n\\U0000007F  hex character code (exactly eight digits)\n\\U{7F}      any hex character code corresponding to a Unicode code point\n</pre>\n\n## Perl character classes (Unicode friendly)\n\nThese classes are based on the definitions provided in\n[UTS#18](https://www.unicode.org/reports/tr18/#Compatibility_Properties):\n\n<pre class=\"rust\">\n\\d     digit (\\p{Nd})\n\\D     not digit\n\\s     whitespace (\\p{White_Space})\n\\S     not whitespace\n\\w     word character (\\p{Alphabetic} + \\p{M} + \\d + \\p{Pc} + \\p{Join_Control})\n\\W     not word character\n</pre>\n\n## ASCII character classes\n\n<pre class=\"rust\">\n[[:alnum:]]    alphanumeric ([0-9A-Za-z])\n[[:alpha:]]    alphabetic ([A-Za-z])\n[[:ascii:]]    ASCII ([\\x00-\\x7F])\n[[:blank:]]    blank ([\\t ])\n[[:cntrl:]]    control ([\\x00-\\x1F\\x7F])\n[[:digit:]]    digits ([0-9])\n[[:graph:]]    graphical ([!-~])\n[[:lower:]]    lower case ([a-z])\n[[:print:]]    printable ([ -~])\n[[:punct:]]    punctuation ([!-/:-@\\[-`{-~])\n[[:space:]]    whitespace ([\\t\\n\\v\\f\\r ])\n[[:upper:]]    upper case ([A-Z])\n[[:word:]]     word characters ([0-9A-Za-z_])\n[[:xdigit:]]   hex digit ([0-9A-Fa-f])\n</pre>\n\n# Crate features\n\nBy default, this crate tries pretty hard to make regex matching both as fast\nas possible and as correct as it can be, within reason. This means that there\nis a lot of code dedicated to performance, the handling of Unicode data and the\nUnicode data itself. Overall, this leads to more dependencies, larger binaries\nand longer compile times.  This trade off may not be appropriate in all cases,\nand indeed, even when all Unicode and performance features are disabled, one\nis still left with a perfectly serviceable regex engine that will work well\nin many cases.\n\nThis crate exposes a number of features for controlling that trade off. Some\nof these features are strictly performance oriented, such that disabling them\nwon't result in a loss of functionality, but may result in worse performance.\nOther features, such as the ones controlling the presence or absence of Unicode\ndata, can result in a loss of functionality. For example, if one disables the\n`unicode-case` feature (described below), then compiling the regex `(?i)a`\nwill fail since Unicode case insensitivity is enabled by default. Instead,\ncallers must use `(?i-u)a` instead to disable Unicode case folding. Stated\ndifferently, enabling or disabling any of the features below can only add or\nsubtract from the total set of valid regular expressions. Enabling or disabling\na feature will never modify the match semantics of a regular expression.\n\nAll features below are enabled by default.\n\n### Ecosystem features\n\n* **std** -\n  When enabled, this will cause `regex` to use the standard library. Currently,\n  disabling this feature will always result in a compilation error. It is\n  intended to add `alloc`-only support to regex in the future.\n\n### Performance features\n\n* **perf** -\n  Enables all performance related features. This feature is enabled by default\n  and will always cover all features that improve performance, even if more\n  are added in the future.\n* **perf-dfa** -\n  Enables the use of a lazy DFA for matching. The lazy DFA is used to compile\n  portions of a regex to a very fast DFA on an as-needed basis. This can\n  result in substantial speedups, usually by an order of magnitude on large\n  haystacks. The lazy DFA does not bring in any new dependencies, but it can\n  make compile times longer.\n* **perf-inline** -\n  Enables the use of aggressive inlining inside match routines. This reduces\n  the overhead of each match. The aggressive inlining, however, increases\n  compile times and binary size.\n* **perf-literal** -\n  Enables the use of literal optimizations for speeding up matches. In some\n  cases, literal optimizations can result in speedups of _several_ orders of\n  magnitude. Disabling this drops the `aho-corasick` and `memchr` dependencies.\n* **perf-cache** -\n  This feature used to enable a faster internal cache at the cost of using\n  additional dependencies, but this is no longer an option. A fast internal\n  cache is now used unconditionally with no additional dependencies. This may\n  change in the future.\n\n### Unicode features\n\n* **unicode** -\n  Enables all Unicode features. This feature is enabled by default, and will\n  always cover all Unicode features, even if more are added in the future.\n* **unicode-age** -\n  Provide the data for the\n  [Unicode `Age` property](https://www.unicode.org/reports/tr44/tr44-24.html#Character_Age).\n  This makes it possible to use classes like `\\p{Age:6.0}` to refer to all\n  codepoints first introduced in Unicode 6.0\n* **unicode-bool** -\n  Provide the data for numerous Unicode boolean properties. The full list\n  is not included here, but contains properties like `Alphabetic`, `Emoji`,\n  `Lowercase`, `Math`, `Uppercase` and `White_Space`.\n* **unicode-case** -\n  Provide the data for case insensitive matching using\n  [Unicode's \"simple loose matches\" specification](https://www.unicode.org/reports/tr18/#Simple_Loose_Matches).\n* **unicode-gencat** -\n  Provide the data for\n  [Unicode general categories](https://www.unicode.org/reports/tr44/tr44-24.html#General_Category_Values).\n  This includes, but is not limited to, `Decimal_Number`, `Letter`,\n  `Math_Symbol`, `Number` and `Punctuation`.\n* **unicode-perl** -\n  Provide the data for supporting the Unicode-aware Perl character classes,\n  corresponding to `\\w`, `\\s` and `\\d`. This is also necessary for using\n  Unicode-aware word boundary assertions. Note that if this feature is\n  disabled, the `\\s` and `\\d` character classes are still available if the\n  `unicode-bool` and `unicode-gencat` features are enabled, respectively.\n* **unicode-script** -\n  Provide the data for\n  [Unicode scripts and script extensions](https://www.unicode.org/reports/tr24/).\n  This includes, but is not limited to, `Arabic`, `Cyrillic`, `Hebrew`,\n  `Latin` and `Thai`.\n* **unicode-segment** -\n  Provide the data necessary to provide the properties used to implement the\n  [Unicode text segmentation algorithms](https://www.unicode.org/reports/tr29/).\n  This enables using classes like `\\p{gcb=Extend}`, `\\p{wb=Katakana}` and\n  `\\p{sb=ATerm}`.\n\n\n# Untrusted input\n\nThis crate can handle both untrusted regular expressions and untrusted\nsearch text.\n\nUntrusted regular expressions are handled by capping the size of a compiled\nregular expression.\n(See [`RegexBuilder::size_limit`](struct.RegexBuilder.html#method.size_limit).)\nWithout this, it would be trivial for an attacker to exhaust your system's\nmemory with expressions like `a{100}{100}{100}`.\n\nUntrusted search text is allowed because the matching engine(s) in this\ncrate have time complexity `O(mn)` (with `m ~ regex` and `n ~ search\ntext`), which means there's no way to cause exponential blow-up like with\nsome other regular expression engines. (We pay for this by disallowing\nfeatures like arbitrary look-ahead and backreferences.)\n\nWhen a DFA is used, pathological cases with exponential state blow-up are\navoided by constructing the DFA lazily or in an \"online\" manner. Therefore,\nat most one new state can be created for each byte of input. This satisfies\nour time complexity guarantees, but can lead to memory growth\nproportional to the size of the input. As a stopgap, the DFA is only\nallowed to store a fixed number of states. When the limit is reached, its\nstates are wiped and continues on, possibly duplicating previous work. If\nthe limit is reached too frequently, it gives up and hands control off to\nanother matching engine with fixed memory requirements.\n(The DFA size limit can also be tweaked. See\n[`RegexBuilder::dfa_size_limit`](struct.RegexBuilder.html#method.dfa_size_limit).)","links":{},"attrs":["#![deny(missing_docs)]","#![warn(missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:55:1577","0:2017:127","0:2594:3530","0:2528:3450","0:2788:2881","0:2793:4063","0:2800:4097","0:2805:4096","0:1459:1561","0:3011:1562","0:3031:1563","0:2983:1564","0:1565:1565","0:2954:1567","0:3040:1568","0:3058:1569","0:2978:1570","0:1641:1571","0:3049:1572","0:2993:1573","0:3002:1574","0:3018:1575"]}},"0:1493:3655":{"id":"0:1493:3655","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_unicode.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    println!(\"Movie: {:?}, Released: {:?}\",\n             &caps[\"title\"], &caps[\"year\"]);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2664:1564":{"id":"a:2:3247:209-0:2664:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3168-0:2561:3530":{"id":"b:2:3168-0:2561:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6078:2439":{"id":"5:6078:2439","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:3040:1568":{"id":"a:2:3235:200-0:3040:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1280:738":{"id":"0:1280:738","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1048,4],"end":[1052,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2895:4063":{"id":"b:2:3174-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3164-0:2674:1562":{"id":"b:2:3164-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3049:1572":{"id":"0:3049:1572","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_unicode.rs","begin":[1213,0],"end":[1213,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:3049:1572","a:2:9217:3222-0:3049:1572","a:2:3235:200-0:3049:1572","a:2:3247:209-0:3049:1572","a:2:9218:3221-0:3049:1572","b:2:3164-0:3049:1572","b:2:2838-0:3049:1572","b:2:3964-0:3049:1572","b:2:3179-0:3049:1572","b:2:3174-0:3049:1572","b:2:2841-0:3049:1572","b:2:3168-0:3049:1572","0:3054","0:1647"]}},"2:3406:4821":{"id":"2:3406:4821","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:1215"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2963:396":{"id":"0:2963:396","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13417:62352":{"id":"2:13417:62352","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412","str::split":"1:15781:4417","str::split_terminator":"1:15781:4417"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49379:4865","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2703:1569":{"id":"b:2:2838-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1574:884":{"id":"0:1574:884","crate_id":0,"name":"name","span":{"filename":"src/re_unicode.rs","begin":[954,4],"end":[956,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:3221-0:2528:3450":{"id":"a:2:9218:3221-0:2528:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:3002:1574":{"id":"b:2:3164-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2770:4103":{"id":"0:2770:4103","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1303:3750":{"id":"0:1303:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1128,4],"end":[1130,5]},"visibility":"default","docs":"Return a fixed unchanging replacement byte string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2674:1562":{"id":"b:2:3964-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:2703:1569":{"id":"b:2:3174-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1319:3753":{"id":"0:1319:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1184,4],"end":[1186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:2623:1570":{"id":"a:2:9217:3222-0:2623:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:1243:1565":{"id":"a:2:9218:3221-0:1243:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2594:3530":{"id":"0:2594:3530","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2579","a:2:3276:4874-0:2594:3530","a:2:9217:3222-0:2594:3530","a:2:3235:200-0:2594:3530","a:2:3247:209-0:2594:3530","a:2:9218:3221-0:2594:3530","b:2:3164-0:2594:3530","b:2:2838-0:2594:3530","b:2:3964-0:2594:3530","b:2:3179-0:2594:3530","b:2:3174-0:2594:3530","b:2:2841-0:2594:3530","b:2:3168-0:2594:3530","0:2597"]}},"0:1256:1584":{"id":"0:1256:1584","crate_id":0,"name":"expand","span":{"filename":"src/re_bytes.rs","begin":[978,4],"end":[980,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of valid UTF-8 bytes is permitted. If the\nsequence does not refer to a capture group name in the corresponding\nregex, then it is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["replacement",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2664:1564":{"id":"b:2:3168-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:2637:1563":{"id":"a:2:3235:200-0:2637:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3276:4874-0:2703:1569":{"id":"a:2:3276:4874-0:2703:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:2599:1567":{"id":"a:2:9218:3221-0:2599:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3048:646":{"id":"0:3048:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1469:667":{"id":"0:1469:667","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2594:3530":{"id":"a:2:3235:200-0:2594:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:2599:1567":{"id":"b:2:3164-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:3011:1562":{"id":"b:2:3174-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2522:2742":{"id":"0:2522:2742","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4605:5305":{"id":"1:4605:5305","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4606:2607","1:4607:57296","1:4609:57297","1:4610:6892","1:4611:57298","1:4612:57299","1:4613:5187","1:4622:3939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9217:3222-0:2983:1564":{"id":"a:2:9217:3222-0:2983:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1331:3750":{"id":"0:1331:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1218,4],"end":[1220,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3235:200":{"id":"2:3235:200","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1240:1779":{"id":"0:1240:1779","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[876,4],"end":[878,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[744,0],"end":[766,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1212:2000","0:1213:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3330:4803":{"id":"2:3330:4803","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3331:171","2:3332:898"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2584:2738":{"id":"0:2584:2738","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1185":{"id":"0:1185","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[654,0],"end":[684,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1186:294","0:1187:2891","0:1188:3794","0:1189:3638"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1654:3753":{"id":"0:1654:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1225,4],"end":[1227,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2599:1567":{"id":"b:2:3168-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2523:1532":{"id":"0:2523:1532","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:3040:1568":{"id":"a:2:3276:4874-0:3040:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3276:4874-0:2497:3450":{"id":"a:2:3276:4874-0:2497:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8366-0:2805:4096":{"id":"b:2:8366-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:13481:2558":{"id":"2:13481:2558","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15775:4412"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49619:4674","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2978:1570":{"id":"b:2:3164-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2892:124":{"id":"2:2892:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9218:3221-0:3031:1563":{"id":"a:2:9218:3221-0:3031:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2484":{"id":"0:2484","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2471:1577","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2485:905","0:2486:2745","0:2487:2738","0:2488:2739","0:2489:2740","0:2490:2741","0:2491:2742","0:2492:1532","0:2493:2737","0:2494:1819","0:2495:2126","0:2496:2744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1531":{"id":"0:1531","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[753,0],"end":[770,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:1533:2000","0:1534:907","0:1537:3814","0:1538:482"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2561:3530":{"id":"a:2:9218:3221-0:2561:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13358:62345":{"id":"2:13358:62345","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2739:905":{"id":"0:2739:905","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3132:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2654:646":{"id":"0:2654:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[738,9],"end":[738,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:2599:1567":{"id":"b:2:2841-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2868:2000":{"id":"0:2868:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:2890:2881":{"id":"0:2890:2881","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::bytes::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(b\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(b\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(b\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(b\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Regex":"0:2978:1570","crate::Captures":"0:1565:1565","crate::Match":"0:2954:1567"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2840","a:2:3276:4874-0:2890:2881","a:2:9217:3222-0:2890:2881","a:2:3235:200-0:2890:2881","a:2:3247:209-0:2890:2881","a:2:9218:3221-0:2890:2881","b:2:3164-0:2890:2881","b:2:2838-0:2890:2881","b:2:3964-0:2890:2881","b:2:3179-0:2890:2881","b:2:3174-0:2890:2881","b:2:2841-0:2890:2881","b:2:3168-0:2890:2881","b:5:787-0:2890:2881","0:2893","0:2886"]}},"a:2:3247:209-0:2978:1570":{"id":"a:2:3247:209-0:2978:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2561:3530":{"id":"0:2561:3530","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2546","a:2:3276:4874-0:2561:3530","a:2:9217:3222-0:2561:3530","a:2:3235:200-0:2561:3530","a:2:3247:209-0:2561:3530","a:2:9218:3221-0:2561:3530","b:2:3164-0:2561:3530","b:2:2838-0:2561:3530","b:2:3964-0:2561:3530","b:2:3179-0:2561:3530","b:2:3174-0:2561:3530","b:2:2841-0:2561:3530","b:2:3168-0:2561:3530","0:2564"]}},"2:13370:11106":{"id":"2:13370:11106","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47347:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:3221-0:2628:1568":{"id":"a:2:9218:3221-0:2628:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1134:646":{"id":"0:1134:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:783:211":{"id":"5:783:211","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:3752","5:785:2560","5:786:5390"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3174-0:3002:1574":{"id":"b:2:3174-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:2694:1572":{"id":"b:2:3168-0:2694:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2978:1570":{"id":"0:2978:1570","crate_id":0,"name":"Regex","span":{"filename":"src/re_unicode.rs","begin":[136,0],"end":[136,23]},"visibility":"public","docs":"A compiled regular expression for matching Unicode strings.\n\nIt is represented as either a sequence of bytecode instructions (dynamic)\nor as a specialized Rust function (native). It can be used to search, split\nor replace text. All searching is done with an implicit `.*?` at the\nbeginning and end of an expression. To force an expression to match the\nwhole string (or a prefix or a suffix), you must use an anchor like `^` or\n`$` (or `\\A` and `\\z`).\n\nWhile this crate will handle Unicode strings (whether in the regular\nexpression or in the search text), all positions returned are **byte\nindices**. Every byte index is guaranteed to be at a Unicode code point\nboundary.\n\nThe lifetimes `'r` and `'t` in this crate correspond to the lifetime of a\ncompiled regular expression and text to search, respectively.\n\nThe only methods that allocate new strings are the string replacement\nmethods. All other methods (searching and splitting) return borrowed\npointers into the string given.\n\n# Examples\n\nFind the location of a US phone number:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(\"[0-9]{3}-[0-9]{3}-[0-9]{4}\").unwrap();\nlet mat = re.find(\"phone: 111-222-3333\").unwrap();\nassert_eq!((mat.start(), mat.end()), (7, 19));\n```\n\n# Using the `std::str::pattern` methods with `Regex`\n\n> **Note**: This section requires that this crate is compiled with the\n> `pattern` Cargo feature enabled, which **requires nightly Rust**.\n\nSince `Regex` implements `Pattern`, you can use regexes with methods\ndefined on `&str`. For example, `is_match`, `find`, `find_iter`\nand `split` can be replaced with `str::contains`, `str::find`,\n`str::match_indices` and `str::split`.\n\nHere are some examples:\n\n```rust,ignore\n# use regex::Regex;\nlet re = Regex::new(r\"\\d+\").unwrap();\nlet haystack = \"a111b222c\";\n\nassert!(haystack.contains(&re));\nassert_eq!(haystack.find(&re), Some(1));\nassert_eq!(haystack.match_indices(&re).collect::<Vec<_>>(),\n           vec![(1, \"111\"), (5, \"222\")]);\nassert_eq!(haystack.split(&re).collect::<Vec<_>>(), vec![\"a\", \"b\", \"c\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1482","0:1511","0:1525","a:2:3276:4874-0:2978:1570","a:2:9217:3222-0:2978:1570","a:2:3235:200-0:2978:1570","a:2:3247:209-0:2978:1570","a:2:9218:3221-0:2978:1570","b:2:3164-0:2978:1570","b:2:2838-0:2978:1570","b:2:3964-0:2978:1570","b:2:3179-0:2978:1570","b:2:3174-0:2978:1570","b:2:2841-0:2978:1570","b:2:3168-0:2978:1570","b:5:787-0:2978:1570","b:5:6406-0:2978:1570","0:2981","0:1473","0:1475","0:1479"]}},"0:2693:646":{"id":"0:2693:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1086,16],"end":[1086,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13432:1726":{"id":"2:13432:1726","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:15775:4412","self::pattern":"2:12992:1553","str::matches":"1:15781:4417","`DoubleEndedIterator`":"2:8406:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49515:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2793:4063":{"id":"a:2:3247:209-0:2793:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1165:3746":{"id":"0:1165:3746","crate_id":0,"name":"replace_all","span":{"filename":"src/re_bytes.rs","begin":[471,4],"end":[477,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2983:1564":{"id":"a:2:3235:200-0:2983:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3235:200-0:2628:1568":{"id":"a:2:3235:200-0:2628:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3135:74":{"id":"2:3135:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3137:5341"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1283":{"id":"0:1283","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1067,0],"end":[1075,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3539:3537","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1286:171","0:1287:738"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2846:2232":{"id":"0:2846:2232","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3247:209":{"id":"2:3247:209","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3164-0:2983:1564":{"id":"b:2:3164-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:3011:1562":{"id":"b:2:3168-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:3031:1563":{"id":"a:2:3276:4874-0:3031:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1626:2000":{"id":"0:1626:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1122,4],"end":[1122,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"2:10261:5311":{"id":"2:10261:5311","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10262:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2680:646":{"id":"0:2680:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[859,16],"end":[859,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2874":{"id":"0:2874","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2876:2000","0:2877:907","0:2878:3814"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2636:646":{"id":"0:2636:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[694,9],"end":[694,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1632":{"id":"0:1632","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1145,0],"end":[1152,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1635:2000","0:1636:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8431:3819":{"id":"2:8431:3819","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8432:778","2:8433:1768"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1582:646":{"id":"0:1582:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1003,4],"end":[1005,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:3049:1572":{"id":"b:2:3164-0:3049:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:2623:1570":{"id":"b:2:3168-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2546":{"id":"0:2546","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2533:1578","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2547:905","0:2550:2745","0:2551:2738","0:2552:2739","0:2553:2740","0:2554:2741","0:2555:2742","0:2556:1532","0:2557:2737","0:2558:1819","0:2559:2126","0:2560:2744"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2923:167":{"id":"2:2923:167","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2924:402","2:2925:2018","2:2926:2016","2:2927:5340"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3454:116":{"id":"2:3454:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3455:210","2:3456:530"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10533:5492":{"id":"2:10533:5492","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10534:146","2:10535:35908","2:10536:56967"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3247:209-0:2528:3450":{"id":"a:2:3247:209-0:2528:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3393:4818":{"id":"2:3393:4818","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3395:342"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1133":{"id":"0:1133","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[80,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10257:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1134:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2895:4063":{"id":"b:2:3179-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2838-0:2664:1564":{"id":"b:2:2838-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1156:1882":{"id":"0:1156:1882","crate_id":0,"name":"split","span":{"filename":"src/re_bytes.rs","begin":[317,4],"end":[319,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&[u8]> = re.split(b\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\n    &b\"a\"[..], &b\"b\"[..], &b\"c\"[..], &b\"d\"[..], &b\"e\"[..],\n]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2895:4063":{"id":"a:2:3235:200-0:2895:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2841-0:3031:1563":{"id":"b:2:2841-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:1565:1565":{"id":"b:2:3179-0:1565:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:209-0:2954:1567":{"id":"a:2:3247:209-0:2954:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9217:3222":{"id":"2:9217:3222","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:2703:1569":{"id":"b:5:787-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:3011:1562":{"id":"a:2:3276:4874-0:3011:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2664:1564":{"id":"b:2:3179-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2978:1570":{"id":"b:2:3179-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:2703:1569":{"id":"a:2:3235:200-0:2703:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1324":{"id":"0:1324","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1203,0],"end":[1211,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"items":["0:1326:3753","0:1327:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3168-0:2983:1564":{"id":"b:2:3168-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3016":{"id":"0:3016","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3017:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2681:1575":{"id":"b:5:787-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1286:171":{"id":"0:1286:171","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1068,4],"end":[1068,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"0:1142":{"id":"0:1142","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[114,0],"end":[531,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1143:905","0:1144:2232","0:1145:2491","0:1147:3598","0:1150:1872","0:1153:3655","0:1156:1882","0:1159:3676","0:1162:2439","0:1165:3746","0:1168:3740"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1608":{"id":"0:1608","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1087,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1611:2000","0:1612:907","0:1615:3814","0:1616:482"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2619":{"id":"0:2619","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2621:591","0:2622:892"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2882":{"id":"0:2882","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2840":{"id":"0:2840","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2841:905","0:2844:2734","0:2846:2232","0:2848:1726","0:2850:778","0:2851:1768","0:2852:3531"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3481:130":{"id":"2:3481:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3483:364"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3484:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:3058:1569":{"id":"b:5:787-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2877:907":{"id":"0:2877:907","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2954:1567":{"id":"b:2:3164-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2772":{"id":"0:2772","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2774:2000","0:2775:907","0:2776:3814"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2519:2739":{"id":"0:2519:2739","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22805:6001":{"id":"2:22805:6001","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22795:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3964-0:2017:127":{"id":"b:2:3964-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1334":{"id":"0:1334","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1231,0],"end":[1239,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3484:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"generic","inner":"T"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3132:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"generic","inner":"F"},"items":["0:1337:3753"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13467:62366":{"id":"2:13467:62366","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1125:1303":{"id":"0:1125:1303","crate_id":0,"name":"start","span":{"filename":"src/re_bytes.rs","begin":[30,4],"end":[32,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:3002:1574":{"id":"a:2:3235:200-0:3002:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1603:171":{"id":"0:1603:171","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1063,4],"end":[1063,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"b:2:8366-0:2646:1573":{"id":"b:2:8366-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1228:2000":{"id":"0:1228:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[822,4],"end":[822,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}},"0:2703:1569":{"id":"0:2703:1569","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_bytes.rs","begin":[1250,0],"end":[1250,38]},"visibility":"public","docs":"`NoExpand` indicates literal byte string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal byte string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:2706:1515"],"impls":["a:2:3276:4874-0:2703:1569","a:2:9217:3222-0:2703:1569","a:2:3235:200-0:2703:1569","a:2:3247:209-0:2703:1569","a:2:9218:3221-0:2703:1569","b:2:3164-0:2703:1569","b:2:2838-0:2703:1569","b:2:3964-0:2703:1569","b:2:3179-0:2703:1569","b:2:3174-0:2703:1569","b:2:2841-0:2703:1569","b:2:3168-0:2703:1569","b:5:787-0:2703:1569","0:2707","0:2710","0:1338"]}},"0:1527:2891":{"id":"0:1527:2891","crate_id":0,"name":"capture_names","span":{"filename":"src/re_unicode.rs","begin":[719,4],"end":[721,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4630:6022":{"id":"1:4630:6022","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4631:57482","1:4632:57483","1:4633:57484","1:4635:6021","1:4636:57485","1:4638:1882","1:4639:6969"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4548:5986","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3377:4815":{"id":"2:3377:4815","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:171","2:3380:1211"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2841-0:2646:1573":{"id":"b:2:2841-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:2528:3450":{"id":"b:2:3168-0:2528:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:3049:1572":{"id":"b:2:3179-0:3049:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2646:1573":{"id":"a:2:9217:3222-0:2646:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13391:58856":{"id":"2:13391:58856","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:15775:4412","self::pattern":"2:12992:1553"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1239":{"id":"0:1239","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[870,0],"end":[899,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1240:1779","0:1241:778"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2838-0:2895:4063":{"id":"b:2:2838-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2967":{"id":"0:2967","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3244:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3174-0:1243:1565":{"id":"b:2:3174-0:1243:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1525":{"id":"0:1525","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[712,0],"end":[742,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1526:294","0:1527:2891","0:1528:3794","0:1529:3638"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3164-0:2497:3450":{"id":"b:2:3164-0:2497:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:209-0:2681:1575":{"id":"a:2:3247:209-0:2681:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1476:646":{"id":"0:1476:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2623:1570":{"id":"b:2:3964-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5663:5974":{"id":"1:5663:5974","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5664:9927","1:5665:55951","1:5666:8115","1:5667:55952","1:5668:6257","1:5669:6258","1:5670:55953","1:5671:1282","1:5672:55954","1:5673:55955","1:5674:55956","1:5675:55957","1:5676:55958","1:5677:55959","1:5678:55960","1:5679:55961"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3247:209-0:2561:3530":{"id":"a:2:3247:209-0:2561:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6081:3740":{"id":"5:6081:3740","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2851:1768":{"id":"0:2851:1768","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1143:905":{"id":"0:1143:905","crate_id":0,"name":"new","span":{"filename":"src/re_bytes.rs","begin":[119,4],"end":[121,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2528:3450":{"id":"a:2:3276:4874-0:2528:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3026:396":{"id":"0:3026:396","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:3002:1574":{"id":"a:2:3247:209-0:3002:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1659:3750":{"id":"0:1659:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1239,4],"end":[1241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2961":{"id":"0:2961","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2963:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3164-0:3018:1575":{"id":"b:2:3164-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13429:62354":{"id":"2:13429:62354","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1241:778":{"id":"0:1241:778","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[885,4],"end":[887,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2793:4063":{"id":"b:2:3164-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5711:5977":{"id":"1:5711:5977","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5712:55830"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2954:1567":{"id":"0:2954:1567","crate_id":0,"name":"Match","span":{"filename":"src/re_unicode.rs","begin":[29,0],"end":[33,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1460","a:2:3276:4874-0:2954:1567","a:2:9217:3222-0:2954:1567","a:2:3235:200-0:2954:1567","a:2:3247:209-0:2954:1567","a:2:9218:3221-0:2954:1567","b:2:3164-0:2954:1567","b:2:2838-0:2954:1567","b:2:3964-0:2954:1567","b:2:3179-0:2954:1567","b:2:3174-0:2954:1567","b:2:2841-0:2954:1567","b:2:3168-0:2954:1567","b:5:787-0:2954:1567","0:2959","0:2961","0:2964","0:2967","0:2969","0:2972","0:2974","0:1467","0:1470"]}},"0:1600":{"id":"0:1600","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1062,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3539:3537","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1603:171","0:1604:738"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3276:4874-0:3018:1575":{"id":"a:2:3276:4874-0:3018:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'t","bounds":[{"outlives":"'c"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1254:764":{"id":"0:1254:764","crate_id":0,"name":"iter","span":{"filename":"src/re_bytes.rs","begin":[953,4],"end":[955,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'c","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13002:4841":{"id":"2:13002:4841","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13004:3125","2:13005:61373","2:13006:61374","2:13007:61375","2:13008:61377","2:13009:61376","2:13010:61378"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3467:4691":{"id":"2:3467:4691","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3468:532"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3454:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1528:3794":{"id":"0:1528:3794","crate_id":0,"name":"captures_len","span":{"filename":"src/re_unicode.rs","begin":[724,4],"end":[726,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13361:62347":{"id":"2:13361:62347","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15781:4417"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3002:1574":{"id":"0:3002:1574","crate_id":0,"name":"SplitN","span":{"filename":"src/re_unicode.rs","begin":[819,0],"end":[822,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:3002:1574","a:2:9217:3222-0:3002:1574","a:2:3235:200-0:3002:1574","a:2:3247:209-0:3002:1574","a:2:9218:3221-0:3002:1574","b:2:3164-0:3002:1574","b:2:2838-0:3002:1574","b:2:3964-0:3002:1574","b:2:8366-0:3002:1574","b:2:3179-0:3002:1574","b:2:3174-0:3002:1574","b:2:2841-0:3002:1574","b:2:3168-0:3002:1574","0:3007","0:1551","0:1557"]}},"b:2:2838-0:2655:1574":{"id":"b:2:2838-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1651:3750":{"id":"0:1651:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1219,4],"end":[1221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5719:5979":{"id":"1:5719:5979","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720:8115"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13476:55891":{"id":"2:13476:55891","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2664:1564":{"id":"b:2:3164-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13357:1768":{"id":"2:13357:1768","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1663":{"id":"0:1663","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1254,0],"end":[1262,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"items":["0:1665:3753","0:1666:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8838:3536":{"id":"2:8838:3536","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2841-0:3040:1568":{"id":"b:2:2841-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:2993:1573":{"id":"b:2:3964-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3401:4820":{"id":"2:3401:4820","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:1212"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:8366-0:3031:1563":{"id":"b:2:8366-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:3276:4874-0:2623:1570":{"id":"a:2:3276:4874-0:2623:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6712:5953":{"id":"1:6712:5953","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6713:9397"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3964-0:2694:1572":{"id":"b:2:3964-0:2694:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1140:126":{"id":"0:1140:126","crate_id":0,"name":"Err","span":{"filename":"src/re_bytes.rs","begin":[105,4],"end":[105,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:1616:482":{"id":"0:1616:482","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[1100,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2637:1563":{"id":"b:2:3179-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:2637:1563":{"id":"a:2:9218:3221-0:2637:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3168-0:2805:4096":{"id":"b:2:3168-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3774:4831":{"id":"2:3774:4831","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:2902:4097":{"id":"b:2:3179-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1518:3782":{"id":"0:1518:3782","crate_id":0,"name":"captures_read","span":{"filename":"src/re_unicode.rs","begin":[669,4],"end":[675,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2887:173":{"id":"2:2887:173","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:591","2:2890:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2844:2734":{"id":"0:2844:2734","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1200":{"id":"0:1200","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[720,0],"end":[730,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1203:2000","0:1204:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3235:200-0:2017:127":{"id":"a:2:3235:200-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13448:62360":{"id":"2:13448:62360","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2622:892":{"id":"0:2622:892","crate_id":0,"name":"ne","span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2681:1575":{"id":"a:2:3276:4874-0:2681:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'t","bounds":[{"outlives":"'c"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1512:3766":{"id":"0:1512:3766","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_unicode.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:790:2560":{"id":"5:790:2560","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2486:2745":{"id":"0:2486:2745","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1643:3750":{"id":"0:1643:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1179,4],"end":[1181,5]},"visibility":"default","docs":"Return a fixed unchanging replacement string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10271:5315":{"id":"2:10271:5315","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10272:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2792:396":{"id":"0:2792:396","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2871":{"id":"0:2871","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8406:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2872:4103"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2565:646":{"id":"0:2565:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:2703:1569":{"id":"a:2:9217:3222-0:2703:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2738":{"id":"0:2738","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2739:905","0:2742:2734","0:2744:2232","0:2746:1726","0:2748:778","0:2749:1768","0:2750:3531"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2841-0:2993:1573":{"id":"b:2:2841-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1667":{"id":"0:1667","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1264,0],"end":[1272,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:1669:3753","0:1670:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2655:1574":{"id":"a:2:9218:3221-0:2655:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:1565:1565":{"id":"b:2:3164-0:1565:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13374:59148":{"id":"2:13374:59148","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:8370:753":{"id":"2:8370:753","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2646:1573":{"id":"0:2646:1573","crate_id":0,"name":"Split","span":{"filename":"src/re_bytes.rs","begin":[739,0],"end":[742,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2646:1573","a:2:9217:3222-0:2646:1573","a:2:3235:200-0:2646:1573","a:2:3247:209-0:2646:1573","a:2:9218:3221-0:2646:1573","b:2:3164-0:2646:1573","b:2:2838-0:2646:1573","b:2:3964-0:2646:1573","b:2:8366-0:2646:1573","b:2:3179-0:2646:1573","b:2:3174-0:2646:1573","b:2:2841-0:2646:1573","b:2:3168-0:2646:1573","0:2651","0:1209","0:1214"]}},"2:3244:206":{"id":"2:3244:206","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8845:4625":{"id":"2:8845:4625","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7886:4613","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9217:3222-0:2954:1567":{"id":"a:2:9217:3222-0:2954:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:2674:1562":{"id":"a:2:9218:3221-0:2674:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2528:3450":{"id":"0:2528:3450","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2515","a:2:3276:4874-0:2528:3450","a:2:9217:3222-0:2528:3450","a:2:3235:200-0:2528:3450","a:2:3247:209-0:2528:3450","a:2:9218:3221-0:2528:3450","b:2:3164-0:2528:3450","b:2:2838-0:2528:3450","b:2:3964-0:2528:3450","b:2:3179-0:2528:3450","b:2:3174-0:2528:3450","b:2:2841-0:2528:3450","b:2:3168-0:2528:3450","0:2531"]}},"0:2490:2741":{"id":"0:2490:2741","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3484:131":{"id":"2:3484:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3486:365"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3487:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:2017:127":{"id":"b:5:787-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2861:753":{"id":"0:2861:753","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8362:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2873":{"id":"0:2873","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:55:1577":{"id":"0:55:1577","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[725,0],"end":[725,13]},"visibility":"public","docs":"Match regular expressions on arbitrary bytes.\n\nThis module provides a nearly identical API to the one found in the\ntop-level of this crate. There are two important differences:\n\n1. Matching is done on `&[u8]` instead of `&str`. Additionally, `Vec<u8>`\nis used where `String` would have been used.\n2. Unicode support can be disabled even when disabling it would result in\nmatching invalid UTF-8 bytes.\n\n# Example: match null terminated string\n\nThis shows how to find all null-terminated strings in a slice of bytes:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"(?-u)(?P<cstr>[^\\x00]+)\\x00\").unwrap();\nlet text = b\"foo\\x00bar\\x00baz\\x00\";\n\n// Extract all of the strings without the null terminator from each match.\n// The unwrap is OK here since a match requires the `cstr` capture to match.\nlet cstrs: Vec<&[u8]> =\n    re.captures_iter(text)\n      .map(|c| c.name(\"cstr\").unwrap().as_bytes())\n      .collect();\nassert_eq!(vec![&b\"foo\"[..], &b\"bar\"[..], &b\"baz\"[..]], cstrs);\n```\n\n# Example: selectively enable Unicode support\n\nThis shows how to match an arbitrary byte pattern followed by a UTF-8 encoded\nstring (e.g., to extract a title from a Matroska file):\n\n```rust\n# use std::str;\n# use regex::bytes::Regex;\nlet re = Regex::new(\n    r\"(?-u)\\x7b\\xa9(?:[\\x80-\\xfe]|[\\x40-\\xff].)(?u:(.*))\"\n).unwrap();\nlet text = b\"\\x12\\xd0\\x3b\\x5f\\x7b\\xa9\\x85\\xe2\\x98\\x83\\x80\\x98\\x54\\x76\\x68\\x65\";\nlet caps = re.captures(text).unwrap();\n\n// Notice that despite the `.*` at the end, it will only match valid UTF-8\n// because Unicode mode was enabled with the `u` flag. Without the `u` flag,\n// the `.*` would match the rest of the bytes.\nlet mat = caps.get(1).unwrap();\nassert_eq!((7, 10), (mat.start(), mat.end()));\n\n// If there was a match, Unicode mode guarantees that `title` is valid UTF-8.\nlet title = str::from_utf8(&caps[1]).unwrap();\nassert_eq!(\"☃\", title);\n```\n\nIn general, if the Unicode flag is enabled in a capture group and that capture\nis part of the overall match, then the capture is *guaranteed* to be valid\nUTF-8.\n\n# Syntax\n\nThe supported syntax is pretty much the same as the syntax for Unicode\nregular expressions with a few changes that make sense for matching arbitrary\nbytes:\n\n1. The `u` flag can be disabled even when disabling it might cause the regex to\nmatch invalid UTF-8. When the `u` flag is disabled, the regex is said to be in\n\"ASCII compatible\" mode.\n2. In ASCII compatible mode, neither Unicode scalar values nor Unicode\ncharacter classes are allowed.\n3. In ASCII compatible mode, Perl character classes (`\\w`, `\\d` and `\\s`)\nrevert to their typical ASCII definition. `\\w` maps to `[[:word:]]`, `\\d` maps\nto `[[:digit:]]` and `\\s` maps to `[[:space:]]`.\n4. In ASCII compatible mode, word boundaries use the ASCII compatible `\\w` to\ndetermine whether a byte is a word byte or not.\n5. Hexadecimal notation can be used to specify arbitrary bytes instead of\nUnicode codepoints. For example, in ASCII compatible mode, `\\xFF` matches the\nliteral byte `\\xFF`, while in Unicode mode, `\\xFF` is a Unicode codepoint that\nmatches its UTF-8 encoding of `\\xC3\\xBF`. Similarly for octal notation when\nenabled.\n6. In ASCII compatible mode, `.` matches any *byte* except for `\\n`. When the\n`s` flag is additionally enabled, `.` matches any byte.\n\n# Performance\n\nIn general, one should expect performance on `&[u8]` to be roughly similar to\nperformance on `&str`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2497:3450","0:2561:3530","0:2599:1567","0:2623:1570","0:2628:1568","0:2637:1563","0:2646:1573","0:2655:1574","0:2664:1564","0:2674:1562","0:1243:1565","0:2681:1575","0:1301:1571","0:2694:1572","0:2703:1569","0:2890:2881","0:2895:4063","0:2902:4097","0:2907:4096"]}},"b:2:3174-0:2528:3450":{"id":"b:2:3174-0:2528:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2838-0:2528:3450":{"id":"b:2:2838-0:2528:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12931:3538":{"id":"2:12931:3538","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12932:126","2:12933:3561"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1139":{"id":"0:1139","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[104,0],"end":[111,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12931:3538","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1140:126","0:1141:3561"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2881:4103":{"id":"0:2881:4103","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1162:2439":{"id":"0:1162:2439","crate_id":0,"name":"replace","span":{"filename":"src/re_bytes.rs","begin":[457,4],"end":[463,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced byte string.\n\nIf no match is found, then a copy of the byte string is returned\nunchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal byte string:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(b\"1078910\", &b\"\"[..]), &b\"1010\"[..]);\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example, a\nclosure of type `|&Captures| -> Vec<u8>` provides direct access to the\ncaptures corresponding to a match. This allows one to access capturing\ngroup matches easily:\n\n```rust\n# use regex::bytes::Regex;\n# use regex::bytes::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", |caps: &Captures| {\n    let mut replacement = caps[2].to_owned();\n    replacement.push(b' ');\n    replacement.extend(&caps[1]);\n    replacement\n});\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", &b\"$first $last\"[..]);\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(b\"deep fried\", &b\"${first}_$second\"[..]);\nassert_eq!(result, &b\"deep_fried\"[..]);\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nuse regex::bytes::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", NoExpand(b\"$2 $last\"));\nassert_eq!(result, &b\"$2 $last\"[..]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1576:764":{"id":"0:1576:764","crate_id":0,"name":"iter","span":{"filename":"src/re_unicode.rs","begin":[963,4],"end":[965,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'c","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1647":{"id":"0:1647","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1215,0],"end":[1222,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:1650:3753","0:1651:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13388:2388":{"id":"2:13388:2388","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2805:4096":{"id":"b:2:2838-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2767:907":{"id":"0:2767:907","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2681:1575":{"id":"b:2:3168-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2686":{"id":"0:2686","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1086,9],"end":[1086,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2689:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2497:3450":{"id":"a:2:9218:3221-0:2497:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3964-0:2681:1575":{"id":"b:2:3964-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2494:1819":{"id":"0:2494:1819","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8366-0:3018:1575":{"id":"b:2:8366-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:13017:4842":{"id":"2:13017:4842","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13019:4103","2:13020:61183","2:13021:61184"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13011:3125","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22999:6436":{"id":"2:22999:6436","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23648:6321","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22990:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3276:4874-0:2655:1574":{"id":"a:2:3276:4874-0:2655:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3964-0:2895:4063":{"id":"b:2:3964-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2972":{"id":"0:2972","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2681:1575":{"id":"a:2:9218:3221-0:2681:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2488:2739":{"id":"0:2488:2739","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1135":{"id":"0:1135","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[87,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1136:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3362:4811":{"id":"2:3362:4811","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3364:171","2:3365:339"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3247:209-0:2907:4096":{"id":"a:2:3247:209-0:2907:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1175:2771":{"id":"0:1175:2771","crate_id":0,"name":"find_at","span":{"filename":"src/re_bytes.rs","begin":[590,4],"end":[599,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2020:1515":{"id":"0:2020:1515","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[8,11],"end":[8,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:2989:396":{"id":"0:2989:396","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2907:4096":{"id":"b:5:787-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:2497:3450":{"id":"b:2:3168-0:2497:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1258":{"id":"0:1258","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[992,0],"end":[996,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1260:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:3002:1574":{"id":"b:2:3964-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:3040:1568":{"id":"a:2:9218:3221-0:3040:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2561:3530":{"id":"b:2:3179-0:2561:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1551":{"id":"0:1551","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[824,0],"end":[850,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1554:2000","0:1555:907","0:1556:3814"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9217:3222-0:2788:2881":{"id":"a:2:9217:3222-0:2788:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1136:646":{"id":"0:1136:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[89,4],"end":[91,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2805:4096":{"id":"a:2:3247:209-0:2805:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:2902:4097":{"id":"b:2:3164-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2031:892":{"id":"0:2031:892","crate_id":0,"name":"ne","span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:3031:1563":{"id":"b:2:3964-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1186:294":{"id":"0:1186:294","crate_id":0,"name":"as_str","span":{"filename":"src/re_bytes.rs","begin":[656,4],"end":[658,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2993:1573":{"id":"b:2:2838-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2564":{"id":"0:2564","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2533:1578","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2565:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3247:209-0:2637:1563":{"id":"a:2:3247:209-0:2637:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2030:591":{"id":"0:2030:591","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1673":{"id":"0:1673","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1282,0],"end":[1290,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3484:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"generic","inner":"T"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3132:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"generic","inner":"F"},"items":["0:1676:3753"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2777":{"id":"0:2777","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8406:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2779:4103"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2838-0:2681:1575":{"id":"b:2:2838-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13461:59182":{"id":"2:13461:59182","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3962:68":{"id":"2:3962:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3963:1405"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"b:2:8366-0:2907:4096":{"id":"b:2:8366-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1652":{"id":"0:1652","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1224,0],"end":[1232,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1654:3753","0:1655:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1212:2000":{"id":"0:1212:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[745,4],"end":[745,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}},"2:13408:34687":{"id":"2:13408:34687","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15775:4412","self::pattern":"2:12992:1553"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12784:4847","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2788:2881":{"id":"b:2:2838-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2879":{"id":"0:2879","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8406:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2881:4103"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13411:59177":{"id":"2:13411:59177","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15775:4412","`DoubleEndedIterator`":"2:8406:120","self::pattern":"2:12992:1553","str::split":"1:15781:4417"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49329:4863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2890:2881":{"id":"a:2:3276:4874-0:2890:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2841-0:1565:1565":{"id":"b:2:2841-0:1565:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2902:4097":{"id":"a:2:3276:4874-0:2902:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2712:646":{"id":"0:2712:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1249,16],"end":[1249,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1337:3753":{"id":"0:1337:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1236,4],"end":[1238,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2709:396":{"id":"0:2709:396","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1249,9],"end":[1249,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1502:2439":{"id":"0:1502:2439","crate_id":0,"name":"replace","span":{"filename":"src/re_unicode.rs","begin":[506,4],"end":[512,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.\n\nIf no match is found, then a copy of the string is returned unchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal string:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(\"1078910\", \"\"), \"1010\");\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example,\na closure of type `|&Captures| -> String` provides direct access to the\ncaptures corresponding to a match. This allows one to access\ncapturing group matches easily:\n\n```rust\n# use regex::Regex;\n# use regex::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", |caps: &Captures| {\n    format!(\"{} {}\", &caps[2], &caps[1])\n});\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", \"$first $last\");\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(\"deep fried\", \"${first}_$second\");\nassert_eq!(result, \"deep_fried\");\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::Regex;\n# fn main() {\nuse regex::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", NoExpand(\"$2 $last\"));\nassert_eq!(result, \"$2 $last\");\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9218:3221":{"id":"2:9218:3221","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:2646:1573":{"id":"b:2:3179-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1315:3753":{"id":"0:1315:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1174,4],"end":[1176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2637:1563":{"id":"0:2637:1563","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[716,0],"end":[718,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2637:1563","a:2:9217:3222-0:2637:1563","a:2:3235:200-0:2637:1563","a:2:3247:209-0:2637:1563","a:2:9218:3221-0:2637:1563","b:2:3164-0:2637:1563","b:2:2838-0:2637:1563","b:2:3964-0:2637:1563","b:2:8366-0:2637:1563","b:2:3179-0:2637:1563","b:2:3174-0:2637:1563","b:2:2841-0:2637:1563","b:2:3168-0:2637:1563","0:2642","0:1200","0:1206"]}},"b:2:3964-0:2788:2881":{"id":"b:2:3964-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2554:2741":{"id":"0:2554:2741","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1222:3814":{"id":"0:1222:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[805,4],"end":[807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2890:2881":{"id":"b:2:2838-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2895:4063":{"id":"a:2:3276:4874-0:2895:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2902:4097":{"id":"0:2902:4097","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2902:4097","a:2:9217:3222-0:2902:4097","a:2:3235:200-0:2902:4097","a:2:3247:209-0:2902:4097","a:2:9218:3221-0:2902:4097","b:2:3164-0:2902:4097","b:2:2838-0:2902:4097","b:2:3964-0:2902:4097","b:2:8366-0:2902:4097","b:2:3179-0:2902:4097","b:2:3174-0:2902:4097","b:2:2841-0:2902:4097","b:2:3168-0:2902:4097","0:2905","0:2867","0:2871","0:2873"]}},"b:2:2841-0:2907:4096":{"id":"b:2:2841-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13720:150":{"id":"2:13720:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13721:171","2:13722:150","2:13723:752"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:2674:1562":{"id":"b:2:3179-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1579:778":{"id":"0:1579:778","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[997,4],"end":[999,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:3221-0:1565:1565":{"id":"a:2:9218:3221-0:1565:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2703:1569":{"id":"b:2:3179-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13452:62363":{"id":"2:13452:62363","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13022:4840","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:1243:1565":{"id":"a:2:3247:209-0:1243:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:2983:1564":{"id":"a:2:9218:3221-0:2983:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2838-0:1565:1565":{"id":"b:2:2838-0:1565:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6406-0:2978:1570":{"id":"b:5:6406-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10257:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:1958"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2753:1766":{"id":"0:2753:1766","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["regex_index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2023:1515":{"id":"0:2023:1515","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[11,19],"end":[11,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:3168-0:3018:1575":{"id":"b:2:3168-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2864:3368":{"id":"0:2864:3368","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"0:1526:294":{"id":"0:1526:294","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[714,4],"end":[716,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2793:4063":{"id":"b:2:3964-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2907:4096":{"id":"0:2907:4096","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2907:4096","a:2:9217:3222-0:2907:4096","a:2:3235:200-0:2907:4096","a:2:3247:209-0:2907:4096","a:2:9218:3221-0:2907:4096","b:2:3164-0:2907:4096","b:2:2838-0:2907:4096","b:2:3964-0:2907:4096","b:2:8366-0:2907:4096","b:2:3179-0:2907:4096","b:2:3174-0:2907:4096","b:2:2841-0:2907:4096","b:2:3168-0:2907:4096","b:5:787-0:2907:4096","0:2911","0:2914","0:2874","0:2879","0:2882"]}},"b:2:2838-0:2907:4096":{"id":"b:2:2838-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1323:3750":{"id":"0:1323:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1198,4],"end":[1200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2561:3530":{"id":"b:2:3164-0:2561:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2556:1532":{"id":"0:2556:1532","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3702:4826":{"id":"2:3702:4826","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3704:58317"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8371:4626":{"id":"2:8371:4626","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8373:2539","2:8375:5347","2:8376:5348"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3164-0:2788:2881":{"id":"b:2:3164-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2771":{"id":"0:2771","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3001:646":{"id":"0:3001:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2528:3450":{"id":"b:2:3164-0:2528:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3170:667":{"id":"2:3170:667","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2702:646":{"id":"0:2702:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1161,9],"end":[1161,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8362:151":{"id":"2:8362:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8363:2000","2:8364:3368","2:8365:753"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:200-0:3049:1572":{"id":"a:2:3235:200-0:3049:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3014":{"id":"0:3014","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:3015:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1150:1872":{"id":"0:1150:1872","crate_id":0,"name":"captures","span":{"filename":"src/re_bytes.rs","begin":[255,4],"end":[262,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_bytes(), &b\"Citizen Kane\"[..]);\nassert_eq!(caps.get(2).unwrap().as_bytes(), &b\"1941\"[..]);\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], b\"Citizen Kane\");\nassert_eq!(&caps[2], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_bytes(), b\"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_bytes(), b\"1941\");\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], b\"Citizen Kane\");\nassert_eq!(&caps[\"year\"], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2623:1570":{"id":"b:2:3179-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2751":{"id":"0:2751","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2752:4065","0:2753:1766","0:2754:778","0:2755:764"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6408:1958":{"id":"5:6408:1958","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1128:2768":{"id":"0:1128:2768","crate_id":0,"name":"as_bytes","span":{"filename":"src/re_bytes.rs","begin":[49,4],"end":[51,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3737:4690":{"id":"2:3737:4690","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2901:646":{"id":"0:2901:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1248":{"id":"0:1248","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[918,0],"end":[990,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1250:1779","0:1252:884","0:1254:764","0:1256:1584","0:1257:778"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1459:1561":{"id":"0:1459:1561","crate_id":0,"name":"escape","span":{"filename":"src/re_unicode.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Escapes all regular expression meta characters in `text`.\n\nThe string returned may be safely used as a literal in a regular\nexpression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13376:6157":{"id":"2:13376:6157","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:15781:4417","str::slice_mut_unchecked":"1:15781:4417","crate::ops::Index":"2:3539:3537"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1505:3746":{"id":"0:1505:3746","crate_id":0,"name":"replace_all","span":{"filename":"src/re_unicode.rs","begin":[520,4],"end":[526,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2890:2881":{"id":"b:5:787-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:3040:1568":{"id":"b:2:3964-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3067:646":{"id":"0:3067:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2769":{"id":"0:2769","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_rfold","rfind","nth_back","rfold","advance_back_by"],"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedIterator","id":"2:8406:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2770:4103"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2628:1568":{"id":"b:2:3179-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:3011:1562":{"id":"b:2:3964-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:2646:1573":{"id":"b:2:3174-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:2902:4097":{"id":"a:2:3235:200-0:2902:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13470:62367":{"id":"2:13470:62367","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15775:4412","self::pattern":"2:12992:1553"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2800:4097":{"id":"b:2:3964-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:2983:1564":{"id":"b:2:3964-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1479":{"id":"0:1479","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[159,0],"end":[166,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12931:3538","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1480:126","0:1481:3561"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1127:2054":{"id":"0:1127:2054","crate_id":0,"name":"range","span":{"filename":"src/re_bytes.rs","begin":[43,4],"end":[45,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45728:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2646:1573":{"id":"b:2:3164-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8841:4624":{"id":"2:8841:4624","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2855:1766":{"id":"0:2855:1766","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["regex_index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13414:62351":{"id":"2:13414:62351","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:15775:4412","str::rsplit_terminator":"1:15781:4417","str::split":"1:15781:4417","self::pattern":"2:12992:1553","`DoubleEndedIterator`":"2:8406:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49361:4866","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2611:646":{"id":"0:2611:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2655:1574":{"id":"a:2:3235:200-0:2655:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1221:907":{"id":"0:1221:907","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[785,4],"end":[803,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2954:1567":{"id":"a:2:3235:200-0:2954:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13385:6969":{"id":"2:13385:6969","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49565:4858","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2668":{"id":"0:2668","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[818,9],"end":[818,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2670:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1204:907":{"id":"0:1204:907","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[723,4],"end":[729,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1168:3740":{"id":"0:1168:3740","crate_id":0,"name":"replacen","span":{"filename":"src/re_bytes.rs","begin":[485,4],"end":[530,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1189:3638":{"id":"0:1189:3638","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_bytes.rs","begin":[672,4],"end":[674,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8366-0:2664:1564":{"id":"b:2:8366-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2617":{"id":"0:2617","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3276:4874-0:2637:1563":{"id":"a:2:3276:4874-0:2637:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1547:907":{"id":"0:1547:907","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[789,4],"end":[807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2673:646":{"id":"0:2673:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[818,16],"end":[818,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:3221-0:3011:1562":{"id":"a:2:9218:3221-0:3011:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2976:591":{"id":"0:2976:591","crate_id":0,"name":"eq","span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:2628:1568":{"id":"a:2:9217:3222-0:2628:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2593:2744":{"id":"0:2593:2744","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3610:4823":{"id":"2:3610:4823","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3612:60599","2:3613:60600","2:3614:2388"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3179-0:2907:4096":{"id":"b:2:3179-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1665:3753":{"id":"0:1665:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1255,4],"end":[1257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2694:1572":{"id":"b:2:3179-0:2694:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3164-0:2805:4096":{"id":"b:2:3164-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1487:3598":{"id":"0:1487:3598","crate_id":0,"name":"find_iter","span":{"filename":"src/re_unicode.rs","begin":[244,4],"end":[246,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 Unicode\nword characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1508:3740":{"id":"0:1508:3740","crate_id":0,"name":"replacen","span":{"filename":"src/re_unicode.rs","begin":[534,4],"end":[588,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2655:1574":{"id":"b:2:3179-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3015:396":{"id":"0:3015:396","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1126:586":{"id":"0:1126:586","crate_id":0,"name":"end","span":{"filename":"src/re_bytes.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6077:63003":{"id":"5:6077:63003","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1992","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:5410","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1992","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:5410","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2599:1567":{"id":"a:2:3235:200-0:2599:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2655:1574":{"id":"0:2655:1574","crate_id":0,"name":"SplitN","span":{"filename":"src/re_bytes.rs","begin":[777,0],"end":[780,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2655:1574","a:2:9217:3222-0:2655:1574","a:2:3235:200-0:2655:1574","a:2:3247:209-0:2655:1574","a:2:9218:3221-0:2655:1574","b:2:3164-0:2655:1574","b:2:2838-0:2655:1574","b:2:3964-0:2655:1574","b:2:8366-0:2655:1574","b:2:3179-0:2655:1574","b:2:3174-0:2655:1574","b:2:2841-0:2655:1574","b:2:3168-0:2655:1574","0:2660","0:1217","0:1223"]}},"2:13359:62346":{"id":"2:13359:62346","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2749:1768":{"id":"0:2749:1768","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3027":{"id":"0:3027","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3030:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13364:2768":{"id":"2:13364:2768","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12463:2996"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2895:4063":{"id":"b:2:3164-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:2902:4097":{"id":"b:2:3964-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1322:3753":{"id":"0:1322:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1194,4],"end":[1196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5569:5994":{"id":"1:5569:5994","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5570:57638","1:5571:4915"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9218:3221-0:2793:4063":{"id":"a:2:9218:3221-0:2793:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2841-0:2978:1570":{"id":"b:2:2841-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8368:2000":{"id":"2:8368:2000","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"0:1660":{"id":"0:1660","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1244,0],"end":[1252,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1661:3753","0:1662:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:9259:5998":{"id":"1:9259:5998","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9260:55929","1:9261:55930","1:9262:55931","1:9263:55932","1:9264:6585","1:9265:41565","1:9266:55928"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5641:5972":{"id":"1:5641:5972","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5642:57116","1:5643:57118","1:5644:57117","1:5645:57119"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2838-0:2646:1573":{"id":"b:2:2838-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:3058:1569":{"id":"a:2:9218:3221-0:3058:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1188:3794":{"id":"0:1188:3794","crate_id":0,"name":"captures_len","span":{"filename":"src/re_bytes.rs","begin":[666,4],"end":[668,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:1243:1565":{"id":"b:2:2838-0:1243:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2857:764":{"id":"0:2857:764","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2690":{"id":"0:2690","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1086,16],"end":[1086,21]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2693:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13356:778":{"id":"2:13356:778","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2758:2000":{"id":"0:2758:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:2671":{"id":"0:2671","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[818,16],"end":[818,21]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2673:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3543:4822":{"id":"2:3543:4822","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3545:739"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3539:3537","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:3040:1568":{"id":"0:3040:1568","crate_id":0,"name":"Matches","span":{"filename":"src/re_unicode.rs","begin":[1143,0],"end":[1143,69]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a `Match` value. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:3040:1568","a:2:9217:3222-0:3040:1568","a:2:3235:200-0:3040:1568","a:2:3247:209-0:3040:1568","a:2:9218:3221-0:3040:1568","b:2:3164-0:3040:1568","b:2:2838-0:3040:1568","b:2:3964-0:3040:1568","b:2:8366-0:3040:1568","b:2:3179-0:3040:1568","b:2:3174-0:3040:1568","b:2:2841-0:3040:1568","b:2:3168-0:3040:1568","0:3045","0:1632","0:1638"]}},"5:5828:1975":{"id":"5:5828:1975","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5830:171","5:5831:419"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1326:3753":{"id":"0:1326:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1541":{"id":"0:1541","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[774,0],"end":[774,46]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1197":{"id":"0:1197","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[706,0],"end":[706,49]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2775:907":{"id":"0:2775:907","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6381:5956":{"id":"1:6381:5956","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6382:60441","1:6383:10345","1:6384:60442","1:6385:60443","1:6386:60444","1:6387:60445"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1543":{"id":"0:1543","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[786,0],"end":[808,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1546:2000","0:1547:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2569:127":{"id":"1:2569:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2570:5717","1:2572:4396","1:2573:2603","1:2574:5718"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10257:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2838-0:2902:4097":{"id":"b:2:2838-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1533:2000":{"id":"0:1533:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[754,4],"end":[754,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}},"b:2:3179-0:3011:1562":{"id":"b:2:3179-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2637:1563":{"id":"a:2:9217:3222-0:2637:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13446:62359":{"id":"2:13446:62359","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10263:5312":{"id":"2:10263:5312","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10264:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:2017:127":{"id":"b:2:3179-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2628:1568":{"id":"b:2:2841-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2838-0:3058:1569":{"id":"b:2:2838-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:2674:1562":{"id":"a:2:3235:200-0:2674:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10892:203":{"id":"2:10892:203","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10894:171","2:10895:1779","2:10896:11106","2:10897:2368","2:10898:59148","2:10899:738","2:10900:739"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10883:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2838-0:2800:4097":{"id":"b:2:2838-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2763:2000":{"id":"0:2763:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:2838-0:2497:3450":{"id":"b:2:2838-0:2497:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1330:3753":{"id":"0:1330:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1214,4],"end":[1216,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:2674:1562":{"id":"a:2:9217:3222-0:2674:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1642:3753":{"id":"0:1642:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1170,4],"end":[1170,72]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.push_str(caps.get(0).unwrap().as_str())`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9217:3222-0:2561:3530":{"id":"a:2:9217:3222-0:2561:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:4745:5458":{"id":"2:4745:5458","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4746:2000","2:4747:61571","2:4748:3814"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2516:905":{"id":"0:2516:905","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2805:4096":{"id":"b:5:787-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2592:2126":{"id":"0:2592:2126","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10488:142":{"id":"2:10488:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10489:701","2:10491:5497"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3276:4874-0:2646:1573":{"id":"a:2:3276:4874-0:2646:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3334:4806":{"id":"2:3334:4806","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3336:255"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1496:1882":{"id":"0:1496:1882","crate_id":0,"name":"split","span":{"filename":"src/re_unicode.rs","begin":[370,4],"end":[372,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&str> = re.split(\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\"a\", \"b\", \"c\", \"d\", \"e\"]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1480:126":{"id":"0:1480:126","crate_id":0,"name":"Err","span":{"filename":"src/re_unicode.rs","begin":[160,4],"end":[160,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:2689:396":{"id":"0:2689:396","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1086,9],"end":[1086,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2517:2745":{"id":"0:2517:2745","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:3018:1575":{"id":"b:2:2838-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:791:5390":{"id":"5:791:5390","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2487:2738":{"id":"0:2487:2738","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2890:2881":{"id":"b:2:3168-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:3049:1572":{"id":"b:2:3168-0:3049:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6406-0:2623:1570":{"id":"b:5:6406-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10257:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:1958"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:3049:1572":{"id":"b:2:3964-0:3049:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13381:6369":{"id":"2:13381:6369","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49287:4850","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1636:907":{"id":"0:1636:907","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1148,4],"end":[1151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2872:4103":{"id":"0:2872:4103","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2627:396":{"id":"0:2627:396","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3062":{"id":"0:3062","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3064:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1260:646":{"id":"0:1260:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[993,4],"end":[995,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2913:396":{"id":"0:2913:396","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8366-0:2993:1573":{"id":"b:2:8366-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"5:6096:63005":{"id":"5:6096:63005","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:3049:1572":{"id":"b:2:2841-0:3049:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:2694:1572":{"id":"a:2:9218:3221-0:2694:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2489:2740":{"id":"0:2489:2740","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2796":{"id":"0:2796","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2797:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2598:646":{"id":"0:2598:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1187:2891":{"id":"0:1187:2891","crate_id":0,"name":"capture_names","span":{"filename":"src/re_bytes.rs","begin":[661,4],"end":[663,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3372:4813":{"id":"2:3372:4813","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:171","2:3375:344"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3276:4874-0:3049:1572":{"id":"a:2:3276:4874-0:3049:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2017:127":{"id":"0:2017:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[6,0],"end":[19,1]},"visibility":"public","docs":"An error that occurred during parsing or compiling a regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2018:1956","0:2021:2041"],"impls":["a:2:3276:4874-0:2017:127","a:2:9217:3222-0:2017:127","a:2:3235:200-0:2017:127","a:2:3247:209-0:2017:127","a:2:9218:3221-0:2017:127","b:2:3164-0:2017:127","b:2:2838-0:2017:127","b:2:3964-0:2017:127","b:2:3179-0:2017:127","b:2:3174-0:2017:127","b:2:2841-0:2017:127","b:2:3168-0:2017:127","b:5:787-0:2017:127","b:5:6406-0:2017:127","0:2026","0:2028","0:2029","0:445","0:447","0:449"]}},"0:2531":{"id":"0:2531","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2502:1532","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2532:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6781:5959":{"id":"1:6781:5959","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6782:57169"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:2788:2881":{"id":"b:2:3179-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2660":{"id":"0:2660","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[776,9],"end":[776,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2663:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13705:138":{"id":"2:13705:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13706:171","2:13707:999"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3247:209-0:2788:2881":{"id":"a:2:3247:209-0:2788:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2493:2737":{"id":"0:2493:2737","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1233:482":{"id":"0:1233:482","crate_id":0,"name":"count","span":{"filename":"src/re_bytes.rs","begin":[835,4],"end":[837,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2890:2881":{"id":"b:2:3179-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:8366-0:2902:4097":{"id":"b:2:8366-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3174-0:2954:1567":{"id":"b:2:3174-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:209-0:2594:3530":{"id":"a:2:3247:209-0:2594:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3023":{"id":"0:3023","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3026:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2856:778":{"id":"0:2856:778","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2681:1575":{"id":"b:2:3164-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2865:2000":{"id":"0:2865:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:1341:3750":{"id":"0:1341:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1257,4],"end":[1259,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1666:3750":{"id":"0:1666:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1259,4],"end":[1261,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2555:2742":{"id":"0:2555:2742","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2561:3530":{"id":"b:2:3174-0:2561:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1474:646":{"id":"0:1474:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[140,4],"end":[142,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1472:667":{"id":"0:1472:667","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45728:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2594:3530":{"id":"b:2:3174-0:2594:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2744:2232":{"id":"0:2744:2232","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2954:1567":{"id":"b:5:787-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2838-0:2954:1567":{"id":"b:2:2838-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3487:132":{"id":"2:3487:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3489:171","2:3490:366"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2990":{"id":"0:2990","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2992:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3478:3289":{"id":"2:3478:3289","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3479:565"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3058:1569":{"id":"0:3058:1569","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_unicode.rs","begin":[1301,0],"end":[1301,37]},"visibility":"public","docs":"`NoExpand` indicates literal string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:3061:1515"],"impls":["a:2:3276:4874-0:3058:1569","a:2:9217:3222-0:3058:1569","a:2:3235:200-0:3058:1569","a:2:3247:209-0:3058:1569","a:2:9218:3221-0:3058:1569","b:2:3164-0:3058:1569","b:2:2838-0:3058:1569","b:2:3964-0:3058:1569","b:2:3179-0:3058:1569","b:2:3174-0:3058:1569","b:2:2841-0:3058:1569","b:2:3168-0:3058:1569","b:5:787-0:3058:1569","0:3062","0:3065","0:1677"]}},"0:2809":{"id":"0:2809","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2811:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1173:2769":{"id":"0:1173:2769","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_bytes.rs","begin":[566,4],"end":[572,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2812":{"id":"0:2812","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2814:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:2954:1567":{"id":"b:2:3964-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1220:2000":{"id":"0:1220:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[783,4],"end":[783,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}},"b:5:787-0:3011:1562":{"id":"b:5:787-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5707:5976":{"id":"1:5707:5976","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5708:55951"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3168-0:2637:1563":{"id":"b:2:3168-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:3058:1569":{"id":"a:2:9217:3222-0:3058:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2553:2740":{"id":"0:2553:2740","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:3018:1575":{"id":"b:2:3964-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1538:482":{"id":"0:1538:482","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2800:4097":{"id":"b:2:3168-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3039:646":{"id":"0:3039:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:3221-0:2907:4096":{"id":"a:2:9218:3221-0:2907:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3138:149":{"id":"2:3138:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3140:2092"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3964-0:2594:3530":{"id":"b:2:3964-0:2594:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6607:5974":{"id":"1:6607:5974","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6608:55840","1:6609:10270","1:6610:10271","1:6611:10273","1:6612:10272","1:6613:10274","1:6614:10275","1:6615:10277","1:6616:8156","1:6617:10280","1:6618:10281","1:6619:10282","1:6620:10283","1:6621:10284","1:6622:10285","1:6623:10278","1:6624:10279"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:2599:1567":{"id":"b:5:787-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2586:2740":{"id":"0:2586:2740","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1234":{"id":"0:1234","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[840,0],"end":[840,50]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:8431:3819","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3017:646":{"id":"0:3017:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2655:1574":{"id":"b:2:3164-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13435:62355":{"id":"2:13435:62355","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"1:15781:4417","prim@char":"1:15775:4412","`DoubleEndedIterator`":"2:8406:120","self::pattern":"2:12992:1553"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49533:4862","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1658:3753":{"id":"0:1658:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1235,4],"end":[1237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1338":{"id":"0:1338","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1252,0],"end":[1260,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1340:3753","0:1341:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1627:907":{"id":"0:1627:907","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1124,4],"end":[1130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1295:907":{"id":"0:1295:907","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[1095,4],"end":[1099,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2707":{"id":"0:2707","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1249,9],"end":[1249,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2709:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2623:1570":{"id":"b:5:787-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2552:2739":{"id":"0:2552:2739","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3144:217":{"id":"2:3144:217","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3146:127","2:3147:1392"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2515":{"id":"0:2515","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2502:1532","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2516:905","0:2517:2745","0:2518:2738","0:2519:2739","0:2520:2740","0:2521:2741","0:2522:2742","0:2523:1532","0:2524:2737","0:2525:1819","0:2526:2126","0:2527:2744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1277":{"id":"0:1277","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1045,0],"end":[1053,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3539:3537","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1279:171","0:1280:738"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:2800:4097":{"id":"b:2:3179-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1679:3753":{"id":"0:1679:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1304,4],"end":[1306,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:3040:1568":{"id":"a:2:9217:3222-0:3040:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2899:396":{"id":"0:2899:396","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1320:3750":{"id":"0:1320:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1188,4],"end":[1190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5657:5973":{"id":"1:5657:5973","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5658:8115","1:5659:9401"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3276:4874-0:2978:1570":{"id":"a:2:3276:4874-0:2978:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2764:753":{"id":"0:2764:753","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8362:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2978:1570":{"id":"b:2:3964-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1562:1779":{"id":"0:1562:1779","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2983:1564":{"id":"a:2:3276:4874-0:2983:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8366-0:2628:1568":{"id":"b:2:8366-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2518:2738":{"id":"0:2518:2738","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:1243:1565":{"id":"a:2:9217:3222-0:1243:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9217:3222-0:2681:1575":{"id":"a:2:9217:3222-0:2681:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3247:209-0:2017:127":{"id":"a:2:3247:209-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8366-0:2637:1563":{"id":"b:2:8366-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:3276:4874-0:2800:4097":{"id":"a:2:3276:4874-0:2800:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2858":{"id":"0:2858","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2859:3368","0:2860:2000","0:2861:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[51,0],"end":[71,1]},"visibility":{"restricted":{"parent":"0:438:1556","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:450:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3057:646":{"id":"0:3057:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23648:6321":{"id":"2:23648:6321","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23649:6435"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23644:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3245:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6084:63004":{"id":"5:6084:63004","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2797:396":{"id":"0:2797:396","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2894:396":{"id":"0:2894:396","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:3049:1572":{"id":"b:2:3174-0:3049:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:2978:1570":{"id":"a:2:9218:3221-0:2978:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3183:1391":{"id":"2:3183:1391","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3308:4805":{"id":"2:3308:4805","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3310:171","2:3311:1333"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:3064:396":{"id":"0:3064:396","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:1243:1565":{"id":"b:2:3168-0:1243:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4908:6052":{"id":"1:4908:6052","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4909:3369","1:4910:56631"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1301:1571":{"id":"0:1301:1571","crate_id":0,"name":"Replacer","span":{"filename":"src/re_bytes.rs","begin":[1111,0],"end":[1156,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a byte\nstring.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&[u8]` along with other\nvariants of bytes types and `FnMut(&Captures) -> Vec<u8>` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<[u8]>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1302:3753","0:1303:3750","0:1305:3939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1307","0:1313","0:1317","0:1321","0:1324","0:1328","0:1334","0:1338"]}},"b:2:2841-0:2954:1567":{"id":"b:2:2841-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2977:892":{"id":"0:2977:892","crate_id":0,"name":"ne","span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2655:1574":{"id":"b:2:3964-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2993:1573":{"id":"a:2:9217:3222-0:2993:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:2694:1572":{"id":"b:2:3164-0:2694:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2793:4063":{"id":"0:2793:4063","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2751","a:2:3276:4874-0:2793:4063","a:2:9217:3222-0:2793:4063","a:2:3235:200-0:2793:4063","a:2:3247:209-0:2793:4063","a:2:9218:3221-0:2793:4063","b:2:3164-0:2793:4063","b:2:2838-0:2793:4063","b:2:3964-0:2793:4063","b:2:3179-0:2793:4063","b:2:3174-0:2793:4063","b:2:2841-0:2793:4063","b:2:3168-0:2793:4063","b:5:787-0:2793:4063","0:2796","0:2798","0:2756","0:2760"]}},"a:2:9217:3222-0:2800:4097":{"id":"a:2:9217:3222-0:2800:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3247:209-0:2895:4063":{"id":"a:2:3247:209-0:2895:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2841-0:2703:1569":{"id":"b:2:2841-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:2978:1570":{"id":"b:2:3168-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"21:1184:4724":{"id":"21:1184:4724","crate_id":21,"name":"StateID","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:1185:675","21:1186:63790","21:1187:63791"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"21:1178:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3245:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"2:10488:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"2:2923:167","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1557":{"id":"0:1557","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[852,0],"end":[852,48]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2860:2000":{"id":"0:2860:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:3174-0:3040:1568":{"id":"b:2:3174-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:209-0:2694:1572":{"id":"a:2:3247:209-0:2694:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3213:115":{"id":"2:3213:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3214:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:1079:4672":{"id":"1:1079:4672","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:3752","1:1081:1993","1:1082:55889","1:1083:55890","1:1084:55891","1:1085:55892","1:1086:55893"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2982:396":{"id":"0:2982:396","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2978:1570":{"id":"a:2:3235:200-0:2978:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2841-0:2664:1564":{"id":"b:2:2841-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:2561:3530":{"id":"a:2:3235:200-0:2561:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2838-0:3040:1568":{"id":"b:2:2838-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2633":{"id":"0:2633","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[694,9],"end":[694,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2636:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3174-0:2907:4096":{"id":"b:2:3174-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3521:4829":{"id":"2:3521:4829","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3523:226","2:3524:196","2:3525:61209"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13365:62348":{"id":"2:13365:62348","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2674:1562":{"id":"b:5:787-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2850:778":{"id":"0:2850:778","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2646:1573":{"id":"a:2:3247:209-0:2646:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1002,0],"end":[1006,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1582:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:2978:1570":{"id":"b:5:787-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2765":{"id":"0:2765","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2766:2000","0:2767:907","0:2768:3814"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3168-0:2655:1574":{"id":"b:2:3168-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2550:2745":{"id":"0:2550:2745","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3036":{"id":"0:3036","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3039:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:2637:1563":{"id":"b:2:3964-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:7886:4613":{"id":"2:7886:4613","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7887:61651","2:7888:61652","2:7889:2342","2:7890:61648","2:7891:61653","2:7892:61650","2:7893:61649"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2933:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1565:1565":{"id":"0:1565:1565","crate_id":0,"name":"Captures","span":{"filename":"src/re_unicode.rs","begin":[922,0],"end":[926,1]},"visibility":"public","docs":"Captures represents a group of captured strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched string is *also* available via the `name`\nmethod. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1570","a:2:3276:4874-0:1565:1565","a:2:9217:3222-0:1565:1565","a:2:3235:200-0:1565:1565","a:2:3247:209-0:1565:1565","a:2:9218:3221-0:1565:1565","b:2:3164-0:1565:1565","b:2:2838-0:1565:1565","b:2:3964-0:1565:1565","b:2:3179-0:1565:1565","b:2:3174-0:1565:1565","b:2:2841-0:1565:1565","b:2:3168-0:1565:1565","0:1580","0:1594","0:1600"]}},"b:2:3174-0:2983:1564":{"id":"b:2:3174-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2642":{"id":"0:2642","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[715,9],"end":[715,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2645:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3174-0:2902:4097":{"id":"b:2:3174-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:2890:2881":{"id":"b:2:3174-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:2983:1564":{"id":"b:5:787-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2664:1564":{"id":"a:2:9217:3222-0:2664:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2869:907":{"id":"0:2869:907","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1612:907":{"id":"0:1612:907","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1090,4],"end":[1094,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:3221-0:2954:1567":{"id":"a:2:9218:3221-0:2954:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2933:174":{"id":"2:2933:174","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2935:983","2:2936:811","2:2937:777","2:2938:699","2:2939:682"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13458:17607":{"id":"2:13458:17607","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2800:4097":{"id":"a:2:3247:209-0:2800:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2664:1564":{"id":"0:2664:1564","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_bytes.rs","begin":[819,0],"end":[819,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2664:1564","a:2:9217:3222-0:2664:1564","a:2:3235:200-0:2664:1564","a:2:3247:209-0:2664:1564","a:2:9218:3221-0:2664:1564","b:2:3164-0:2664:1564","b:2:2838-0:2664:1564","b:2:3964-0:2664:1564","b:2:8366-0:2664:1564","b:2:3179-0:2664:1564","b:2:3174-0:2664:1564","b:2:2841-0:2664:1564","b:2:3168-0:2664:1564","b:5:787-0:2664:1564","0:2668","0:2671","0:1226","0:1234","0:1236"]}},"0:1194:2000":{"id":"0:1194:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[698,4],"end":[698,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"0:1499:3676":{"id":"0:1499:3676","crate_id":0,"name":"splitn","span":{"filename":"src/re_unicode.rs","begin":[394,4],"end":[400,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&str> = re.splitn(\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec!(\"Hey\", \"How\", \"are you?\"));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2983:1564":{"id":"b:2:3179-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2900":{"id":"0:2900","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2901:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2835:4834":{"id":"2:2835:4834","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2837:1751"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2838-0:2793:4063":{"id":"b:2:2838-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3065":{"id":"0:3065","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3067:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2854:4065":{"id":"0:2854:4065","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1105,0],"end":[1105,63]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:8431:3819","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2742:2734":{"id":"0:2742:2734","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1214":{"id":"0:1214","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[768,0],"end":[768,47]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1171":{"id":"0:1171","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[534,0],"end":[651,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1172:3766","0:1173:2769","0:1174:2770","0:1175:2771","0:1178:3782","0:1180:2772"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1132:667":{"id":"0:1132:667","crate_id":0,"name":"from","span":{"filename":"src/re_bytes.rs","begin":[61,4],"end":[63,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45728:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:3031:1563":{"id":"b:2:3179-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:2681:1575":{"id":"b:2:3174-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:2902:4097":{"id":"a:2:9218:3221-0:2902:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1662:3750":{"id":"0:1662:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1249,4],"end":[1251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2670:396":{"id":"0:2670:396","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[818,9],"end":[818,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2495:2126":{"id":"0:2495:2126","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10269:5314":{"id":"2:10269:5314","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10270:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2788:2881":{"id":"0:2788:2881","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Match":"0:2954:1567","crate::Regex":"0:2978:1570","crate::Captures":"0:1565:1565"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2738","a:2:3276:4874-0:2788:2881","a:2:9217:3222-0:2788:2881","a:2:3235:200-0:2788:2881","a:2:3247:209-0:2788:2881","a:2:9218:3221-0:2788:2881","b:2:3164-0:2788:2881","b:2:2838-0:2788:2881","b:2:3964-0:2788:2881","b:2:3179-0:2788:2881","b:2:3174-0:2788:2881","b:2:2841-0:2788:2881","b:2:3168-0:2788:2881","b:5:787-0:2788:2881","0:2791","0:2784"]}},"5:6098:2026":{"id":"5:6098:2026","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8352:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1141:3561":{"id":"0:1141:3561","crate_id":0,"name":"from_str","span":{"filename":"src/re_bytes.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2866:753":{"id":"0:2866:753","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8362:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:3002:1574":{"id":"a:2:9217:3222-0:3002:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8406:120":{"id":"2:8406:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8407:4103","2:8408:5342","2:8409:5343","2:8410:5344","2:8414:5345","2:8417:5346"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2496:2744":{"id":"0:2496:2744","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:3011:1562":{"id":"b:2:2838-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2520:2740":{"id":"0:2520:2740","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2599:1567":{"id":"a:2:3276:4874-0:2599:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3168-0:2907:4096":{"id":"b:2:3168-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1217":{"id":"0:1217","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[782,0],"end":[808,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1220:2000","0:1221:907","0:1222:3814"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2852:3531":{"id":"0:2852:3531","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:3011:1562":{"id":"b:2:2841-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3045":{"id":"0:3045","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3048:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2838-0:2599:1567":{"id":"b:2:2838-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2604":{"id":"0:2604","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,9],"end":[20,13]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3245:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13478:55893":{"id":"2:13478:55893","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2017:127":{"id":"b:2:2838-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14176:5409":{"id":"2:14176:5409","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14177:56051","2:14178:56052","2:14179:56053","2:14180:56054","2:14181:56055","2:14182:56056","2:14183:3939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:200-0:1565:1565":{"id":"a:2:3235:200-0:1565:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2492:1532":{"id":"0:2492:1532","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2843:1751":{"id":"2:2843:1751","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1514:2770":{"id":"0:1514:2770","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_unicode.rs","begin":[638,4],"end":[640,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2623:1570":{"id":"b:2:2838-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1645:3939":{"id":"0:1645:3939","crate_id":0,"name":"by_ref","span":{"filename":"src/re_unicode.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &str,\n    mut rep: R,\n) -> String {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1302:3753":{"id":"0:1302:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1119,4],"end":[1119,73]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.extend(&caps[0])`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:8358:136":{"id":"2:8358:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8360:670"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2521:2741":{"id":"0:2521:2741","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1556:3814":{"id":"0:1556:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[847,4],"end":[849,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:3058:1569":{"id":"a:2:3247:209-0:3058:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2746:1726":{"id":"0:2746:1726","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1226":{"id":"0:1226","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[821,0],"end":[838,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:1228:2000","0:1229:907","0:1232:3814","0:1233:482"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2838-0:2694:1572":{"id":"b:2:2838-0:2694:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3964-0:2528:3450":{"id":"b:2:3964-0:2528:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2694:1572":{"id":"a:2:3276:4874-0:2694:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9217:3222-0:2890:2881":{"id":"a:2:9217:3222-0:2890:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3011:1562":{"id":"0:3011:1562","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_unicode.rs","begin":[870,0],"end":[870,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1561","a:2:3276:4874-0:3011:1562","a:2:9217:3222-0:3011:1562","a:2:3235:200-0:3011:1562","a:2:3247:209-0:3011:1562","a:2:9218:3221-0:3011:1562","b:2:3164-0:3011:1562","b:2:2838-0:3011:1562","b:2:3964-0:3011:1562","b:2:3179-0:3011:1562","b:2:3174-0:3011:1562","b:2:2841-0:3011:1562","b:2:3168-0:3011:1562","b:5:787-0:3011:1562","0:3014","0:3016"]}},"b:2:3179-0:2599:1567":{"id":"b:2:3179-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3070:6310":{"id":"2:3070:6310","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3069:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3964-0:2907:4096":{"id":"b:2:3964-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2528:3450":{"id":"a:2:9217:3222-0:2528:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1676:3753":{"id":"0:1676:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1287,4],"end":[1289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13378:59167":{"id":"2:13378:59167","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15781:4417"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1669:3753":{"id":"0:1669:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1265,4],"end":[1267,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2497:3450":{"id":"b:2:3964-0:2497:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2757:3368":{"id":"0:2757:3368","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:1279:171":{"id":"0:1279:171","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1046,4],"end":[1046,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"5:6100:55890":{"id":"5:6100:55890","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15781:4417"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2974":{"id":"0:2974","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2976:591","0:2977:892"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1206":{"id":"0:1206","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[732,0],"end":[732,56]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2694:1572":{"id":"0:2694:1572","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_bytes.rs","begin":[1162,0],"end":[1162,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2694:1572","a:2:9217:3222-0:2694:1572","a:2:3235:200-0:2694:1572","a:2:3247:209-0:2694:1572","a:2:9218:3221-0:2694:1572","b:2:3164-0:2694:1572","b:2:2838-0:2694:1572","b:2:3964-0:2694:1572","b:2:3179-0:2694:1572","b:2:3174-0:2694:1572","b:2:2841-0:2694:1572","b:2:3168-0:2694:1572","0:2699","0:1307"]}},"2:13420:3676":{"id":"2:13420:3676","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:12992:1553","str::rsplitn":"1:15781:4417","prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49415:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2898":{"id":"0:2898","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2899:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10250:109":{"id":"2:10250:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10251:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13444:62358":{"id":"2:13444:62358","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4548:5986":{"id":"1:4548:5986","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4549:6196","1:4550:56111","1:4552:56112","1:4553:56113","1:4554:6016","1:4555:56114","1:4556:56115","1:4558:56116","1:4559:3939","1:4560:1577","1:4561:5353","1:4563:2027"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:200-0:2907:4096":{"id":"a:2:3235:200-0:2907:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1145:2491":{"id":"0:1145:2491","crate_id":0,"name":"find","span":{"filename":"src/re_bytes.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nASCII word bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!((mat.start(), mat.end()), (2, 15));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2774:2000":{"id":"0:2774:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:2491:2742":{"id":"0:2491:2742","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2784":{"id":"0:2784","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2785:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2029":{"id":"0:2029","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:438:1556","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2887:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2030:591","0:2031:892"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1203:2000":{"id":"0:1203:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[721,4],"end":[721,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"b:5:787-0:2895:4063":{"id":"b:5:787-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:209-0:2674:1562":{"id":"a:2:3247:209-0:2674:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13377:62349":{"id":"2:13377:62349","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3543:4822","str::slice_unchecked":"1:15781:4417","`str`":"1:15781:4417"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2895:4063":{"id":"b:2:3168-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3247:209-0:2497:3450":{"id":"a:2:3247:209-0:2497:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6881:5958":{"id":"1:6881:5958","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6882:60464"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9218:3221-0:2623:1570":{"id":"a:2:9218:3221-0:2623:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3174-0:2800:4097":{"id":"b:2:3174-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3245:106":{"id":"2:3245:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1554:2000":{"id":"0:1554:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[825,4],"end":[825,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"0:2547:905":{"id":"0:2547:905","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3132:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2878:3814":{"id":"0:2878:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2886":{"id":"0:2886","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2887:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:2628:1568":{"id":"b:2:3964-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2748:778":{"id":"0:2748:778","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1252:884":{"id":"0:1252:884","crate_id":0,"name":"name","span":{"filename":"src/re_bytes.rs","begin":[944,4],"end":[946,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1539":{"id":"0:1539","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[772,0],"end":[772,50]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"kind":"resolved_path","inner":{"name":"ExactSizeIterator","id":"2:8431:3819","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2706:1515":{"id":"0:2706:1515","crate_id":0,"name":"0","span":{"filename":"src/re_bytes.rs","begin":[1250,24],"end":[1250,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"b:2:3168-0:2793:4063":{"id":"b:2:3168-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1133,0],"end":[1133,56]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1340:3753":{"id":"0:1340:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1253,4],"end":[1255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2760":{"id":"0:2760","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:2762:3368","0:2763:2000","0:2764:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3247:209-0:2628:1568":{"id":"a:2:3247:209-0:2628:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3303:4800":{"id":"2:3303:4800","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3305:171","2:3306:254"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2681:1575":{"id":"0:2681:1575","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[1087,0],"end":[1090,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2681:1575","a:2:9217:3222-0:2681:1575","a:2:3235:200-0:2681:1575","a:2:3247:209-0:2681:1575","a:2:9218:3221-0:2681:1575","b:2:3164-0:2681:1575","b:2:2838-0:2681:1575","b:2:3964-0:2681:1575","b:2:8366-0:2681:1575","b:2:3179-0:2681:1575","b:2:3174-0:2681:1575","b:2:2841-0:2681:1575","b:2:3168-0:2681:1575","b:5:787-0:2681:1575","0:2686","0:2690","0:1291","0:1298"]}},"0:1482":{"id":"0:1482","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[169,0],"end":[589,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1483:905","0:1484:2232","0:1485:2491","0:1487:3598","0:1490:1872","0:1493:3655","0:1496:1882","0:1499:3676","0:1502:2439","0:1505:3746","0:1508:3740"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3247:209-0:2599:1567":{"id":"a:2:3247:209-0:2599:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2911":{"id":"0:2911","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2913:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2805:4096":{"id":"a:2:9218:3221-0:2805:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2597":{"id":"0:2597","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2566:1558","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2598:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2626":{"id":"0:2626","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2627:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2018:1956":{"id":"0:2018:1956","crate_id":0,"name":"Syntax","span":{"filename":"src/error.rs","begin":[8,4],"end":[8,18]},"visibility":"default","docs":"A syntax error.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"b:2:3164-0:2800:4097":{"id":"b:2:3164-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3243:207":{"id":"2:3243:207","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2677":{"id":"0:2677","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[859,9],"end":[859,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2678:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9217:3222-0:2902:4097":{"id":"a:2:9217:3222-0:2902:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2791":{"id":"0:2791","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2792:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2678:396":{"id":"0:2678:396","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[859,9],"end":[859,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:3040:1568":{"id":"b:2:3168-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2800:4097":{"id":"0:2800:4097","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2800:4097","a:2:9217:3222-0:2800:4097","a:2:3235:200-0:2800:4097","a:2:3247:209-0:2800:4097","a:2:9218:3221-0:2800:4097","b:2:3164-0:2800:4097","b:2:2838-0:2800:4097","b:2:3964-0:2800:4097","b:2:8366-0:2800:4097","b:2:3179-0:2800:4097","b:2:3174-0:2800:4097","b:2:2841-0:2800:4097","b:2:3168-0:2800:4097","0:2803","0:2765","0:2769","0:2771"]}},"b:2:3174-0:2993:1573":{"id":"b:2:3174-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13397:2491":{"id":"2:13397:2491","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412","`None`":"2:47347:166"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2750:3531":{"id":"0:2750:3531","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:1243:1565":{"id":"b:2:2841-0:1243:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2606":{"id":"0:2606","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2608:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3355:4814":{"id":"2:3355:4814","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3356:171","2:3357:938"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2500":{"id":"0:2500","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2471:1577","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2501:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13355":{"id":"2:13355","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12452:1318","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13356:778","2:13357:1768","2:13358:62345","2:13359:62346","2:13361:62347","2:13364:2768","2:13365:62348","2:13366:292","2:13367:11117","2:13368:1779","2:13370:11106","2:13372:2368","2:13374:59148","2:13376:6157","2:13377:62349","2:13378:59167","2:13379:59168","2:13380:3170","2:13381:6369","2:13382:1577","2:13383:34830","2:13384:34820","2:13385:6969","2:13386:62350","2:13387:34815","2:13388:2388","2:13391:58856","2:13394:58858","2:13397:2491","2:13401:5346","2:13405:1882","2:13408:34687","2:13411:59177","2:13414:62351","2:13417:62352","2:13420:3676","2:13423:59180","2:13426:62353","2:13429:62354","2:13432:1726","2:13435:62355","2:13438:62356","2:13441:62357","2:13444:62358","2:13446:62359","2:13448:62360","2:13450:62361","2:13451:62362","2:13452:62363","2:13455:62364","2:13458:17607","2:13461:59182","2:13464:62365","2:13467:62366","2:13470:62367","2:13473:2733","2:13475:1993","2:13476:55891","2:13477:55892","2:13478:55893","2:13479:62368","2:13481:2558","2:13482:4736"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3164-0:3058:1569":{"id":"b:2:3164-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1311:3750":{"id":"0:1311:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1168,4],"end":[1170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13450:62361":{"id":"2:13450:62361","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:3040:1568":{"id":"b:2:3164-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2983:1564":{"id":"b:2:2841-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2623:1570":{"id":"b:2:2841-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10498:146":{"id":"2:10498:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10499:638","2:10500:2607","2:10501:57196","2:10502:57197","2:10503:57198","2:10504:57199","2:10505:57200","2:10506:57201","2:10507:57202","2:10508:57203","2:10509:57204","2:10510:57205","2:10511:57206","2:10512:57207","2:10513:57208","2:10514:1506"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13464:62365":{"id":"2:13464:62365","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3383:4816":{"id":"2:3383:4816","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3385:171","2:3386:1214"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1130":{"id":"0:1130","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[60,0],"end":[64,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45728:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"items":["0:1132:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5697:5975":{"id":"1:5697:5975","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5698:57653","1:5699:57654","1:5700:57655","1:5701:57656"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1294:2000":{"id":"0:1294:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[1093,4],"end":[1093,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"0:2551:2738":{"id":"0:2551:2738","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:3031:1563":{"id":"a:2:3235:200-0:3031:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3168-0:2954:1567":{"id":"b:2:3168-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13479:62368":{"id":"2:13479:62368","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15775:4412"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49610:4855","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6359:5953":{"id":"1:6359:5953","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6360:6257","1:6361:6258","1:6362:9396","1:6363:56655","1:6365:56658","1:6367:1583","1:6368:56656","1:6370:56657"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2614":{"id":"0:2614","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,29],"end":[20,31]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1250:1779":{"id":"0:1250:1779","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[938,4],"end":[940,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(b\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(&b\"\"[..], |m| m.as_bytes());\nlet text2 = caps.get(2).map_or(&b\"\"[..], |m| m.as_bytes());\nassert_eq!(text1, &b\"123\"[..]);\nassert_eq!(text2, &b\"\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:3049:1572":{"id":"b:2:2838-0:3049:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2664:1564":{"id":"a:2:3276:4874-0:2664:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3247:209-0:2655:1574":{"id":"a:2:3247:209-0:2655:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13394:58858":{"id":"2:13394:58858","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12992:1553","prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2890:2881":{"id":"a:2:3247:209-0:2890:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:3049:1572":{"id":"a:2:9218:3221-0:3049:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10259:5310":{"id":"2:10259:5310","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10260:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3247:209-0:3049:1572":{"id":"a:2:3247:209-0:3049:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2853":{"id":"0:2853","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2854:4065","0:2855:1766","0:2856:778","0:2857:764"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10257:119":{"id":"2:10257:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10258:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3168-0:2993:1573":{"id":"b:2:3168-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1677":{"id":"0:1677","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1303,0],"end":[1311,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1679:3753","0:1680:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1561":{"id":"0:1561","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[880,0],"end":[909,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1562:1779","0:1563:778"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2857:104":{"id":"2:2857:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2858:396","2:2859:398"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6479:5988":{"id":"1:6479:5988","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6480:60473","1:6481:60474"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2983:1564":{"id":"0:2983:1564","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_unicode.rs","begin":[751,0],"end":[751,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2983:1564","a:2:9217:3222-0:2983:1564","a:2:3235:200-0:2983:1564","a:2:3247:209-0:2983:1564","a:2:9218:3221-0:2983:1564","b:2:3164-0:2983:1564","b:2:2838-0:2983:1564","b:2:3964-0:2983:1564","b:2:8366-0:2983:1564","b:2:3179-0:2983:1564","b:2:3174-0:2983:1564","b:2:2841-0:2983:1564","b:2:3168-0:2983:1564","b:5:787-0:2983:1564","0:2987","0:2990","0:1531","0:1539","0:1541"]}},"2:13382:1577":{"id":"2:13382:1577","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49297:1786","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1316:3750":{"id":"0:1316:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1178,4],"end":[1180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2916:646":{"id":"0:2916:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2679":{"id":"0:2679","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[859,16],"end":[859,21]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2680:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:2646:1573":{"id":"b:2:3964-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1638":{"id":"0:1638","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1154,0],"end":[1154,49]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8366-0:3002:1574":{"id":"b:2:8366-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"5:6097:63006":{"id":"5:6097:63006","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8352:205","`Box<str>`":"5:432:1992"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1992","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8090:5410","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2609":{"id":"0:2609","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,27]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2611:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3007":{"id":"0:3007","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3010:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3235:200-0:2805:4096":{"id":"a:2:3235:200-0:2805:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3174-0:3018:1575":{"id":"b:2:3174-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:3018:1575":{"id":"b:2:3179-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1656":{"id":"0:1656","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1234,0],"end":[1242,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1641:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:1658:3753","0:1659:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3168-0:2594:3530":{"id":"b:2:3168-0:2594:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2525:1819":{"id":"0:2525:1819","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1594":{"id":"0:1594","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1040,0],"end":[1048,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3539:3537","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1596:171","0:1597:738"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3168-0:3058:1569":{"id":"b:2:3168-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1529:3638":{"id":"0:1529:3638","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_unicode.rs","begin":[730,4],"end":[732,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:1565:1565":{"id":"b:2:3174-0:1565:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1232:3814":{"id":"0:1232:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[831,4],"end":[833,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2890:2881":{"id":"b:2:3164-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13441:62357":{"id":"2:13441:62357","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"`DoubleEndedIterator`":"2:8406:120","prim@char":"1:15775:4412","str::match_indices":"1:15781:4417","self::pattern":"2:12992:1553"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49479:4861","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13473:2733":{"id":"2:13473:2733","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12931:3538","FromStr::Err":"2:12931:3538"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12931:3538","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12931:3538","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1307":{"id":"0:1307","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1164,0],"end":[1171,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:1310:3753","0:1311:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2664:1564":{"id":"a:2:9218:3221-0:2664:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3247:209-0:3018:1575":{"id":"a:2:3247:209-0:3018:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1191":{"id":"0:1191","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[697,0],"end":[704,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1194:2000","0:1195:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2987":{"id":"0:2987","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["0:2989:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9217:3222-0:2895:4063":{"id":"a:2:9217:3222-0:2895:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1287:738":{"id":"0:1287:738","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1070,4],"end":[1074,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:2497:3450":{"id":"b:2:3179-0:2497:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2674:1562":{"id":"0:2674:1562","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_bytes.rs","begin":[860,0],"end":[860,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1239","a:2:3276:4874-0:2674:1562","a:2:9217:3222-0:2674:1562","a:2:3235:200-0:2674:1562","a:2:3247:209-0:2674:1562","a:2:9218:3221-0:2674:1562","b:2:3164-0:2674:1562","b:2:2838-0:2674:1562","b:2:3964-0:2674:1562","b:2:3179-0:2674:1562","b:2:3174-0:2674:1562","b:2:2841-0:2674:1562","b:2:3168-0:2674:1562","b:5:787-0:2674:1562","0:2677","0:2679"]}},"0:1460":{"id":"0:1460","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[35,0],"end":[66,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1462:1303","0:1463:586","0:1464:2054","0:1465:294"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13438:62356":{"id":"2:13438:62356","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:15775:4412","self::pattern":"2:12992:1553","`DoubleEndedIterator`":"2:8406:120","str::rmatch_indices":"1:15781:4417"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49461:4860","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2862":{"id":"0:2862","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"items":["0:2864:3368","0:2865:2000","0:2866:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3168-0:2017:127":{"id":"b:2:3168-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:3011:1562":{"id":"a:2:3235:200-0:3011:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2028":{"id":"0:2028","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:438:1556","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3243:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2703:1569":{"id":"a:2:9218:3221-0:2703:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6076":{"id":"5:6076","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5896:1318","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6077:63003","5:6078:2439","5:6081:3740","5:6084:63004","5:6096:63005","5:6097:63006","5:6098:2026","5:6099:55889","5:6100:55890"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2501:646":{"id":"0:2501:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2694:1572":{"id":"a:2:3235:200-0:2694:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3247:209-0:2983:1564":{"id":"a:2:3247:209-0:2983:1564","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3174-0:2664:1564":{"id":"b:2:3174-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:2993:1573":{"id":"a:2:9218:3221-0:2993:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1515:2771":{"id":"0:1515:2771","crate_id":0,"name":"find_at","span":{"filename":"src/re_unicode.rs","begin":[648,4],"end":[657,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2811:396":{"id":"0:2811:396","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22954:18980":{"id":"2:22954:18980","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22955:9502","2:22956:61743","2:22957:61744"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22947:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2841-0:2805:4096":{"id":"b:2:2841-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13423:59180":{"id":"2:13423:59180","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15775:4412","str::splitn":"1:15781:4417","self::pattern":"2:12992:1553"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49433:4864","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3010:646":{"id":"0:3010:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:2902:4097":{"id":"b:2:2841-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2017:127":{"id":"a:2:9217:3222-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1680:3750":{"id":"0:1680:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1308,4],"end":[1310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2788:2881":{"id":"b:2:3174-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:3018:1575":{"id":"a:2:9218:3221-0:3018:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3235:200-0:2528:3450":{"id":"a:2:3235:200-0:2528:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2814:646":{"id":"0:2814:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2703:1569":{"id":"a:2:3247:209-0:2703:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3174-0:2694:1572":{"id":"b:2:3174-0:2694:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2805:4096":{"id":"a:2:3276:4874-0:2805:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9217:3222-0:2497:3450":{"id":"a:2:9217:3222-0:2497:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1223":{"id":"0:1223","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[810,0],"end":[810,48]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3235:200-0:2890:2881":{"id":"a:2:3235:200-0:2890:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2780":{"id":"0:2780","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3174-0:2978:1570":{"id":"b:2:3174-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13011:3125":{"id":"2:13011:3125","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13013:3049","2:13014:907","2:13015:61607","2:13016:61608"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:3002:1574":{"id":"b:2:3179-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13401:5346":{"id":"2:13401:5346","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:12992:1553","`None`":"2:47347:166","prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:3058:1569":{"id":"b:2:2841-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2579":{"id":"0:2579","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2566:1558","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2580:905","0:2583:2745","0:2584:2738","0:2585:2739","0:2586:2740","0:2587:2741","0:2588:2742","0:2589:1532","0:2590:2737","0:2591:1819","0:2592:2126","0:2593:2744"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1475":{"id":"0:1475","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[145,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1476:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2524:2737":{"id":"0:2524:2737","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13383:34830":{"id":"2:13383:34830","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15781:4417"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49585:4848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8366-0:2800:4097":{"id":"b:2:8366-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:3247:209-0:3040:1568":{"id":"a:2:3247:209-0:3040:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9217:3222-0:2655:1574":{"id":"a:2:9217:3222-0:2655:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12439:6686":{"id":"2:12439:6686","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12440:2000","2:12441:61718"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2959":{"id":"0:2959","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,9],"end":[28,13]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3245:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1597:738":{"id":"0:1597:738","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1043,4],"end":[1047,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:448:646":{"id":"0:448:646","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[34,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1213:907":{"id":"0:1213:907","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[747,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:3018:1575":{"id":"b:2:2841-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2021:2041":{"id":"0:2021:2041","crate_id":0,"name":"CompiledTooBig","span":{"filename":"src/error.rs","begin":[11,4],"end":[11,25]},"visibility":"default","docs":"The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"}]}},"2:3178:1392":{"id":"2:3178:1392","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2978:1570":{"id":"b:2:2838-0:2978:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2589:1532":{"id":"0:2589:1532","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5832:4844":{"id":"5:5832:4844","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5834:171","5:5835:3300"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3182:127":{"id":"2:3182:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38660:5710","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:2580:905":{"id":"0:2580:905","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3132:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1195:907":{"id":"0:1195:907","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[700,4],"end":[703,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:2793:4063":{"id":"b:5:787-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1178:3782":{"id":"0:1178:3782","crate_id":0,"name":"captures_read","span":{"filename":"src/re_bytes.rs","begin":[611,4],"end":[617,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1463:586":{"id":"0:1463:586","crate_id":0,"name":"end","span":{"filename":"src/re_unicode.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3132:75":{"id":"2:3132:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3134:293"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1635:2000":{"id":"0:1635:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1146,4],"end":[1146,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}},"2:3539:3537":{"id":"2:3539:3537","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3541:171","2:3542:738"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:2838-0:2561:3530":{"id":"b:2:2838-0:2561:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2759:753":{"id":"0:2759:753","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:8362:151","args":null,"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2497:3450":{"id":"b:2:3174-0:2497:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8560:157":{"id":"2:8560:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8561:2000","2:8562:907","2:8563:5349","2:8566:3814","2:8567:482","2:8569:3666","2:8572:5350","2:8573:5351","2:8574:5352","2:8575:5353","2:8577:2965","2:8579:5354","2:8580:5355","2:8582:826","2:8585:5356","2:8592:5357","2:8594:5358","2:8597:1881","2:8598:2058","2:8599:5359","2:8601:5360","2:8603:5361","2:8606:1286","2:8607:2027","2:8608:5362","2:8612:5363","2:8615:5364","2:8616:5365","2:8617:5366","2:8619:3939","2:8620:1885","2:8622:5367","2:8625:5368","2:8627:5369","2:8637:5370","2:8652:5371","2:8654:5372","2:8658:5373","2:8667:5374","2:8670:5375","2:8672:5376","2:8675:265","2:8682:282","2:8689:2491","2:8696:5377","2:8705:5378","2:8715:1000","2:8722:5379","2:8729:2018","2:8730:2016","2:8731:4762","2:8743:4761","2:8750:4760","2:8762:4759","2:8769:1978","2:8770:5380","2:8775:2994","2:8778:2532","2:8781:5381","2:8782:3436","2:8784:5382","2:8786:402","2:8789:5383","2:8792:983","2:8795:5384","2:8798:591","2:8801:5385","2:8804:892","2:8806:811","2:8808:777","2:8810:699","2:8812:682","2:8814:5386","2:8815:5387","2:8823:5388"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1615:3814":{"id":"0:1615:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[1096,4],"end":[1098,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:2561:3530":{"id":"b:2:2841-0:2561:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2637:1563":{"id":"b:2:2841-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2993:1573":{"id":"a:2:3276:4874-0:2993:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:2628:1568":{"id":"b:2:3164-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1473":{"id":"0:1473","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[138,0],"end":[143,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10257:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1474:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1174:2770":{"id":"0:1174:2770","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_bytes.rs","begin":[580,4],"end":[582,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3338:4810":{"id":"2:3338:4810","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3340:1334"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3164-0:2017:127":{"id":"b:2:3164-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:2623:1570":{"id":"a:2:3235:200-0:2623:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:789:3752":{"id":"5:789:3752","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:1565:1565":{"id":"a:2:3276:4874-0:1565:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:2637:1563":{"id":"b:2:3164-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3168-0:2902:4097":{"id":"b:2:3168-0:2902:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2532:646":{"id":"0:2532:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1159:3676":{"id":"0:1159:3676","crate_id":0,"name":"splitn","span":{"filename":"src/re_bytes.rs","begin":[341,4],"end":[347,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&[u8]> = re.splitn(b\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec![&b\"Hey\"[..], &b\"How\"[..], &b\"are you?\"[..]]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2905":{"id":"0:2905","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2906:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1465:294":{"id":"0:1465:294","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[57,4],"end":[59,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:3058:1569":{"id":"a:2:3276:4874-0:3058:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2559:2126":{"id":"0:2559:2126","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2762:3368":{"id":"0:2762:3368","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"2:3313:4802":{"id":"2:3313:4802","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3315:171","2:3316:877"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3350:4809":{"id":"2:3350:4809","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3352:1089"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:200-0:1243:1565":{"id":"a:2:3235:200-0:1243:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9217:3222-0:2694:1572":{"id":"a:2:9217:3222-0:2694:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:2895:4063":{"id":"a:2:9218:3221-0:2895:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3964-0:2703:1569":{"id":"b:2:3964-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2838-0:2637:1563":{"id":"b:2:2838-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1180:2772":{"id":"0:1180:2772","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_bytes.rs","begin":[625,4],"end":[635,5]},"visibility":"public","docs":"Returns the same as `captures_read`, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2599:1567":{"id":"0:2599:1567","crate_id":0,"name":"Match","span":{"filename":"src/re_bytes.rs","begin":[21,0],"end":[25,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1123","a:2:3276:4874-0:2599:1567","a:2:9217:3222-0:2599:1567","a:2:3235:200-0:2599:1567","a:2:3247:209-0:2599:1567","a:2:9218:3221-0:2599:1567","b:2:3164-0:2599:1567","b:2:2838-0:2599:1567","b:2:3964-0:2599:1567","b:2:3179-0:2599:1567","b:2:3174-0:2599:1567","b:2:2841-0:2599:1567","b:2:3168-0:2599:1567","b:5:787-0:2599:1567","0:2604","0:2606","0:2609","0:2612","0:2614","0:2617","0:2619","0:1130"]}},"2:3167:2092":{"id":"2:3167:2092","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3141:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:1243:1565":{"id":"a:2:3276:4874-0:1243:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8369:3368":{"id":"2:8369:3368","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"0:1462:1303":{"id":"0:1462:1303","crate_id":0,"name":"start","span":{"filename":"src/re_unicode.rs","begin":[38,4],"end":[40,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2594:3530":{"id":"b:2:2838-0:2594:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2992:646":{"id":"0:2992:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2907:4096":{"id":"a:2:3276:4874-0:2907:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1317":{"id":"0:1317","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1183,0],"end":[1191,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}},"items":["0:1319:3753","0:1320:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1470":{"id":"0:1470","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[74,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45728:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"items":["0:1472:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13372:2368":{"id":"2:13372:2368","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:1243:1565":{"id":"b:2:3179-0:1243:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13366:292":{"id":"2:13366:292","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15792:4426","str::as_mut_ptr":"1:15781:4417"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13368:1779":{"id":"2:13368:1779","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47347:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10892:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2907:4096":{"id":"b:2:3164-0:2907:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1328":{"id":"0:1328","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1213,0],"end":[1221,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}}}},"items":["0:1330:3753","0:1331:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6099:55889":{"id":"5:6099:55889","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15781:4417"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13380:3170":{"id":"2:13380:3170","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49281:4851","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2664:1564":{"id":"b:2:3964-0:2664:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2664:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2655:1574":{"id":"b:2:2841-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:3002:1574":{"id":"b:2:2841-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2798":{"id":"0:2798","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2799:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2588:2742":{"id":"0:2588:2742","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3318:4801":{"id":"2:3318:4801","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:171","2:3321:545"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:3058:1569":{"id":"b:2:3179-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2841:905":{"id":"0:2841:905","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47474:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsRef","id":"2:3132:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4623:6019":{"id":"1:4623:6019","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4624:56997","1:4625:42037","1:4626:56998","1:4627:56999"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1578:1584":{"id":"0:1578:1584","crate_id":0,"name":"expand","span":{"filename":"src/re_unicode.rs","begin":[988,4],"end":[990,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of characters is permitted. If the sequence\ndoes not refer to a capture group name in the corresponding regex, then\nit is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["replacement",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2788:2881":{"id":"a:2:3235:200-0:2788:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1467":{"id":"0:1467","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[68,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1469:667"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2754:778":{"id":"0:2754:778","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2527:2744":{"id":"0:2527:2744","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2906:646":{"id":"0:2906:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13475:1993":{"id":"2:13475:1993","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1655:3750":{"id":"0:1655:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1229,4],"end":[1231,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:2646:1573":{"id":"a:2:3235:200-0:2646:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3168-0:1565:1565":{"id":"b:2:3168-0:1565:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2890:2881":{"id":"b:2:2841-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1257:778":{"id":"0:1257:778","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[987,4],"end":[989,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:2599:1567":{"id":"a:2:9217:3222-0:2599:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3061:1515":{"id":"0:3061:1515","crate_id":0,"name":"0","span":{"filename":"src/re_unicode.rs","begin":[1301,24],"end":[1301,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:2964":{"id":"0:2964","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2966:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:2599:1567":{"id":"b:2:3964-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2838-0:2628:1568":{"id":"b:2:2838-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2587:2741":{"id":"0:2587:2741","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2623:1570":{"id":"0:2623:1570","crate_id":0,"name":"Regex","span":{"filename":"src/re_bytes.rs","begin":[78,0],"end":[78,23]},"visibility":"public","docs":"A compiled regular expression for matching arbitrary bytes.\n\nIt can be used to search, split or replace text. All searching is done with\nan implicit `.*?` at the beginning and end of an expression. To force an\nexpression to match the whole string (or a prefix or a suffix), you must\nuse an anchor like `^` or `$` (or `\\A` and `\\z`).\n\nLike the `Regex` type in the parent module, matches with this regex return\nbyte offsets into the search text. **Unlike** the parent `Regex` type,\nthese byte offsets may not correspond to UTF-8 sequence boundaries since\nthe regexes in this module can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:1142","0:1171","0:1185","a:2:3276:4874-0:2623:1570","a:2:9217:3222-0:2623:1570","a:2:3235:200-0:2623:1570","a:2:3247:209-0:2623:1570","a:2:9218:3221-0:2623:1570","b:2:3164-0:2623:1570","b:2:2838-0:2623:1570","b:2:3964-0:2623:1570","b:2:3179-0:2623:1570","b:2:3174-0:2623:1570","b:2:2841-0:2623:1570","b:2:3168-0:2623:1570","b:5:787-0:2623:1570","b:5:6406-0:2623:1570","0:2626","0:1133","0:1135","0:1139"]}},"a:2:9217:3222-0:2978:1570":{"id":"a:2:9217:3222-0:2978:1570","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10200:5305":{"id":"2:10200:5305","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10201:1506","2:10202:61490","2:10204:5187"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3168-0:2628:1568":{"id":"b:2:3168-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2674:1562":{"id":"b:2:2841-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13451:62362":{"id":"2:13451:62362","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2838-0:2983:1564":{"id":"b:2:2838-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1620":{"id":"0:1620","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1107,0],"end":[1107,59]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2651":{"id":"0:2651","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[738,9],"end":[738,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2654:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2969":{"id":"0:2969","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2892:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2663:646":{"id":"0:2663:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[776,9],"end":[776,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2840:3301":{"id":"2:2840:3301","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3342:4808":{"id":"2:3342:4808","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:878"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2841-0:2800:4097":{"id":"b:2:2841-0:2800:4097","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2756":{"id":"0:2756","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2757:3368","0:2758:2000","0:2759:753"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8366-0:3040:1568":{"id":"b:2:8366-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2841-0:2788:2881":{"id":"b:2:2841-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2966:646":{"id":"0:2966:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2674:1562":{"id":"b:2:3168-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3141:135":{"id":"2:3141:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3143:667"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2557:2737":{"id":"0:2557:2737","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2870:3814":{"id":"0:2870:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2628:1568":{"id":"b:2:3174-0:2628:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1484:2232":{"id":"0:1484:2232","crate_id":0,"name":"is_match","span":{"filename":"src/re_unicode.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2017:127":{"id":"a:2:3276:4874-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2859:3368":{"id":"0:2859:3368","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:2804:646":{"id":"0:2804:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13384:34820":{"id":"2:13384:34820","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15781:4417"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49594:4846","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3030:646":{"id":"0:3030:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2590:2737":{"id":"0:2590:2737","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2674:1562":{"id":"b:2:3174-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2788:2881":{"id":"a:2:3276:4874-0:2788:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3324:4804":{"id":"2:3324:4804","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3326:171","2:3327:1088"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3276:4874-0:3002:1574":{"id":"a:2:3276:4874-0:3002:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3235:200-0:2497:3450":{"id":"a:2:3235:200-0:2497:3450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2766:2000":{"id":"0:2766:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:1650:3753":{"id":"0:1650:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1216,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1670:3750":{"id":"0:1670:3750","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1269,4],"end":[1271,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:792:108","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2699":{"id":"0:2699","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1161,9],"end":[1161,14]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:2702:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2838-0:3031:1563":{"id":"b:2:2838-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1563:778":{"id":"0:1563:778","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[895,4],"end":[897,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9217:3222-0:3011:1562":{"id":"a:2:9217:3222-0:3011:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5575:5996":{"id":"1:5575:5996","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5576:7385","1:5577:2768"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3240:3942":{"id":"2:3240:3942","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9217:3222-0:1565:1565":{"id":"a:2:9217:3222-0:1565:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2776:3814":{"id":"0:2776:3814","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3235:200-0:3058:1569":{"id":"a:2:3235:200-0:3058:1569","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3964-0:1565:1565":{"id":"b:2:3964-0:1565:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2993:1573":{"id":"0:2993:1573","crate_id":0,"name":"Split","span":{"filename":"src/re_unicode.rs","begin":[781,0],"end":[784,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2993:1573","a:2:9217:3222-0:2993:1573","a:2:3235:200-0:2993:1573","a:2:3247:209-0:2993:1573","a:2:9218:3221-0:2993:1573","b:2:3164-0:2993:1573","b:2:2838-0:2993:1573","b:2:3964-0:2993:1573","b:2:8366-0:2993:1573","b:2:3179-0:2993:1573","b:2:3174-0:2993:1573","b:2:2841-0:2993:1573","b:2:3168-0:2993:1573","0:2998","0:1543","0:1548"]}},"0:2779:4103":{"id":"0:2779:4103","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2954:1567":{"id":"a:2:3276:4874-0:2954:1567","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13379:59168":{"id":"2:13379:59168","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15781:4417"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1153:3655":{"id":"0:1153:3655","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_bytes.rs","begin":[290,4],"end":[295,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use std::str; use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    let title = str::from_utf8(&caps[\"title\"]).unwrap();\n    let year = str::from_utf8(&caps[\"year\"]).unwrap();\n    println!(\"Movie: {:?}, Released: {:?}\", title, year);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:3031:1563":{"id":"b:2:3168-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2907:4096":{"id":"a:2:9217:3222-0:2907:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2841-0:2594:3530":{"id":"b:2:2841-0:2594:3530","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13386:62350":{"id":"2:13386:62350","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49575:4859","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3164-0:2993:1573":{"id":"b:2:3164-0:2993:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3164-0:3011:1562":{"id":"b:2:3164-0:3011:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9217:3222-0:2805:4096":{"id":"a:2:9217:3222-0:2805:4096","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8325:4627":{"id":"2:8325:4627","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8327:5382"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13477:55892":{"id":"2:13477:55892","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:3040:1568":{"id":"b:2:3179-0:3040:1568","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3040:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2017:127":{"id":"b:2:2841-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1520:2772":{"id":"0:1520:2772","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_unicode.rs","begin":[683,4],"end":[693,5]},"visibility":"public","docs":"Returns the same as captures, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1555:907":{"id":"0:1555:907","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[827,4],"end":[845,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2981":{"id":"0:2981","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2982:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:446:2603":{"id":"0:446:2603","crate_id":0,"name":"description","span":{"filename":"src/error.rs","begin":[24,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2998":{"id":"0:2998","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:3001:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:787-0:3018:1575":{"id":"b:5:787-0:3018:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3276:4874":{"id":"2:3276:4874","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9218:3221-0:2890:2881":{"id":"a:2:9218:3221-0:2890:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:2623:1570":{"id":"b:2:3164-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:2793:4063":{"id":"b:2:3174-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3164-0:3031:1563":{"id":"b:2:3164-0:3031:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2628:1568":{"id":"0:2628:1568","crate_id":0,"name":"Matches","span":{"filename":"src/re_bytes.rs","begin":[695,0],"end":[695,66]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a tuple of integers corresponding to the start and end\nof the match. The indices are byte offsets. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2628:1568","a:2:9217:3222-0:2628:1568","a:2:3235:200-0:2628:1568","a:2:3247:209-0:2628:1568","a:2:9218:3221-0:2628:1568","b:2:3164-0:2628:1568","b:2:2838-0:2628:1568","b:2:3964-0:2628:1568","b:2:8366-0:2628:1568","b:2:3179-0:2628:1568","b:2:3174-0:2628:1568","b:2:2841-0:2628:1568","b:2:3168-0:2628:1568","0:2633","0:1191","0:1197"]}},"b:2:3174-0:3058:1569":{"id":"b:2:3174-0:3058:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3058:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2528:3450":{"id":"b:2:2841-0:2528:3450","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2528:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1305:3939":{"id":"0:1305:3939","crate_id":0,"name":"by_ref","span":{"filename":"src/re_bytes.rs","begin":[1153,4],"end":[1155,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::bytes::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &[u8],\n    mut rep: R,\n) -> Vec<u8> {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[33,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:438:1556","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10257:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:448:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:14104:141":{"id":"2:14104:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14105:266","2:14106:505","2:14107:269","2:14108:1065"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3174-0:2623:1570":{"id":"b:2:3174-0:2623:1570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2623:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13455:62364":{"id":"2:13455:62364","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15775:4412","self::pattern":"2:12992:1553"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6404:212":{"id":"5:6404:212","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6405:1958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:7717:6134":{"id":"1:7717:6134","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7718:55948"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:200-0:3018:1575":{"id":"a:2:3235:200-0:3018:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1313":{"id":"0:1313","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1173,0],"end":[1181,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:1315:3753","0:1316:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9217:3222-0:3018:1575":{"id":"a:2:9217:3222-0:3018:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3018:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1623":{"id":"0:1623","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1121,0],"end":[1131,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1626:2000","0:1627:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3247:209-0:3031:1563":{"id":"a:2:3247:209-0:3031:1563","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3031:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2026":{"id":"0:2026","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":{"restricted":{"parent":"0:438:1556","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2027:396"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8366-0:2655:1574":{"id":"b:2:8366-0:2655:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2655:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2027:396":{"id":"0:2027:396","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:2681:1575":{"id":"b:2:2841-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2485:905":{"id":"0:2485:905","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2497:3450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3247:209-0:2993:1573":{"id":"a:2:3247:209-0:2993:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2799:646":{"id":"0:2799:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2841-0:2793:4063":{"id":"b:2:2841-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13426:62353":{"id":"2:13426:62353","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2803":{"id":"0:2803","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2713:1532","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2804:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2895:4063":{"id":"0:2895:4063","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:2853","a:2:3276:4874-0:2895:4063","a:2:9217:3222-0:2895:4063","a:2:3235:200-0:2895:4063","a:2:3247:209-0:2895:4063","a:2:9218:3221-0:2895:4063","b:2:3164-0:2895:4063","b:2:2838-0:2895:4063","b:2:3964-0:2895:4063","b:2:3179-0:2895:4063","b:2:3174-0:2895:4063","b:2:2841-0:2895:4063","b:2:3168-0:2895:4063","b:5:787-0:2895:4063","0:2898","0:2900","0:2858","0:2862"]}},"b:2:3174-0:2637:1563":{"id":"b:2:3174-0:2637:1563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2637:1563","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8321:4628":{"id":"2:8321:4628","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8323:3436"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1548":{"id":"0:1548","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[810,0],"end":[810,47]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2993:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3964-0:1243:1565":{"id":"b:2:3964-0:1243:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3346:4807":{"id":"2:3346:4807","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3348:546"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2841-0:2694:1572":{"id":"b:2:2841-0:2694:1572","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2694:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3691:213":{"id":"2:3691:213","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3692:171","2:3693:4826","2:3694:672","2:3695:357"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3696:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3691:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3164-0:1243:1565":{"id":"b:2:3164-0:1243:1565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1291":{"id":"0:1291","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1092,0],"end":[1100,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1294:2000","0:1295:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3367:4812":{"id":"2:3367:4812","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3369:171","2:3370:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5649:5971":{"id":"1:5649:5971","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5650:8115","1:5651:60374","1:5652:60375"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2752:4065":{"id":"0:2752:4065","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2876:2000":{"id":"0:2876:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"2:3679:4824":{"id":"2:3679:4824","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3610:4823","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13387:34815":{"id":"2:13387:34815","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49603:4845","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2805:4096":{"id":"0:2805:4096","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:2805:4096","a:2:9217:3222-0:2805:4096","a:2:3235:200-0:2805:4096","a:2:3247:209-0:2805:4096","a:2:9218:3221-0:2805:4096","b:2:3164-0:2805:4096","b:2:2838-0:2805:4096","b:2:3964-0:2805:4096","b:2:8366-0:2805:4096","b:2:3179-0:2805:4096","b:2:3174-0:2805:4096","b:2:2841-0:2805:4096","b:2:3168-0:2805:4096","b:5:787-0:2805:4096","0:2809","0:2812","0:2772","0:2777","0:2780"]}},"0:1511":{"id":"0:1511","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[592,0],"end":[709,1]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2978:1570","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:1512:3766","0:1513:2769","0:1514:2770","0:1515:2771","0:1518:3782","0:1520:2772"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3247:209-0:3011:1562":{"id":"a:2:3247:209-0:3011:1562","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3011:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1123":{"id":"0:1123","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[27,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:1125:1303","0:1126:586","0:1127:2054","0:1128:2768"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2560:2744":{"id":"0:2560:2744","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13482:4736":{"id":"2:13482:4736","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15775:4412"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49628:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3276:4874-0:2594:3530":{"id":"a:2:3276:4874-0:2594:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13022:4840":{"id":"2:13022:4840","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13017:4842","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2838-0:2674:1562":{"id":"b:2:2838-0:2674:1562","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2832:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2674:1562","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2840:3301"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6406-0:2017:127":{"id":"b:5:6406-0:2017:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10257:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6404:212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6408:1958"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3276:4874-0:2793:4063":{"id":"a:2:3276:4874-0:2793:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3168-0:3002:1574":{"id":"b:2:3168-0:3002:1574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:2017:127":{"id":"a:2:9218:3221-0:2017:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3164-0:2703:1569":{"id":"b:2:3164-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3167:2092"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9218:3221-0:2646:1573":{"id":"a:2:9218:3221-0:2646:1573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2585:2739":{"id":"0:2585:2739","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2594:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3168-0:2703:1569":{"id":"b:2:3168-0:2703:1569","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1661:3753":{"id":"0:1661:3753","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1245,4],"end":[1247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8352:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8366-0:2681:1575":{"id":"b:2:8366-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1611:2000":{"id":"0:1611:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1088,4],"end":[1088,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"a:2:3276:4874-0:2628:1568":{"id":"a:2:3276:4874-0:2628:1568","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1147:3598":{"id":"0:1147:3598","crate_id":0,"name":"find_iter","span":{"filename":"src/re_bytes.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 ASCII\nword bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2628:1568","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[21,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:438:1556","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","backtrace","cause","description"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2569:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2017:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:446:2603"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9218:3221-0:2800:4097":{"id":"a:2:9218:3221-0:2800:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9218:3221-0:3002:1574":{"id":"a:2:9218:3221-0:3002:1574","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:3002:1574","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9217:3222-0:3049:1572":{"id":"a:2:9217:3222-0:3049:1572","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:2681:1575":{"id":"b:2:3179-0:2681:1575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1641:1571":{"id":"0:1641:1571","crate_id":0,"name":"Replacer","span":{"filename":"src/re_unicode.rs","begin":[1162,0],"end":[1207,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a string.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&str` along with other\nvariants of string types and `FnMut(&Captures) -> String` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<str>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1642:3753","0:1643:3750","0:1645:3939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1647","0:1652","0:1656","0:1660","0:1663","0:1667","0:1673","0:1677"]}},"a:2:9217:3222-0:2793:4063":{"id":"a:2:9217:3222-0:2793:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9217:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3031:1563":{"id":"0:3031:1563","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1117,0],"end":[1119,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3276:4874-0:3031:1563","a:2:9217:3222-0:3031:1563","a:2:3235:200-0:3031:1563","a:2:3247:209-0:3031:1563","a:2:9218:3221-0:3031:1563","b:2:3164-0:3031:1563","b:2:2838-0:3031:1563","b:2:3964-0:3031:1563","b:2:8366-0:3031:1563","b:2:3179-0:3031:1563","b:2:3174-0:3031:1563","b:2:2841-0:3031:1563","b:2:3168-0:3031:1563","0:3036","0:1623","0:1629"]}},"2:2832:97":{"id":"2:2832:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2834:3301"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1464:2054":{"id":"0:1464:2054","crate_id":0,"name":"range","span":{"filename":"src/re_unicode.rs","begin":[51,4],"end":[53,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:45728:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3054":{"id":"0:3054","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":{"restricted":{"parent":"0:1404:1560","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3049:1572","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"items":["0:3057:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3247:209-0:1565:1565":{"id":"a:2:3247:209-0:1565:1565","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3247:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2785:646":{"id":"0:2785:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6783:5961":{"id":"1:6783:5961","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6784:60394"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1298":{"id":"0:1298","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1102,0],"end":[1102,59]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"FusedIterator","id":"2:8838:3536","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3696:137":{"id":"2:3696:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3698:673"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3691:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:200-0:2681:1575":{"id":"a:2:3235:200-0:2681:1575","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2681:1575","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3389:4817":{"id":"2:3389:4817","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3391:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3235:200-0:2793:4063":{"id":"a:2:3235:200-0:2793:4063","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3276:4874-0:2561:3530":{"id":"a:2:3276:4874-0:2561:3530","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3276:4874","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2561:3530","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:8366-0:2983:1564":{"id":"b:2:8366-0:2983:1564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoIterator","id":"2:8362:151","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2983:1564","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}},"param_names":[]}},"items":["2:8368:2000","2:8369:3368","2:8370:753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1144:2232":{"id":"0:1144:2232","crate_id":0,"name":"is_match","span":{"filename":"src/re_bytes.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13 ASCII word\nbytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:450:646":{"id":"0:450:646","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[52,4],"end":[70,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3964-0:2890:2881":{"id":"b:2:3964-0:2890:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3962:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2890:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3966:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3174-0:2805:4096":{"id":"b:2:3174-0:2805:4096","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1490:1872":{"id":"0:1490:1872","crate_id":0,"name":"captures","span":{"filename":"src/re_unicode.rs","begin":[311,4],"end":[318,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.get(2).unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], \"Citizen Kane\");\nassert_eq!(&caps[2], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], \"Citizen Kane\");\nassert_eq!(&caps[\"year\"], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1565","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2755:764":{"id":"0:2755:764","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2805:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3397:4819":{"id":"2:3397:4819","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3399:345"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3168-0:2788:2881":{"id":"b:2:3168-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1604:738":{"id":"0:1604:738","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1065,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9218:3221-0:2788:2881":{"id":"a:2:9218:3221-0:2788:2881","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9218:3221","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6709:5992":{"id":"1:6709:5992","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6710:55839","1:6711:57671"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10481:5965","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:2788:2881":{"id":"b:5:787-0:2788:2881","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2857:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2788:2881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:3752","5:790:2560","5:791:5390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2954:1567":{"id":"b:2:3179-0:2954:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1321":{"id":"0:1321","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1193,0],"end":[1201,1]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"kind":"resolved_path","inner":{"name":"Replacer","id":"0:1301:1571","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7764:223","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}},"items":["0:1322:3753","0:1323:3750"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1546:2000":{"id":"0:1546:2000","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[787,4],"end":[787,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"2:13405:1882":{"id":"2:13405:1882","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8406:120","str::rsplit":"1:15781:4417","self::pattern":"2:12992:1553","str::split_whitespace":"1:15781:4417","prim@char":"1:15775:4412"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49311:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13002:4841","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3174-0:2599:1567":{"id":"b:2:3174-0:2599:1567","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3144:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2599:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3177:127","2:3178:1392"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:2793:4063":{"id":"b:2:3179-0:2793:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3138:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2793:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1391"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3235:200-0:2800:4097":{"id":"a:2:3235:200-0:2800:4097","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3235:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2800:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2914":{"id":"0:2914","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2907:4096","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:2916:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10267:179":{"id":"2:10267:179","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10268:646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13367:11117":{"id":"2:13367:11117","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15792:4426"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6785:5962":{"id":"1:6785:5962","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6786:56278"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3168-0:2646:1573":{"id":"b:2:3168-0:2646:1573","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3141:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2646:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["2:3170:667"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2841-0:2895:4063":{"id":"b:2:2841-0:2895:4063","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3240:3942","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2835:4834","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2843:1751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1572:1779":{"id":"0:1572:1779","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[948,4],"end":[950,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(\"\", |m| m.as_str());\nlet text2 = caps.get(2).map_or(\"\", |m| m.as_str());\nassert_eq!(text1, \"123\");\nassert_eq!(text2, \"\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2954:1567","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1229:907":{"id":"0:1229:907","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[824,4],"end":[829,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2867":{"id":"0:2867","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2815:1577","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_reduce","partition_in_place","flatten","filter_map","lt","step_by","position","count","max","max_by","__iterator_get_unchecked","cmp_by","find_map","is_partitioned","fuse","copied","skip_while","chain","by_ref","collect","any","max_by_key","partial_cmp","partial_cmp_by","try_find","try_fold","ne","inspect","take_while","intersperse","cloned","zip","last","all","eq_by","rposition","le","try_for_each","map","try_collect","rev","map_while","intersperse_with","take","next_chunk","enumerate","peekable","is_sorted","unzip","fold","find","collect_into","gt","scan","for_each","sum","size_hint","advance_by","min","min_by","is_sorted_by","cycle","reduce","partition","flat_map","filter","ge","nth","min_by_key","cmp","eq","is_sorted_by_key","skip","product"],"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8560:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2902:4097","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:2868:2000","0:2869:907","0:2870:3814"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2710":{"id":"0:2710","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1249,16],"end":[1249,21]},"visibility":{"restricted":{"parent":"0:1068:1579","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10250:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2703:1569","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}},"param_names":[]}},"items":["0:2712:646"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2887:646":{"id":"0:2887:646","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10210:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10199:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1534:907":{"id":"0:1534:907","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[756,4],"end":[761,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1172:3766":{"id":"0:1172:3766","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_bytes.rs","begin":[556,4],"end":[558,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47347:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2848:1726":{"id":"0:2848:1726","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2895:4063","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3177:127":{"id":"2:3177:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3148:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}}},"paths":{"1:15778:4414":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:5832:4844":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:4112:9876":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"0:3040:1568":{"crate_id":0,"path":["regex","Matches"],"kind":"struct"},"1:12088:4539":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"6:4241:9901":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:50055:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:3324:3369":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:32205:4608":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:10304:7340":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:7714:6133":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"18:811:3168":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:4306:9925":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:14588:9324":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:10052:8021":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:5231:8823":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:542:6989":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:9133:48864":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:12946:8414":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:9528:1786":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"7:0:1456":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:12028:8244":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:69:5411":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:374:5464":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:2159:3369":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:12040:8246":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"6:5528:10204":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"20:3446:55410":{"crate_id":20,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"2:51774:9239":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:49361:4866":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:32170:4607":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"12:0:4390":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:6239:10375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"12:1667:6933":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:7437:7607":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:4823:8816":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:11358:7348":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:47652:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:3951:9798":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"20:2616:7487":{"crate_id":20,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"21:1861:3124":{"crate_id":21,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"5:5868:7615":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:13217:9170":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:22947:5965":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:11121:1573":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12343:8297":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:5274:10100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:3483:5412":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:11028:4651":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:1463:6068":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:49189:5918":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:13831:9172":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:11048:4858":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:6644:7099":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:11962:3369":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"19:117:9450":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:9383:10905":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"18:774:7721":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"18:857:5860":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:5522:10203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:2060:6008":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:6852:10386":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:15746:13897":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:15796:4430":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:4955:8820":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:4790:8815":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:55994:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:14071:6038":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"21:1868:7786":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"12:1688:6934":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:6032:7007":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:7205:7110":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:3543:7633":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:11277:8106":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:49140:5930":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:8302:5889":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:12017:6181":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:13819:8730":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:6185:10353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"12:469:10866":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:3308:4805":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:12307:8291":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:10827:7409":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:52978:6455":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:11856:171":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:4101:9871":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:8375:6697":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:3978:9810":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:9088:48863":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:11981:8238":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"12:925:6069":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"12:840:6067":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:2816:7289":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:3357:6092":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:9574:7356":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:15774:4411":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"21:703:964":{"crate_id":21,"path":["aho_corasick","packed"],"kind":"module"},"17:10140:7365":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:10656:8047":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:14380:10493":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:4387:9965":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:11482:8132":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:3708:4828":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:7042:7319":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:10950:8090":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:23644:5965":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:10407:7427":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:9210:48865":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:15011:6160":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:3265:6210":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:11915:8218":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:9932:6543":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"14:11:9073":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:8144:3368":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"21:0:1608":{"crate_id":21,"path":["aho_corasick"],"kind":"module"},"2:11397:5940":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:3235:200":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:1658:9679":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:6899:10396":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:432:1992":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:6645:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:1908:43300":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:13963:8768":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"21:1694:6435":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"1:11111:6062":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"5:783:211":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:12632:8367":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"0:2681:1575":{"crate_id":0,"path":["regex","bytes","SubCaptureMatches"],"kind":"struct"},"1:8211:5889":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:1648:6069":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:3346:4807":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:13002:4841":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"20:1992:7812":{"crate_id":20,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"2:45904:6393":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"6:3881:9746":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:1161:13896":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:6621:10284":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"5:2213:6709":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:4215:9899":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:4005:9825":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:46825:4615":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:10585:6082":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:5697:5975":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:47466:178":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:50193:191":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:6155:10336":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:47405:3368":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:1665:9683":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"20:2100:4579":{"crate_id":20,"path":["regex_syntax","ast","Span"],"kind":"struct"},"6:4395:9968":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:6200:10360":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"20:346:7451":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"5:7250:7607":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"21:1607:5821":{"crate_id":21,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"6:5420:10180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:888:4758":{"crate_id":22,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:6252:7089":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:10526:5442":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:50203:9226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:46226:5797":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"0:1243:1565":{"crate_id":0,"path":["regex","bytes","Captures"],"kind":"struct"},"2:13720:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:531:9528":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:3367:4812":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:13924:8759":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"9:157:6805":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"22:942:7731":{"crate_id":22,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:12385:8318":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"0:1301:1571":{"crate_id":0,"path":["regex","bytes","Replacer"],"kind":"trait"},"2:14068:191":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:9759:8010":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:4046:9842":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:47474:195":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:7073:7104":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:3877:6032":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:13497:8628":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:11678:8170":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:48894:6688":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:10609:9324":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:50043:6572":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:6238:7019":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:3543:4822":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:15797:4431":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:11026:8096":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:4157:7412":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:670:42329":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:0:1309":{"crate_id":1,"path":["std"],"kind":"module"},"21:1481:2253":{"crate_id":21,"path":["aho_corasick","nfa","State"],"kind":"struct"},"1:11255:6288":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:9799:8011":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:15005:6159":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:10764:6217":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10128:7444":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:13296:8575":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:47389:3369":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:56033:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:4350:8802":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:6812:10385":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"18:729:63189":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:52899:6471":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:11159:8102":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:4470:10000":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:51593:6441":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"14:216:47213":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:4300:9922":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:74:1411":{"crate_id":2,"path":["core","u32"],"kind":"module"},"22:920:63190":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:49329:4863":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"20:2008:127":{"crate_id":20,"path":["regex_syntax","ast","Error"],"kind":"struct"},"16:6491:7094":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"21:1746:7768":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"16:3172:7276":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:2314:7430":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:11907:10489":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"6:1630:9654":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:1311:7448":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:3377:4815":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"20:3318:1981":{"crate_id":20,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"2:52645:6483":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10353:7431":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:9065:48862":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:12049:6183":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:13986:8772":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:6176:7086":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:7808:7619":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"0:2895:4063":{"crate_id":0,"path":["regex","bytes","SetMatches"],"kind":"struct"},"17:10095:7441":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:12699:8374":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:14720:7660":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:51718:9237":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:46442:4638":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:563:9550":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"20:2655:7488":{"crate_id":20,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"9:1075:6856":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:46205:5806":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:10635:8045":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:4883:4694":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:11241:5942":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:7392:7022":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:24642:6135":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:49230:5937":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:13119:8540":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:9096:9315":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"22:1072:5863":{"crate_id":22,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:9649:8008":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:45797:187":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:48702:9219":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:52221:6454":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:6269:7090":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:46511:9210":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:47568:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:10571:8040":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:2325:6751":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:4183:9896":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"20:2362:7475":{"crate_id":20,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"17:13520:8636":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:12795:8392":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"22:987:3168":{"crate_id":22,"path":["memchr","memmem","Finder"],"kind":"struct"},"12:112:10864":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:7514:7037":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:50211:180":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:7420:7038":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"1:15791:4425":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:51618:6442":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:6910:10400":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11499:8136":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:13253:6250":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:1511:6073":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:4425:9979":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:4227:9900":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:15799:4433":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"12:968:6075":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:13394:8600":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"20:2777:7490":{"crate_id":20,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"2:22799:5999":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"10:0:4388":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:10489:7366":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:6964:4706":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:49808:6355":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:2196:1036":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:6636:10382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:6881:5958":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:10200:5305":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:5996:7082":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:1194:11352":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:5407:7060":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:46623:4635":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:3132:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:2857:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:3239:6200":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"0:2788:2881":{"crate_id":0,"path":["regex","RegexSet"],"kind":"struct"},"6:88:41931":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:14816:6131":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:3035:10405":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"21:1714:1598":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"17:11809:8208":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:3070:6310":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"21:1686:1597":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"1:7949:5889":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"1:12581:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:3041:7275":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:4477:8806":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:11206:6238":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:9555:11294":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:46218:4856":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:11299:5991":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:12710:6559":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:3917:6148":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:994:1810":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:9264:8000":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:5469:10192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"0:3011:1562":{"crate_id":0,"path":["regex","CaptureLocations"],"kind":"struct"},"1:15793:4427":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:10199:195":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:3148:216":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"5:1639:6068":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:12568:8348":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:2748:566":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:46832:4540":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:11114:6141":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"2:4702:6412":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"22:137:4752":{"crate_id":22,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"21:1598:7515":{"crate_id":21,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"1:8310:2253":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"17:10435:8031":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"18:660:5868":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"12:853:6068":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:53268:9281":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:10558:8038":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:923:6700":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"9:963:6853":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"22:896:7722":{"crate_id":22,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:49311:1573":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"20:2267:7471":{"crate_id":20,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"20:1921:2623":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"16:3118:7286":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:1501:6071":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:4506:8807":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"9:0:4387":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"20:3220:4576":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"2:9721:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"20:2023:4572":{"crate_id":20,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"2:10488:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:24121:6618":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:1534:6076":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:3336:6706":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:5282:10105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:24370:6597":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"12:1100:6077":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:46164:6510":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:3401:4820":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:46195:5805":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:8332:6765":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"2:37479:168":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:7360:184":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:10279:7337":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:10756:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:13062:8506":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"20:2967:7814":{"crate_id":20,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"1:7363:175":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:4922:8819":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:157:41997":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"20:3080:1797":{"crate_id":20,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"17:11835:8213":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:7843:7118":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:49150:5919":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:5780:6284":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"1:5719:5979":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:5436:10184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:13192:8552":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:3892:9754":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:1934:5412":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:12982:8445":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:4355:6041":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:12095:8257":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"5:1838:7607":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:15789:4423":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:3774:4831":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:15132:6235":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:12128:6165":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:5953:10241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:10926:8088":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:4745:5458":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"12:866:5414":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:9777:7653":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:4704:8812":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:13582:8651":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:1942:1984":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:15788:4422":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:6785:5962":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"12:877:5412":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"21:1571:2621":{"crate_id":21,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"1:11248:6054":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:3264:7280":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"18:820:5857":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:11640:8166":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:11588:8158":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:4501:10010":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:11015:8095":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:3295:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:161:41998":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:6004:6245":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:3244:206":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:3397:4819":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:6221:10372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:50996:6447":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"20:3535:1801":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"5:3391:6093":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:15794:4428":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:3533:6029":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:53277:9282":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:22596:61273":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:12251:7664":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:4341:9943":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"12:1200:6921":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:6577:7097":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:47988:4534":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:15776:4413":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:52438:6463":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:7897:7635":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"6:6858:10387":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:24093:6656":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:4694:7611":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:11949:5925":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:51341:6469":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:511:7809":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:50023:6568":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"20:2485:7480":{"crate_id":20,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"21:1413:7749":{"crate_id":21,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"20:2416:4573":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"0:2017:127":{"crate_id":0,"path":["regex","Error"],"kind":"enum"},"6:3918:9774":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:48471:5309":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:1646:6079":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:4193:9897":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:12610:8356":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:55888:6317":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:12234:8278":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:6005:10269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:49121:5931":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:23549:6000":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:4927:4675":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"20:1870:4590":{"crate_id":20,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"2:48413:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"14:47:9073":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:12431:8328":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:1442:3368":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:3145:7285":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"21:1517:7760":{"crate_id":21,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"5:1602:5449":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:15741:1729":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:53229:6443":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"5:8314:6712":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:5561:7068":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:6219:7088":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:51083:6472":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:53190:6478":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:14176:5409":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:3241:4689":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:10001:48912":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:13282:8574":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:23992:9179":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"13:0:4384":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:9943:63179":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:4548:5986":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:299:7917":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"12:2005:3369":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:9476:7914":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:3743:7405":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"16:3338:7257":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"21:1625:7516":{"crate_id":21,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"1:15269:6950":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"12:396:6925":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:3679:4824":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:4325:9935":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:10850:6145":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:11779:8196":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:9186:7353":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"21:1817:7781":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"18:712:4758":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:14385:5984":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"21:1423:6148":{"crate_id":21,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"2:45753:185":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:2305:6771":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:4182:6044":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"2:53367:9288":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:5269:10099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:57282:9298":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:11421:2253":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:13598:8654":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:9961:8014":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"21:1537:1597":{"crate_id":21,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"1:11911:56277":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"1:1079:4672":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:51395:6476":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"12:1159:6919":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:11018:4638":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"0:3049:1572":{"crate_id":0,"path":["regex","ReplacerRef"],"kind":"struct"},"0:2907:4096":{"crate_id":0,"path":["regex","bytes","SetMatchesIter"],"kind":"struct"},"1:11041:1573":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:10331:7365":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:2462:9309":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:51188:6452":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:2794:7002":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:7849:5888":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"0:1565:1565":{"crate_id":0,"path":["regex","Captures"],"kind":"struct"},"1:11186:9375":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"16:6731:7308":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:14152:5442":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:6605:7031":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:13490:6095":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:46355:6631":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"21:1908:7794":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"2:50900:9228":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"18:790:4721":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:3255:6205":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"18:620:7496":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:10584:7411":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"22:966:4721":{"crate_id":22,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13240:8561":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:3240:3942":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:11984:6179":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:5604:1287":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"5:1592:3369":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"0:2902:4097":{"crate_id":0,"path":["regex","bytes","SetMatchesIntoIter"],"kind":"struct"},"1:14077:6036":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"20:3441:4568":{"crate_id":20,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"1:1486:5412":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:11118:48867":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:46403:7625":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:11531:6111":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:13017:4842":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:11850:6128":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:12783:8385":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:6469:4632":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:610:9575":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:7216:7111":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"21:1801:7776":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"1:13792:6129":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:13532:8639":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:24018:41251":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:6241:6254":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"21:1879:7740":{"crate_id":21,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"6:4410:9972":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:3972:9807":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:50879:9227":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:9726:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:7342:7050":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:13348:8590":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:6479:5988":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:9689:63181":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:7738:7116":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:47518:3369":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"5:5:1477":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"2:46325:6629":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:1522:9592":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:49130:5929":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:13609:8658":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"20:2431:7477":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"5:8247:4519":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:3484:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:11696:8179":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"22:1042:5861":{"crate_id":22,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:8122:6702":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:5088:646":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:10554:13893":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:10477:7361":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:607:7920":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"19:0:980":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"18:610:5865":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:5890:6292":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:50270:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:13865:6128":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:5384:7059":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:4095:9868":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:13356:8593":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:48647:5495":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:13506:8629":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:11352:4699":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:11750:8185":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:5575:5996":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:5874:6289":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:13331:8585":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:2163:3368":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:10041:8020":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:10257:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:12749:6561":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"13:120:47179":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"18:636:7721":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:13402:8602":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:2166:5414":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:3362:4811":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"12:1144:6079":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:5159:10048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"0:2594:3530":{"crate_id":0,"path":["regex","RegexSetBuilder"],"kind":"struct"},"2:45911:6394":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:5371:10161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:22805:6001":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:3521:4829":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"16:5295:47284":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:53104:6440":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:3862:9736":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:616:9578":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13865:8744":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:681:7921":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:8561:4535":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:13620:8659":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:15785:4419":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:6366:6939":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:12480:8335":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:46151:5804":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:4304:8801":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:10996:6020":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:6554:7096":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"20:2898:134":{"crate_id":20,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"2:12673:6558":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"20:0:1609":{"crate_id":20,"path":["regex_syntax"],"kind":"module"},"1:10575:6081":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:5563:10229":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11726:8183":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:3467:4691":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:11143:4579":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"1:5293:6235":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"20:332:7450":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"12:181:6927":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:7537:6123":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:51060:6468":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:12275:8284":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:1723:9718":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:49628:4856":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:2399:9306":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:1572:9616":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:6620:7302":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:3117:6196":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:2195:7608":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11378:7347":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:45918:2977":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:5987:10260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:3370:6707":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"20:2878:127":{"crate_id":20,"path":["regex_syntax","error","Error"],"kind":"enum"},"20:2602:7486":{"crate_id":20,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"2:47457:5232":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12142:8265":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:46582:4647":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:46534:4644":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"21:1503:2169":{"crate_id":21,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"2:47946:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:51294:6481":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:22990:5965":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:10403:7364":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:11572:8153":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:51134:6460":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"9:722:6789":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:14742:7662":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:4237:7607":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"18:644:5867":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:7205:5414":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"14:231:6699":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"22:836:5868":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:3298:1970":{"crate_id":20,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"16:4535:8808":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:5147:4685":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"18:866:5861":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:10912:8084":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:4272:9909":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:10707:6066":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:5632:7070":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:0:475":{"crate_id":2,"path":["core"],"kind":"module"},"12:2331:4518":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"21:1853:5821":{"crate_id":21,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"2:49691:6346":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:14435:6018":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"21:1940:7801":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"0:2646:1573":{"crate_id":0,"path":["regex","bytes","Split"],"kind":"struct"},"16:4448:8805":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:3342:4808":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:3754:3369":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:6691:7100":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:49433:4864":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"0:3018:1575":{"crate_id":0,"path":["regex","SubCaptureMatches"],"kind":"struct"},"1:10592:14896":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:8660:4550":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"22:153:4753":{"crate_id":22,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:1596:9633":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:9476:1099":{"crate_id":2,"path":["core","result"],"kind":"module"},"1:6709:5992":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:2991:7284":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:3253:6204":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"21:1566:7766":{"crate_id":21,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"18:704:7721":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:5753:7075":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:1658:6070":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:4594:7609":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"1:6712:5953":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"12:463:10865":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11947:8228":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"20:3284:1968":{"crate_id":20,"path":["regex_syntax","hir","Group"],"kind":"struct"},"2:5063:4682":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:10788:8079":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:5472:7064":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:1729:6249":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7378:7021":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"12:1235:6922":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:5433:7062":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:5255:10098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"14:0:4391":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:49575:4859":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:7177:9313":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:22795:5965":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"20:2197:1979":{"crate_id":20,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"2:3301:949":{"crate_id":2,"path":["core","ops"],"kind":"module"},"17:10938:8089":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:11211:6239":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"21:1764:7771":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"2:3245:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:6607:5974":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:4394:6037":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:47778:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:1153:9300":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:10200:8027":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:4417:8804":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:569:9553":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"14:244:9077":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:24506:6600":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:1690:9702":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:13068:6349":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:2484:48950":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:7886:4613":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:4523:10020":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:6881:10393":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:7626:5419":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:45843:4512":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:51029:6480":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:12521:8341":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:46265:4855":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"5:1441:6077":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:4033:9837":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:46286:5801":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:11001:8094":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:3488:7283":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:10968:1930":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:46413:9209":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:8065:1930":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:8849:7416":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:9687:7652":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:49515:1568":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:13554:8644":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"21:1383:5719":{"crate_id":21,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"6:5407:10176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:51750:9238":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:10975:6043":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:7870:7023":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:10081:7337":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:52174:6450":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:5001:4677":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:547:7250":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:50300:5463":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:6014:7083":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:4164:9895":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:48655:9213":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:8371:4626":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"20:2211:1975":{"crate_id":20,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"17:11045:48866":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:56046:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:2018:5412":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"22:290:3103":{"crate_id":22,"path":["memchr","memchr","memchr2"],"kind":"function"},"12:1762:7605":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:10883:5965":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"21:1947:7802":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"2:48368:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"21:1342:7736":{"crate_id":21,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"2:45883:5712":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:9404:7912":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:46249:5798":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"5:1669:6071":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"22:853:142":{"crate_id":22,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:7894:7053":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:4489:4618":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:6807:7102":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:3355:4814":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"0:2694:1572":{"crate_id":0,"path":["regex","bytes","ReplacerRef"],"kind":"struct"},"16:5421:7061":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:6592:61596":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"16:5505:7066":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:13938:7659":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"18:744:63190":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:45774:188":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"21:1252:4722":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"2:12992:1553":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:8138:4529":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:50090:6639":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:14898:9403":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:9896:63186":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:0:4393":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:3567:6024":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:2835:4834":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:3610:4823":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"20:1998:7814":{"crate_id":20,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"16:2843:7270":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:12093:4541":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:5998:10265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:5978:10259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:9332:7345":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"20:2292:7472":{"crate_id":20,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"11:46:9506":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:10988:8093":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:53329:9286":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:3444:6028":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:14007:5460":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:49594:4846":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:6569:7304":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"20:2309:1938":{"crate_id":20,"path":["regex_syntax","ast","Class"],"kind":"enum"},"2:13222:10872":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"2:5194:392":{"crate_id":2,"path":["core","char"],"kind":"module"},"20:2822:6272":{"crate_id":20,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"2:51522:6453":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:1676:9691":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:11628:8163":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:11072:3369":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:2773:7296":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"20:3333:1989":{"crate_id":20,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"1:15170:6236":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:2257:6752":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:294:7916":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"18:896:5863":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:11054:6054":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"16:3604:7931":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"21:1239:4721":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"0:2800:4097":{"crate_id":0,"path":["regex","SetMatchesIntoIter"],"kind":"struct"},"5:4210:5414":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:5542:13898":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:2892:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:23742:6593":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"21:1752:7769":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"5:8234:4518":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"22:1013:3125":{"crate_id":22,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:4852:8817":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:1744:9725":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"20:2951:1932":{"crate_id":20,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"1:12098:4548":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:13942:8765":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:7453:7017":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"21:1925:7799":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"20:2690:2011":{"crate_id":20,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"16:7571:7013":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10864:8082":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4293:9921":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:47904:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:51855:6482":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:5241:10087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:49565:4858":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"18:650:5864":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"20:2938:2622":{"crate_id":20,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"16:5736:7074":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:5903:6293":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:4890:8818":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:11370:6096":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"21:1778:7773":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"1:15780:4416":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:48694:9218":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:49479:4861":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:13799:8727":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:14017:6578":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:10717:5984":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:3365:7258":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:13172:8546":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"3:0:417":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:1236:7922":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:3114:6195":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:7295:7034":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5330:8001":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:3945:9797":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:5649:5971":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:11604:8159":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"20:2330:7473":{"crate_id":20,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"22:915:7726":{"crate_id":22,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:5386:10163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:1689:6747":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:10529:8034":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:49743:6353":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:5960:7255":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"12:2309:9502":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:9550:7650":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:9280:8001":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:53444:9291":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:2181:6091":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:7786:7027":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:49835:6356":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:48663:5494":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"11:0:4389":{"crate_id":11,"path":["adler"],"kind":"module"},"2:55968:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:892:6911":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"9:809:2253":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:47448:4707":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:46554:4645":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:6591:7098":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:3338:4810":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:48117:5310":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:10498:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"22:292:3104":{"crate_id":22,"path":["memchr","memchr","memchr3"],"kind":"function"},"2:49585:4848":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:9005:48860":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:13386:8598":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"20:3181:4574":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"2:46613:4650":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:8845:4625":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:5310:190":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:3303:4800":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:5815:7078":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:48124:5312":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"22:708:7496":{"crate_id":22,"path":["memchr","cow","Imp"],"kind":"enum"},"2:45664:4830":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:6100:10300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"18:782:7721":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:6028:10287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:13022:4840":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:3834:7607":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:46654:4653":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"21:1268:4723":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"6:543:9533":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:6166:7085":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:11260:6291":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:1622:9649":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"21:1589:3159":{"crate_id":21,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"18:694:5870":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:50077:6168":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"1:10343:7654":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:4301:5449":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:49610:4855":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"0:1641:1571":{"crate_id":0,"path":["regex","Replacer"],"kind":"trait"},"1:11035:1786":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"15:230:6941":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:10962:8091":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:8902:48858":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:10481:5965":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:12741:8378":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"21:1615:3125":{"crate_id":21,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"6:6935:10403":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:7823:7028":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:5641:5972":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:9551:7417":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:10317:7343":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:4127:9883":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:7717:6134":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:3905:9764":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:5197:10067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:10569:13895":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:6152:7016":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:4734:8813":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:3195:7277":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"13:232:9498":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:24108:6619":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:6072:7035":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:10503:5821":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:9440:7913":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:15191:6243":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:53257:9280":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:5663:5974":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:46870:4622":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"0:2628:1568":{"crate_id":0,"path":["regex","bytes","Matches"],"kind":"struct"},"0:2978:1570":{"crate_id":0,"path":["regex","Regex"],"kind":"struct"},"2:8321:4628":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:11519:8146":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:4614:57678":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:8282:6711":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:4449:9993":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"20:3053:4572":{"crate_id":20,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:46572:4646":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:3039:62102":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:11203:5932":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:5459:10190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"12:812:6071":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:9162:7419":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"18:829:5858":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:6893:10395":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:2733:7260":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:27925:6417":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:11970:6176":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:7226:7112":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:3318:4801":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:12442:8330":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"20:3354:2011":{"crate_id":20,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"2:46850:4618":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:7599:6127":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:10253:7397":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:5882:7617":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"5:8297:6630":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13318:8579":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"12:2025:6090":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:11461:6107":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:6214:10369":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"21:1955:1567":{"crate_id":21,"path":["aho_corasick","Match"],"kind":"struct"},"21:1901:7792":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"5:8264:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:823:7653":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"5:6468:5414":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:13041:8497":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:15775:4412":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:5073:2977":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:3454:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:6087:7014":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:14375:10491":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:4401:9969":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:9219:2618":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:5589:764":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:49269:4854":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:12103:4549":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"9:749:6790":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"22:698:5865":{"crate_id":22,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:12659:8369":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:13370:8595":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:24608:6602":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:10533:5492":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:47397:5449":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"20:3265:1955":{"crate_id":20,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"1:1528:6075":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"14:56:8132":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:50247:6576":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:10259:5310":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:6381:5956":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:8160:6693":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:13465:8620":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"20:3227:1995":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"1:4521:6008":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"20:2345:7474":{"crate_id":20,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"17:11714:8180":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:48401:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"21:1843:5868":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"1:7429:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:10887:8083":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:10263:5312":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:5130:10024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:4847:4693":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:15254:56107":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:11847:8216":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:7250:7114":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"0:2655:1574":{"crate_id":0,"path":["regex","bytes","SplitN"],"kind":"struct"},"2:48435:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:13054:8504":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:3868:9737":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"14:189:9073":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:51102:9229":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:1533:9597":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"0:2703:1569":{"crate_id":0,"path":["regex","bytes","NoExpand"],"kind":"struct"},"1:1419:3369":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:10508:5887":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:50925:6479":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:13272:8573":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:13617:6137":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:11199:8105":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:6085:10295":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:12931:3538":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:13754:6127":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"16:4614:8809":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:11738:8184":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:4255:6255":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:3478:3289":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:10211:8028":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:2586:9310":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"21:1178:5965":{"crate_id":21,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"2:47347:166":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:10975:8092":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"8:0:4386":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:10516:7367":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:10468:7362":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"9:686:6786":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:13912:8757":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"20:2639:1981":{"crate_id":20,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"2:23906:6525":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:2460:7664":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:6051:10288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:2866:7271":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:15773:4410":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:6357:7091":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:1497:6070":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5191:10066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:9634:6230":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:4371:9959":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:7208:9313":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:3241:7279":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:2945:7295":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"20:1893:1798":{"crate_id":20,"path":["regex_syntax","is_word_byte"],"kind":"function"},"5:4438:3369":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:15245:9406":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:50027:6570":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12155:8268":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:8346:10407":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:11922:56646":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"16:3800:8798":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:7279:7320":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:7024:7318":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"5:3033:3752":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:32217:61480":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"1:10712:6194":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:2754:7259":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:5569:5994":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:5672:7071":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"20:2805:7492":{"crate_id":20,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"6:6091:10297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:1655:6080":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"18:152:4753":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"0:2983:1564":{"crate_id":0,"path":["regex","CaptureNames"],"kind":"struct"},"2:3313:4802":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:5707:5976":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"5:8352:205":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:3743:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:11970:8235":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12208:8275":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:3138:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"16:7174:7107":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:56020:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:747:3369":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:10448:7363":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"22:958:7721":{"crate_id":22,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"12:429:6924":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:12262:8283":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:10269:5314":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:49220:5936":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:6999:7103":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:10543:8035":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:3263:5300":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:14736:7661":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"9:692:6788":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"16:6780:7101":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:46305:5802":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:5228:10078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"12:2013:5414":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"12:2039:6092":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:4060:9849":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:6947:6694":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:13772:8719":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"21:1679:5821":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"12:930:6072":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:4133:9885":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:4459:9994":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:46591:4648":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:6718:7307":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:12756:8382":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:10618:4638":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"2:49907:6360":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:1136:5713":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:10282:7921":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:4008:7925":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:15798:4432":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:6682:7030":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:24472:5894":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:11082:7354":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:49379:4865":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:53405:9290":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"22:905:63189":{"crate_id":22,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:46180:5803":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:11369:4864":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:6768:7311":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:49297:1786":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"18:169:4754":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:4340:3368":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:6851:4655":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:6413:6938":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"12:976:6076":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"20:2539:7482":{"crate_id":20,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"2:45636:4832":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:11276:4863":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"15:248:6942":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11328:8109":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:5185:10063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:3460:63206":{"crate_id":20,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"6:4262:9902":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"12:377:6926":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:4347:9946":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"20:1929:4567":{"crate_id":20,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"2:49461:4860":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:11314:5939":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:14803:6130":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:10860:4572":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:11999:7631":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:1563:9610":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:12108:6164":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:46473:4639":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"18:885:5862":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:903:5901":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:4276:6221":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:6636:7033":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:10368:7656":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"0:2599:1567":{"crate_id":0,"path":["regex","bytes","Match"],"kind":"struct"},"17:9971:63185":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"22:826:5864":{"crate_id":22,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10236:7358":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:8895:4551":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:11200:6237":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:10780:6032":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:48898:5920":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"20:2127:7468":{"crate_id":20,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"2:13705:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:2376:4692":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:10271:5315":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:12010:8243":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"12:2323:9504":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"21:1894:7791":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"16:7236:7113":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:5711:5977":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:10599:8042":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"18:739:7726":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:2512:7428":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:8194:2026":{"crate_id":2,"path":["core","iter","sources","repeat","repeat"],"kind":"function"},"1:15110:6063":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:4040:9840":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:46455:4630":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:7884:7024":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"9:900:9507":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:45820:189":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11434:8117":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"0:2664:1564":{"crate_id":0,"path":["regex","bytes","CaptureNames"],"kind":"struct"},"16:2889:7290":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:7549:7025":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:8612:4537":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"21:1793:7775":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"1:1522:6074":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:49619:4674":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"0:3058:1569":{"crate_id":0,"path":["regex","NoExpand"],"kind":"struct"},"5:6966:1477":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"17:9600:63183":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:9218:3221":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:24710:6604":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:3772:8797":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:13306:8576":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:3324:4804":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:3393:4818":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"20:2669:1989":{"crate_id":20,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"16:2912:7272":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"9:603:10623":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"20:3482:1800":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"5:5783:7607":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:13755:61570":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:1476:5414":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:2968:7273":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:6644:10384":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:46142:9203":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:3331:6091":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:519:9522":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:5852:6287":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:9729:63178":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:32211:4609":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"6:6923:10401":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:11514:3369":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6110:7055":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:2164:565":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:3962:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:47414:4706":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"12:1180:6920":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"20:2503:7481":{"crate_id":20,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"6:6068:10290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:2772:6754":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:4358:9954":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:13377:8597":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:3696:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:14906:6138":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:11081:6056":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"18:754:63187":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:5969:10253":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"9:234:6813":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:51444:6461":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:14977:6152":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"20:3188:1946":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"2:48110:5311":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:13796:177":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:22999:6436":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:8099:3368":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"20:3427:127":{"crate_id":20,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"17:10377:7429":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:49103:5928":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:46543:4654":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:8447:5413":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:1061:5862":{"crate_id":22,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:14398:9402":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:15790:4424":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:7585:6126":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:3320:7334":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:12327:8292":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"21:1184:4724":{"crate_id":21,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"2:47543:168":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:13933:8763":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:13258:8569":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"20:1981:7460":{"crate_id":20,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"17:10420:7426":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:13547:8643":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:50256:6577":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:2260:6403":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"5:3043:62100":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:4230:8800":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:8114:5414":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"9:927:46935":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:48684:2253":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"0:0:1610":{"crate_id":0,"path":["regex"],"kind":"module"},"20:2763:7489":{"crate_id":20,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"2:46644:4652":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:1736:9721":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:5370:5792":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"18:837:3125":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"0:2528:3450":{"crate_id":0,"path":["regex","RegexBuilder"],"kind":"struct"},"2:50973:6459":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:3069:5965":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:37503:4758":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"21:1403:7748":{"crate_id":21,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"11:54:6909":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"16:6518:7095":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"21:1785:7774":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"21:1548:7763":{"crate_id":21,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"2:52287:6439":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"21:1635:4721":{"crate_id":21,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"2:3135:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:3018:7274":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:5595:7069":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:2727:5708":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:11254:7418":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"12:784:6070":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"22:812:7721":{"crate_id":22,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:6619:10282":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"20:2748:1973":{"crate_id":20,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"0:3002:1574":{"crate_id":0,"path":["regex","SplitN"],"kind":"struct"},"1:11266:6248":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:3737:4690":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:10149:8012":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:6176:10350":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:11355:1574":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"21:1457:4572":{"crate_id":21,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"2:11096:5449":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:3939:8799":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:12771:8109":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:2437:9308":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:13399:9308":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:3237:6199":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:2856:170":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:5927:7080":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:9061:4547":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:45712:186":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:47736:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:24040:41243":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:5118:4683":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"21:1645:7517":{"crate_id":21,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"17:10458:7962":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:22858:6435":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:4145:9894":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:3621:6031":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:49112:5927":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:13418:10873":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:12645:8368":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"0:2623:1570":{"crate_id":0,"path":["regex","bytes","Regex"],"kind":"struct"},"1:10984:6018":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:3957:9800":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:5359:10154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:11899:6132":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:3720:6311":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:9649:6231":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:15787:4421":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:47862:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:51227:6437":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:12463:2996":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:10061:8022":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:53248:9279":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"20:3411:2623":{"crate_id":20,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"6:5167:10050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"12:1253:6080":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:10224:8029":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:45876:4825":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12195:8273":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:12456:8332":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"18:720:7722":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:9769:63180":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:3253:4688":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"21:1706:7519":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"6:6614:10381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:12537:8343":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:6665:4533":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:10071:7447":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:49920:9221":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"2:24744:6605":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13477:8621":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:6859:5963":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:5170:4686":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:6744:7309":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:50047:6566":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:5828:1975":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:51165:6448":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:3549:8795":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:4494:10007":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:7764:223":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:3144:217":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:46859:4620":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"9:27:6837":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:537:9530":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:10623:8044":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:1450:6067":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:6021:7269":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:56007:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:6124:10311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:4317:9931":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:786:7653":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:11616:8162":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"12:774:3368":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:13842:8743":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"22:977:5856":{"crate_id":22,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:46272:5799":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:8362:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:49760:6354":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:2923:167":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10106:7442":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:51670:9236":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:13011:3125":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:5360:7058":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"9:1056:6848":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:9682:7651":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"22:950:7721":{"crate_id":22,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"0:2637:1563":{"crate_id":0,"path":["regex","bytes","CaptureMatches"],"kind":"struct"},"6:5292:10112":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:8358:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:9543:11356":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:23648:6321":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:10293:9407":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:5400:10174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:53352:9287":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"20:3025:7490":{"crate_id":20,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"17:8954:7355":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:4028:6342":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:49202:5935":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:15782:4418":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:13978:8769":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:8847:6269":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"12:354:9499":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"20:2568:7484":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"17:11767:8193":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:3064:7332":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:5210:10068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:53151:6458":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:8841:4624":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:46634:4651":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:24404:6598":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:12168:8052":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:8054:5889":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"2:51372:6473":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:49052:6556":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:6887:10394":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"21:1467:7502":{"crate_id":21,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"6:4331:9937":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:11932:8224":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:51981:6474":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:12373:8316":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:15280:6950":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:14000:8775":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:14829:6165":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"20:1970:7459":{"crate_id":20,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"2:32369:61478":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:32030:6651":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:3034:62101":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:5127:4684":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:10253:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:605:9573":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:1091:7607":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:46841:4617":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10611:8043":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:7477:7039":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"9:776:6835":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:9245:7344":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"0:2954:1567":{"crate_id":0,"path":["regex","Match"],"kind":"struct"},"6:584:9562":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:11303:10269":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:5975:7081":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:21:658":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:7761:7117":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:13788:8723":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:8122:10871":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:49897:6359":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:48383:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"0:2793:4063":{"crate_id":0,"path":["regex","SetMatches"],"kind":"struct"},"20:3150:1938":{"crate_id":20,"path":["regex_syntax","hir","Class"],"kind":"enum"},"2:2832:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:699:5273":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:11280:6256":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:11147:8101":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:6681:6717":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:32269:61477":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"16:6464:7029":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:7628:2965":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:11504:6108":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:624:9583":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:10028:8019":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"20:3207:4575":{"crate_id":20,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"1:4908:6052":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:10261:5311":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:3383:4816":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:2859:169":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"0:2805:4096":{"crate_id":0,"path":["regex","SetMatchesIter"],"kind":"struct"},"5:8105:6701":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:11444:6106":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:12598:8354":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:24000:9180":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:13574:8650":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:2175:6090":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"20:2712:1968":{"crate_id":20,"path":["regex_syntax","ast","Group"],"kind":"struct"},"1:11163:56276":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"18:766:7731":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:15800:4434":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"21:1278:7497":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"2:47610:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:49872:6357":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:10855:6146":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:2187:6092":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:48131:5313":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:14848:10495":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:49603:4845":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"0:2674:1562":{"crate_id":0,"path":["regex","bytes","CaptureLocations"],"kind":"struct"},"17:11555:8151":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:13746:8710":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"21:1670:7518":{"crate_id":21,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"20:3376:4577":{"crate_id":20,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"1:8982:4544":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"0:3031:1563":{"crate_id":0,"path":["regex","CaptureMatches"],"kind":"struct"},"1:15757:56110":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:11108:6061":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"5:1613:3368":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:5522:7067":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:8325:4627":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:11078:6055":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:2933:174":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"21:1308:2620":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"17:11100:7422":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:578:9559":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:51246:9231":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:632:9588":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"14:194:47207":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:7928:6393":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:7406:7020":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:12004:6180":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:8430:5412":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:5488:7065":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:13760:8716":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:4316:6039":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:49415:1574":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"22:820:5867":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:3392:7287":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"20:2240:7470":{"crate_id":20,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"2:50035:6573":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"20:3518:1799":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"17:11231:7420":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:12439:6686":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:5029:8822":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:51545:6456":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:11458:8131":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:5945:10236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"21:1527:5821":{"crate_id":21,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:8406:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:8403:6177":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:3691:213":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:12073:8256":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:1045:5891":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:12287:8285":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:8985:4545":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:4510:6733":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"2:53288:9283":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:2543:7359":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:14592:5997":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"22:880:7721":{"crate_id":22,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:3350:4809":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:8396:192":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"20:3012:7894":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"16:7119:7008":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:1637:6078":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"21:1350:7744":{"crate_id":21,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"2:8560:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:12148:6166":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:10844:7365":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"18:849:5859":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:1623:6077":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:49729:6350":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"21:1444:5821":{"crate_id":21,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"6:1584:9625":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:12247:8280":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"20:1945:7457":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"6:1617:9647":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:12588:6194":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"22:996:5857":{"crate_id":22,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:13884:8748":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:8830:4540":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:15781:4417":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:50019:6565":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:53382:9289":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:10266:7400":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:7366:3368":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:13429:8606":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:46433:4629":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:5414:10177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:4386:8803":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:49287:4850":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:4353:6040":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"22:0:1526":{"crate_id":22,"path":["memchr"],"kind":"module"},"1:13770:11357":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"20:2727:1970":{"crate_id":20,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"2:49211:5938":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:2130:656":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"2:3481:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:46483:4102":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"15:0:4392":{"crate_id":15,"path":["addr2line"],"kind":"module"},"21:1758:7770":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"9:469:10613":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:8181:3368":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:12073:4538":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:53041:6475":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:3522:7927":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:4281:9914":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"21:1663:4841":{"crate_id":21,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"5:1630:6067":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:2569:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"5:3767:5449":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"20:2470:7479":{"crate_id":20,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"17:13488:8625":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:4066:9852":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"21:1363:7501":{"crate_id":21,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"6:5548:10218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:3091:7333":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:4419:9978":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:6864:10388":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:5314:8000":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:47694:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12507:8338":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:13898:8750":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:13780:8722":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"0:2018:1956":{"crate_id":0,"path":["regex","Error","Syntax"],"kind":"variant"},"2:23939:2978":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:45963:6534":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:5717:7073":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:52788:6451":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:8363:6696":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:3487:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"20:2554:7483":{"crate_id":20,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"5:8328:6713":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:14445:56274":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:3714:8796":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:5273:7261":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:25114:6502":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:11993:8240":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:23964:6520":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:46563:4633":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:12685:8371":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:49254:4857":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11822:8212":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:5410:6008":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:591:9565":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"15:269:6946":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:4364:9957":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"21:1809:7780":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"1:9259:5998":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:24056:41252":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:7146:7105":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:11978:3368":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:12467:8333":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:49281:4851":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:8568:4536":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:24086:10412":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"20:2155:7452":{"crate_id":20,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"2:52252:6457":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:10210:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:7104:7619":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"17:11794:8202":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:10772:6030":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"18:667:5869":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:49886:6358":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:1195:10870":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11653:8168":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:4638:7611":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:6870:10389":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:11866:5933":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:2769:5709":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:6396:4642":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:3120:6016":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:10673:49049":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"18:0:1526":{"crate_id":18,"path":["memchr"],"kind":"module"},"12:949:6074":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:6121:6253":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:2487:5459":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"12:1651:6932":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"21:1838:7783":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"6:4052:9844":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:12784:4847":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:4623:224":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:51207:9230":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:14:2607":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:11962:8233":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:3372:4813":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"20:2225:1932":{"crate_id":20,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"2:9937:6544":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"9:41:6838":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:49176:5917":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:13901:61521":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"5:1011:3369":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"21:1493:7758":{"crate_id":21,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"17:10117:7443":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"4:0:4385":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:46243:4674":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"21:1825:63806":{"crate_id":21,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"20:540:1796":{"crate_id":20,"path":["regex_syntax","hir"],"kind":"module"},"22:1033:5860":{"crate_id":22,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"20:3436:4585":{"crate_id":20,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"2:48350:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:11084:6060":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"5:6250:5418":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:4641:8810":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:47534:3368":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:3287:7281":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:15795:4429":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:1457:6079":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:14605:6132":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:9296:7910":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:6781:5959":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:1700:9708":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:12408:8327":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:1547:9602":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"12:761:5449":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:46603:4649":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:12033:6182":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:1540:9600":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:50031:6569":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"21:1887:7741":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"2:11164:4847":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:8115:7635":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"12:1118:6078":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:10160:8025":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:13637:8666":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:13098:8535":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:4714:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:5896:1318":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"6:3997:9823":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:3889:6766":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:0:266":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:4511:10015":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:6783:5961":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:15786:4420":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"12:2303:1968":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13205:8557":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:46136:4674":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:5657:5973":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:12221:8276":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:9719:8009":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:5312:10128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:4:965":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:3213:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:7854:11355":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"2:23001:6435":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"20:1894:7454":{"crate_id":20,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"18:136:4752":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:10724:5985":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:4671:8811":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"9:996:6854":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:50051:6567":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:7467:7018":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:897:5900":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:23884:9173":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:24676:6603":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:14104:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:510:7918":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:53314:9285":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:4566:6017":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:3539:3537":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:4314:6038":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:1235:6750":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:13163:8545":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:13154:8541":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"20:3420:4567":{"crate_id":20,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"2:22530:4758":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"0:55:1577":{"crate_id":0,"path":["regex","bytes"],"kind":"module"},"2:51570:6438":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"22:1025:5859":{"crate_id":22,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:3365:6090":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:14992:6153":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:4478:10002":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:9510:7649":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:10738:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:10801:8081":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"21:1336:7500":{"crate_id":21,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"2:22598:61271":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:9886:8012":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"20:2977:7890":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"20:2377:7476":{"crate_id":20,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"2:45728:184":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:9034:48861":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:3964:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:5882:6290":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:4083:9862":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:49714:6347":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:10482:5902":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:10493:56108":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:23923:10409":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"21:1560:7765":{"crate_id":21,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"1:2170:5412":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"6:1527:9594":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:1472:6078":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"20:2846:7462":{"crate_id":20,"path":["regex_syntax","either","Either"],"kind":"enum"},"5:2548:6755":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"22:170:4754":{"crate_id":22,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:48374:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:24574:6601":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:6359:5953":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:2192:6093":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:51934:6470":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"20:2791:7491":{"crate_id":20,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"17:9368:7911":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:0:4394":{"crate_id":17,"path":["object"],"kind":"module"},"17:11406:8113":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:1156:9301":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"0:2993:1573":{"crate_id":0,"path":["regex","Split"],"kind":"struct"},"2:47820:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"21:1656:7526":{"crate_id":21,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"17:12712:8375":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:5420:6243":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:7714:4637":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"18:801:5856":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:6757:6008":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:5456:7063":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:8838:3536":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:1554:9605":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:13453:8614":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:22558:61258":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:10250:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:6949:7315":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"20:2971:7815":{"crate_id":20,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"1:3112:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:4073:9855":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:48672:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:11520:6110":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"20:2929:4582":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"2:55981:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"22:843:5869":{"crate_id":22,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:4377:9962":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:7039:4698":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"0:1459:1561":{"crate_id":0,"path":["regex","escape"],"kind":"function"},"1:4630:6022":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:53303:9284":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:5941:179":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:10267:179":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:13564:8647":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"22:930:63187":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:9839:7365":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:8187:3368":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:11929:10490":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"9:1020:6855":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:12051:8247":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12582:8350":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:8152:184":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:12590:7658":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:6404:212":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:3389:4817":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:7654:6129":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"20:3132:1932":{"crate_id":20,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"16:5707:7072":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"0:2021:2041":{"crate_id":0,"path":["regex","Error","CompiledTooBig"],"kind":"variant"},"2:7816:6399":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:14360:5993":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:5766:7076":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:3141:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:9339:4841":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:10405:9168":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:10502:8033":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:1215:6749":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:46338:6630":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"20:2909:4581":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"2:46525:4643":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:8130:62056":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"22:870:5870":{"crate_id":22,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:7604:5418":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"21:1451:127":{"crate_id":21,"path":["aho_corasick","error","Error"],"kind":"struct"},"20:2992:55407":{"crate_id":20,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"17:12552:8347":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:57303:9299":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:46320:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"7:38:46831":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:4431:9982":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5347:10149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:4203:9898":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:6424:7093":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"12:160:6923":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:6106:10301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"5:3965:7607":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:8410:6178":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"20:2961:7812":{"crate_id":20,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"17:11186:8103":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:4762:8814":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:14868:6164":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:7303:7115":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:8725:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:1717:9715":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"12:937:6073":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:7804:7026":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4517:10017":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:5346:7015":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:10265:5313":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:46279:5800":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:12725:8376":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:12917:8394":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:47380:2000":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:12671:8370":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:3218:7278":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:23813:6594":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:1708:9709":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:52012:6477":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:4023:9834":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:9217:3222":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:6126:7084":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:6101:7012":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:50948:6467":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:13180:8547":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"3:300:195":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:10613:6758":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:13627:8661":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:14411:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:4605:5305":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:7571:6125":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:3406:4821":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:5296:6236":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"21:1316:2621":{"crate_id":21,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"20:3246:1947":{"crate_id":20,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"1:1432:5449":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:7264:7032":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"12:2032:6091":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:4013:9828":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:2366:587":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:8090:5410":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:4120:9881":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:5221:10076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"21:1916:7797":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"17:13733:8704":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:4996:4676":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:3243:207":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:11325:5960":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:51491:6449":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:2887:173":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:8929:48859":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:50039:6571":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"21:1934:7800":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"5:1680:184":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"20:2141:7469":{"crate_id":20,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"1:4282:6223":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:11274:6237":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:15792:4426":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:8431:3819":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"22:288:1526":{"crate_id":22,"path":["memchr","memchr","memchr"],"kind":"function"},"0:2890:2881":{"crate_id":0,"path":["regex","bytes","RegexSet"],"kind":"struct"},"0:2497:3450":{"crate_id":0,"path":["regex","bytes","RegexBuilder"],"kind":"struct"},"1:14428:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:3330:4803":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:5580:7248":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"12:2045:6093":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:9659:63177":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:4632:6008":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:2269:6404":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:23977:6521":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:47526:5449":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"21:1358:7746":{"crate_id":21,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"2:22954:18980":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"21:1297:7498":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"6:525:9525":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"7:85:46838":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"14:250:9078":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"21:1225:7496":{"crate_id":21,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"6:0:783":{"crate_id":6,"path":["libc"],"kind":"module"},"2:11899:5934":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:13685:8703":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"20:2984:7891":{"crate_id":20,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"1:7551:6124":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:9849:63184":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:12494:8337":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:6617:10280":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:10538:5493":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:46464:4631":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:13810:8728":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:38660:5710":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"5:3946:5412":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:50288:5711":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"16:6136:7056":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:11383:5941":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"22:300:3105":{"crate_id":22,"path":["memchr","memmem"],"kind":"module"},"2:3334:4806":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:9809:63182":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"21:1215:2619":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"6:599:9570":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"21:1771:7772":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"17:11337:7349":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:5790:7077":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:24540:5895":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13590:8653":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:3962:195":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:22543:61258":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:3506:7282":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:22575:61269":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:3247:209":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:14961:6151":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:12118:8263":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:11884:6131":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:11869:6130":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"20:2113:6773":{"crate_id":20,"path":["regex_syntax","ast","Position"],"kind":"struct"},"20:3168:4573":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"16:6391:7092":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:22577:61274":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:9933:8013":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"20:2584:7485":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"16:3429:7003":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:38723:5301":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:11304:48868":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:7856:7119":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:3702:4826":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11665:8169":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:13446:8613":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"12:2315:63174":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"21:1393:7747":{"crate_id":21,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"2:4992:2617":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:12733:6560":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:52095:6462":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:2246:6401":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"20:2002:7815":{"crate_id":20,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"1:1021:5889":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:46502:4641":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:6208:7087":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:1492:6069":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:10814:7408":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:4623:6019":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:24438:6599":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:4995:8821":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:12182:8272":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"12:2009:3368":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:1602:9635":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:8761:9315":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:4279:6222":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:3990:9819":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"20:2453:7478":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"17:13540:8642":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:1486:6080":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:1760:9730":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:14074:6040":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:11539:8147":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"20:1958:7458":{"crate_id":20,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"6:4439:9987":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"22:1005:5858":{"crate_id":22,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:3966:9805":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"5:5531:4533":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"20:3038:127":{"crate_id":20,"path":["regex_syntax","hir","Error"],"kind":"struct"},"2:10892:203":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:5379:10162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:2171:4604":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:4392:6036":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"0:2561:3530":{"crate_id":0,"path":["regex","bytes","RegexSetBuilder"],"kind":"struct"},"20:3094:1928":{"crate_id":20,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"2:5563:6312":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:7254:176":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:5428:10182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:4690:6411":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:15779:4415":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:7185:7108":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:13221:8560":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:5855:7079":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:7833:7623":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:15525:7663":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:10179:8026":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:2401:9307":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:1505:6072":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:7333:7036":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:46493:4640":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:7158:7106":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:48487:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:3276:4874":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:7195:7109":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:49533:4862":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"}},"external_crates":{"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"20":{"name":"regex_syntax","html_root_url":null},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"memchr","html_root_url":null},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"aho_corasick","html_root_url":null}},"format_version":15}