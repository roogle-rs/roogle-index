{"root":"0:0:1777","crate_version":"0.12.1","includes_private":false,"index":{"b:5:684-0:209:1790":{"id":"b:5:684-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2289","5:687:2860","5:688:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[160,0],"end":[172,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:121:2033"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,20],"end":[12,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:232:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12056:2841":{"id":"2:12056:2841","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41405:179","prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12014":{"id":"2:12014","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12015:813","2:12016:2802","2:12017:33798","2:12018:33799","2:12020:33800","2:12023:2035","2:12024:33801","2:12025:314","2:12026:26746","2:12027:26742","2:12029:26743","2:12031:26744","2:12033:26745","2:12035:33802","2:12036:33803","2:12037:26768","2:12038:26769","2:12039:6498","2:12040:6510","2:12041:6080","2:12042:31438","2:12043:31451","2:12044:24775","2:12045:33804","2:12046:31496","2:12047:26785","2:12050:26786","2:12053:26787","2:12056:2841","2:12060:2801","2:12064:24774","2:12067:26777","2:12070:26779","2:12073:33805","2:12076:33806","2:12079:26781","2:12082:26783","2:12085:33807","2:12088:33808","2:12091:2559","2:12094:33809","2:12097:33810","2:12100:33811","2:12103:33812","2:12105:33813","2:12107:33814","2:12109:33815","2:12110:33816","2:12111:33817","2:12114:33818","2:12117:25050","2:12120:26788","2:12123:33819","2:12126:33820","2:12129:33821","2:12132:33822","2:12134:26528","2:12135:26680","2:12136:26529","2:12137:26525","2:12138:26524","2:12139:33823","2:12141:7866","2:12142:33824"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:47:2097":{"id":"0:47:2097","crate_id":0,"name":"blink","span":{"filename":"src/style.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns a `Style` with the blink property set.\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().blink();\nprintln!(\"{}\", style.paint(\"wazzup\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:307:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8254:8040-0:209:1790":{"id":"a:2:8254:8040-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[140,9],"end":[140,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:213:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:225:1922":{"id":"0:225:1922","crate_id":0,"name":"is_reverse","span":{"filename":"src/style.rs","begin":[38,4],"end":[38,24]},"visibility":"public","docs":"Whether this style has reverse colours.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:195":{"id":"0:195","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[121,9],"end":[121,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:196:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:23:2000":{"id":"0:23:2000","crate_id":0,"name":"infix","span":{"filename":"src/ansi.rs","begin":[191,4],"end":[193,5]},"visibility":"public","docs":"The infix bytes between this style and `next` style. These are the bytes\nthat tell the terminal to change the style to `next`. These may include\na reset followed by the next colour and style, depending on the two styles.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour::Green};\n\nlet style = Style::default().bold();\nassert_eq!(\"\\x1b[32m\",\n           style.infix(Green.bold()).to_string());\n\nlet style = Green.normal();\nassert_eq!(\"\\x1b[1m\",\n           style.infix(Green.bold()).to_string());\n\nlet style = Style::default();\nassert_eq!(\"\",\n           style.infix(style).to_string());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:1609":{"id":"0:257:1609","crate_id":0,"name":"1","span":{"filename":"src/style.rs","begin":[307,12],"end":[307,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:147:2036":{"id":"0:147:2036","crate_id":0,"name":"write_to","span":{"filename":"src/display.rs","begin":[238,4],"end":[241,5]},"visibility":"public","docs":"Write `ANSIByteStrings` to an `io::Write`.  This writes the minimal\nescape sequences for the associated `Style`s around each set of\nbytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["w",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2871:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3444:2024","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:234:1792":{"id":"a:2:2701:228-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:59:2093":{"id":"0:59:2093","crate_id":0,"name":"dimmed","span":{"filename":"src/style.rs","begin":[353,4],"end":[355,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\ndimmed property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Yellow.dimmed();\nprintln!(\"{}\", style.paint(\"sup\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[206,0],"end":[213,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"items":["0:135:2036"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:216:670":{"id":"0:216:670","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[140,22],"end":[140,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:299:2315":{"id":"a:2:2701:228-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:126:2033":{"id":"0:126:2033","crate_id":0,"name":"paint","span":{"filename":"src/display.rs","begin":[186,4],"end":[193,5]},"visibility":"public","docs":"Paints the given text with this colour, returning an ANSI string.\nThis is a short-cut so you don’t have to use `Blue.normal()` just\nto get blue text.\n\n```\nuse ansi_term::Colour::Blue;\nprintln!(\"{}\", Blue.paint(\"da ba dee\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["input",{"generic":"I"}]],"output":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12120:26788":{"id":"2:12120:26788","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12129:33821":{"id":"2:12129:33821","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:8041-0:209:1790":{"id":"a:2:8253:8041-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:234:1792":{"id":"b:2:2248-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2281"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:283:2286":{"id":"b:2:2538-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2541:2308"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5679:1457":{"id":"5:5679:1457","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234:1792":{"id":"0:234:1792","crate_id":0,"name":"Colour","span":{"filename":"src/style.rs","begin":[256,0],"end":[308,1]},"visibility":"public","docs":"A colour is one specific type of ANSI escape code, and can refer\nto either the foreground or background colour.\n\nThese use the standard numeric sequences.\nSee <http://invisible-island.net/xterm/ctlseqs/ctlseqs.html>","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:235:1937","0:237:1939","0:239:1941","0:241:1942","0:243:1944","0:245:1946","0:247:1948","0:249:1950","0:251:1952","0:254:1955"],"impls":["0:25","0:56","0:125","a:2:8254:8040-0:234:1792","a:2:2701:228-0:234:1792","a:2:2684:220-0:234:1792","a:2:8253:8041-0:234:1792","a:2:2741:2723-0:234:1792","b:2:2538-0:234:1792","b:2:3320-0:234:1792","b:2:2548-0:234:1792","b:2:2251-0:234:1792","b:2:2542-0:234:1792","b:2:2248-0:234:1792","b:2:2553-0:234:1792","b:5:684-0:234:1792","0:259","0:67","0:264","0:260","0:262","0:265"]}}},"2:2253:24235":{"id":"2:2253:24235","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3322:1493":{"id":"2:3322:1493","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39353:6236","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12085:33807":{"id":"2:12085:33807","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:155-0:78:1797":{"id":"0:155-0:78:1797","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[261,0],"end":[261,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"display","name":"display","id":"0:78:1797","glob":true}}},"5:5434:26527":{"id":"5:5434:26527","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12137:26525"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:423":{"id":"0:205:423","crate_id":0,"name":"clone","span":{"filename":"src/ansi.rs","begin":[131,9],"end":[131,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12067:26777":{"id":"2:12067:26777","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11539:6108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:192:1788":{"id":"b:5:684-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2289","5:687:2860","5:688:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[175,0],"end":[194,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:126:2033"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3320-0:217:1793":{"id":"b:2:3320-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:237:1939":{"id":"0:237:1939","crate_id":0,"name":"Red","span":{"filename":"src/style.rs","begin":[265,4],"end":[265,7]},"visibility":"default","docs":"Colour #1 (foreground code `31`, background code `41`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2553-0:209:1790":{"id":"b:2:2553-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65:2103":{"id":"0:65:2103","crate_id":0,"name":"strikethrough","span":{"filename":"src/style.rs","begin":[443,4],"end":[445,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nstrikethrough property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Fixed(244).strikethrough();\nprintln!(\"{}\", style.paint(\"yo\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62:2097":{"id":"0:62:2097","crate_id":0,"name":"blink","span":{"filename":"src/style.rs","begin":[398,4],"end":[400,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nblink property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Cyan.blink();\nprintln!(\"{}\", style.paint(\"wazzup\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39-0:209:1790":{"id":"0:39-0:209:1790","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,30],"end":[251,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ansi::Suffix","name":"Suffix","id":"0:209:1790","glob":false}}},"0:254:1955":{"id":"0:254:1955","crate_id":0,"name":"RGB","span":{"filename":"src/style.rs","begin":[307,4],"end":[307,19]},"visibility":"default","docs":"A 24-bit RGB color, as specified by ISO-8613-3.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:256:1608","0:257:1609","0:258:1610"]},"discriminant":null}}},"0:0:1777":{"id":"0:0:1777","crate_id":0,"name":"ansi_term","span":{"filename":"src/lib.rs","begin":[1,0],"end":[271,10]},"visibility":"public","docs":"This is a library for controlling colours and formatting, such as\nred bold text or blue underlined text, on ANSI terminals.\n\n\n## Basic usage\n\nThere are three main types in this crate that you need to be\nconcerned with: [`ANSIString`], [`Style`], and [`Colour`].\n\nA `Style` holds stylistic information: foreground and background colours,\nwhether the text should be bold, or blinking, or other properties. The\n[`Colour`] enum represents the available colours. And an [`ANSIString`] is a\nstring paired with a [`Style`].\n\n[`Color`] is also available as an alias to `Colour`.\n\nTo format a string, call the `paint` method on a `Style` or a `Colour`,\npassing in the string you want to format as the argument. For example,\nhere’s how to get some red text:\n\n```\nuse ansi_term::Colour::Red;\n\nprintln!(\"This is in red: {}\", Red.paint(\"a red string\"));\n```\n\nIt’s important to note that the `paint` method does *not* actually return a\nstring with the ANSI control characters surrounding it. Instead, it returns\nan [`ANSIString`] value that has a [`Display`] implementation that, when\nformatted, returns the characters. This allows strings to be printed with a\nminimum of [`String`] allocations being performed behind the scenes.\n\nIf you *do* want to get at the escape codes, then you can convert the\n[`ANSIString`] to a string as you would any other `Display` value:\n\n```\nuse ansi_term::Colour::Red;\n\nlet red_string = Red.paint(\"a red string\").to_string();\n```\n\n\n## Bold, underline, background, and other styles\n\nFor anything more complex than plain foreground colour changes, you need to\nconstruct `Style` values themselves, rather than beginning with a `Colour`.\nYou can do this by chaining methods based on a new `Style`, created with\n[`Style::new()`]. Each method creates a new style that has that specific\nproperty set. For example:\n\n```\nuse ansi_term::Style;\n\nprintln!(\"How about some {} and {}?\",\n         Style::new().bold().paint(\"bold\"),\n         Style::new().underline().paint(\"underline\"));\n```\n\nFor brevity, these methods have also been implemented for `Colour` values,\nso you can give your styles a foreground colour without having to begin with\nan empty `Style` value:\n\n```\nuse ansi_term::Colour::{Blue, Yellow};\n\nprintln!(\"Demonstrating {} and {}!\",\n         Blue.bold().paint(\"blue bold\"),\n         Yellow.underline().paint(\"yellow underline\"));\n\nprintln!(\"Yellow on blue: {}\", Yellow.on(Blue).paint(\"wow!\"));\n```\n\nThe complete list of styles you can use are: [`bold`], [`dimmed`], [`italic`],\n[`underline`], [`blink`], [`reverse`], [`hidden`], [`strikethrough`], and [`on`] for\nbackground colours.\n\nIn some cases, you may find it easier to change the foreground on an\nexisting `Style` rather than starting from the appropriate `Colour`.\nYou can do this using the [`fg`] method:\n\n```\nuse ansi_term::Style;\nuse ansi_term::Colour::{Blue, Cyan, Yellow};\n\nprintln!(\"Yellow on blue: {}\", Style::new().on(Blue).fg(Yellow).paint(\"yow!\"));\nprintln!(\"Also yellow on blue: {}\", Cyan.on(Blue).fg(Yellow).paint(\"zow!\"));\n```\n\nYou can turn a `Colour` into a `Style` with the [`normal`] method.\nThis will produce the exact same `ANSIString` as if you just used the\n`paint` method on the `Colour` directly, but it’s useful in certain cases:\nfor example, you may have a method that returns `Styles`, and need to\nrepresent both the “red bold” and “red, but not bold” styles with values of\nthe same type. The `Style` struct also has a [`Default`] implementation if you\nwant to have a style with *nothing* set.\n\n```\nuse ansi_term::Style;\nuse ansi_term::Colour::Red;\n\nRed.normal().paint(\"yet another red string\");\nStyle::default().paint(\"a completely regular string\");\n```\n\n\n## Extended colours\n\nYou can access the extended range of 256 colours by using the `Colour::Fixed`\nvariant, which takes an argument of the colour number to use. This can be\nincluded wherever you would use a `Colour`:\n\n```\nuse ansi_term::Colour::Fixed;\n\nFixed(134).paint(\"A sort of light purple\");\nFixed(221).on(Fixed(124)).paint(\"Mustard in the ketchup\");\n```\n\nThe first sixteen of these values are the same as the normal and bold\nstandard colour variants. There’s nothing stopping you from using these as\n`Fixed` colours instead, but there’s nothing to be gained by doing so\neither.\n\nYou can also access full 24-bit colour by using the `Colour::RGB` variant,\nwhich takes separate `u8` arguments for red, green, and blue:\n\n```\nuse ansi_term::Colour::RGB;\n\nRGB(70, 130, 180).paint(\"Steel blue\");\n```\n\n## Combining successive coloured strings\n\nThe benefit of writing ANSI escape codes to the terminal is that they\n*stack*: you do not need to end every coloured string with a reset code if\nthe text that follows it is of a similar style. For example, if you want to\nhave some blue text followed by some blue bold text, it’s possible to send\nthe ANSI code for blue, followed by the ANSI code for bold, and finishing\nwith a reset code without having to have an extra one between the two\nstrings.\n\nThis crate can optimise the ANSI codes that get printed in situations like\nthis, making life easier for your terminal renderer. The [`ANSIStrings`]\ntype takes a slice of several [`ANSIString`] values, and will iterate over\neach of them, printing only the codes for the styles that need to be updated\nas part of its formatting routine.\n\nThe following code snippet uses this to enclose a binary number displayed in\nred bold text inside some red, but not bold, brackets:\n\n```\nuse ansi_term::Colour::Red;\nuse ansi_term::{ANSIString, ANSIStrings};\n\nlet some_value = format!(\"{:b}\", 42);\nlet strings: &[ANSIString<'static>] = &[\n    Red.paint(\"[\"),\n    Red.bold().paint(some_value),\n    Red.paint(\"]\"),\n];\n\nprintln!(\"Value: {}\", ANSIStrings(strings));\n```\n\nThere are several things to note here. Firstly, the [`paint`] method can take\n*either* an owned [`String`] or a borrowed [`&str`]. Internally, an [`ANSIString`]\nholds a copy-on-write ([`Cow`]) string value to deal with both owned and\nborrowed strings at the same time. This is used here to display a `String`,\nthe result of the `format!` call, using the same mechanism as some\nstatically-available `&str` slices. Secondly, that the [`ANSIStrings`] value\nworks in the same way as its singular counterpart, with a [`Display`]\nimplementation that only performs the formatting when required.\n\n## Byte strings\n\nThis library also supports formatting `\\[u8]` byte strings; this supports\napplications working with text in an unknown encoding.  [`Style`] and\n[`Colour`] support painting `\\[u8]` values, resulting in an [`ANSIByteString`].\nThis type does not implement [`Display`], as it may not contain UTF-8, but\nit does provide a method [`write_to`] to write the result to any value that\nimplements [`Write`]:\n\n```\nuse ansi_term::Colour::Green;\n\nGreen.paint(\"user data\".as_bytes()).write_to(&mut std::io::stdout()).unwrap();\n```\n\nSimilarly, the type [`ANSIByteStrings`] supports writing a list of\n[`ANSIByteString`] values with minimal escape sequences:\n\n```\nuse ansi_term::Colour::Green;\nuse ansi_term::ANSIByteStrings;\n\nANSIByteStrings(&[\n    Green.paint(\"user data 1\\n\".as_bytes()),\n    Green.bold().paint(\"user data 2\\n\".as_bytes()),\n]).write_to(&mut std::io::stdout()).unwrap();\n```\n\n[`Cow`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html\n[`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html\n[`Default`]: https://doc.rust-lang.org/std/default/trait.Default.html\n[`String`]: https://doc.rust-lang.org/std/string/struct.String.html\n[`&str`]: https://doc.rust-lang.org/std/primitive.str.html\n[`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html\n[`Style`]: struct.Style.html\n[`Style::new()`]: struct.Style.html#method.new\n[`Color`]: enum.Color.html\n[`Colour`]: enum.Colour.html\n[`ANSIString`]: type.ANSIString.html\n[`ANSIStrings`]: type.ANSIStrings.html\n[`ANSIByteString`]: type.ANSIByteString.html\n[`ANSIByteStrings`]: type.ANSIByteStrings.html\n[`write_to`]: type.ANSIByteString.html#method.write_to\n[`paint`]: type.ANSIByteString.html#method.write_to\n[`normal`]: enum.Colour.html#method.normal\n\n[`bold`]: struct.Style.html#method.bold\n[`dimmed`]: struct.Style.html#method.dimmed\n[`italic`]: struct.Style.html#method.italic\n[`underline`]: struct.Style.html#method.underline\n[`blink`]: struct.Style.html#method.blink\n[`reverse`]: struct.Style.html#method.reverse\n[`hidden`]: struct.Style.html#method.hidden\n[`strikethrough`]: struct.Style.html#method.strikethrough\n[`fg`]: struct.Style.html#method.fg\n[`on`]: struct.Style.html#method.on","links":{},"attrs":["#![crate_name = \"ansi_term\"]","#![crate_type = \"rlib\"]","#![crate_type = \"dylib\"]","#![warn(missing_copy_implementations)]","#![warn(missing_docs)]","#![warn(trivial_casts, trivial_numeric_casts)]","#![warn(unused_extern_crates, unused_qualifications)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:37-0:192:1788","0:38-0:200:1789","0:39-0:209:1790","0:70-0:234:1792","0:71-0:217:1793","0:72-0:234:1792","0:155-0:78:1797","0:177-0:176:1589","0:185-0:178:1799"],"is_stripped":false}}},"b:5:5677-0:283:2286":{"id":"b:5:5677-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5675:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["5:5679:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:2723-0:192:1788":{"id":"a:2:2741:2723-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12040:6510":{"id":"2:12040:6510","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11898:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43348:6478","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:283:2286":{"id":"b:2:2548-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:239:1941":{"id":"0:239:1941","crate_id":0,"name":"Green","span":{"filename":"src/style.rs","begin":[268,4],"end":[268,9]},"visibility":"default","docs":"Colour #2 (foreground code `32`, background code `42`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12110:33816":{"id":"2:12110:33816","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5415":{"id":"5:5415","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5416:34474","5:5417:13398","5:5420:34475","5:5423:34476","5:5431:34477","5:5432:34478","5:5433:3050","5:5434:26527","5:5435:26526"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:217:1793":{"id":"b:2:2553-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:46:2050":{"id":"0:46:2050","crate_id":0,"name":"underline","span":{"filename":"src/style.rs","begin":[115,4],"end":[117,5]},"visibility":"public","docs":"Returns a `Style` with the underline property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().underline();\nprintln!(\"{}\", style.paint(\"salutations\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:8041-0:192:1788":{"id":"a:2:8253:8041-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:263:423":{"id":"0:263:423","crate_id":0,"name":"clone","span":{"filename":"src/style.rs","begin":[254,20],"end":[254,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12107:33814":{"id":"2:12107:33814","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:423":{"id":"0:92:423","crate_id":0,"name":"clone","span":{"filename":"src/display.rs","begin":[36,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:1929":{"id":"0:218:1929","crate_id":0,"name":"foreground","span":{"filename":"src/style.rs","begin":[17,4],"end":[17,34]},"visibility":"public","docs":"The style's foreground colour, if it has one.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"2:12015:813":{"id":"2:12015:813","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11898:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:670":{"id":"0:298:670","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[15,20],"end":[15,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:8040-0:234:1792":{"id":"a:2:8254:8040-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12050:26786":{"id":"2:12050:26786","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[95,0],"end":[104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"I"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:101:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12073:33805":{"id":"2:12073:33805","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11716:13275","str::split":"2:12064:24774","prim@char":"1:11898:419","`DoubleEndedIterator`":"2:7244:121","str::rsplit_terminator":"2:12076:33806"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43422:6483","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:696":{"id":"0:101:696","crate_id":0,"name":"from","span":{"filename":"src/display.rs","begin":[98,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"generic":"I"}]],"output":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5431:34477":{"id":"5:5431:34477","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42:941":{"id":"0:42:941","crate_id":0,"name":"new","span":{"filename":"src/style.rs","begin":[59,4],"end":[61,5]},"visibility":"public","docs":"Creates a new Style with no properties set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new();\nprintln!(\"{}\", style.paint(\"hi\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[463,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:696"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5420:34475":{"id":"5:5420:34475","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:8040-0:217:1793":{"id":"a:2:8254:8040-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:217:1793":{"id":"b:2:2548-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[234,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"items":["0:147:2036"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:71-0:217:1793":{"id":"0:71-0:217:1793","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[254,24],"end":[254,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"style::Style","name":"Style","id":"0:217:1793","glob":false}}},"2:12070:26779":{"id":"2:12070:26779","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11716:13275","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::split":"2:12064:24774"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43390:6109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209:1790":{"id":"0:209:1790","crate_id":0,"name":"Suffix","span":{"filename":"src/ansi.rs","begin":[141,0],"end":[141,25]},"visibility":"public","docs":"Like `ANSIString`, but only displays the style suffix.\n\nThis type implements the `Display` trait, meaning it can be written to a\n`std::fmt` formatting without doing any extra allocation, and written to a\nstring with the `.to_string()` method. For examples, see\n[`Style::suffix`](struct.Style.html#method.suffix).","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8254:8040-0:209:1790","a:2:2701:228-0:209:1790","a:2:2684:220-0:209:1790","a:2:8253:8041-0:209:1790","a:2:2741:2723-0:209:1790","b:2:2538-0:209:1790","b:2:3320-0:209:1790","b:2:2548-0:209:1790","b:2:2251-0:209:1790","b:2:2542-0:209:1790","b:2:2248-0:209:1790","b:2:2553-0:209:1790","b:5:5677-0:209:1790","b:5:684-0:209:1790","0:34","0:212","0:215","0:214"]}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,9],"end":[254,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:43:2046":{"id":"0:43:2046","crate_id":0,"name":"bold","span":{"filename":"src/style.rs","begin":[73,4],"end":[75,5]},"visibility":"public","docs":"Returns a `Style` with the bold property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().bold();\nprintln!(\"{}\", style.paint(\"hey\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12027:26742":{"id":"2:12027:26742","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41405:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:78:1797":{"id":"0:78:1797","crate_id":0,"name":"display","span":{"filename":"src/display.rs","begin":[1,0],"end":[296,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:283:2286","0:93:2303","0:95:2306","0:299:2315","0:112:2318","0:114:2318","0:116:2323","0:118:2323"],"is_stripped":true}}},"0:247:1948":{"id":"0:247:1948","crate_id":0,"name":"Cyan","span":{"filename":"src/style.rs","begin":[280,4],"end":[280,8]},"visibility":"default","docs":"Colour #6 (foreground code `36`, background code `46`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12025:314":{"id":"2:12025:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12026:26746","`u8`":"1:11915:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12141:7866":{"id":"2:12141:7866","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4540:7866"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43680:6366","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:192:1788":{"id":"b:2:2548-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:307:670":{"id":"0:307:670","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2541:2308":{"id":"2:2541:2308","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:8041-0:299:2315":{"id":"a:2:8253:8041-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:200:1789":{"id":"a:2:2701:228-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[306,0],"end":[311,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:35:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221:1918":{"id":"0:221:1918","crate_id":0,"name":"is_dimmed","span":{"filename":"src/style.rs","begin":[26,4],"end":[26,23]},"visibility":"public","docs":"Whether this style is dimmed.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,9],"end":[254,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:209:1790":{"id":"a:2:2701:228-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:283:2286":{"id":"b:2:2248-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2250:2281"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:70-0:234:1792":{"id":"0:70-0:234:1792","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[254,16],"end":[254,22]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"style::Colour","name":"Colour","id":"0:234:1792","glob":false}}},"b:2:2248-0:217:1793":{"id":"b:2:2248-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2281"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12043:31451":{"id":"2:12043:31451","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12042:31438"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43655:6496","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12109:33815":{"id":"2:12109:33815","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:217:1793":{"id":"b:2:2538-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2308"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12033:26745":{"id":"2:12033:26745","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:1793":{"id":"0:217:1793","crate_id":0,"name":"Style","span":{"filename":"src/style.rs","begin":[14,0],"end":[45,1]},"visibility":"public","docs":"A style is a collection of properties that can format a string\nusing ANSI escape codes.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour};\n\nlet style = Style::new().bold().on(Colour::Black);\nprintln!(\"{}\", style.paint(\"Bold on black\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:218:1929","0:219:1926","0:220:1917","0:221:1918","0:222:1919","0:223:1920","0:224:1921","0:225:1922","0:226:1923","0:227:1924"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:21","0:41","0:120","a:2:8254:8040-0:217:1793","a:2:2701:228-0:217:1793","a:2:2684:220-0:217:1793","a:2:8253:8041-0:217:1793","a:2:2741:2723-0:217:1793","b:2:2538-0:217:1793","b:2:3320-0:217:1793","b:2:2548-0:217:1793","b:2:2251-0:217:1793","b:2:2542-0:217:1793","b:2:2248-0:217:1793","b:2:2553-0:217:1793","b:5:684-0:217:1793","0:54","0:233","0:228","0:67","0:229","0:231","0:189"]}}},"0:63:2099":{"id":"0:63:2099","crate_id":0,"name":"reverse","span":{"filename":"src/style.rs","begin":[413,4],"end":[415,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nreverse property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Black.reverse();\nprintln!(\"{}\", style.paint(\"aloha\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12060:2801":{"id":"2:12060:2801","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41405:179","prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:2323":{"id":"0:116:2323","crate_id":0,"name":"ANSIByteStrings","span":{"filename":"src/display.rs","begin":[149,0],"end":[149,60]},"visibility":"public","docs":"A set of `ANSIByteString`s collected together, in order to be\nwritten with a minimum of control characters.","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}}},"0:196:423":{"id":"0:196:423","crate_id":0,"name":"clone","span":{"filename":"src/ansi.rs","begin":[121,9],"end":[121,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2033":{"id":"0:121:2033","crate_id":0,"name":"paint","span":{"filename":"src/display.rs","begin":[164,4],"end":[171,5]},"visibility":"public","docs":"Paints the given text with this colour, returning an ANSI string.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["input",{"generic":"I"}]],"output":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:994":{"id":"0:66:994","crate_id":0,"name":"on","span":{"filename":"src/style.rs","begin":[458,4],"end":[460,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nbackground colour property set to the given colour.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::RGB(31, 31, 31).on(Colour::White);\nprintln!(\"{}\", style.paint(\"eyyyy\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["background",{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12039:6498":{"id":"2:12039:6498","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11898:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43342:6477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12046:31496":{"id":"2:12046:31496","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43664:6497","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12079:26781":{"id":"2:12079:26781","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275","str::rsplitn":"2:12082:26783"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43476:6486","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5416:34474":{"id":"5:5416:34474","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2726","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7005:3078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2726","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7005:3078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:8041-0:200:1789":{"id":"a:2:8253:8041-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:54":{"id":"0:54","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[218,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:55:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95:2306":{"id":"0:95:2306","crate_id":0,"name":"ANSIByteString","span":{"filename":"src/display.rs","begin":[93,0],"end":[93,58]},"visibility":"public","docs":"An `ANSIByteString` represents a formatted series of bytes.  Use\n`ANSIByteString` when styling text with an unknown encoding.","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}}},"a:2:8253:8041-0:234:1792":{"id":"a:2:8253:8041-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:234:1792":{"id":"a:2:2684:220-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,20],"end":[254,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12123:33819":{"id":"2:12123:33819","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:2286":{"id":"0:283:2286","crate_id":0,"name":"ANSIGenericString","span":{"filename":"src/display.rs","begin":[16,0],"end":[20,1]},"visibility":"public","docs":"An `ANSIGenericString` includes a generic string type and a `Style` to\ndisplay that string.  `ANSIString` and `ANSIByteString` are aliases for\nthis type on `str` and `\\[u8]`, respectively.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":["0:102","0:133","a:2:8254:8040-0:283:2286","a:2:2701:228-0:283:2286","a:2:2684:220-0:283:2286","a:2:8253:8041-0:283:2286","a:2:2741:2723-0:283:2286","b:2:2538-0:283:2286","b:2:3320-0:283:2286","b:2:2548-0:283:2286","b:2:2251-0:283:2286","b:2:2542-0:283:2286","b:2:2248-0:283:2286","b:2:2553-0:283:2286","b:5:5677-0:283:2286","b:5:684-0:283:2286","0:107","0:288","0:97","0:291","0:295","0:89"]}}},"a:2:8254:8040-0:200:1789":{"id":"a:2:8254:8040-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:217:1793":{"id":"b:2:2251-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24235"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:234:1792":{"id":"b:2:2548-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:209:1790":{"id":"b:2:2538-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2308"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:283:2286":{"id":"b:2:3320-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[121,22],"end":[121,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:110:230":{"id":"0:110:230","crate_id":0,"name":"Target","span":{"filename":"src/display.rs","begin":[122,4],"end":[122,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"S"}}}},"0:45:2095":{"id":"0:45:2095","crate_id":0,"name":"italic","span":{"filename":"src/style.rs","begin":[101,4],"end":[103,5]},"visibility":"public","docs":"Returns a `Style` with the italic property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().italic();\nprintln!(\"{}\", style.paint(\"greetings\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5423:34476":{"id":"5:5423:34476","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12135:26680":{"id":"2:12135:26680","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39561:26689","Self::is_ascii":"2:12134:26528"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39561:26689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:1926":{"id":"0:219:1926","crate_id":0,"name":"background","span":{"filename":"src/style.rs","begin":[20,4],"end":[20,34]},"visibility":"public","docs":"The style's background colour, if it has one.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:49:733":{"id":"0:49:733","crate_id":0,"name":"hidden","span":{"filename":"src/style.rs","begin":[156,4],"end":[158,5]},"visibility":"public","docs":"Returns a `Style` with the hidden property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().hidden();\nprintln!(\"{}\", style.paint(\"ahoy\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:217:1793":{"id":"b:5:684-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2289","5:687:2860","5:688:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[15,20],"end":[15,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:298:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:314:613":{"id":"0:314:613","crate_id":0,"name":"eq","span":{"filename":"src/display.rs","begin":[132,16],"end":[132,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:670":{"id":"0:208:670","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[131,22],"end":[131,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12053:26787":{"id":"2:12053:26787","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:192:1788":{"id":"b:2:2248-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2281"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[121,16],"end":[121,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:241:1942":{"id":"0:241:1942","crate_id":0,"name":"Yellow","span":{"filename":"src/style.rs","begin":[271,4],"end":[271,10]},"visibility":"default","docs":"Colour #3 (foreground code `33`, background code `43`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:200:1789":{"id":"0:200:1789","crate_id":0,"name":"Infix","span":{"filename":"src/ansi.rs","begin":[132,0],"end":[132,31]},"visibility":"public","docs":"Like `ANSIString`, but only displays the difference between two\nstyles.\n\nThis type implements the `Display` trait, meaning it can be written to a\n`std::fmt` formatting without doing any extra allocation, and written to a\nstring with the `.to_string()` method. For examples, see\n[`Style::infix`](struct.Style.html#method.infix).","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null,null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8254:8040-0:200:1789","a:2:2701:228-0:200:1789","a:2:2684:220-0:200:1789","a:2:8253:8041-0:200:1789","a:2:2741:2723-0:200:1789","b:2:2538-0:200:1789","b:2:3320-0:200:1789","b:2:2548-0:200:1789","b:2:2251-0:200:1789","b:2:2542-0:200:1789","b:2:2248-0:200:1789","b:2:2553-0:200:1789","b:5:5677-0:200:1789","b:5:684-0:200:1789","0:204","0:31","0:207","0:206"]}}},"0:22:1991":{"id":"0:22:1991","crate_id":0,"name":"prefix","span":{"filename":"src/ansi.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"The prefix bytes for this style. These are the bytes that tell the\nterminal to use a different colour or font style.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour::Blue};\n\nlet style = Style::default().bold();\nassert_eq!(\"\\x1b[1m\",\n           style.prefix().to_string());\n\nlet style = Blue.bold();\nassert_eq!(\"\\x1b[1;34m\",\n           style.prefix().to_string());\n\nlet style = Style::default();\nassert_eq!(\"\",\n           style.prefix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12042:31438":{"id":"2:12042:31438","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12043:31451"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43646:6495","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12094:33809":{"id":"2:12094:33809","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11716:13275","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::matches":"2:12091:2559"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43594:6493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12111:33817":{"id":"2:12111:33817","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11741:13272","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12139:33823":{"id":"2:12139:33823","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4539:33823"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43671:6375","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12142:33824":{"id":"2:12142:33824","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4537:33824"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43689:6374","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21":{"id":"0:21","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[144,0],"end":[218,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:22:1991","0:23:2000","0:24:2006"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3320-0:209:1790":{"id":"b:2:3320-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:234:1792":{"id":"b:2:2542-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2250:2281":{"id":"2:2250:2281","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:687:2860":{"id":"5:687:2860","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:217:1793":{"id":"a:2:2684:220-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,9],"end":[12,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8253:8041-0:217:1793":{"id":"a:2:8253:8041-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[285,0],"end":[303,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:32:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:24:2006":{"id":"0:24:2006","crate_id":0,"name":"suffix","span":{"filename":"src/ansi.rs","begin":[215,4],"end":[217,5]},"visibility":"public","docs":"The suffix for this style. These are the bytes that tell the terminal\nto reset back to its normal colour and font style.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour::Green};\n\nlet style = Style::default().bold();\nassert_eq!(\"\\x1b[0m\",\n           style.suffix().to_string());\n\nlet style = Green.normal().bold();\nassert_eq!(\"\\x1b[0m\",\n           style.suffix().to_string());\n\nlet style = Style::default();\nassert_eq!(\"\",\n           style.suffix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:2318":{"id":"0:112:2318","crate_id":0,"name":"ANSIStrings","span":{"filename":"src/display.rs","begin":[139,0],"end":[139,55]},"visibility":"public","docs":"A set of `ANSIString`s collected together, in order to be written with a\nminimum of control characters.","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}}},"b:5:5677-0:200:1789":{"id":"b:5:5677-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5675:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5679:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[47,0],"end":[216,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:42:941","0:43:2046","0:44:2093","0:45:2095","0:46:2050","0:47:2097","0:48:2099","0:49:733","0:50:2103","0:51:1928","0:52:994","0:53:1910"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:283:2286":{"id":"b:2:2542-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178:1799":{"id":"0:178:1799","crate_id":0,"name":"util","span":{"filename":"src/util.rs","begin":[1,0],"end":[81,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:181:2383","0:183:2392","0:184:2394"],"is_stripped":true}}},"2:12035:33802":{"id":"2:12035:33802","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11904:1399","str::slice_mut_unchecked":"2:12036:33803","crate::ops::Index":"2:2981:2614"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:57:2011":{"id":"0:57:2011","crate_id":0,"name":"normal","span":{"filename":"src/style.rs","begin":[323,4],"end":[325,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Red.normal();\nprintln!(\"{}\", style.paint(\"hi\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206":{"id":"0:206","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[131,16],"end":[131,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12041:6080":{"id":"2:12041:6080","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43358:3026","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:613":{"id":"0:230:613","crate_id":0,"name":"eq","span":{"filename":"src/style.rs","begin":[12,9],"end":[12,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:1991":{"id":"0:26:1991","crate_id":0,"name":"prefix","span":{"filename":"src/ansi.rs","begin":[236,4],"end":[238,5]},"visibility":"public","docs":"The prefix bytes for this colour as a `Style`. These are the bytes\nthat tell the terminal to use a different colour or font style.\n\nSee also [`Style::prefix`](struct.Style.html#method.prefix).\n\n# Examples\n\n```\nuse ansi_term::Colour::Green;\n\nassert_eq!(\"\\x1b[0m\",\n           Green.suffix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[106,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:105:2310","0:106:2312"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30:670":{"id":"0:30:670","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[278,4],"end":[281,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[15,9],"end":[15,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:294:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:93:2303":{"id":"0:93:2303","crate_id":0,"name":"ANSIString","span":{"filename":"src/display.rs","begin":[89,0],"end":[89,53]},"visibility":"public","docs":"An ANSI String is a string coupled with the `Style` to display it\nin a terminal.\n\nAlthough not technically a string itself, it can be turned into\none with the `to_string` method.\n\n# Examples\n\n```\nuse ansi_term::ANSIString;\nuse ansi_term::Colour::Red;\n\nlet red_string = Red.paint(\"a red string\");\nprintln!(\"{}\", red_string);\n```\n\n```\nuse ansi_term::ANSIString;\n\nlet plain_string = ANSIString::from(\"a plain string\");\nassert_eq!(&*plain_string, \"a plain string\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}}},"2:12047:26785":{"id":"2:12047:26785","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:217:1793":{"id":"b:2:2542-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:688:2861":{"id":"5:688:2861","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[140,16],"end":[140,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:50:2103":{"id":"0:50:2103","crate_id":0,"name":"strikethrough","span":{"filename":"src/style.rs","begin":[170,4],"end":[172,5]},"visibility":"public","docs":"Returns a `Style` with the strikethrough property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().strikethrough();\nprintln!(\"{}\", style.paint(\"yo\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:2315":{"id":"0:299:2315","crate_id":0,"name":"ANSIGenericStrings","span":{"filename":"src/display.rs","begin":[133,0],"end":[135,58]},"visibility":"public","docs":"A set of `ANSIGenericString`s collected together, in order to be\nwritten with a minimum of control characters.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:303:1608"]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"impls":["0:145","a:2:8254:8040-0:299:2315","a:2:2701:228-0:299:2315","a:2:2684:220-0:299:2315","a:2:8253:8041-0:299:2315","a:2:2741:2723-0:299:2315","b:2:2538-0:299:2315","b:2:3320-0:299:2315","b:2:2548-0:299:2315","b:2:2251-0:299:2315","b:2:2542-0:299:2315","b:2:2248-0:299:2315","b:2:2553-0:299:2315","b:5:5677-0:299:2315","0:308","0:311","0:304"]}}},"0:38-0:200:1789":{"id":"0:38-0:200:1789","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,23],"end":[251,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ansi::Infix","name":"Infix","id":"0:200:1789","glob":false}}},"0:226:1923":{"id":"0:226:1923","crate_id":0,"name":"is_hidden","span":{"filename":"src/style.rs","begin":[41,4],"end":[41,23]},"visibility":"public","docs":"Whether this style is hidden.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"2:12038:26769":{"id":"2:12038:26769","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12037:26768"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12076:33806":{"id":"2:12076:33806","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11716:13275","str::split":"2:12064:24774","prim@char":"1:11898:419","str::split_terminator":"2:12073:33805"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43440:6484","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:8040-0:192:1788":{"id":"a:2:8254:8040-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:234:1792":{"id":"b:2:2538-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2308"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12134:26528":{"id":"2:12134:26528","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:670":{"id":"0:190:670","crate_id":0,"name":"fmt","span":{"filename":"src/debug.rs","begin":[15,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:1917":{"id":"0:220:1917","crate_id":0,"name":"is_bold","span":{"filename":"src/style.rs","begin":[23,4],"end":[23,21]},"visibility":"public","docs":"Whether this style is bold.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:235:1937":{"id":"0:235:1937","crate_id":0,"name":"Black","span":{"filename":"src/style.rs","begin":[262,4],"end":[262,9]},"visibility":"default","docs":"Colour #0 (foreground code `30`, background code `40`).\n\nThis is not necessarily the background colour, and using it as one may\nrender the text hard to read on terminals with dark backgrounds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:185-0:178:1799":{"id":"0:185-0:178:1799","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[269,0],"end":[269,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"util","name":"util","id":"0:178:1799","glob":true}}},"0:251:1952":{"id":"0:251:1952","crate_id":0,"name":"Fixed","span":{"filename":"src/style.rs","begin":[304,4],"end":[304,13]},"visibility":"default","docs":"A colour number from 0 to 255, for use in 256-colour terminal\nenvironments.\n\n- Colours 0 to 7 are the `Black` to `White` variants respectively.\n  These colours can usually be changed in the terminal emulator.\n- Colours 8 to 15 are brighter versions of the eight colours above.\n  These can also usually be changed in the terminal emulator, or it\n  could be configured to use the original colours and show the text in\n  bold instead. It varies depending on the program.\n- Colours 16 to 231 contain several palettes of bright colours,\n  arranged in six squares measuring six by six each.\n- Colours 232 to 255 are shades of grey from black to white.\n\nIt might make more sense to look at a [colour chart][cc].\n\n[cc]: https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:253:1608"]},"discriminant":null}}},"b:5:684-0:283:2286":{"id":"b:5:684-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["5:686:2289","5:687:2860","5:688:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[132,16],"end":[132,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12064:24774":{"id":"2:12064:24774","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11716:13275","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::split_whitespace":"2:12042:31438","str::rsplit":"2:12070:26779"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43372:3027","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:209:1790":{"id":"b:2:2548-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2544:696":{"id":"2:2544:696","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:234:1792":{"id":"b:2:2251-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24235"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12091:2559":{"id":"2:12091:2559","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11716:13275","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::matches":"2:12091:2559"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43576:6492","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35:670":{"id":"0:35:670","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[307,4],"end":[310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:670":{"id":"0:199:670","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[121,22],"end":[121,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:209:1790":{"id":"a:2:2684:220-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:68:696":{"id":"0:68:696","crate_id":0,"name":"from","span":{"filename":"src/style.rs","begin":[475,4],"end":[477,5]},"visibility":"default","docs":"You can turn a `Colour` into a `Style` with the foreground colour set\nwith the `From` trait.\n\n```\nuse ansi_term::{Style, Colour};\nlet green_foreground = Style::default().fg(Colour::Green);\nassert_eq!(green_foreground, Colour::Green.normal());\nassert_eq!(green_foreground, Colour::Green.into());\nassert_eq!(green_foreground, Style::from(Colour::Green));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["colour",{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[221,0],"end":[274,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:26:1991","0:27:2000","0:28:2006"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28:2006":{"id":"0:28:2006","crate_id":0,"name":"suffix","span":{"filename":"src/ansi.rs","begin":[271,4],"end":[273,5]},"visibility":"public","docs":"The suffix for this colour as a `Style`. These are the bytes that\ntell the terminal to reset back to its normal colour and font style.\n\nSee also [`Style::suffix`](struct.Style.html#method.suffix).\n\n# Examples\n\n```\nuse ansi_term::Colour::Purple;\n\nassert_eq!(\"\\x1b[0m\",\n           Purple.suffix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:1910":{"id":"0:53:1910","crate_id":0,"name":"is_plain","span":{"filename":"src/style.rs","begin":[213,4],"end":[215,5]},"visibility":"public","docs":"Return true if this `Style` has no actual styles, and can be written\nwithout any control characters.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nassert_eq!(true,  Style::default().is_plain());\nassert_eq!(false, Style::default().bold().is_plain());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:209:1790":{"id":"b:2:2248-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2281"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[311,0],"end":[461,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:57:2011","0:58:2046","0:59:2093","0:60:2095","0:61:2050","0:62:2097","0:63:2099","0:64:733","0:65:2103","0:66:994"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:106:2312":{"id":"0:106:2312","crate_id":0,"name":"style_ref_mut","span":{"filename":"src/display.rs","begin":[115,4],"end":[117,5]},"visibility":"public","docs":"Directly access the style mutably","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12082:26783":{"id":"2:12082:26783","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11898:419","str::splitn":"2:12079:26781","self::pattern":"2:11716:13275"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43494:6487","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5432:34478":{"id":"5:5432:34478","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2726","`String`":"5:7265:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2726","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7005:3078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:200:1789":{"id":"a:2:2684:220-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:283:2286":{"id":"b:2:2251-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2253:24235"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58:2046":{"id":"0:58:2046","crate_id":0,"name":"bold","span":{"filename":"src/style.rs","begin":[338,4],"end":[340,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nbold property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Green.bold();\nprintln!(\"{}\", style.paint(\"hey\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[132,16],"end":[132,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:314:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8254:8040-0:283:2286":{"id":"a:2:8254:8040-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12029:26743":{"id":"2:12029:26743","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41405:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:192:1788":{"id":"b:2:2538-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2308"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5435:26526":{"id":"5:5435:26526","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12138:26524"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:234:1792":{"id":"b:2:3320-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,27],"end":[12,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:234:1792":{"id":"b:2:2553-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:299:2315":{"id":"a:2:2684:220-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12088:33808":{"id":"2:12088:33808","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:1928":{"id":"0:51:1928","crate_id":0,"name":"fg","span":{"filename":"src/style.rs","begin":[184,4],"end":[186,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour property set.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour};\n\nlet style = Style::new().fg(Colour::Yellow);\nprintln!(\"{}\", style.paint(\"hi\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["foreground",{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:2802":{"id":"2:12016:2802","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:192:1788":{"id":"b:2:3320-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:2723-0:200:1789":{"id":"a:2:2741:2723-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:217:1793":{"id":"a:2:2701:228-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5677-0:192:1788":{"id":"b:5:5677-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5675:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5679:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12136:26529":{"id":"2:12136:26529","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:1921":{"id":"0:224:1921","crate_id":0,"name":"is_blink","span":{"filename":"src/style.rs","begin":[35,4],"end":[35,22]},"visibility":"public","docs":"Whether this style is blinking.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:2:2542-0:299:2315":{"id":"b:2:2542-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[140,22],"end":[140,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:216:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245:1946":{"id":"0:245:1946","crate_id":0,"name":"Purple","span":{"filename":"src/style.rs","begin":[277,4],"end":[277,10]},"visibility":"default","docs":"Colour #5 (foreground code `35`, background code `45`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12036:33803":{"id":"2:12036:33803","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11904:1399","crate::ops::IndexMut":"2:2985:2615","str::slice_unchecked":"2:12035:33802"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,9],"end":[12,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:230:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8254:8040-0:299:2315":{"id":"a:2:8254:8040-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12117:25050":{"id":"2:12117:25050","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:299:2315":{"id":"b:2:3320-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:232:423":{"id":"0:232:423","crate_id":0,"name":"clone","span":{"filename":"src/style.rs","begin":[12,20],"end":[12,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:1608":{"id":"0:303:1608","crate_id":0,"name":"0","span":{"filename":"src/display.rs","begin":[134,5],"end":[134,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}}}}},"0:72-0:234:1792":{"id":"0:72-0:234:1792","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[257,0],"end":[257,24]},"visibility":"public","docs":"Color is a type alias for `Colour`.","links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"Colour","name":"Color","id":"0:234:1792","glob":false}}},"2:2557:1479":{"id":"2:2557:1479","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,27],"end":[254,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:37-0:192:1788":{"id":"0:37-0:192:1788","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,15],"end":[251,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ansi::Prefix","name":"Prefix","id":"0:192:1788","glob":false}}},"0:181:2383":{"id":"0:181:2383","crate_id":0,"name":"sub_string","span":{"filename":"src/util.rs","begin":[5,0],"end":[35,1]},"visibility":"public","docs":"Return a substring of the given ANSIStrings sequence, while keeping the formatting.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["start",{"primitive":"usize"}],["len",{"primitive":"usize"}],["strs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ANSIStrings","id":"0:112:2318","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Vec","id":"5:6710:244","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ANSIString","id":"0:93:2303","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294:613":{"id":"0:294:613","crate_id":0,"name":"eq","span":{"filename":"src/display.rs","begin":[15,9],"end":[15,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12031:26744":{"id":"2:12031:26744","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:200:1789":{"id":"b:2:3320-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:2723-0:209:1790":{"id":"a:2:2741:2723-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:27:2000":{"id":"0:27:2000","crate_id":0,"name":"infix","span":{"filename":"src/ansi.rs","begin":[254,4],"end":[256,5]},"visibility":"public","docs":"The infix bytes between this colour and `next` colour. These are the bytes\nthat tell the terminal to use the `next` colour, or to do nothing if\nthe two colours are equal.\n\nSee also [`Style::infix`](struct.Style.html#method.infix).\n\n# Examples\n\n```\nuse ansi_term::Colour::{Red, Yellow};\n\nassert_eq!(\"\\x1b[33m\",\n           Red.infix(Yellow).to_string());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["next",{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:2093":{"id":"0:44:2093","crate_id":0,"name":"dimmed","span":{"filename":"src/style.rs","begin":[87,4],"end":[89,5]},"visibility":"public","docs":"Returns a `Style` with the dimmed property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().dimmed();\nprintln!(\"{}\", style.paint(\"sup\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2723-0:234:1792":{"id":"a:2:2741:2723-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:2723-0:283:2286":{"id":"a:2:2741:2723-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5677-0:299:2315":{"id":"b:5:5677-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5675:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["5:5679:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[277,0],"end":[282,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:30:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:32:670":{"id":"0:32:670","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[286,4],"end":[302,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177-0:176:1589":{"id":"0:177-0:176:1589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[266,0],"end":[266,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"windows","name":"windows","id":"0:176:1589","glob":true}}},"2:12020:33800":{"id":"2:12020:33800","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12018:33799"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60:2095":{"id":"0:60:2095","crate_id":0,"name":"italic","span":{"filename":"src/style.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nitalic property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Blue.italic();\nprintln!(\"{}\", style.paint(\"greetings\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12037:26768":{"id":"2:12037:26768","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12038:26769"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"src/debug.rs","begin":[14,0],"end":[70,1]},"visibility":"default","docs":"Styles have a special `Debug` implementation that only shows the fields that\nare set. Fields that haven’t been touched aren’t included in the output.\n\nThis behaviour gets bypassed when using the alternate formatting mode\n`format!(\"{:#?}\")`.\n\n    use ansi_term::Colour::{Red, Blue};\n    assert_eq!(\"Style { fg(Red), on(Blue), bold, italic }\",\n               format!(\"{:?}\", Red.on(Blue).bold().italic()));","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:190:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:686:2289":{"id":"5:686:2289","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2248-0:299:2315":{"id":"b:2:2248-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2250:2281"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:192:1788":{"id":"b:2:2542-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12023:2035":{"id":"2:12023:2035","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11283:13276"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12103:33812":{"id":"2:12103:33812","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:192:1788":{"id":"b:2:2251-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24235"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:200:1789":{"id":"b:2:2538-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2308"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:283:2286":{"id":"a:2:2701:228-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:183:2392":{"id":"0:183:2392","crate_id":0,"name":"unstyle","span":{"filename":"src/util.rs","begin":[38,0],"end":[46,1]},"visibility":"public","docs":"Return a concatenated copy of `strs` without the formatting, as an allocated `String`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["strs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ANSIStrings","id":"0:112:2318","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12097:33810":{"id":"2:12097:33810","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11716:13275","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::rmatch_indices":"2:12100:33811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43522:6489","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:1610":{"id":"0:258:1610","crate_id":0,"name":"2","span":{"filename":"src/style.rs","begin":[307,16],"end":[307,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"2:2552:1480":{"id":"2:2552:1480","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5417:13398":{"id":"5:5417:13398","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:200:1789":{"id":"b:2:2553-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12132:33822":{"id":"2:12132:33822","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11677:127","`FromStr`":"2:11676:8052"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11676:8052","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11676:8052","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89":{"id":"0:89","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[34,0],"end":[42,1]},"visibility":"default","docs":"Cloning an `ANSIGenericString` will clone its underlying string.\n\n# Examples\n\n```\nuse ansi_term::ANSIString;\n\nlet plain_string = ANSIString::from(\"a plain string\");\nlet clone_string = plain_string.clone();\nassert_eq!(clone_string, plain_string);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:92:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:209:1790":{"id":"b:2:2251-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24235"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:200:1789":{"id":"b:2:2542-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12100:33811":{"id":"2:12100:33811","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11716:13275","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::match_indices":"2:12097:33810"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43540:6490","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:13273","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12017:33798":{"id":"2:12017:33798","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:200:1789":{"id":"b:2:2251-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24235"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:200:1789":{"id":"b:2:2548-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12018:33799":{"id":"2:12018:33799","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12114:33818":{"id":"2:12114:33818","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:60":{"id":"0:55:60","crate_id":0,"name":"default","span":{"filename":"src/style.rs","begin":[230,4],"end":[243,5]},"visibility":"default","docs":"Returns a style with *no* properties set. Formatting text using this\nstyle returns the exact same text.\n\n```\nuse ansi_term::Style;\nassert_eq!(None,  Style::default().foreground);\nassert_eq!(None,  Style::default().background);\nassert_eq!(false, Style::default().is_bold);\nassert_eq!(\"txt\", Style::default().paint(\"txt\").to_string());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:26524":{"id":"2:12138:26524","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:2394":{"id":"0:184:2394","crate_id":0,"name":"unstyled_len","span":{"filename":"src/util.rs","begin":[49,0],"end":[55,1]},"visibility":"public","docs":"Return the unstyled length of ANSIStrings. This is equaivalent to `unstyle(strs).len()`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["strs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ANSIStrings","id":"0:112:2318","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:52:994":{"id":"0:52:994","crate_id":0,"name":"on","span":{"filename":"src/style.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Returns a `Style` with the background colour property set.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour};\n\nlet style = Style::new().on(Colour::Blue);\nprintln!(\"{}\", style.paint(\"eyyyy\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["background",{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[15,9],"end":[15,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12044:24775":{"id":"2:12044:24775","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43626:3023","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2050":{"id":"0:61:2050","crate_id":0,"name":"underline","span":{"filename":"src/style.rs","begin":[383,4],"end":[385,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nunderline property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Purple.underline();\nprintln!(\"{}\", style.paint(\"salutations\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5677-0:209:1790":{"id":"b:5:5677-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5675:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5679:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:176:1589":{"id":"0:176:1589","crate_id":0,"name":"windows","span":{"filename":"src/windows.rs","begin":[1,0],"end":[61,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":true}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[131,9],"end":[131,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:205:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:283:2286":{"id":"b:2:2553-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:192:1788":{"id":"b:2:2553-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:200:1789":{"id":"b:2:2248-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2281"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5433:3050":{"id":"5:5433:3050","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:2036":{"id":"0:135:2036","crate_id":0,"name":"write_to","span":{"filename":"src/display.rs","begin":[209,4],"end":[212,5]},"visibility":"public","docs":"Write an `ANSIByteString` to an `io::Write`.  This writes the escape\nsequences for the associated `Style` around the bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["w",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"W"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2871:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3444:2024","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:1924":{"id":"0:227:1924","crate_id":0,"name":"is_strikethrough","span":{"filename":"src/style.rs","begin":[44,4],"end":[44,30]},"visibility":"public","docs":"Whether this style is struckthrough.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:223:1920":{"id":"0:223:1920","crate_id":0,"name":"is_underline","span":{"filename":"src/style.rs","begin":[32,4],"end":[32,26]},"visibility":"public","docs":"Whether this style is underlined.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:107":{"id":"0:107","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[120,0],"end":[127,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:110:230","0:111:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:299:2315":{"id":"b:2:2251-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2253:24235"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12137:26525":{"id":"2:12137:26525","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:192:1788":{"id":"a:2:2701:228-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:118:2323":{"id":"0:118:2323","crate_id":0,"name":"ANSIByteStrings","span":{"filename":"src/display.rs","begin":[153,0],"end":[155,1]},"visibility":"public","docs":"A function to construct an `ANSIByteStrings` instance.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["arg",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"resolved_path":{"name":"ANSIByteString","id":"0:95:2306","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"ANSIByteStrings","id":"0:116:2323","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:1608":{"id":"0:253:1608","crate_id":0,"name":"0","span":{"filename":"src/style.rs","begin":[304,10],"end":[304,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"2:12026:26746":{"id":"2:12026:26746","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11915:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:209:1790":{"id":"b:2:2542-0:209:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8253:8041-0:283:2286":{"id":"a:2:8253:8041-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:8040","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:8041","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:299:2315":{"id":"b:2:2538-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2541:2308"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12105:33813":{"id":"2:12105:33813","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:423":{"id":"0:213:423","crate_id":0,"name":"clone","span":{"filename":"src/ansi.rs","begin":[140,9],"end":[140,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Suffix","id":"0:209:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:1608":{"id":"0:256:1608","crate_id":0,"name":"0","span":{"filename":"src/style.rs","begin":[307,8],"end":[307,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:266:670":{"id":"0:266:670","crate_id":0,"name":"fmt","span":{"filename":"src/style.rs","begin":[254,33],"end":[254,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:299:2315":{"id":"b:2:2548-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:48:2099":{"id":"0:48:2099","crate_id":0,"name":"reverse","span":{"filename":"src/style.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns a `Style` with the reverse property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().reverse();\nprintln!(\"{}\", style.paint(\"aloha\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:1944":{"id":"0:243:1944","crate_id":0,"name":"Blue","span":{"filename":"src/style.rs","begin":[274,4],"end":[274,8]},"visibility":"default","docs":"Colour #4 (foreground code `34`, background code `44`).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:192:1788":{"id":"0:192:1788","crate_id":0,"name":"Prefix","span":{"filename":"src/ansi.rs","begin":[122,0],"end":[122,25]},"visibility":"public","docs":"Like `ANSIString`, but only displays the style prefix.\n\nThis type implements the `Display` trait, meaning it can be written to a\n`std::fmt` formatting without doing any extra allocation, and written to a\nstring with the `.to_string()` method. For examples, see\n[`Style::prefix`](struct.Style.html#method.prefix).","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8254:8040-0:192:1788","a:2:2701:228-0:192:1788","a:2:2684:220-0:192:1788","a:2:8253:8041-0:192:1788","a:2:2741:2723-0:192:1788","b:2:2538-0:192:1788","b:2:3320-0:192:1788","b:2:2548-0:192:1788","b:2:2251-0:192:1788","b:2:2542-0:192:1788","b:2:2248-0:192:1788","b:2:2553-0:192:1788","b:5:5677-0:192:1788","b:5:684-0:192:1788","0:198","0:197","0:195","0:29"]}}},"0:249:1950":{"id":"0:249:1950","crate_id":0,"name":"White","span":{"filename":"src/style.rs","begin":[286,4],"end":[286,9]},"visibility":"default","docs":"Colour #7 (foreground code `37`, background code `47`).\n\nAs above, this is not necessarily the foreground colour, and may be\nhard to read on terminals with light backgrounds.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:684-0:234:1792":{"id":"b:5:684-0:234:1792","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2289","5:687:2860","5:688:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261:613":{"id":"0:261:613","crate_id":0,"name":"eq","span":{"filename":"src/style.rs","begin":[254,9],"end":[254,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,33],"end":[254,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Colour","id":"0:234:1792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:266:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:105:2310":{"id":"0:105:2310","crate_id":0,"name":"style_ref","span":{"filename":"src/display.rs","begin":[110,4],"end":[112,5]},"visibility":"public","docs":"Directly access the style","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:552":{"id":"0:111:552","crate_id":0,"name":"deref","span":{"filename":"src/display.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"S"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12024:33801":{"id":"2:12024:33801","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:299:2315":{"id":"b:2:2553-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[131,22],"end":[131,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:208:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:192:1788":{"id":"a:2:2684:220-0:192:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Prefix","id":"0:192:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:64:733":{"id":"0:64:733","crate_id":0,"name":"hidden","span":{"filename":"src/style.rs","begin":[428,4],"end":[430,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nhidden property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::White.hidden();\nprintln!(\"{}\", style.paint(\"ahoy\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32032:4970","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12045:33804":{"id":"2:12045:33804","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43636:6494","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12126:33820":{"id":"2:12126:33820","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:13275"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:7138","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:200:1789":{"id":"b:5:684-0:200:1789","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Infix","id":"0:200:1789","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2289","5:687:2860","5:688:2861"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:283:2286":{"id":"a:2:2684:220-0:283:2286","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericString","id":"0:283:2286","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:114:2318":{"id":"0:114:2318","crate_id":0,"name":"ANSIStrings","span":{"filename":"src/display.rs","begin":[143,0],"end":[145,1]},"visibility":"public","docs":"A function to construct an `ANSIStrings` instance.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["arg",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"resolved_path":{"name":"ANSIString","id":"0:93:2303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"ANSIStrings","id":"0:112:2318","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:2723-0:217:1793":{"id":"a:2:2741:2723-0:217:1793","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:217:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:222:1919":{"id":"0:222:1919","crate_id":0,"name":"is_italic","span":{"filename":"src/style.rs","begin":[29,4],"end":[29,23]},"visibility":"public","docs":"Whether this style is italic.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:2741:2723-0:299:2315":{"id":"a:2:2741:2723-0:299:2315","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:1909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:2723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ANSIGenericStrings","id":"0:299:2315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"16:7317:35133":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:7322:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:2833:2603":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:7574:6045":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:9557:3556":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:6309:3223":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"18:564:3402":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:46385:6595":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"18:599:35147":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"18:681:3416":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"11:805:7882":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:4948:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:40447:6408":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:41760:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11993:3867":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:11503:6772":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:47838:6642":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:7215:2725":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:7683:4455":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:11101:6737":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:11459:6767":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:6670:5916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:7675:6652":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:4326:3281":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:11918:1500":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:6717:4645":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:4904:4487":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:1565:2807":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:21016:6118":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:40417:6405":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:2812:2598":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:7791:3081":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:280:2726":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:13803:4367":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:5224:3223":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"8:0:2450":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:20548:2776":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:3514:3244":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:12307:3932":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:5305:4494":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:43199:6471":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:44095:6529":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:3741:7118":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:47229:6623":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:5745:3244":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:2981:2614":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:5886:4529":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"10:44:4976":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"11:1517:7112":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:8489:4960":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:2817:2599":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:11403:7196":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:21573:8114":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:9839:6974":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:2642:4424":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:1572:3261":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:9121:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8181:7966":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:40702:6418":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:9628:6963":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:13453:4256":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:21119:7957":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:43440:6484":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:4947:3006":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:676:7869":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:1637:5220":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:2350:7944":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:5024:5617":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:2465:6064":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:6043:5811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"14:7:7092":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10478:7010":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:9577:3551":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:9907:3564":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:501:3241":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:7801:6656":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:8420:6716":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:22503:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:2744:2764":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:386:6934":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:35:3219":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:4851:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:5708:4507":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:8979:35137":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:4683:7986":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:7366:20114":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:3999:7130":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:10283:3607":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:12019:3580":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"11:1012:7105":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:1667:1089":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:9384:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:5571:4440":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:2856:2608":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:11741:13272":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:42922:6469":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:11908:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:11844:3846":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:7498:4749":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:9265:6950":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:3329:3053":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:11628:3795":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:4419:5360":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:7202:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:3374:13307":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:9146:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:9322:35134":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:9721:6970":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:42485:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:10589:3632":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:2319:4404":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:1680:5246":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:43984:6524":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:8858:3535":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6774:5966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:20921:8125":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:4962:5590":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:8772:6726":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:2376:7954":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:5976:4397":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"5:2966:6060":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:8113:3022":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:5000:4490":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:47663:6630":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:10452:7008":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:9946:3569":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:2808:4431":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:1306:7109":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"11:667:7094":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:4008:3244":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:7808:6657":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:8270:7237":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:1589:4964":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:7345:3261":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:11205:6761":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:9068:35139":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:4858:8026":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:41212:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"16:7572:35131":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:5374:7204":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"11:1611:3216":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:45406:6550":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:12318:3933":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13332:4220":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:12592:3977":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:55:4799":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"6:4694:5449":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:3234:2627":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:40215:7155":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:13426:4249":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:4703:5454":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:4445:5371":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:8255:7137":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:6622:3272":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:7077:20113":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:13564:4309":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:9453:20188":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:3929:7973":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:4369:3251":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:2219:3015":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:7592:7884":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:8214:4742":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:10000:3653":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:782:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:4435:5365":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:7947:7228":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:9299:7141":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:9138:6948":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:10148:7601":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:5043:5631":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:5443:7206":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:40347:6398":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4753:5478":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:2215:3277":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:3386:7129":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"6:1574:5172":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:44306:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:1676:3223":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:40385:6402":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:45677:6561":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:10569:3627":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:47721:6635":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:40264:3024":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:11896:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:6061:19221":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:39204:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:2922:2610":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:2161:13410":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:4388:5342":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:12388:3942":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:2053:7118":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"5:5068:3257":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:12902:4099":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"18:507:3392":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:4327:4471":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:11880:25159":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:11698:3349":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:11911:744":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:10014:3027":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:44111:6533":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:562:3677":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:32159:2767":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:41720:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:568:5110":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:11730:3422":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:6192:3316":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:3749:4465":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8134:3024":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"18:80:24016":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:13477:4260":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:6588:5881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:5768:3318":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:47681:6631":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:39964:6366":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:10125:3575":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:42714:6466":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:618:7174":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:12609:7883":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:10207:7144":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:4994:7200":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:8144:3025":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:8788:3533":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:5402:3529":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:40468:3025":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:5104:4493":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:7065:4693":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:7537:3335":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:1568:5170":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:2926:2611":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:6336:7213":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:11382:7195":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:888:4962":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:3782:4466":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:11544:3767":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:42907:6468":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"16:3585:4464":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:10712:20286":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:10428:7006":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:45452:6552":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:44099:6530":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:3806:3261":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:44107:6532":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:40031:6373":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:975:6936":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:43358:3026":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:9443:6953":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:11234:3702":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:9275:35141":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:12517:3305":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:9796:3563":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:11787:13281":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:5268:13260":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:1446:2807":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:13367:4231":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:3405:3016":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:10015:6986":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:1594:4965":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:13159:4177":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:47087:6622":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:13763:4356":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13181:4181":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:20576:33119":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:9469:6954":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:46029:6575":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:11155:3343":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:10026:6987":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:5338:7202":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:4255:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:42667:6458":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:1756:6090":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:20950:8111":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:8244:7233":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:13612:4310":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:9866:6976":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:9696:3549":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:10248:6486":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:47701:6633":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:9409:13354":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:41606:2807":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:2578:3028":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:40305:6391":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:12033:3875":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:2763:2590":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:3675:3223":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:8437:8051":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:43636:6494":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:3987:7977":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:39381:2874":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"16:2470:4417":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:2546:4420":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"18:515:3395":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:2364:7948":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:4818:4484":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:21344:8116":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:2348:6089":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:20816:8123":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:10377:3613":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:1430:7110":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:4290:5274":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:4763:5484":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:3221:33796":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:47690:6632":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:5007:5609":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:41463:4960":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11924:3860":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:13659:4328":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6890:4447":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:7449:7079":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:4145:6095":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"9:445:19106":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:4702:4480":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:12607:3981":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:43971:6520":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:1747:6087":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:43270:6116":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:21851:30826":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"7:0:1545":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:1499:5131":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:44167:6540":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:5690:7207":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:4116:7997":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:11258:3716":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:9613:3295":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:9163:2867":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:6201:7041":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:4114:7132":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:22305:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:10104:3573":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:1732:5268":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:11318:3345":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:2720:4427":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:40111:6382":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"18:609:1790":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:5616:4498":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:8170:7233":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:5798:5690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:43680:6366":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:7488:4748":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:40717:3289":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:2692:2759":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:40043:6374":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:7188:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:8085:3052":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:901:3244":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:6590:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:10092:6996":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:39979:6368":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:8816:6728":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4983:5602":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:11917:1499":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:5346:4495":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:6300:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:47877:6643":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:9917:3565":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:11299:3720":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:9973:3571":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:9108:35142":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:8740:7238":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:11912:745":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:13791:4365":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13469:4259":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:1630:5216":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:11919:1497":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"5:1496:7094":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:6874:7375":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:9933:3567":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:39991:30819":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:3182:2025":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:6833:5999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:7105:2807":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"15:219:7522":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:11037:20179":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:13053:4154":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:43756:13287":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:4845:4485":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:6671:4633":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:20754:8121":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"17:12098:3883":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:8176:7235":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:7585:6046":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:3648:2807":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:5183:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:6589:2813":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:8180:20118":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:9817:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:6647:5915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:3216:4963":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:43936:6515":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:6772:13380":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:4580:5910":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:7510:6030":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:42507:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:7042:4691":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:11253:6765":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:8931:3537":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:2911:2609":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:6373:6417":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:5057:5637":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10857:20178":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:11653:3799":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"5:6593:3259":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:21866:6134":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:3047:19250":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"18:671:6931":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:8490:20171":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:12646:3991":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:8674:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:3079:2618":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:42040:7140":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:5831:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:41880:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:1821:6093":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:3251:3044":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:5724:4509":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:7206:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:2502:4418":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"9:481:19105":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:45637:6559":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:10354:3612":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4894:5548":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:9895:6981":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:9165:2868":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:922:7094":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:595:5125":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:5594:4442":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:13516:4272":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:42692:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:8965:7248":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:4259:7133":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:21443:6120":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:21349:8126":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:46731:6602":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:47710:6634":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:5817:5692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:41615:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:6558:4608":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:4596:4478":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:9148:35143":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:5792:5687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:5557:4437":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:10426:3046":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:12550:3973":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:10721:3647":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:4780:5495":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:562:5107":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:11916:1498":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:10257:6997":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:1122:33609":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:11847:7272":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:44341:7169":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:13721:4350":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:6725:5929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:1947:6939":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:6854:4665":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:6431:4594":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:7580:7957":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:11510:6772":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:7626:3339":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:11422:3746":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:13625:4316":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:20934:7957":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:6572:5869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11615:3791":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:6662:4632":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:20772:8117":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"6:4886:5543":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"11:1121:7109":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:11902:3853":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:7635:4755":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:30278:6084":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:9653:6965":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:4907:5558":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"10:0:2452":{"crate_id":10,"path":["adler"],"kind":"module"},"16:5779:4514":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:6390:4590":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13376:4234":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:43238:7166":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:3899:4469":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:39561:26689":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:43159:6111":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:9391:7224":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:12126:3887":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:8254:8040":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:3197:2626":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:13121:4171":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:3225:4461":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:4615:5435":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13842:4376":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"15:0:2456":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:8598:20175":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:4260:7198":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"18:736:24027":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:12312:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:45536:6555":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:4954:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:43330:6476":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:5862:5724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:5914:3316":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:7076:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:4474:5382":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:4789:4483":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:46126:6578":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:4427:5362":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"9:502:5035":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:13249:4201":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"5:786:3226":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:10580:3631":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:6321:7055":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"10:36:4975":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"16:6179:7026":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:7504:6029":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:7266:24542":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"5:7219:30823":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:2544:3036":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:5067:5638":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:8129:7088":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:10798:20177":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:7608:6052":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:4823:5512":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:21:683":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:5503:5818":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:7519:4750":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:3187:33797":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:6400:4591":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:5998:20107":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:6066:5817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:3146:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:7636:33216":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:42169:2863":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:21128:6118":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:62:13736":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"5:4038:3223":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:44146:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:4646:8000":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:4582:5912":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:3879:7971":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:2572:4421":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"9:421:19108":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:1648:5228":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:5418:4496":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:43225:6114":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:9159:2866":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:1787:6938":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:39126:2625":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:10416:7005":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"18:624:35145":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"5:1277:7105":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:6488:4596":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:9178:6949":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:43099:7163":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:21964:6150":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:30876:2776":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:7293:4725":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:480:3307":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"6:4878:1003":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:2668:4425":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:4943:5582":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:6935:7056":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:8917:7241":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:43150:6110":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:47762:6638":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:47339:6624":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:6489:8070":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:2366:7949":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:10936:3671":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:8195:20154":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:633:7114":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:39314:2617":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:44127:6537":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:6819:5990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:8283:20165":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:12072:3879":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:7271:6015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:10702:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:6868:4667":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:8236:7236":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:8495:6723":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:4367:5334":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:7831:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:10989:3620":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:8928:7243":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:11891:3852":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:2145:6055":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:13488:4264":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:41377:6443":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:3172:3046":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"14:31:7092":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:13344:4226":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:5389:7205":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:2426:4415":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:8679:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:40686:6416":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:123:13791":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:2768:2589":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:10169:6109":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:8842:33218":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:39228:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:4023:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"11:2201:6074":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:41298:6435":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:9380:20186":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"5:7034:3244":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:882:3231":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:7244:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:6442:4595":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:10303:7000":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:4637:5437":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:2691:1909":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:7757:4759":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:3999:7980":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:9218:3556":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:4170:3006":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:4555:5423":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:9409:20187":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:10598:3672":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:4390:2875":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:7563:6041":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:3600:7110":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:47625:6629":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1512:5137":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:41539:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:44379:6546":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:41389:6444":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:9111:2024":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:7014:2807":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"11:1027:19184":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:3064:3055":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:10096:7142":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:41269:7967":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:44349:6543":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:30478:30850":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:2481:3035":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:6919:35128":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:959:7102":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:20741:8120":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:32072:6227":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:8142:7091":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"6:1505:5134":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:45576:6557":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:43316:6473":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:40324:6394":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:22602:6156":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13857:4377":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:6460:4439":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2985:2615":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:3242:4965":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:5741:20106":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:30244:6161":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:6254:4575":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:3640:3441":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:46543:6598":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:12361:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:4381:3282":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:1919:20217":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:6710:5924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:4586:5433":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:7249:6014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:40496:6413":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:6779:3276":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:9887:6439":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"5:3208:4964":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:2554:3295":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:7529:4452":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:6704:5922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"11:2168:4966":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:4937:5579":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"15:198:19204":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:43251:6115":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:44103:6531":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"14:0:2455":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:8164:3023":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:9772:3561":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:30053:7969":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:2706:2760":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:7267:2724":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"11:285:4954":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:5655:4441":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:9748:3556":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:5079:5643":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:554:7173":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:8864:8075":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:5941:3006":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"11:399:35113":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:5899:5738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:40205:3283":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:5930:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:7703:7223":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:4786:32560":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:1062:7103":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"18:766:24028":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:3453:24327":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:7248:6081":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:2163:13411":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"16:2879:4434":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:13219:4195":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:12006:3870":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:4969:4489":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:4643:8027":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:2174:6057":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:5675:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:8573:20174":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:4739:5472":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:10142:20259":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:13265:4205":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"18:690:3419":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:7235:6078":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:5804:5691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:5881:5726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:3387:3014":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"11:2186:35112":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:5828:5700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:11269:7149":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"11:657:2807":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:9826:6973":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:41235:6426":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:42430:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:32068:7153":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:4649:5438":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:5811:4519":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"5:2039:3039":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:20589:33152":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:12403:3946":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:9886:6978":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:10432:3044":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:43664:6497":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:6846:3330":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"13:226:4952":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:4728:5465":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:1292:7103":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:4354:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:1602:5191":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:21928:30816":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:8794:4960":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:7016:4685":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:7467:4745":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:8958:7247":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:8157:3027":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:7362:3266":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:500:5067":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:11556:3768":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:40727:6420":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:653:14148":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:1662:5239":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:6612:3271":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:7113:2807":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:41318:30834":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:8753:3532":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:10060:7254":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:20891:13410":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"6:4769:5487":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:13667:4329":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:2774:2592":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"11:2194:4971":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:8922:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:9157:2865":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"14:187:19197":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"11:1826:3244":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:4432:3251":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:11821:3841":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"11:1852:4964":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:7711:4757":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:43594:6493":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:6575:20110":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:10334:3556":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:1637:6086":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:2796:2594":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:5876:5725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:1507:7095":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:6725:31522":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:5025:7200":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9545:3523":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"11:1838:4963":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13865:4380":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:11864:7546":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:4240:4960":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:39188:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:8389:20168":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:13101:4163":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:5358:7203":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:4440:8001":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:10219:7205":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:8758:6725":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:3063:3437":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:12236:3918":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:2135:3241":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:2873:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:43671:6375":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:8218:6701":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:8847:7544":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:13678:4334":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:13879:4383":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:5590:6097":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:6867:6008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:7598:6050":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12522:3969":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:4757:4482":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:10638:7262":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:5963:4539":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:12299:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:6564:5864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:43422:6483":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:43494:6487":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13309:4217":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"15:180:19203":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:2694:4426":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:6361:4587":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:13292:4209":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:11459:3752":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:10823:3500":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:12496:3967":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:22569:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:535:4395":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:9822:6972":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:3937:7974":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:6263:3244":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:46173:6579":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:43872:6513":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"7:79:19099":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:39346:2620":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:11136:3683":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:1844:7185":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:5050:5634":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:6990:4684":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:11064:6738":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"5:7044:3234":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:11011:3674":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:4379:5337":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:10276:7145":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:7557:4751":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:13145:4176":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:4187:2873":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:3619:7968":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:7509:4451":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12449:3953":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:6921:3052":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:7543:4453":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:11355:3735":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:5867:13710":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3334:3261":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"5:7265:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"5:7084:6073":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"18:491:3391":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:7516:6031":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:6035:5808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:6981:2354":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:11920:791":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:6804:5983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:9424:3546":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:45558:6556":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:21677:6121":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:3885:2356":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"18:719:3426":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:3169:2623":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:4871:5537":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:45362:6548":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:39367:4742":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:42467:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4786:5498":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:4907:8032":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"18:652:3392":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:20782:13410":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:9028:6946":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:4625:5436":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"11:0:2453":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:41488:6448":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:47736:6636":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"11:817:7099":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:10836:5032":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:10967:3672":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:8057:3056":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:43168:7164":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:43778:6502":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:7462:6028":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:2788:2597":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:8667:3529":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:6327:4580":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:47479:6626":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:8047:4809":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:11905:1483":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:2618:3038":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:40408:6404":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:4849:8025":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:7796:7224":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:6307:4436":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:5944:7019":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:1080:7109":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"18:521:24029":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"9:0:2451":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:7872:3039":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:4495:5393":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:1519:5139":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:5889:5731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13082:4162":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:11813:3839":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:41521:7157":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:39270:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:2905:4435":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:926:7095":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:9153:2863":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:4861:5531":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:13411:4245":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5774:5674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:4517:5406":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:12372:3940":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:265:3223":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"14:160:7092":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:11899:1517":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:9534:6960":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:43348:6478":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:9959:3570":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:4336:2874":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:4765:670":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"18:531:3397":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:11163:3689":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:3030:4458":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:7022:6072":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:6236:7052":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:2378:4413":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:4510:4475":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:20591:33154":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:13419:4248":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:47541:6627":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"11:1538:7113":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:7588:7086":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:11247:6764":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:10897:3668":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:5797:4518":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:11921:1555":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:12433:3949":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:9048:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:3915:7972":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:41479:2807":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:40356:6399":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:22272:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:10735:3650":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:8156:4457":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:2786:4430":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:12536:3970":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"18:614:35146":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"11:1845:2025":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:554:5102":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:4480:4474":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:420:3486":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:6243:35129":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:7290:7128":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:4567:5432":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:8632:20153":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:4340:5311":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:6076:5820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:8090:4815":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:40092:13345":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:936:7882":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:9734:6971":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"19:0:1033":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:9091:6739":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"11:836:7101":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:4314:5291":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"18:644:3392":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:2764:4429":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:953:7101":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:9641:6964":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"18:96:24017":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"11:332:3212":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:6027:5806":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:1518:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:9038:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"11:968:4694":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:4108:7996":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:43476:6486":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:30284:6162":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:7654:7870":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:0:818":{"crate_id":6,"path":["libc"],"kind":"module"},"17:8443:20170":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"11:2060:7105":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:7478:4450":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:8296:6704":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:10670:3642":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:42402:6450":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"18:538:3400":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:2616:4423":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:8978:6733":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:11913:746":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:9488:6956":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:4817:5511":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:3174:3047":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:7803:4767":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:10857:25163":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:11721:3803":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"9:52:7525":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"5:1486:7111":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:22536:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"18:590:3403":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:9350:35138":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:0:2458":{"crate_id":17,"path":["object"],"kind":"module"},"1:11478:6768":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:12770:3993":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:43390:6109":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:2738:2762":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:3175:4960":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:6696:20111":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:44115:6534":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:12224:3916":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:11914:742":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:22239:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:867:2807":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:10712:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:47587:6628":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:8935:25049":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"9:325:5012":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:2247:6063":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:11090:3679":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:40125:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:5384:3006":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"6:482:5059":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:5835:5704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:40679:6415":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:11220:3701":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:10845:7206":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:45607:6558":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:6105:3323":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"7:32:19092":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:4264:7134":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:3142:2619":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:11283:13276":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:9853:6975":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:587:5120":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:40398:6403":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:8253:8041":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:8310:20166":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:11539:6108":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:7707:7153":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:20780:31784":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:2792:2595":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"11:844:7102":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:4606:13338":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:4100:7995":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:46005:6574":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:635:7175":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:11172:6757":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:9807:7957":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:826:3229":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:45696:6562":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:40315:6392":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:45859:6570":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:6376:4438":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:13651:4325":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:6544:4444":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:5032:4491":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:43178:6113":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11785:3832":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:5472:3006":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"6:5073:5640":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:2448:4416":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:40277:6386":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:1594:5186":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:10555:3622":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:10743:7014":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:11923:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:9228:35140":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:4011:7131":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:12563:3974":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:11901:1051":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:10626:3636":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:10808:7148":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:43522:6489":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:5071:4492":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:7335:35130":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:13506:4267":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:21978:6151":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:2862:4433":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:11045:6537":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"11:1501:19185":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:638:7177":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4972:5596":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:12835:4044":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:11915:1501":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:22404:6155":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"5:2694:6067":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:40172:7929":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"17:9098:6947":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:39087:2628":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:3469:3019":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:46621:6599":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:46227:6581":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13211:4192":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:12554:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:42704:6462":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:11910:747":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:11037:25168":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:3574:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:11942:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:1034:6937":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:5386:3528":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:7244:35132":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:4872:4486":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:7279:6082":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"11:1822:2807":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:3359:3006":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:11832:3844":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:4568:4477":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11879:3850":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:6089:3305":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:1477:4962":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10052:6992":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:7837:4771":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:40158:6384":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:10080:6995":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:43950:13288":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:3163:2621":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:1733:13421":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:579:5115":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:10722:3021":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:8651:3528":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:10923:3669":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:45807:6568":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"18:0:2459":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:930:7096":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:4624:4479":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:8683:3530":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:6135:5832":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:5919:5754":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:7596:20115":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:211:3221":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:4468:5379":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:8256:4827":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:40255:7156":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:7469:3677":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:8909:3026":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:12334:31876":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:40735:6422":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:1910:15138":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:6013:3319":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:4373:5335":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"18:707:3422":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:1783:7182":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:3444:2024":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:12894:4096":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:8548:20173":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"14:40:3717":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:899:4960":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"11:1858:4965":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:12358:3937":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:8151:3026":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:6486:7215":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11520:3763":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:4400:4472":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"13:0:2448":{"crate_id":13,"path":["std_detect"],"kind":"module"},"6:6719:5928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:6840:6002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:541:5096":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:40693:6417":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:9566:6950":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:7029:4688":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:6625:7213":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6007:5800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:10010:24727":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:8092:3054":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:2391:2282":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:40130:6383":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:8835:6729":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:547:5099":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:5723:7211":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:0:1391":{"crate_id":1,"path":["std"],"kind":"module"},"1:857:7110":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:12331:3935":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:4685:7988":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"5:7068:2807":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:41800:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:45474:6553":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:40007:6371":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:20608:33155":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:2932:2613":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:5851:3257":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:4332:7199":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:7864:3037":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:43646:6495":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:39292:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:7259:6448":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:43372:3027":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:39388:6238":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:43793:6508":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:13812:4371":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:5324:7201":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"14:165:19190":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:9670:6968":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:6617:5893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:11716:13275":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:4799:5503":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:44362:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:12980:4142":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:41960:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"18:727:3429":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:9683:6969":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:40708:3053":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:10732:25160":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:2337:4406":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:3977:7976":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:42722:6467":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:11897:938":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:8903:6732":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:6155:5846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:39248:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4412:5356":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"18:574:3392":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:2780:2591":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"11:2033:4694":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:3318:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"5:2974:33613":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:45659:6560":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:42926:6470":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:40021:6372":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:8252:6703":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:47747:6637":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:8479:6721":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:242:6932":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:10465:7009":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"5:6382:2807":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:6556:3328":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:13639:4322":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:12386:7151":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:46461:6597":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:41590:4960":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:44391:4974":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"6:1716:5263":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:1846:7186":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:10691:20285":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:11861:3849":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:4991:5604":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:2594:4422":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:11721:7138":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"9:352:19121":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:3726:3039":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:11341:7194":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:9530:3291":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"16:7697:4445":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:12461:3955":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:47815:6641":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:6461:3223":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:45506:6554":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:40433:3413":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:20606:33150":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:6377:7214":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:1577:4963":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:42683:6461":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:5643:4502":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:8953:3538":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:10039:6990":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:11869:7872":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:2210:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:11736:13273":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:40085:6378":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:247:6933":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:5071:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:3300:4462":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:40482:6412":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:6606:5888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:0:2457":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:7277:6017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:13499:4265":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:11532:3766":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:7528:6033":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:10649:3638":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"11:119:3210":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:10615:3635":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:1071:7105":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:947:7099":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:7600:7219":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:6170:5857":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"11:1068:7107":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:45983:6573":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:5567:3316":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:20561:33119":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:25859:6158":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:2470:13349":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:13689:4335":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:20853:8124":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"11:365:3214":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:39970:6367":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:11253:13472":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:11903:1369":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:40235:6114":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:2847:2606":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:11025:6726":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:6876:4446":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:11898:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:1015:3223":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:3943:7975":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:4445:4473":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"5:4080:7110":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:8420:20169":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"11:1831:3261":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:4715:5461":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:6767:4659":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:12419:3947":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:41640:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:9043:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:11904:1399":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:6132:4568":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:9498:3549":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:5630:7017":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:11339:3731":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:11909:644":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:46307:6582":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:10068:6994":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:6137:7212":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:10527:20284":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"11:1048:35119":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:30848:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:43626:3023":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:10429:3048":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:2298:19222":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"11:760:3261":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:2963:2624":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:9478:6955":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:42458:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:6535:3208":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:4809:5507":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:8230:7999":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:8347:1788":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:10290:7146":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:12085:3881":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:10775:7147":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:21571:7957":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:21990:7970":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:506:5070":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:5766:5672":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:30300:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:12293:3930":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:1924:7927":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:1916:6094":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:2741:2723":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:1672:5245":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:5677:20105":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"11:798:7096":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:21002:8115":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:4812:797":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:1821:7184":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:494:5065":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:6506:4604":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"9:388:19107":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:5966:5780":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:4540:4476":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:585:7865":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4853:5526":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:6819:4661":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:6597:5887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:6240:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:6795:5980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:154:3206":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:8109:4818":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:42183:2866":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:9013:6736":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:8072:4812":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:45953:6572":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:4847:5523":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:8360:20167":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:12576:3975":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:40051:6366":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:11504:6491":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:13033:4148":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:7411:4543":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:2967:19249":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"11:695:7095":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"5:7005:3078":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:10545:3620":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:4677:5440":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:6761:8109":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:7437:4744":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:42442:4786":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:12799:4013":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:6943:20112":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:4046:13243":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:8880:8077":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:4505:5400":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:8225:6702":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:6981:7057":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:12634:3984":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:11902:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:9596:3294":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:11585:3779":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:1261:4694":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:7743:4443":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:1689:5252":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:8360:7138":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"11:630:4960":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:10840:3665":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:6849:6005":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:2827:2602":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:6021:5803":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:8256:20152":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:2805:2601":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"11:311:4957":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:6678:13388":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:13356:4227":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:41547:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:7669:7871":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:46075:6577":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"9:174:7535":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:39173:2616":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:119:13790":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:2933:6943":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:6624:5897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"11:2174:4967":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:10262:6487":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:39374:7154":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:43260:7167":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:4932:4488":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"0:0:1777":{"crate_id":0,"path":["ansi_term"],"kind":"module"},"1:7605:6651":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:10316:3610":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:40286:6388":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:44298:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:11428:6480":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:4180:7197":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:12959:4137":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"5:1468:4961":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:1701:5256":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:361:7172":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:22338:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:13443:4253":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:1048:4694":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:3139:24512":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:4568:7975":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:8718:3531":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:10472:3339":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:41920:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:2784:2580":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:6014:5802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:474:5054":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:40059:6375":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:7480:7269":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:10958:3342":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:9312:6951":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:3296:3032":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:844:4960":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:20994:7957":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:4488:5390":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:3815:4467":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:7680:6653":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:11060:3640":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:2929:2612":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:12158:3891":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:10324:7238":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:10875:6727":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:4129:7998":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:13024:4147":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:43689:6374":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:10134:7143":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:4410:2768":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:6520:4606":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:8397:6462":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:41454:2806":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:42162:2864":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:45714:6563":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:11109:3682":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:9151:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:11013:6725":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:13316:4218":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:9130:26220":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:2212:7190":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4916:5564":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"18:660:6927":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:3935:3006":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:5954:5775":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:42176:2865":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:14:1798":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:2753:2579":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:1589:5184":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:11484:3754":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"11:2049:7103":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:4578:5908":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:532:5090":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:4303:5283":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:6754:3273":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:7103:6733":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:1556:5162":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:7169:13385":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"11:1818:4960":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:1978:6942":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:43576:6492":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:7545:6038":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:21783:6123":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:1535:5147":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:7551:6039":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:44004:6526":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:47417:6625":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:21126:8119":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:1378:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:1583:2025":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:11471:3753":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:5272:13261":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:2970:33612":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:643:7868":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:2830:4432":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8274:5897":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13194:4187":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:7767:20116":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:10236:24726":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"11:644:7110":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:44179:13512":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:10941:2028":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:8823:3534":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:7024:30375":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:12138:3888":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:41341:6442":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:2524:4419":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:9053:6737":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:1695:5255":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:9396:3337":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:7054:33794":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:9989:7110":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:2742:4428":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:4400:5347":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:6710:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:9512:6958":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:9340:6952":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:11465:6485":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:5693:4504":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:5574:3317":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:11391:3742":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:12259:3927":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:11235:7218":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:13240:4200":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:4327:5301":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:2749:2766":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:9188:35136":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:43540:6490":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:7599:13384":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:4078:30374":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:11178:7266":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:2227:34746":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:917:7111":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:7165:13386":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:21891:30807":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:3266:6945":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"11:723:4961":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"11:1103:7108":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:41403:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:10662:6745":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:13324:4219":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:44404:6547":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:12622:3640":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:4928:5573":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:10705:3646":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:11800:3837":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:6728:4646":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:911:3261":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:7539:6037":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:43655:6496":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:43899:6514":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:4037:4470":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:8746:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:13257:4203":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"14:221:4905":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:4747:5476":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:8802:7240":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:13821:4373":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"13:110:35120":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:11410:3743":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:6351:20109":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:4741:3314":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:9523:6959":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"14:202:13289":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:22470:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:9155:2864":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:42675:6460":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:4663:5439":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:43961:6516":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:7557:6040":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:530:3308":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9617:6962":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"11:749:3244":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:488:5062":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:11471:26313":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:2839:2604":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:1895:7187":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:6129:5831":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:45428:6551":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:41252:6428":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:46204:6580":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:10635:3637":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:7205:6075":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"18:582:2776":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:6293:4578":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:45382:6549":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:9161:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:5978:5787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:12915:4106":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:21095:7957":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:4394:5344":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:4437:2876":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:7687:7916":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:6743:5940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:20996:8113":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:3684:7195":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:9194:7185":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"9:234:6462":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:12194:3897":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:9965:4960":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:10832:7223":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:32032:4970":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:4482:5387":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:40365:6400":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:11069:20180":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:11488:6488":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:3253:3045":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:7581:6650":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:12923:4107":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"11:736:4962":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:2843:2605":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:43342:6477":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:5506:8057":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:7859:20117":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:7856:7226":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:21815:6128":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:41471:7110":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:6542:8072":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:9596:3553":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:4549:5421":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"11:97:4953":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"18:113:24018":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:5532:6096":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11969:3866":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:4684:5442":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:30314:30849":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:43280:7168":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:10660:3640":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:9414:6105":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:8101:3021":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"18:699:3420":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:6218:7044":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:49683:8129":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:45907:6571":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:1568:3244":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:1494:5129":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:526:5087":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:9072:6738":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:9991:7184":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:8786:6727":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:2836:3313":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:21839:6132":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:8506:6724":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"11:986:7103":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:5847:4526":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:2758:2593":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11641:3796":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:40333:6395":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:5697:7210":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:4765:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:7848:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:13744:4351":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:4605:5434":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:44123:6536":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13461:4257":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"12:0:2454":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:7669:4454":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:2963:2289":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"6:4462:5377":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:4793:5500":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:5560:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:43824:6512":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:21799:6124":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:10657:6743":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:30372:30841":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"18:755:3434":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4542:5419":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:12178:3892":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:875:4961":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"18:481:3390":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:10057:6108":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:355:7171":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:9110:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:8521:20172":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:10885:3667":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:3587:4960":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:13399:4242":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:40376:6401":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:43807:6511":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:6904:4669":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:3182:33441":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:21455:33123":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"4:0:2449":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:3142:6944":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"14:215:4903":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:7294:6027":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:45761:6564":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:1561:4960":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:45837:6569":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:41840:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:2851:2607":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:2822:2600":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:44091:6528":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:12059:3878":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:8025:4808":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"11:2180:4968":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13041:4149":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:10681:3643":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:5014:5612":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:7160:6074":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:22371:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:6022:20108":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:2469:7957":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:11573:3776":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:10680:6751":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:11676:8052":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:7952:3040":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:46431:6596":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"16:6336:4581":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:10952:3341":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:3212:3048":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:10692:6657":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"6:1544:5153":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:8329:8036":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:6164:4573":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:3133:26515":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:13698:4337":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:9374:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:4687:7989":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:7522:6032":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:47785:6639":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:23049:6157":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:44119:6535":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:11922:1128":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:2964:33614":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:573:5112":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11372:3737":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:6474:4456":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:11770:3828":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:5991:6098":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:5848:5713":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:6916:3331":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:9628:3300":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"5:1142:35051":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:6793:4660":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:11282:3717":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:3872:4468":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:21912:30851":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:4418:8000":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"11:403:35114":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:1931:655":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:2404:4414":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:5367:19220":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"16:3446:4463":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:4728:4481":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:8848:8076":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:4832:5515":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:1526:5142":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:46697:6601":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:8992:24382":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:21730:6122":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:2871:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"5:1415:4960":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10491:7011":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:13169:4178":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:10516:3615":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:4764:7985":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:4512:8018":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:12510:3968":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:20881:8118":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:41354:6701":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:2357:4412":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"5:5518:3259":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:9108:7251":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"6:4534:5414":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:12113:3886":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:4523:5409":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:11946:3861":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:2800:2596":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:3786:7196":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:22437:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:47800:6640":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:39353:6236":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:9038:35135":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:5736:5647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:40142:30823":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11502:3762":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:13433:4250":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:6687:5917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:10667:6656":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:6413:3327":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:40066:13344":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:40457:6409":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:4455:5374":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:3991:7978":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:7942:7227":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:487:6935":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:13385:4235":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:6130:8203":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:8810:2807":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:10761:20176":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13777:4358":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:46051:6576":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:1708:5259":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:5251:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:13066:4159":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:11220:6762":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:11319:3730":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:7626:7087":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:3136:24514":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:12506:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:10440:7007":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:11600:3785":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:8170:4820":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:5920:4535":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:1106:35050":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:9876:3479":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:3681:7194":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13135:4175":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:11082:6756":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:9986:3572":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:11193:3693":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:7818:6658":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:41680:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"11:793:7111":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:21100:8112":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:21957:6147":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:1785:7183":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:21874:6135":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:11434:3747":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:10367:3338":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:10270:6998":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:9366:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:12046:3876":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:5986:5788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:4722:5462":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:42000:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:13233:4198":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:41530:13465":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:42412:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"5:7172:7881":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:11446:3750":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:4:1016":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:3462:3017":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:4200:3006":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:7518:3333":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:4841:5521":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:1780:3261":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:41598:7110":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:10505:7012":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:10402:7001":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:7595:7887":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:46667:6600":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:12483:3966":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:4399:3006":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:12345:3936":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:12282:3928":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:44288:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:40078:6377":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:2931:19248":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:13015:4143":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:1544:3006":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:46881:6603":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:40295:6389":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:43188:7165":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:8970:7249":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:1527:7117":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:5993:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"18:636:3415":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:3214:3049":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}