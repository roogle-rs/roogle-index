{"root":"0:0:1677","crate_version":"0.12.1","includes_private":false,"index":{"0:298:1832":{"id":"0:298:1832","crate_id":0,"name":"Purple","span":{"filename":"src/style.rs","begin":[277,4],"end":[277,10]},"visibility":"default","docs":"Colour #5 (foreground code `35`, background code `45`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:162":{"id":"0:162","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[160,0],"end":[172,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:163:1919"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3112-0:269:1692":{"id":"b:2:3112-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:83":{"id":"0:83","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[463,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:84:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5693:3006":{"id":"1:5693:3006","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5694:52946"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3118-0:244:1687":{"id":"b:2:3118-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3121:123","2:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2784:2171":{"id":"2:2784:2171","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3092:212":{"id":"2:3092:212","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3094:123","2:3095:1384"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[131,16],"end":[131,20]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3189:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3111:2198":{"id":"2:3111:2198","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3085:131"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2877:170":{"id":"2:2877:170","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2879:976","2:2880:804","2:2881:770","2:2882:693","2:2883:676"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13231:59194":{"id":"2:13231:59194","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49414:3811","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[234,0],"end":[242,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"items":["0:189:1923"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3428:127":{"id":"2:3428:127","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3430:361"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3431:128","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:314:585":{"id":"0:314:585","crate_id":0,"name":"eq","span":{"filename":"src/style.rs","begin":[254,9],"end":[254,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:64:1986":{"id":"0:64:1986","crate_id":0,"name":"reverse","span":{"filename":"src/style.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns a `Style` with the reverse property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().reverse();\nprintln!(\"{}\", style.paint(\"aloha\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3118-0:287:1691":{"id":"b:2:3118-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3121:123","2:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:7808:3588":{"id":"2:7808:3588","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7809:57981","2:7810:57982","2:7811:57979","2:7812:57977","2:7813:57983","2:7814:57980","2:7815:57978"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:371:885":{"id":"0:371:885","crate_id":0,"name":"ne","span":{"filename":"src/display.rs","begin":[132,16],"end":[132,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31:1886":{"id":"0:31:1886","crate_id":0,"name":"infix","span":{"filename":"src/ansi.rs","begin":[191,4],"end":[193,5]},"visibility":"public","docs":"The infix bytes between this style and `next` style. These are the bytes\nthat tell the terminal to change the style to `next`. These may include\na reset followed by the next colour and style, depending on the two styles.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour::Green};\n\nlet style = Style::default().bold();\nassert_eq!(\"\\x1b[32m\",\n           style.infix(Green.bold()).to_string());\n\nlet style = Green.normal();\nassert_eq!(\"\\x1b[1m\",\n           style.infix(Green.bold()).to_string());\n\nlet style = Style::default();\nassert_eq!(\"\",\n           style.infix(style).to_string());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135:2193":{"id":"0:135:2193","crate_id":0,"name":"ANSIString","span":{"filename":"src/display.rs","begin":[89,0],"end":[89,53]},"visibility":"public","docs":"An ANSI String is a string coupled with the `Style` to display it\nin a terminal.\n\nAlthough not technically a string itself, it can be turned into\none with the `to_string` method.\n\n# Examples\n\n```\nuse ansi_term::ANSIString;\nuse ansi_term::Colour::Red;\n\nlet red_string = Red.paint(\"a red string\");\nprintln!(\"{}\", red_string);\n```\n\n```\nuse ansi_term::ANSIString;\n\nlet plain_string = ANSIString::from(\"a plain string\");\nassert_eq!(&*plain_string, \"a plain string\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}},"2:3257:2480":{"id":"2:3257:2480","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3259:167","2:3260:870"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:242:640":{"id":"0:242:640","crate_id":0,"name":"fmt","span":{"filename":"src/debug.rs","begin":[15,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:158:2213":{"id":"0:158:2213","crate_id":0,"name":"ANSIByteStrings","span":{"filename":"src/display.rs","begin":[149,0],"end":[149,60]},"visibility":"public","docs":"A set of `ANSIByteString`s collected together, in order to be\nwritten with a minimum of control characters.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}},"2:3274:2481":{"id":"2:3274:2481","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3275:167","2:3276:891"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8767:3587":{"id":"2:8767:3587","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7808:3588","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9140:3211-0:252:1688":{"id":"a:2:9140:3211-0:252:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6089:54673":{"id":"5:6089:54673","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15747:2371"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:30:1877":{"id":"0:30:1877","crate_id":0,"name":"prefix","span":{"filename":"src/ansi.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"The prefix bytes for this style. These are the bytes that tell the\nterminal to use a different colour or font style.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour::Blue};\n\nlet style = Style::default().bold();\nassert_eq!(\"\\x1b[1m\",\n           style.prefix().to_string());\n\nlet style = Blue.bold();\nassert_eq!(\"\\x1b[1;34m\",\n           style.prefix().to_string());\n\nlet style = Style::default();\nassert_eq!(\"\",\n           style.prefix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,20],"end":[254,25]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:317:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3290:2484":{"id":"2:3290:2484","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3292:540"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,9],"end":[254,18]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3187:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3278:2470":{"id":"2:3278:2470","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3280:251"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[175,0],"end":[194,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:168:1919"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[106,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:147:2200","0:148:2202"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2776:94":{"id":"2:2776:94","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2778:2171"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[121,9],"end":[121,14]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:248:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8763:3493":{"id":"2:8763:3493","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8482:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:74:1933":{"id":"0:74:1933","crate_id":0,"name":"bold","span":{"filename":"src/style.rs","begin":[338,4],"end":[340,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nbold property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Green.bold();\nprintln!(\"{}\", style.paint(\"hey\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:776-0:269:1692":{"id":"b:5:776-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2179","5:779:2750","5:780:2751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:163:1919":{"id":"0:163:1919","crate_id":0,"name":"paint","span":{"filename":"src/display.rs","begin":[164,4],"end":[171,5]},"visibility":"public","docs":"Paints the given text with this colour, returning an ANSI string.","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:781:105","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3123-0:287:1691":{"id":"b:2:3123-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3126:123","2:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:1075:3049":{"id":"1:1075:3049","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:2179","1:1077:3992","1:1078:54672","1:1079:54673","1:1080:54674","1:1081:54675","1:1082:54676"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:29":{"id":"0:29","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[144,0],"end":[218,1]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:30:1877","0:31:1886","0:32:1892"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3123-0:252:1688":{"id":"b:2:3123-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3126:123","2:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13219:55630":{"id":"2:13219:55630","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9139:3212-0:261:1689":{"id":"a:2:9139:3212-0:261:1689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:776-0:287:1691":{"id":"b:5:776-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2179","5:779:2750","5:780:2751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13320:3992":{"id":"2:13320:3992","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13206:59191":{"id":"2:13206:59191","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15747:2371"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13229:31821":{"id":"2:13229:31821","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15747:2371"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49433:3813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3118-0:261:1689":{"id":"b:2:3118-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3121:123","2:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:261:1689":{"id":"0:261:1689","crate_id":0,"name":"Suffix","span":{"filename":"src/ansi.rs","begin":[141,0],"end":[141,25]},"visibility":"public","docs":"Like `ANSIString`, but only displays the style suffix.\n\nThis type implements the `Display` trait, meaning it can be written to a\n`std::fmt` formatting without doing any extra allocation, and written to a\nstring with the `.to_string()` method. For examples, see\n[`Style::suffix`](struct.Style.html#method.suffix).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9140:3211-0:261:1689","a:2:3179:196-0:261:1689","a:2:3220:2607-0:261:1689","a:2:9139:3212-0:261:1689","a:2:3191:205-0:261:1689","b:2:3118-0:261:1689","b:2:3108-0:261:1689","b:2:3908-0:261:1689","b:2:3123-0:261:1689","b:2:2782-0:261:1689","b:2:2785-0:261:1689","b:2:3112-0:261:1689","b:5:6395-0:261:1689","b:5:776-0:261:1689","0:264","0:266","0:267","0:44"]}},"0:367":{"id":"0:367","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[132,16],"end":[132,25]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:370:585","0:371:885"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:76:1982":{"id":"0:76:1982","crate_id":0,"name":"italic","span":{"filename":"src/style.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nitalic property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Blue.italic();\nprintln!(\"{}\", style.paint(\"greetings\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[15,9],"end":[15,18]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3187:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13223:55650":{"id":"2:13223:55650","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15747:2371"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13312:59210":{"id":"2:13312:59210","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23493:3599":{"id":"2:23493:3599","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23494:3605"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23489:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3189:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13203:59189":{"id":"2:13203:59189","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,33],"end":[254,38]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:320:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[121,16],"end":[121,20]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3189:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13250:53053":{"id":"2:13250:53053","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8328:116","prim@char":"1:15741:2366","self::pattern":"2:12837:3410","str::split_whitespace":"1:15747:2371","str::rsplit":"1:15747:2371"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49150:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:269:1692":{"id":"0:269:1692","crate_id":0,"name":"Style","span":{"filename":"src/style.rs","begin":[14,0],"end":[45,1]},"visibility":"public","docs":"A style is a collection of properties that can format a string\nusing ANSI escape codes.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour};\n\nlet style = Style::new().bold().on(Colour::Black);\nprintln!(\"{}\", style.paint(\"Bold on black\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:270:1815","0:271:1812","0:272:1803","0:273:1804","0:274:1805","0:275:1806","0:276:1807","0:277:1808","0:278:1809","0:279:1810"],"impls":["0:29","0:57","0:162","a:2:9140:3211-0:269:1692","a:2:3179:196-0:269:1692","a:2:3220:2607-0:269:1692","a:2:9139:3212-0:269:1692","a:2:3191:205-0:269:1692","b:2:3118-0:269:1692","b:2:3108-0:269:1692","b:2:3908-0:269:1692","b:2:3123-0:269:1692","b:2:2782-0:269:1692","b:2:2785-0:269:1692","b:2:3112-0:269:1692","b:5:776-0:269:1692","0:280","0:281","0:284","0:286","0:70","0:83","0:241"]}},"0:276:1807":{"id":"0:276:1807","crate_id":0,"name":"is_blink","span":{"filename":"src/style.rs","begin":[35,4],"end":[35,22]},"visibility":"public","docs":"Whether this style is blinking.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/debug.rs","begin":[14,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:234:502","path":"::debug"}},"docs":"Styles have a special `Debug` implementation that only shows the fields that\nare set. Fields that haven’t been touched aren’t included in the output.\n\nThis behaviour gets bypassed when using the alternate formatting mode\n`format!(\"{:#?}\")`.\n\n    use ansi_term::Colour::{Red, Blue};\n    assert_eq!(\"Style { fg(Red), on(Blue), bold, italic }\",\n               format!(\"{:?}\", Red.on(Blue).bold().italic()));","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:242:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10130:2758":{"id":"2:10130:2758","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10131:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3179:196-0:338:2176":{"id":"a:2:3179:196-0:338:2176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3179:196-0:261:1689":{"id":"a:2:3179:196-0:261:1689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3411:2499":{"id":"2:3411:2499","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3412:526"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3398:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3268:2482":{"id":"2:3268:2482","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3270:167","2:3271:1081"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3127:1384":{"id":"2:3127:1384","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47319:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13202:2693":{"id":"2:13202:2693","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3126:123":{"id":"2:3126:123","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38505:2991","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generics":{"params":[],"where_predicates":[]}}},"b:2:3123-0:355:2205":{"id":"b:2:3123-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3126:123","2:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8482:153":{"id":"2:8482:153","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8483:2697","2:8484:900","2:8485:2699","2:8488:2700","2:8489:478","2:8491:2229","2:8494:2701","2:8495:2702","2:8496:2703","2:8497:2268","2:8499:2704","2:8501:2705","2:8502:2706","2:8504:819","2:8507:2707","2:8514:2708","2:8516:2709","2:8519:2710","2:8520:2711","2:8521:2712","2:8523:2713","2:8525:2714","2:8528:1279","2:8529:2715","2:8530:2716","2:8534:2717","2:8537:2718","2:8538:2719","2:8539:2720","2:8541:2721","2:8542:2269","2:8544:2722","2:8547:2723","2:8549:2724","2:8559:2725","2:8574:2726","2:8576:2727","2:8580:2728","2:8589:2729","2:8592:2730","2:8594:2731","2:8597:261","2:8604:278","2:8611:2732","2:8618:2733","2:8627:2734","2:8637:993","2:8644:2735","2:8651:2678","2:8652:2675","2:8653:2680","2:8665:2679","2:8672:2677","2:8684:2676","2:8691:2736","2:8692:2737","2:8697:2738","2:8700:2739","2:8703:2740","2:8704:2741","2:8706:2742","2:8708:398","2:8711:2743","2:8714:976","2:8717:2744","2:8720:585","2:8723:2745","2:8726:885","2:8728:804","2:8730:770","2:8732:693","2:8734:676","2:8736:2746","2:8737:2747","2:8745:2748"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:147:2200":{"id":"0:147:2200","crate_id":0,"name":"style_ref","span":{"filename":"src/display.rs","begin":[110,4],"end":[112,5]},"visibility":"public","docs":"Directly access the style","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10128:2757":{"id":"2:10128:2757","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10129:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2782-0:338:2176":{"id":"b:2:2782-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:2784:2171"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7686:3189":{"id":"1:7686:3189","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7687:57421"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:36:1892":{"id":"0:36:1892","crate_id":0,"name":"suffix","span":{"filename":"src/ansi.rs","begin":[271,4],"end":[273,5]},"visibility":"public","docs":"The suffix for this colour as a `Style`. These are the bytes that\ntell the terminal to reset back to its normal colour and font style.\n\nSee also [`Style::suffix`](struct.Style.html#method.suffix).\n\n# Examples\n\n```\nuse ansi_term::Colour::Purple;\n\nassert_eq!(\"\\x1b[0m\",\n           Purple.suffix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:79:1986":{"id":"0:79:1986","crate_id":0,"name":"reverse","span":{"filename":"src/style.rs","begin":[413,4],"end":[415,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nreverse property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Black.reverse();\nprintln!(\"{}\", style.paint(\"aloha\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13221:3091":{"id":"2:13221:3091","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:15747:2371","crate::ops::Index":"2:3483:2501","`str`":"1:15747:2371"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:6698:2969":{"id":"1:6698:2969","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6699:7775"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6066:59848":{"id":"5:6066:59848","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:2610","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8079:4001","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:2610","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8079:4001","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2785-0:269:1692":{"id":"b:2:2785-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2779:2471","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2787:52938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2785-0:355:2205":{"id":"b:2:2785-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2779:2471","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:2787:52938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[140,22],"end":[140,27]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:268:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3112-0:261:1689":{"id":"b:2:3112-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13322:54675":{"id":"2:13322:54675","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3191:205-0:269:1692":{"id":"a:2:3191:205-0:269:1692","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9139:3212-0:269:1692":{"id":"a:2:9139:3212-0:269:1692","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:61:1982":{"id":"0:61:1982","crate_id":0,"name":"italic","span":{"filename":"src/style.rs","begin":[101,4],"end":[103,5]},"visibility":"public","docs":"Returns a `Style` with the italic property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().italic();\nprintln!(\"{}\", style.paint(\"greetings\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13283:59200":{"id":"2:13283:59200","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12837:3410","`DoubleEndedIterator`":"2:8328:116","prim@char":"1:15741:2366","str::rmatch_indices":"1:15747:2371"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49300:3806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5817:3995":{"id":"5:5817:3995","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5819:167","5:5820:415"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3191:205-0:244:1687":{"id":"a:2:3191:205-0:244:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:294:1828":{"id":"0:294:1828","crate_id":0,"name":"Yellow","span":{"filename":"src/style.rs","begin":[271,4],"end":[271,10]},"visibility":"default","docs":"Colour #3 (foreground code `33`, background code `43`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"5:6088:54672":{"id":"5:6088:54672","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15747:2371"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:776-0:252:1688":{"id":"b:5:776-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2179","5:779:2750","5:780:2751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[285,0],"end":[303,1]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:40:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[120,0],"end":[127,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3398:112","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:152:206","0:153:524"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9139:3212-0:244:1687":{"id":"a:2:9139:3212-0:244:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6070:59849":{"id":"5:6070:59849","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3623:2505":{"id":"2:3623:2505","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3554:2504","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13286:59201":{"id":"2:13286:59201","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12837:3410","str::match_indices":"1:15747:2371","prim@char":"1:15741:2366","`DoubleEndedIterator`":"2:8328:116"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49318:3807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6086:59852":{"id":"5:6086:59852","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:421:2610","`String`":"5:8341:201"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:421:2610","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8079:4001","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3123-0:338:2176":{"id":"b:2:3123-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3126:123","2:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12867:3409":{"id":"2:12867:3409","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:350:885":{"id":"0:350:885","crate_id":0,"name":"ne","span":{"filename":"src/display.rs","begin":[15,9],"end":[15,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3908-0:261:1689":{"id":"b:2:3908-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6771:2976":{"id":"1:6771:2976","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6772:57279"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5635:3002":{"id":"1:5635:3002","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5636:5219","1:5637:55015","1:5638:55016"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10140:2762":{"id":"2:10140:2762","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10141:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13289:59202":{"id":"2:13289:59202","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13259:59195":{"id":"2:13259:59195","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410","str::split":"1:15747:2371","`DoubleEndedIterator`":"2:8328:116","str::rsplit_terminator":"1:15747:2371"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49200:3802","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[277,0],"end":[282,1]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:38:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6065":{"id":"5:6065","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5885:1311","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6066:59848","5:6067:2925","5:6070:59849","5:6073:59850","5:6085:59851","5:6086:59852","5:6087:2945","5:6088:54672","5:6089:54673"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:248:392":{"id":"0:248:392","crate_id":0,"name":"clone","span":{"filename":"src/ansi.rs","begin":[121,9],"end":[121,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2867:163":{"id":"2:2867:163","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:398","2:2869:2678","2:2870:2675","2:2871:2685"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2836:120","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2877:170","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3294:2486":{"id":"2:3294:2486","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3296:1082"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:34:1877":{"id":"0:34:1877","crate_id":0,"name":"prefix","span":{"filename":"src/ansi.rs","begin":[236,4],"end":[238,5]},"visibility":"public","docs":"The prefix bytes for this colour as a `Style`. These are the bytes\nthat tell the terminal to use a different colour or font style.\n\nSee also [`Style::prefix`](struct.Style.html#method.prefix).\n\n# Examples\n\n```\nuse ansi_term::Colour::Green;\n\nassert_eq!(\"\\x1b[0m\",\n           Green.suffix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[132,16],"end":[132,25]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3187:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13225:3833":{"id":"2:13225:3833","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15741:2366"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49120:3797","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3191:205":{"id":"2:3191:205","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3345:2497":{"id":"2:3345:2497","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3347:1205"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,27],"end":[12,31]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3189:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13209:1922":{"id":"2:13209:1922","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12308:3948"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268:640":{"id":"0:268:640","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[140,22],"end":[140,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:62:1937":{"id":"0:62:1937","crate_id":0,"name":"underline","span":{"filename":"src/style.rs","begin":[115,4],"end":[117,5]},"visibility":"public","docs":"Returns a `Style` with the underline property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().underline();\nprintln!(\"{}\", style.paint(\"salutations\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:80:697":{"id":"0:80:697","crate_id":0,"name":"hidden","span":{"filename":"src/style.rs","begin":[428,4],"end":[430,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nhidden property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::White.hidden();\nprintln!(\"{}\", style.paint(\"ahoy\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8247:3584":{"id":"2:8247:3584","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8249:2742"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3908-0:269:1692":{"id":"b:2:3908-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:310:1508":{"id":"0:310:1508","crate_id":0,"name":"1","span":{"filename":"src/style.rs","begin":[307,12],"end":[307,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:13222:59193":{"id":"2:13222:59193","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:15747:2371","`str`":"1:15747:2371","crate::ops::IndexMut":"2:3487:2502"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13268:55664":{"id":"2:13268:55664","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:15741:2366","str::splitn":"1:15747:2371","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49272:3776","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3286:2485":{"id":"2:3286:2485","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3288:871"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13211:288":{"id":"2:13211:288","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15747:2371","`u8`":"1:15758:2380"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6593:3004":{"id":"1:6593:3004","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6594:55312","1:6595:7060","1:6596:7061","1:6597:7063","1:6598:7062","1:6599:7064","1:6600:7065","1:6601:7067","1:6602:5261","1:6603:7070","1:6604:7071","1:6605:7072","1:6606:7073","1:6607:7074","1:6608:7075","1:6609:7068","1:6610:7069"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3108-0:261:1689":{"id":"b:2:3108-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3111:2198"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13239:55668":{"id":"2:13239:55668","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2782-0:355:2205":{"id":"b:2:2782-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:2784:2171"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3327:2493":{"id":"2:3327:2493","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3329:167","2:3330:1207"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3118-0:355:2205":{"id":"b:2:3118-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3121:123","2:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13295:59205":{"id":"2:13295:59205","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:244:1687":{"id":"0:244:1687","crate_id":0,"name":"Prefix","span":{"filename":"src/ansi.rs","begin":[122,0],"end":[122,25]},"visibility":"public","docs":"Like `ANSIString`, but only displays the style prefix.\n\nThis type implements the `Display` trait, meaning it can be written to a\n`std::fmt` formatting without doing any extra allocation, and written to a\nstring with the `.to_string()` method. For examples, see\n[`Style::prefix`](struct.Style.html#method.prefix).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9140:3211-0:244:1687","a:2:3179:196-0:244:1687","a:2:3220:2607-0:244:1687","a:2:9139:3212-0:244:1687","a:2:3191:205-0:244:1687","b:2:3118-0:244:1687","b:2:3108-0:244:1687","b:2:3908-0:244:1687","b:2:3123-0:244:1687","b:2:2782-0:244:1687","b:2:2785-0:244:1687","b:2:3112-0:244:1687","b:5:6395-0:244:1687","b:5:776-0:244:1687","0:247","0:249","0:250","0:37"]}},"2:13215:55628":{"id":"2:13215:55628","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47192:162"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58:898":{"id":"0:58:898","crate_id":0,"name":"new","span":{"filename":"src/style.rs","begin":[59,4],"end":[61,5]},"visibility":"public","docs":"Creates a new Style with no properties set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new();\nprintln!(\"{}\", style.paint(\"hi\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5643:3003":{"id":"1:5643:3003","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5644:5219","1:5645:7499"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13227:3098":{"id":"2:13227:3098","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49136:2921","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13280:59199":{"id":"2:13280:59199","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8328:116","str::matches":"1:15747:2371","prim@char":"1:15741:2366","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49372:3810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3635:209":{"id":"2:3635:209","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3636:167","2:3637:2507","2:3638:666","2:3639:353"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3640:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3635:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:154:2208":{"id":"0:154:2208","crate_id":0,"name":"ANSIStrings","span":{"filename":"src/display.rs","begin":[139,0],"end":[139,55]},"visibility":"public","docs":"A set of `ANSIString`s collected together, in order to be written with a\nminimum of control characters.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}},"0:290:1825":{"id":"0:290:1825","crate_id":0,"name":"Red","span":{"filename":"src/style.rs","begin":[265,4],"end":[265,7]},"visibility":"default","docs":"Colour #1 (foreground code `31`, background code `41`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:3908-0:287:1691":{"id":"b:2:3908-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:38:640":{"id":"0:38:640","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[278,4],"end":[281,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177:1923":{"id":"0:177:1923","crate_id":0,"name":"write_to","span":{"filename":"src/display.rs","begin":[209,4],"end":[212,5]},"visibility":"public","docs":"Write an `ANSIByteString` to an `io::Write`.  This writes the escape\nsequences for the associated `Style` around the bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:3953:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"io::Write","id":"1:4596:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:282:585":{"id":"0:282:585","crate_id":0,"name":"eq","span":{"filename":"src/style.rs","begin":[12,9],"end":[12,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4539:2911":{"id":"1:4539:2911","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4540:3272","1:4541:55369","1:4543:55370","1:4544:55371","1:4545:2912","1:4546:55372","1:4547:54731","1:4549:55373","1:4550:2721","1:4551:3098","1:4552:2268","1:4554:2715"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:232:2284":{"id":"0:232:2284","crate_id":0,"name":"unstyled_len","span":{"filename":"src/util.rs","begin":[49,0],"end":[55,1]},"visibility":"public","docs":"Return the unstyled length of ANSIStrings. This is equaivalent to `unstyle(strs).len()`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["strs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ANSIStrings","id":"0:154:2208","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:354:640":{"id":"0:354:640","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[15,20],"end":[15,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:275:1806":{"id":"0:275:1806","crate_id":0,"name":"is_underline","span":{"filename":"src/style.rs","begin":[32,4],"end":[32,26]},"visibility":"public","docs":"Whether this style is underlined.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"1:5561:2246":{"id":"1:5561:2246","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5562:4795","1:5563:1922"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9140:3211":{"id":"2:9140:3211","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13323:54676":{"id":"2:13323:54676","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3179:196-0:252:1688":{"id":"a:2:3179:196-0:252:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,20],"end":[12,25]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:285:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13321:54674":{"id":"2:13321:54674","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:153:524":{"id":"0:153:524","crate_id":0,"name":"deref","span":{"filename":"src/display.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"S"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13265:55662":{"id":"2:13265:55662","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410","str::rsplitn":"1:15747:2371"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49254:3775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10138:2761":{"id":"2:10138:2761","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10139:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13200":{"id":"2:13200","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12297:1311","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13201:771","2:13202:2693","2:13203:59189","2:13204:59190","2:13206:59191","2:13209:1922","2:13210:59192","2:13211:288","2:13212:55631","2:13213:55627","2:13215:55628","2:13217:55629","2:13219:55630","2:13221:3091","2:13222:59193","2:13223:55650","2:13224:55651","2:13225:3833","2:13226:3439","2:13227:3098","2:13228:31831","2:13229:31821","2:13230:4342","2:13231:59194","2:13232:31816","2:13233:55666","2:13236:55667","2:13239:55668","2:13242:2732","2:13246:2692","2:13250:53053","2:13253:31688","2:13256:55660","2:13259:59195","2:13262:59196","2:13265:55662","2:13268:55664","2:13271:59197","2:13274:59198","2:13277:2447","2:13280:59199","2:13283:59200","2:13286:59201","2:13289:59202","2:13291:59203","2:13293:59204","2:13295:59205","2:13296:59206","2:13297:59207","2:13300:59208","2:13303:14494","2:13306:55669","2:13309:59209","2:13312:59210","2:13315:59211","2:13318:3666","2:13320:3992","2:13321:54674","2:13322:54675","2:13323:54676","2:13324:59212","2:13326:3051","2:13327:59213"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:288:1823":{"id":"0:288:1823","crate_id":0,"name":"Black","span":{"filename":"src/style.rs","begin":[262,4],"end":[262,9]},"visibility":"default","docs":"Colour #0 (foreground code `30`, background code `40`).\n\nThis is not necessarily the background colour, and using it as one may\nrender the text hard to read on terminals with dark backgrounds.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:40:640":{"id":"0:40:640","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[286,4],"end":[302,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3179:196-0:355:2205":{"id":"a:2:3179:196-0:355:2205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13306:55669":{"id":"2:13306:55669","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2565:123":{"id":"1:2565:123","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2566:52959","1:2568:2351","1:2569:57196","1:2570:57197"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3220:2607-0:338:2176":{"id":"a:2:3220:2607-0:338:2176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2785-0:252:1688":{"id":"b:2:2785-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2779:2471","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2787:52938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13232:31816":{"id":"2:13232:31816","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49442:3814","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[132,9],"end":[132,14]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:363:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13291:59203":{"id":"2:13291:59203","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[131,22],"end":[131,27]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:260:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2782-0:261:1689":{"id":"b:2:2782-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2784:2171"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3220:2607-0:244:1687":{"id":"a:2:3220:2607-0:244:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5683:3005":{"id":"1:5683:3005","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5684:54654","1:5685:54655","1:5686:54656","1:5687:54657"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:287:1691":{"id":"0:287:1691","crate_id":0,"name":"Colour","span":{"filename":"src/style.rs","begin":[256,0],"end":[308,1]},"visibility":"public","docs":"A colour is one specific type of ANSI escape code, and can refer\nto either the foreground or background colour.\n\nThese use the standard numeric sequences.\nSee <http://invisible-island.net/xterm/ctlseqs/ctlseqs.html>","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:288:1823","0:290:1825","0:292:1827","0:294:1828","0:296:1830","0:298:1832","0:300:1834","0:302:1836","0:304:1838","0:307:1841"],"impls":["0:33","0:72","0:167","a:2:9140:3211-0:287:1691","a:2:3179:196-0:287:1691","a:2:3220:2607-0:287:1691","a:2:9139:3212-0:287:1691","a:2:3191:205-0:287:1691","b:2:3118-0:287:1691","b:2:3108-0:287:1691","b:2:3908-0:287:1691","b:2:3123-0:287:1691","b:2:2782-0:287:1691","b:2:2785-0:287:1691","b:2:3112-0:287:1691","b:5:776-0:287:1691","0:312","0:313","0:316","0:318","0:319","0:83"]}},"b:2:3908-0:252:1688":{"id":"b:2:3908-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6465:3045":{"id":"1:6465:3045","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6466:55509","1:6467:55510"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3282:2487":{"id":"2:3282:2487","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3284:1327"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9140:3211-0:244:1687":{"id":"a:2:9140:3211-0:244:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6695:2971":{"id":"1:6695:2971","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6696:54709","1:6697:54710"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4689:3449":{"id":"2:4689:3449","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4690:2697","2:4691:57641","2:4692:2700"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:77:1937":{"id":"0:77:1937","crate_id":0,"name":"underline","span":{"filename":"src/style.rs","begin":[383,4],"end":[385,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nunderline property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Purple.underline();\nprintln!(\"{}\", style.paint(\"salutations\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9225:3040":{"id":"1:9225:3040","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9226:54997","1:9227:54998","1:9228:54999","1:9229:55000","1:9230:3844","1:9231:39034","1:9232:54996"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:317:392":{"id":"0:317:392","crate_id":0,"name":"clone","span":{"filename":"src/style.rs","begin":[254,20],"end":[254,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2785-0:261:1689":{"id":"b:2:2785-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2779:2471","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2787:52938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13204:59190":{"id":"2:13204:59190","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3118-0:269:1692":{"id":"b:2:3118-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3121:123","2:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:137:2196":{"id":"0:137:2196","crate_id":0,"name":"ANSIByteString","span":{"filename":"src/display.rs","begin":[93,0],"end":[93,58]},"visibility":"public","docs":"An `ANSIByteString` represents a formatted series of bytes.  Use\n`ANSIByteString` when styling text with an unknown encoding.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]}}},"5:6397:1920":{"id":"5:6397:1920","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13217:55629":{"id":"2:13217:55629","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3123-0:244:1687":{"id":"b:2:3123-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3126:123","2:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12862:3414":{"id":"2:12862:3414","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12864:2687","2:12865:57596","2:12866:57597"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:12856:3413","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3088:213":{"id":"2:3088:213","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3090:123","2:3091:1385"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:73:1897":{"id":"0:73:1897","crate_id":0,"name":"normal","span":{"filename":"src/style.rs","begin":[323,4],"end":[325,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Red.normal();\nprintln!(\"{}\", style.paint(\"hi\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13246:2692":{"id":"2:13246:2692","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:15741:2366","`None`":"2:47192:162","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13293:59204":{"id":"2:13293:59204","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:274:1805":{"id":"0:274:1805","crate_id":0,"name":"is_italic","span":{"filename":"src/style.rs","begin":[29,4],"end":[29,23]},"visibility":"public","docs":"Whether this style is italic.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:70":{"id":"0:70","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[218,0],"end":[244,1]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3157:111","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:71:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2836:120":{"id":"2:2836:120","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6861:2972":{"id":"1:6861:2972","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6862:55207"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:148:2202":{"id":"0:148:2202","crate_id":0,"name":"style_ref_mut","span":{"filename":"src/display.rs","begin":[115,4],"end":[117,5]},"visibility":"public","docs":"Directly access the style mutably","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3910:1398":{"id":"2:3910:1398","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45728:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:35:1886":{"id":"0:35:1886","crate_id":0,"name":"infix","span":{"filename":"src/ansi.rs","begin":[254,4],"end":[256,5]},"visibility":"public","docs":"The infix bytes between this colour and `next` colour. These are the bytes\nthat tell the terminal to use the `next` colour, or to do nothing if\nthe two colours are equal.\n\nSee also [`Style::infix`](struct.Style.html#method.infix).\n\n# Examples\n\n```\nuse ansi_term::Colour::{Red, Yellow};\n\nassert_eq!(\"\\x1b[33m\",\n           Red.infix(Yellow).to_string());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["next",{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3188:202":{"id":"2:3188:202","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8760:3097":{"id":"2:8760:3097","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8482:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3299:2491":{"id":"2:3299:2491","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3300:167","2:3301:931"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13326:3051":{"id":"2:13326:3051","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15741:2366"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49458:3052","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3118-0:338:2176":{"id":"b:2:3118-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3121:123","2:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13550:134":{"id":"2:13550:134","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13551:167","2:13552:992"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5697:3007":{"id":"1:5697:3007","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5698:55361"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3311:2489":{"id":"2:3311:2489","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3313:167","2:3314:337"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[15,9],"end":[15,18]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:349:585","0:350:885"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6767:2973":{"id":"1:6767:2973","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6768:53235"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:251:640":{"id":"0:251:640","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[121,22],"end":[121,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:304:1838":{"id":"0:304:1838","crate_id":0,"name":"Fixed","span":{"filename":"src/style.rs","begin":[304,4],"end":[304,13]},"visibility":"default","docs":"A colour number from 0 to 255, for use in 256-colour terminal\nenvironments.\n\n- Colours 0 to 7 are the `Black` to `White` variants respectively.\n  These colours can usually be changed in the terminal emulator.\n- Colours 8 to 15 are brighter versions of the eight colours above.\n  These can also usually be changed in the terminal emulator, or it\n  could be configured to use the original colours and show the text in\n  bold instead. It varies depending on the program.\n- Colours 16 to 231 contain several palettes of bright colours,\n  arranged in six squares measuring six by six each.\n- Colours 232 to 255 are shades of grey from black to white.\n\nIt might make more sense to look at a [colour chart][cc].\n\n[cc]: https://upload.wikimedia.org/wikipedia/commons/1/15/Xterm_256color_chart.svg","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u8"}]}},"2:3014:3481":{"id":"2:3014:3481","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3013:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:306:1507":{"id":"0:306:1507","crate_id":0,"name":"0","span":{"filename":"src/style.rs","begin":[304,10],"end":[304,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:3118-0:252:1688":{"id":"b:2:3118-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3088:213","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3121:123","2:3122:1385"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13327:59213":{"id":"2:13327:59213","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15741:2366"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49467:3816","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2785-0:244:1687":{"id":"b:2:2785-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2779:2471","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2787:52938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3108-0:252:1688":{"id":"b:2:3108-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3111:2198"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:315:885":{"id":"0:315:885","crate_id":0,"name":"ne","span":{"filename":"src/style.rs","begin":[254,9],"end":[254,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13230:4342":{"id":"2:13230:4342","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49404:2924","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:231:2282":{"id":"0:231:2282","crate_id":0,"name":"unstyle","span":{"filename":"src/util.rs","begin":[38,0],"end":[46,1]},"visibility":"public","docs":"Return a concatenated copy of `strs` without the formatting, as an allocated `String`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["strs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ANSIStrings","id":"0:154:2208","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:5627:3001":{"id":"1:5627:3001","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5628:53183","1:5629:53185","1:5630:53184","1:5631:53186"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3189:103":{"id":"2:3189:103","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:0:1677":{"id":"0:0:1677","crate_id":0,"name":"ansi_term","span":{"filename":"src/lib.rs","begin":[1,0],"end":[271,10]},"visibility":"public","docs":"This is a library for controlling colours and formatting, such as\nred bold text or blue underlined text, on ANSI terminals.\n\n\n## Basic usage\n\nThere are three main types in this crate that you need to be\nconcerned with: [`ANSIString`], [`Style`], and [`Colour`].\n\nA `Style` holds stylistic information: foreground and background colours,\nwhether the text should be bold, or blinking, or other properties. The\n[`Colour`] enum represents the available colours. And an [`ANSIString`] is a\nstring paired with a [`Style`].\n\n[`Color`] is also available as an alias to `Colour`.\n\nTo format a string, call the `paint` method on a `Style` or a `Colour`,\npassing in the string you want to format as the argument. For example,\nhere’s how to get some red text:\n\n```\nuse ansi_term::Colour::Red;\n\nprintln!(\"This is in red: {}\", Red.paint(\"a red string\"));\n```\n\nIt’s important to note that the `paint` method does *not* actually return a\nstring with the ANSI control characters surrounding it. Instead, it returns\nan [`ANSIString`] value that has a [`Display`] implementation that, when\nformatted, returns the characters. This allows strings to be printed with a\nminimum of [`String`] allocations being performed behind the scenes.\n\nIf you *do* want to get at the escape codes, then you can convert the\n[`ANSIString`] to a string as you would any other `Display` value:\n\n```\nuse ansi_term::Colour::Red;\n\nlet red_string = Red.paint(\"a red string\").to_string();\n```\n\n\n## Bold, underline, background, and other styles\n\nFor anything more complex than plain foreground colour changes, you need to\nconstruct `Style` values themselves, rather than beginning with a `Colour`.\nYou can do this by chaining methods based on a new `Style`, created with\n[`Style::new()`]. Each method creates a new style that has that specific\nproperty set. For example:\n\n```\nuse ansi_term::Style;\n\nprintln!(\"How about some {} and {}?\",\n         Style::new().bold().paint(\"bold\"),\n         Style::new().underline().paint(\"underline\"));\n```\n\nFor brevity, these methods have also been implemented for `Colour` values,\nso you can give your styles a foreground colour without having to begin with\nan empty `Style` value:\n\n```\nuse ansi_term::Colour::{Blue, Yellow};\n\nprintln!(\"Demonstrating {} and {}!\",\n         Blue.bold().paint(\"blue bold\"),\n         Yellow.underline().paint(\"yellow underline\"));\n\nprintln!(\"Yellow on blue: {}\", Yellow.on(Blue).paint(\"wow!\"));\n```\n\nThe complete list of styles you can use are: [`bold`], [`dimmed`], [`italic`],\n[`underline`], [`blink`], [`reverse`], [`hidden`], [`strikethrough`], and [`on`] for\nbackground colours.\n\nIn some cases, you may find it easier to change the foreground on an\nexisting `Style` rather than starting from the appropriate `Colour`.\nYou can do this using the [`fg`] method:\n\n```\nuse ansi_term::Style;\nuse ansi_term::Colour::{Blue, Cyan, Yellow};\n\nprintln!(\"Yellow on blue: {}\", Style::new().on(Blue).fg(Yellow).paint(\"yow!\"));\nprintln!(\"Also yellow on blue: {}\", Cyan.on(Blue).fg(Yellow).paint(\"zow!\"));\n```\n\nYou can turn a `Colour` into a `Style` with the [`normal`] method.\nThis will produce the exact same `ANSIString` as if you just used the\n`paint` method on the `Colour` directly, but it’s useful in certain cases:\nfor example, you may have a method that returns `Styles`, and need to\nrepresent both the “red bold” and “red, but not bold” styles with values of\nthe same type. The `Style` struct also has a [`Default`] implementation if you\nwant to have a style with *nothing* set.\n\n```\nuse ansi_term::Style;\nuse ansi_term::Colour::Red;\n\nRed.normal().paint(\"yet another red string\");\nStyle::default().paint(\"a completely regular string\");\n```\n\n\n## Extended colours\n\nYou can access the extended range of 256 colours by using the `Colour::Fixed`\nvariant, which takes an argument of the colour number to use. This can be\nincluded wherever you would use a `Colour`:\n\n```\nuse ansi_term::Colour::Fixed;\n\nFixed(134).paint(\"A sort of light purple\");\nFixed(221).on(Fixed(124)).paint(\"Mustard in the ketchup\");\n```\n\nThe first sixteen of these values are the same as the normal and bold\nstandard colour variants. There’s nothing stopping you from using these as\n`Fixed` colours instead, but there’s nothing to be gained by doing so\neither.\n\nYou can also access full 24-bit colour by using the `Colour::RGB` variant,\nwhich takes separate `u8` arguments for red, green, and blue:\n\n```\nuse ansi_term::Colour::RGB;\n\nRGB(70, 130, 180).paint(\"Steel blue\");\n```\n\n## Combining successive coloured strings\n\nThe benefit of writing ANSI escape codes to the terminal is that they\n*stack*: you do not need to end every coloured string with a reset code if\nthe text that follows it is of a similar style. For example, if you want to\nhave some blue text followed by some blue bold text, it’s possible to send\nthe ANSI code for blue, followed by the ANSI code for bold, and finishing\nwith a reset code without having to have an extra one between the two\nstrings.\n\nThis crate can optimise the ANSI codes that get printed in situations like\nthis, making life easier for your terminal renderer. The [`ANSIStrings`]\ntype takes a slice of several [`ANSIString`] values, and will iterate over\neach of them, printing only the codes for the styles that need to be updated\nas part of its formatting routine.\n\nThe following code snippet uses this to enclose a binary number displayed in\nred bold text inside some red, but not bold, brackets:\n\n```\nuse ansi_term::Colour::Red;\nuse ansi_term::{ANSIString, ANSIStrings};\n\nlet some_value = format!(\"{:b}\", 42);\nlet strings: &[ANSIString<'static>] = &[\n    Red.paint(\"[\"),\n    Red.bold().paint(some_value),\n    Red.paint(\"]\"),\n];\n\nprintln!(\"Value: {}\", ANSIStrings(strings));\n```\n\nThere are several things to note here. Firstly, the [`paint`] method can take\n*either* an owned [`String`] or a borrowed [`&str`]. Internally, an [`ANSIString`]\nholds a copy-on-write ([`Cow`]) string value to deal with both owned and\nborrowed strings at the same time. This is used here to display a `String`,\nthe result of the `format!` call, using the same mechanism as some\nstatically-available `&str` slices. Secondly, that the [`ANSIStrings`] value\nworks in the same way as its singular counterpart, with a [`Display`]\nimplementation that only performs the formatting when required.\n\n## Byte strings\n\nThis library also supports formatting `\\[u8]` byte strings; this supports\napplications working with text in an unknown encoding.  [`Style`] and\n[`Colour`] support painting `\\[u8]` values, resulting in an [`ANSIByteString`].\nThis type does not implement [`Display`], as it may not contain UTF-8, but\nit does provide a method [`write_to`] to write the result to any value that\nimplements [`Write`]:\n\n```\nuse ansi_term::Colour::Green;\n\nGreen.paint(\"user data\".as_bytes()).write_to(&mut std::io::stdout()).unwrap();\n```\n\nSimilarly, the type [`ANSIByteStrings`] supports writing a list of\n[`ANSIByteString`] values with minimal escape sequences:\n\n```\nuse ansi_term::Colour::Green;\nuse ansi_term::ANSIByteStrings;\n\nANSIByteStrings(&[\n    Green.paint(\"user data 1\\n\".as_bytes()),\n    Green.bold().paint(\"user data 2\\n\".as_bytes()),\n]).write_to(&mut std::io::stdout()).unwrap();\n```\n\n[`Cow`]: https://doc.rust-lang.org/std/borrow/enum.Cow.html\n[`Display`]: https://doc.rust-lang.org/std/fmt/trait.Display.html\n[`Default`]: https://doc.rust-lang.org/std/default/trait.Default.html\n[`String`]: https://doc.rust-lang.org/std/string/struct.String.html\n[`&str`]: https://doc.rust-lang.org/std/primitive.str.html\n[`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html\n[`Style`]: struct.Style.html\n[`Style::new()`]: struct.Style.html#method.new\n[`Color`]: enum.Color.html\n[`Colour`]: enum.Colour.html\n[`ANSIString`]: type.ANSIString.html\n[`ANSIStrings`]: type.ANSIStrings.html\n[`ANSIByteString`]: type.ANSIByteString.html\n[`ANSIByteStrings`]: type.ANSIByteStrings.html\n[`write_to`]: type.ANSIByteString.html#method.write_to\n[`paint`]: type.ANSIByteString.html#method.write_to\n[`normal`]: enum.Colour.html#method.normal\n\n[`bold`]: struct.Style.html#method.bold\n[`dimmed`]: struct.Style.html#method.dimmed\n[`italic`]: struct.Style.html#method.italic\n[`underline`]: struct.Style.html#method.underline\n[`blink`]: struct.Style.html#method.blink\n[`reverse`]: struct.Style.html#method.reverse\n[`hidden`]: struct.Style.html#method.hidden\n[`strikethrough`]: struct.Style.html#method.strikethrough\n[`fg`]: struct.Style.html#method.fg\n[`on`]: struct.Style.html#method.on","links":{},"attrs":["#![crate_name = \"ansi_term\"]","#![crate_type = \"rlib\"]","#![crate_type = \"dylib\"]","#![warn(missing_copy_implementations)]","#![warn(missing_docs)]","#![warn(trivial_casts, trivial_numeric_casts)]","#![warn(unused_extern_crates, unused_qualifications)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:244:1687","0:252:1688","0:261:1689","0:287:1691","0:269:1692","0:287:1694","0:338:2176","0:135:2193","0:137:2196","0:355:2205","0:154:2208","0:156:2208","0:158:2213","0:160:2213","0:229:2273","0:231:2282","0:232:2284"]}},"2:13318:3666":{"id":"2:13318:3666","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12776:3159","FromStr::Err":"2:12776:3159"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47319:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12776:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12776:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9139:3212":{"id":"2:9139:3212","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2801:101":{"id":"2:2801:101","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2802:392","2:2803:394"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14021:3080":{"id":"2:14021:3080","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14022:53258","2:14023:53259","2:14024:53260","2:14025:53261","2:14026:53262","2:14027:53263","2:14028:2721"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:779:2750":{"id":"5:779:2750","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[47,0],"end":[216,1]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:58:898","0:59:1933","0:60:1980","0:61:1982","0:62:1937","0:63:1984","0:64:1986","0:65:697","0:66:1990","0:67:1814","0:68:938","0:69:1796"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,9],"end":[12,18]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3187:203","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13315:59211":{"id":"2:13315:59211","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3908-0:244:1687":{"id":"b:2:3908-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:143:661":{"id":"0:143:661","crate_id":0,"name":"from","span":{"filename":"src/display.rs","begin":[98,4],"end":[103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3908-0:338:2176":{"id":"b:2:3908-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:307:1841":{"id":"0:307:1841","crate_id":0,"name":"RGB","span":{"filename":"src/style.rs","begin":[307,4],"end":[307,19]},"visibility":"default","docs":"A 24-bit RGB color, as specified by ISO-8613-3.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u8"},{"kind":"primitive","inner":"u8"},{"kind":"primitive","inner":"u8"}]}},"1:5705:3009":{"id":"1:5705:3009","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5706:5219"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5649:3004":{"id":"1:5649:3004","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5650:6713","1:5651:52946","1:5652:5219","1:5653:57108","1:5654:3338","1:5655:3339","1:5656:57109","1:5657:1275","1:5658:57110","1:5659:57111","1:5660:57112","1:5661:57113","1:5662:57114","1:5663:57115","1:5664:57116","1:5665:57117"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3082:145":{"id":"2:3082:145","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3084:2198"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13309:59209":{"id":"2:13309:59209","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:12837:3410","prim@char":"1:15741:2366"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6395-0:244:1687":{"id":"b:5:6395-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6393:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6397:1920"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13201:771":{"id":"2:13201:771","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15741:2366"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3108-0:244:1687":{"id":"b:2:3108-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3111:2198"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8353:2608":{"id":"2:8353:2608","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8354:771","2:8355:2693"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8482:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:175":{"id":"0:175","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[206,0],"end":[213,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}},"param_names":[]}},"items":["0:177:1923"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:273:1804":{"id":"0:273:1804","crate_id":0,"name":"is_dimmed","span":{"filename":"src/style.rs","begin":[26,4],"end":[26,23]},"visibility":"public","docs":"Whether this style is dimmed.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:13233:55666":{"id":"2:13233:55666","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3247:2469":{"id":"2:3247:2469","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3249:167","2:3250:250"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:363:640":{"id":"0:363:640","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[132,9],"end":[132,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3179:196-0:287:1691":{"id":"a:2:3179:196-0:287:1691","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:82:938":{"id":"0:82:938","crate_id":0,"name":"on","span":{"filename":"src/style.rs","begin":[458,4],"end":[460,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nbackground colour property set to the given colour.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::RGB(31, 31, 31).on(Colour::White);\nprintln!(\"{}\", style.paint(\"eyyyy\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["background",{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63:1984":{"id":"0:63:1984","crate_id":0,"name":"blink","span":{"filename":"src/style.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns a `Style` with the blink property set.\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().blink();\nprintln!(\"{}\", style.paint(\"wazzup\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,27],"end":[254,31]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3189:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[140,16],"end":[140,20]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3189:103","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10126:115":{"id":"2:10126:115","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10127:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3085:131":{"id":"2:3085:131","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3087:661"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6345:2969":{"id":"1:6345:2969","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6346:3338","1:6347:3339","1:6348:7774","1:6349:57338","1:6351:57342","1:6353:57339","1:6354:57340","1:6356:57341"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:311:1509":{"id":"0:311:1509","crate_id":0,"name":"2","span":{"filename":"src/style.rs","begin":[307,16],"end":[307,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:300:1834":{"id":"0:300:1834","crate_id":0,"name":"Cyan","span":{"filename":"src/style.rs","begin":[280,4],"end":[280,8]},"visibility":"default","docs":"Colour #6 (foreground code `36`, background code `46`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[221,0],"end":[274,1]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:34:1877","0:35:1886","0:36:1892"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13226:3439":{"id":"2:13226:3439","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15741:2366"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49126:3798","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:287:1694":{"id":"0:287:1694","crate_id":0,"name":"Color","span":{"filename":"src/style.rs","begin":[256,0],"end":[308,1]},"visibility":"public","docs":"A colour is one specific type of ANSI escape code, and can refer\nto either the foreground or background colour.\n\nThese use the standard numeric sequences.\nSee <http://invisible-island.net/xterm/ctlseqs/ctlseqs.html>","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:288:1823","0:290:1825","0:292:1827","0:294:1828","0:296:1830","0:298:1832","0:300:1834","0:302:1836","0:304:1838","0:307:1841"],"impls":["0:33","0:72","0:167","a:2:9140:3211-0:287:1691","a:2:3179:196-0:287:1691","a:2:3220:2607-0:287:1691","a:2:9139:3212-0:287:1691","a:2:3191:205-0:287:1691","b:2:3118-0:287:1691","b:2:3108-0:287:1691","b:2:3908-0:287:1691","b:2:3123-0:287:1691","b:2:2782-0:287:1691","b:2:2785-0:287:1691","b:2:3112-0:287:1691","b:5:776-0:287:1691","0:312","0:313","0:316","0:318","0:319","0:83"]}},"0:67:1814":{"id":"0:67:1814","crate_id":0,"name":"fg","span":{"filename":"src/style.rs","begin":[184,4],"end":[186,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour property set.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour};\n\nlet style = Style::new().fg(Colour::Yellow);\nprintln!(\"{}\", style.paint(\"hi\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["foreground",{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:776-0:338:2176":{"id":"b:5:776-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["5:778:2179","5:779:2750","5:780:2751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10132:2759":{"id":"2:10132:2759","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10133:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13213:55627":{"id":"2:13213:55627","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47192:162"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10737:199","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[131,9],"end":[131,14]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:257:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4614:2915":{"id":"1:4614:2915","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4615:57424","1:4616:39511","1:4617:57425","1:4618:57426"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22844:3606":{"id":"2:22844:3606","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23493:3599","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22835:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2831:169":{"id":"2:2831:169","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2833:585","2:2834:885"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9140:3211-0:338:2176":{"id":"a:2:9140:3211-0:338:2176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8328:116":{"id":"2:8328:116","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8329:2687","2:8330:2688","2:8331:2689","2:8332:2690","2:8336:2691","2:8339:2692"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8482:153","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:60:1980":{"id":"0:60:1980","crate_id":0,"name":"dimmed","span":{"filename":"src/style.rs","begin":[87,4],"end":[89,5]},"visibility":"public","docs":"Returns a `Style` with the dimmed property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().dimmed();\nprintln!(\"{}\", style.paint(\"sup\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3108-0:338:2176":{"id":"b:2:3108-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3111:2198"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8284:147":{"id":"2:8284:147","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8285:2697","2:8286:2698","2:8287:746"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13242:2732":{"id":"2:13242:2732","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:12837:3410","prim@char":"1:15741:2366","`None`":"2:47192:162"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9140:3211-0:355:2205":{"id":"a:2:9140:3211-0:355:2205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:45:640":{"id":"0:45:640","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[307,4],"end":[310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3341:2496":{"id":"2:3341:2496","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3343:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3718:2513":{"id":"2:3718:2513","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:66:1990":{"id":"0:66:1990","crate_id":0,"name":"strikethrough","span":{"filename":"src/style.rs","begin":[170,4],"end":[172,5]},"visibility":"public","docs":"Returns a `Style` with the strikethrough property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().strikethrough();\nprintln!(\"{}\", style.paint(\"yo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:309:1507":{"id":"0:309:1507","crate_id":0,"name":"0","span":{"filename":"src/style.rs","begin":[307,8],"end":[307,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"a:2:3191:205-0:355:2205":{"id":"a:2:3191:205-0:355:2205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[15,20],"end":[15,25]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:354:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13324:59212":{"id":"2:13324:59212","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15741:2366"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49449:3815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:349:585":{"id":"0:349:585","crate_id":0,"name":"eq","span":{"filename":"src/display.rs","begin":[15,9],"end":[15,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6395-0:338:2176":{"id":"b:5:6395-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6393:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["5:6397:1920"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12776:3159":{"id":"2:12776:3159","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12777:122","2:12778:2129"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13212:55631":{"id":"2:13212:55631","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15758:2380"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13224:55651":{"id":"2:13224:55651","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15747:2371"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:302:1836":{"id":"0:302:1836","crate_id":0,"name":"White","span":{"filename":"src/style.rs","begin":[286,4],"end":[286,9]},"visibility":"default","docs":"Colour #7 (foreground code `37`, background code `47`).\n\nAs above, this is not necessarily the foreground colour, and may be\nhard to read on terminals with light backgrounds.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3179:196":{"id":"2:3179:196","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9139:3212-0:287:1691":{"id":"a:2:9139:3212-0:287:1691","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3114:661":{"id":"2:3114:661","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3908-0:355:2205":{"id":"b:2:3908-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3906:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3910:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3123-0:269:1692":{"id":"b:2:3123-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3126:123","2:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3121:123":{"id":"2:3121:123","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"0:320:640":{"id":"0:320:640","crate_id":0,"name":"fmt","span":{"filename":"src/style.rs","begin":[254,33],"end":[254,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3483:2501":{"id":"2:3483:2501","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3485:167","2:3486:731"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:59:1933":{"id":"0:59:1933","crate_id":0,"name":"bold","span":{"filename":"src/style.rs","begin":[73,4],"end":[75,5]},"visibility":"public","docs":"Returns a `Style` with the bold property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().bold();\nprintln!(\"{}\", style.paint(\"hey\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44":{"id":"0:44","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[306,0],"end":[311,1]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:45:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2782-0:287:1691":{"id":"b:2:2782-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2784:2171"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6393:208":{"id":"5:6393:208","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6394:1920"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:69:1796":{"id":"0:69:1796","crate_id":0,"name":"is_plain","span":{"filename":"src/style.rs","begin":[213,4],"end":[215,5]},"visibility":"public","docs":"Return true if this `Style` has no actual styles, and can be written\nwithout any control characters.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nassert_eq!(true,  Style::default().is_plain());\nassert_eq!(false, Style::default().bold().is_plain());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2782-0:244:1687":{"id":"b:2:2782-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2784:2171"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:270:1815":{"id":"0:270:1815","crate_id":0,"name":"foreground","span":{"filename":"src/style.rs","begin":[17,4],"end":[17,34]},"visibility":"public","docs":"The style's foreground colour, if it has one.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"b:2:2785-0:338:2176":{"id":"b:2:2785-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2779:2471","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:2787:52938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13277:2447":{"id":"2:13277:2447","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15747:2371","prim@char":"1:15741:2366","`DoubleEndedIterator`":"2:8328:116","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49354:3809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3333:2494":{"id":"2:3333:2494","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3335:336"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:68:938":{"id":"0:68:938","crate_id":0,"name":"on","span":{"filename":"src/style.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Returns a `Style` with the background colour property set.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour};\n\nlet style = Style::new().on(Colour::Blue);\nprintln!(\"{}\", style.paint(\"eyyyy\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["background",{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:278:1809":{"id":"0:278:1809","crate_id":0,"name":"is_hidden","span":{"filename":"src/style.rs","begin":[41,4],"end":[41,23]},"visibility":"public","docs":"Whether this style is hidden.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:359:1507":{"id":"0:359:1507","crate_id":0,"name":"0","span":{"filename":"src/display.rs","begin":[134,5],"end":[134,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}}}},"5:780:2751":{"id":"5:780:2751","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3122:1385":{"id":"2:3122:1385","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47319:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10378:3109":{"id":"2:10378:3109","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10379:142","2:10380:33133","2:10381:53317"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10343:142":{"id":"2:10343:142","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10344:632","2:10345:1697","2:10346:55213","2:10347:55214","2:10348:55215","2:10349:55216","2:10350:55217","2:10351:55218","2:10352:55219","2:10353:55220","2:10354:55221","2:10355:55222","2:10356:55223","2:10357:55224","2:10358:55225","2:10359:1498"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13256:55660":{"id":"2:13256:55660","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"1:15747:2371","prim@char":"1:15741:2366","`DoubleEndedIterator`":"2:8328:116","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49168:3772","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3220:2607-0:261:1689":{"id":"a:2:3220:2607-0:261:1689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:277:1808":{"id":"0:277:1808","crate_id":0,"name":"is_reverse","span":{"filename":"src/style.rs","begin":[38,4],"end":[38,24]},"visibility":"public","docs":"Whether this style has reverse colours.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:5:6395-0:355:2205":{"id":"b:5:6395-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6393:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["5:6397:1920"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3422:2500":{"id":"2:3422:2500","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3423:559"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:75:1980":{"id":"0:75:1980","crate_id":0,"name":"dimmed","span":{"filename":"src/style.rs","begin":[353,4],"end":[355,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\ndimmed property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Yellow.dimmed();\nprintln!(\"{}\", style.paint(\"sup\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[121,22],"end":[121,27]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:251:640"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3191:205-0:338:2176":{"id":"a:2:3191:205-0:338:2176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13565:146":{"id":"2:13565:146","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13566:167","2:13567:146","2:13568:745"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3220:2607-0:252:1688":{"id":"a:2:3220:2607-0:252:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3220:2607-0:355:2205":{"id":"a:2:3220:2607-0:355:2205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3079:74":{"id":"2:3079:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3081:2686"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13271:59197":{"id":"2:13271:59197","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9139:3212-0:338:2176":{"id":"a:2:9139:3212-0:338:2176","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3112-0:355:2205":{"id":"b:2:3112-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6073:59850":{"id":"5:6073:59850","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3321:2492":{"id":"2:3321:2492","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3323:167","2:3324:1204"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:772:207":{"id":"5:772:207","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:773:2179","5:774:2750","5:775:2751"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:71:59":{"id":"0:71:59","crate_id":0,"name":"default","span":{"filename":"src/style.rs","begin":[230,4],"end":[243,5]},"visibility":"default","docs":"Returns a style with *no* properties set. Formatting text using this\nstyle returns the exact same text.\n\n```\nuse ansi_term::Style;\nassert_eq!(None,  Style::default().foreground);\nassert_eq!(None,  Style::default().background);\nassert_eq!(false, Style::default().is_bold);\nassert_eq!(\"txt\", Style::default().paint(\"txt\").to_string());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3112-0:287:1691":{"id":"b:2:3112-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:81:1990":{"id":"0:81:1990","crate_id":0,"name":"strikethrough","span":{"filename":"src/style.rs","begin":[443,4],"end":[445,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nstrikethrough property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Fixed(244).strikethrough();\nprintln!(\"{}\", style.paint(\"yo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9139:3212-0:355:2205":{"id":"a:2:9139:3212-0:355:2205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10069:1910":{"id":"2:10069:1910","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10070:1498","2:10071:1799","2:10073:2236"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13262:59196":{"id":"2:13262:59196","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"1:15747:2371","prim@char":"1:15741:2366","str::split":"1:15747:2371","self::pattern":"2:12837:3410"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49218:3803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:338:2176":{"id":"0:338:2176","crate_id":0,"name":"ANSIGenericString","span":{"filename":"src/display.rs","begin":[16,0],"end":[20,1]},"visibility":"public","docs":"An `ANSIGenericString` includes a generic string type and a `Style` to\ndisplay that string.  `ANSIString` and `ANSIByteString` are aliases for\nthis type on `str` and `\\[u8]`, respectively.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"fields_stripped":true,"fields":[],"impls":["0:144","0:175","a:2:9140:3211-0:338:2176","a:2:3179:196-0:338:2176","a:2:3220:2607-0:338:2176","a:2:9139:3212-0:338:2176","a:2:3191:205-0:338:2176","b:2:3118-0:338:2176","b:2:3108-0:338:2176","b:2:3908-0:338:2176","b:2:3123-0:338:2176","b:2:2782-0:338:2176","b:2:2785-0:338:2176","b:2:3112-0:338:2176","b:5:6395-0:338:2176","b:5:776-0:338:2176","0:343","0:346","0:351","0:131","0:139","0:149"]}},"2:3350:2498":{"id":"2:3350:2498","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3352:1208"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3337:2495":{"id":"2:3337:2495","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:338"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4596:1910":{"id":"1:4596:1910","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4597:1697","1:4598:2963","1:4600:2964","1:4601:2965","1:4602:2237","1:4603:2966","1:4604:2236","1:4613:2721"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3191:205-0:252:1688":{"id":"a:2:3191:205-0:252:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4621:2918":{"id":"1:4621:2918","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4622:53049","1:4623:53050","1:4624:53051","1:4626:2917","1:4627:53052","1:4629:53053","1:4630:4342"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4539:2911","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6085:59851":{"id":"5:6085:59851","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3220:2607-0:287:1691":{"id":"a:2:3220:2607-0:287:1691","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3316:2490":{"id":"2:3316:2490","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3318:167","2:3319:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:257:392":{"id":"0:257:392","crate_id":0,"name":"clone","span":{"filename":"src/ansi.rs","begin":[131,9],"end":[131,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13228:31831":{"id":"2:13228:31831","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15747:2371"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49424:3812","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3681:2512":{"id":"2:3681:2512","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3187:203":{"id":"2:3187:203","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3112-0:338:2176":{"id":"b:2:3112-0:338:2176","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3646:2507":{"id":"2:3646:2507","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3648:54062"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:778:2179":{"id":"5:778:2179","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"T"},"generics":{"params":[],"where_predicates":[]}}},"b:2:3112-0:252:1688":{"id":"b:2:3112-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8293:2609":{"id":"2:8293:2609","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8295:2694","2:8297:2695","2:8298:2696"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6395-0:261:1689":{"id":"b:5:6395-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6393:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6397:1920"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3465:2510":{"id":"2:3465:2510","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3467:222","2:3468:192","2:3469:58643"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3262:2479":{"id":"2:3262:2479","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3264:167","2:3265:539"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:134:392":{"id":"0:134:392","crate_id":0,"name":"clone","span":{"filename":"src/display.rs","begin":[36,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:32:1892":{"id":"0:32:1892","crate_id":0,"name":"suffix","span":{"filename":"src/ansi.rs","begin":[215,4],"end":[217,5]},"visibility":"public","docs":"The suffix for this style. These are the bytes that tell the terminal\nto reset back to its normal colour and font style.\n\n# Examples\n\n```\nuse ansi_term::{Style, Colour::Green};\n\nlet style = Style::default().bold();\nassert_eq!(\"\\x1b[0m\",\n           style.suffix().to_string());\n\nlet style = Green.normal().bold();\nassert_eq!(\"\\x1b[0m\",\n           style.suffix().to_string());\n\nlet style = Style::default();\nassert_eq!(\"\",\n           style.suffix().to_string());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3640:133":{"id":"2:3640:133","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3642:667"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3635:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[254,9],"end":[254,18]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:314:585","0:315:885"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22799:15942":{"id":"2:22799:15942","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22800:6214","2:22801:58637","2:22802:58638"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22792:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3191:205-0:287:1691":{"id":"a:2:3191:205-0:287:1691","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3191:205-0:261:1689":{"id":"a:2:3191:205-0:261:1689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3191:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:84:661":{"id":"0:84:661","crate_id":0,"name":"from","span":{"filename":"src/style.rs","begin":[475,4],"end":[477,5]},"visibility":"default","docs":"You can turn a `Colour` into a `Style` with the foreground colour set\nwith the `From` trait.\n\n```\nuse ansi_term::{Style, Colour};\nlet green_foreground = Style::default().fg(Colour::Green);\nassert_eq!(green_foreground, Colour::Green.normal());\nassert_eq!(green_foreground, Colour::Green.into());\nassert_eq!(green_foreground, Style::from(Colour::Green));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["colour",{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3076:75":{"id":"2:3076:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3078:289"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3487:2502":{"id":"2:3487:2502","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3489:732"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3483:2501","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:355:2205":{"id":"0:355:2205","crate_id":0,"name":"ANSIGenericStrings","span":{"filename":"src/display.rs","begin":[133,0],"end":[135,58]},"visibility":"public","docs":"A set of `ANSIGenericString`s collected together, in order to be\nwritten with a minimum of control characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"fields_stripped":false,"fields":["0:359:1507"],"impls":["0:187","a:2:9140:3211-0:355:2205","a:2:3179:196-0:355:2205","a:2:3220:2607-0:355:2205","a:2:9139:3212-0:355:2205","a:2:3191:205-0:355:2205","b:2:3118-0:355:2205","b:2:3108-0:355:2205","b:2:3908-0:355:2205","b:2:3123-0:355:2205","b:2:2782-0:355:2205","b:2:2785-0:355:2205","b:2:3112-0:355:2205","b:5:6395-0:355:2205","0:360","0:364","0:367"]}},"b:2:3108-0:355:2205":{"id":"b:2:3108-0:355:2205","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["2:3111:2198"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10333:138":{"id":"2:10333:138","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10334:695","2:10336:55044"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2787:52938":{"id":"2:2787:52938","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13300:59208":{"id":"2:13300:59208","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15741:2366","self::pattern":"2:12837:3410"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22650:3043":{"id":"2:22650:3043","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22640:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9140:3211-0:261:1689":{"id":"a:2:9140:3211-0:261:1689","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3554:2504":{"id":"2:3554:2504","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3556:58103","2:3557:58104","2:3558:55666"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:252:1688":{"id":"0:252:1688","crate_id":0,"name":"Infix","span":{"filename":"src/ansi.rs","begin":[132,0],"end":[132,31]},"visibility":"public","docs":"Like `ANSIString`, but only displays the difference between two\nstyles.\n\nThis type implements the `Display` trait, meaning it can be written to a\n`std::fmt` formatting without doing any extra allocation, and written to a\nstring with the `.to_string()` method. For examples, see\n[`Style::infix`](struct.Style.html#method.infix).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9140:3211-0:252:1688","a:2:3179:196-0:252:1688","a:2:3220:2607-0:252:1688","a:2:9139:3212-0:252:1688","a:2:3191:205-0:252:1688","b:2:3118-0:252:1688","b:2:3108-0:252:1688","b:2:3908-0:252:1688","b:2:3123-0:252:1688","b:2:2782-0:252:1688","b:2:2785-0:252:1688","b:2:3112-0:252:1688","b:5:6395-0:252:1688","b:5:776-0:252:1688","0:256","0:258","0:259","0:39"]}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/ansi.rs","begin":[140,9],"end":[140,14]},"visibility":{"restricted":{"parent":"0:3:1686","path":"::ansi"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:265:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3108-0:287:1691":{"id":"b:2:3108-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3111:2198"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13949:137":{"id":"2:13949:137","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13950:262","2:13951:501","2:13952:265","2:13953:1058"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3112-0:244:1687":{"id":"b:2:3112-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3114:661"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:296:1830":{"id":"0:296:1830","crate_id":0,"name":"Blue","span":{"filename":"src/style.rs","begin":[274,4],"end":[274,8]},"visibility":"default","docs":"Colour #4 (foreground code `34`, background code `44`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:78:1984":{"id":"0:78:1984","crate_id":0,"name":"blink","span":{"filename":"src/style.rs","begin":[398,4],"end":[400,5]},"visibility":"public","docs":"Returns a `Style` with the foreground colour set to this colour and the\nblink property set.\n\n# Examples\n\n```\nuse ansi_term::Colour;\n\nlet style = Colour::Cyan.blink();\nprintln!(\"{}\", style.paint(\"wazzup\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10119:106":{"id":"2:10119:106","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10120:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:229:2273":{"id":"0:229:2273","crate_id":0,"name":"sub_string","span":{"filename":"src/util.rs","begin":[5,0],"end":[35,1]},"visibility":"public","docs":"Return a substring of the given ANSIStrings sequence, while keeping the formatting.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["start",{"kind":"primitive","inner":"usize"}],["len",{"kind":"primitive","inner":"usize"}],["strs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ANSIStrings","id":"0:154:2208","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7753:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ANSIString","id":"0:135:2193","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10136:175":{"id":"2:10136:175","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10137:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3157:111":{"id":"2:3157:111","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3158:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3220:2607":{"id":"2:3220:2607","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:279:1810":{"id":"0:279:1810","crate_id":0,"name":"is_strikethrough","span":{"filename":"src/style.rs","begin":[44,4],"end":[44,30]},"visibility":"public","docs":"Whether this style is struckthrough.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"1:6367:3021":{"id":"1:6367:3021","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6368:55184","1:6369:7138","1:6370:55185","1:6371:55186","1:6372:55187","1:6373:55188"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4899:3024":{"id":"1:4899:3024","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4900:3063","1:4901:57071"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13210:59192":{"id":"2:13210:59192","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2782-0:252:1688":{"id":"b:2:2782-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2784:2171"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3398:112":{"id":"2:3398:112","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3399:206","2:3400:524"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2779:2471":{"id":"2:2779:2471","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2781:52938"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13253:31688":{"id":"2:13253:31688","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:12837:3410","prim@char":"1:15741:2366"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12629:3769","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[95,0],"end":[104,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:781:105","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"I"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:143:661"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:6395-0:252:1688":{"id":"b:5:6395-0:252:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10126:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6393:208","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6397:1920"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:283:885":{"id":"0:283:885","crate_id":0,"name":"ne","span":{"filename":"src/style.rs","begin":[12,9],"end":[12,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3184:1795":{"id":"2:3184:1795","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:168:1919":{"id":"0:168:1919","crate_id":0,"name":"paint","span":{"filename":"src/display.rs","begin":[186,4],"end":[193,5]},"visibility":"public","docs":"Paints the given text with this colour, returning an ANSI string.\nThis is a short-cut so you don’t have to use `Blue.normal()` just\nto get blue text.\n\n```\nuse ansi_term::Colour::Blue;\nprintln!(\"{}\", Blue.paint(\"da ba dee\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["input",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:781:105","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12856:3413":{"id":"2:12856:3413","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:12858:3432","2:12859:900","2:12860:58439","2:12861:58440"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3220:2607-0:269:1692":{"id":"a:2:3220:2607-0:269:1692","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3220:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:271:1812":{"id":"0:271:1812","crate_id":0,"name":"background","span":{"filename":"src/style.rs","begin":[20,4],"end":[20,34]},"visibility":"public","docs":"The style's background colour, if it has one.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}},"0:260:640":{"id":"0:260:640","crate_id":0,"name":"fmt","span":{"filename":"src/ansi.rs","begin":[131,22],"end":[131,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10079:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10068:191","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13296:59206":{"id":"2:13296:59206","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10737:199":{"id":"2:10737:199","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10739:167","2:10740:55627","2:10741:55628","2:10742:55629","2:10743:55630","2:10744:731","2:10745:732"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10728:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:370:585":{"id":"0:370:585","crate_id":0,"name":"eq","span":{"filename":"src/display.rs","begin":[132,16],"end":[132,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ANSIGenericStrings","id":"0:355:2205","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:776-0:261:1689":{"id":"b:5:776-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2179","5:779:2750","5:780:2751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3906:68":{"id":"2:3906:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3907:1398"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:156:2208":{"id":"0:156:2208","crate_id":0,"name":"ANSIStrings","span":{"filename":"src/display.rs","begin":[143,0],"end":[145,1]},"visibility":"public","docs":"A function to construct an `ANSIStrings` instance.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"ANSIString","id":"0:135:2193","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ANSIStrings","id":"0:154:2208","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:9140:3211-0:287:1691":{"id":"a:2:9140:3211-0:287:1691","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13297:59207":{"id":"2:13297:59207","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:12837:3410","prim@char":"1:15741:2366"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:12867:3409","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3123-0:261:1689":{"id":"b:2:3123-0:261:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3092:212","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3126:123","2:3127:1384"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:160:2213":{"id":"0:160:2213","crate_id":0,"name":"ANSIByteStrings","span":{"filename":"src/display.rs","begin":[153,0],"end":[155,1]},"visibility":"public","docs":"A function to construct an `ANSIByteStrings` instance.","links":{},"attrs":["#[allow(non_snake_case)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["arg",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"ANSIByteString","id":"0:137:2196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"ANSIByteStrings","id":"0:158:2213","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13236:55667":{"id":"2:13236:55667","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:12837:3410","prim@char":"1:15741:2366"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3306:2488":{"id":"2:3306:2488","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3308:167","2:3309:335"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3252:2483":{"id":"2:3252:2483","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3254:167","2:3255:1326"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:189:1923":{"id":"0:189:1923","crate_id":0,"name":"write_to","span":{"filename":"src/display.rs","begin":[238,4],"end":[241,5]},"visibility":"public","docs":"Write `ANSIByteStrings` to an `io::Write`.  This writes the minimal\nescape sequences for the associated `Style`s around each set of\nbytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["w",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"W"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:3953:191","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"io::Write","id":"1:4596:1910","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2782-0:269:1692":{"id":"b:2:2782-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2776:94","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2784:2171"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:65:697":{"id":"0:65:697","crate_id":0,"name":"hidden","span":{"filename":"src/style.rs","begin":[156,4],"end":[158,5]},"visibility":"public","docs":"Returns a `Style` with the hidden property set.\n\n# Examples\n\n```\nuse ansi_term::Style;\n\nlet style = Style::new().hidden();\nprintln!(\"{}\", style.paint(\"ahoy\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6067:2925":{"id":"5:6067:2925","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8280:132":{"id":"2:8280:132","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8282:664"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12847:3411":{"id":"2:12847:3411","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12849:3413","2:12850:57871","2:12851:57872","2:12852:57873","2:12853:57875","2:12854:57874","2:12855:57876"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:292:1827":{"id":"0:292:1827","crate_id":0,"name":"Green","span":{"filename":"src/style.rs","begin":[268,4],"end":[268,9]},"visibility":"default","docs":"Colour #2 (foreground code `32`, background code `42`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:285:392":{"id":"0:285:392","crate_id":0,"name":"clone","span":{"filename":"src/style.rs","begin":[12,20],"end":[12,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:265:392":{"id":"0:265:392","crate_id":0,"name":"clone","span":{"filename":"src/ansi.rs","begin":[140,9],"end":[140,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Suffix","id":"0:261:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8243:3585":{"id":"2:8243:3585","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8245:2741"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5555:3017":{"id":"1:5555:3017","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5556:54706","1:5557:4090"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10447:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10134:2760":{"id":"2:10134:2760","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10135:640"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9139:3212-0:252:1688":{"id":"a:2:9139:3212-0:252:1688","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9139:3212","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Infix","id":"0:252:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3179:196-0:244:1687":{"id":"a:2:3179:196-0:244:1687","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:776-0:244:1687":{"id":"b:5:776-0:244:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Prefix","id":"0:244:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:778:2179","5:779:2750","5:780:2751"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:272:1803":{"id":"0:272:1803","crate_id":0,"name":"is_bold","span":{"filename":"src/style.rs","begin":[23,4],"end":[23,21]},"visibility":"public","docs":"Whether this style is bold.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:12284:3985":{"id":"2:12284:3985","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12285:2697","2:12286:1924"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6087:2945":{"id":"5:6087:2945","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8341:201"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8341:201","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3179:196-0:269:1692":{"id":"a:2:3179:196-0:269:1692","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3179:196","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13274:59198":{"id":"2:13274:59198","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:12862:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9140:3211-0:269:1692":{"id":"a:2:9140:3211-0:269:1692","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9140:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[12,9],"end":[12,18]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2831:169","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:282:585","0:283:885"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:72":{"id":"0:72","crate_id":0,"name":null,"span":{"filename":"src/style.rs","begin":[311,0],"end":[461,1]},"visibility":{"restricted":{"parent":"0:56:1690","path":"::style"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:73:1897","0:74:1933","0:75:1980","0:76:1982","0:77:1937","0:78:1984","0:79:1986","0:80:697","0:81:1990","0:82:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3108-0:269:1692":{"id":"b:2:3108-0:269:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3085:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3082:145","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:269:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3111:2198"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13303:14494":{"id":"2:13303:14494","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12837:3410","prim@char":"1:15741:2366"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47192:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:12847:3411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5821:3997":{"id":"5:5821:3997","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5823:167","5:5824:32885"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3431:128":{"id":"2:3431:128","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:167","2:3434:362"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2785-0:287:1691":{"id":"b:2:2785-0:287:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2779:2471","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Colour","id":"0:287:1691","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2787:52938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:152:206":{"id":"0:152:206","crate_id":0,"name":"Target","span":{"filename":"src/display.rs","begin":[122,4],"end":[122,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"generic","inner":"S"},"generics":{"params":[],"where_predicates":[]}}},"0:131":{"id":"0:131","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[34,0],"end":[42,1]},"visibility":{"restricted":{"parent":"0:102:1696","path":"::display"}},"docs":"Cloning an `ANSIGenericString` will clone its underlying string.\n\n# Examples\n\n```\nuse ansi_term::ANSIString;\n\nlet plain_string = ANSIString::from(\"a plain string\");\nlet clone_string = plain_string.clone();\nassert_eq!(clone_string, plain_string);\n```","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"S","kind":{"type":{"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3184:1795","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Owned","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:772:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"fmt::Debug","id":"2:10119:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2801:101","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ANSIGenericString","id":"0:338:2176","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}},"param_names":[]}},"items":["0:134:392"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6769:2975":{"id":"1:6769:2975","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6770:55067"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3425:126":{"id":"2:3425:126","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3427:360"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3428:127","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"17:9592:124":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:6465:3045":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:12195:5378":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:5996:4521":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:547:4393":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:2877:170":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:46300:3566":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:8020:3258":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"17:10407:4752":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:23489:2979":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:10535:10755":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:13240:5668":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:3350:2498":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:13949:137":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:3274:2481":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:10728:2979":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:11944:2698":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:5406:3323":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:23587:3852":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:5433:4375":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:2184:4948":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:4226:4946":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:3076:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:5360:4371":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:11767:5298":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:3276:2172":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:53107:7393":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:49404:2924":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:2866:4650":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:12847:3411":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:3290:2484":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:563:6335":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:9065:46339":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:4199:3102":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:1642:3128":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:4734:5920":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"9:41:4212":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:3341:2496":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:15742:2367":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:49736:3427":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:12262:5388":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:2458:7762":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:48486:3134":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:48960:3781":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:22375:2674":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:50139:2992":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:53221:7401":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:49059:3789":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:10975:7693":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:22799:15942":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:9332:4808":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:24419:3860":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:8317:4089":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:12771:5488":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:4621:2918":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:12182:5377":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:9689:60212":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"0:292:1827":{"crate_id":0,"path":["ansi_term","Colour","Green"],"kind":"variant"},"15:230:4314":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:12982:5551":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:6239:4057":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"18:0:2348":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:10068:191":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:12629:3769":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:51211:3643":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:13282:5682":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:11794:5307":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"9:1056:4222":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:10558:11766":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:5359:6944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"5:3823:4946":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"0:231:2282":{"crate_id":0,"path":["ansi_term","unstyle"],"kind":"function"},"2:9141:3243":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11822:167":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:12373:5421":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:3299:2491":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:2831:169":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:10788:7682":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:4995:5928":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:14037:2941":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:11121:3772":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:45665:185":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:14364:7500":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:12518:3801":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:2140:1029":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"0:338:2176":{"crate_id":0,"path":["ansi_term","ANSIGenericString"],"kind":"struct"},"11:0:2342":{"crate_id":11,"path":["adler"],"kind":"module"},"1:6698:2969":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:55872:221":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:1190:10757":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:3261:3286":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:6718:4686":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:10541:3111":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"0:296:1830":{"crate_id":0,"path":["ansi_term","Colour","Blue"],"kind":"variant"},"16:7333:4498":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:2213:3459":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:10584:2919":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"2:6525:57869":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:14341:7492":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"5:1619:3116":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:15744:2368":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:8119:58895":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:45573:180":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:11932:5329":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:0:2346":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:24317:3261":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:6773:3571":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:38505:2991":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:14958:3087":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:3345:2497":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:23845:7222":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:6569:4683":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:6591:4537":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:6746:2903":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"10:0:2341":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:6357:4530":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"9:0:2340":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:2565:123":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"16:7250:4553":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:2159:2698":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:6731:4687":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:4614:5916":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:6999:4542":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:10994:2920":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"5:8088:2698":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:46183:3890":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:6654:4015":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:4827:3725":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:46088:3052":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:47963:2759":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:22403:57693":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:45619:184":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:49467:3816":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"0:244:1687":{"crate_id":0,"path":["ansi_term","Prefix"],"kind":"struct"},"16:6014:4522":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:9649:7655":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:47250:2698":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:12555:3804":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:21:652":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:4596:1910":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:52627:3621":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"16:6072:4364":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:3091:4712":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:1482:3103":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:49433:3813":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2855:165":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:5273:4412":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:3554:2504":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:4281:6700":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:10584:4789":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:5292:6902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:4641:5917":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:5314:5141":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"12:1855:141":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:11427:3151":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:13810:5836":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:5159:6836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:10343:142":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:4203:6684":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:13986:5881":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:15765:2387":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:11030:123":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:5114:2775":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:11726:5288":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"12:396:4298":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:50973:3630":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:11009:3769":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:7894:4515":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:5371:6951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:0:2347":{"crate_id":17,"path":["object"],"kind":"module"},"6:5282:6895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:47363:3063":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:49254:3775":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:2754:4408":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:1591:3115":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:2204:3458":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:52943:3610":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:10611:7680":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:10722:114":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:57142:7411":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"6:5528:6994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"12:840:3116":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"12:469:60205":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:13746:57680":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"6:6176:7143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:50109:154":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:3652:2509":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:9615:3310":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:2991:4663":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:6644:7177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:11100:4746":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:13365:7760":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"5:5772:4946":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:49218:3803":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:53153:7397":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:10304:4755":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:3972:6592":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:1630:6439":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:6780:4540":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:3268:2482":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:46200:3891":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"14:231:4005":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:1501:3121":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:6607:7074":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:11844:4972":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:23938:3926":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:11678:5275":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:12837:3410":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:4955:5927":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:1729:3329":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:8727:7765":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:12725:5481":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:12118:5368":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:32056:3911":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"1:13758:3183":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:10128:4824":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:5459:6980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:3878:4113":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:3681:2512":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"12:1651:4305":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:11020:3026":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"6:161:39472":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:610:6360":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:8849:4738":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:12040:5351":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:4791:3724":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:10334:4996":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:3487:2502":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:5649:3004":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:543:6318":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:14043:2939":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:4427:3063":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:46248:4966":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:49150:2923":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:9743:4993":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:47302:38958":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:3563:2926":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:2512:4753":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:7185:4547":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:1647:3119":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:4470:6788":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:2397:7759":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:8247:3584":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:49120:3797":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:5705:3009":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:4605:57237":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:10353:4758":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:599:6355":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"18:896:4848":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:5857:4955":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:11458:5235":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:4013:6613":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:24555:3863":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"5:4683:4951":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:37324:164":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:11539:5252":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:4646:3511":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:12521:5446":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:6219:4527":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:6769:2975":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:13356:5701":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:10635:5158":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:50941:7351":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:909:93":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:6269:4529":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:49272:3776":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:1736:6506":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:3732:156":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:10984:2919":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:5975:4520":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:10160:5153":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:591:6350":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:47293:3896":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:10690:3015":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:5672:4388":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:9349:7799":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:48733:3990":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:7738:4555":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:3172:4655":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:4448:5912":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:45749:3528":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:2912:4651":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:12645:5473":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:2836:120":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:50127:2993":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:24589:3864":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"12:2309:6214":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:14769:3184":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:11014:2924":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"0:232:2284":{"crate_id":0,"path":["ansi_term","unstyled_len"],"kind":"function"},"17:13477:5729":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:4671:5918":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:11152:7472":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:10738:2932":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"9:996:4228":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"0:307:1841":{"crate_id":0,"path":["ansi_term","Colour","RGB"],"kind":"variant"},"2:49300:3806":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:10061:7665":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"12:1688:4307":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:53206:7400":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:3549:5902":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"12:853:3117":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:10250:7738":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:13550:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:15756:2378":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:4410:6759":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:9759:7657":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:3954:4946":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:2431:3450":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:8276:3149":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:7545:3179":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:5486:10759":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:10529:5157":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:51820:3644":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:10132:2759":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:11177:3319":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"13:120:44655":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:10678:3270":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:4040:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:1497:3120":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:11470:3152":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:4193:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:9806:3756":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:46427:3560":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:11993:5345":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9162:4741":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:13788:5831":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:8111:4083":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:13554:5752":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:7550:2704":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:5274:6890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:13402:5710":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"9:722:4163":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"16:6620:4681":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:5707:4389":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:10477:4811":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:4317:6717":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:12208:5380":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:6155:7129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"18:782:5049":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:1415:3063":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:10317:4754":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:2177:1911":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"18:136:52629":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:13912:5866":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:49200:3802":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:11129:52964":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:14346:7494":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:12069:3221":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"18:650:4849":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:3862:6521":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:14326:2980":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:50812:3629":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"12:2009:2698":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:1530:3125":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:13453:5722":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:4267:3300":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:5420:6970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:894:3233":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:10140:2762":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:8284:147":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:1533:6382":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:46379:3557":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:4371:6745":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:7884:4487":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:7928:3528":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:8271:4087":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:1446:3116":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:52880:3645":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:10520:10753":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:11166:3317":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:11200:3775":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:3743:3063":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:10071:4827":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:10926:7689":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:3623:2505":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:6644:4538":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:1157:10756":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:22388:57693":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:15741:2366":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:6695:2971":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:12456:5437":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:11231:4742":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"5:2314:4124":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:12578:3805":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:0:776":{"crate_id":6,"path":["libc"],"kind":"module"},"16:7549:4488":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:11888:54727":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"16:6126:4523":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:1475:3129":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:4262:6688":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:14708:5001":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:8177:3258":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:48942:3779":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:12862:3414":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:7073:4543":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"0:298:1832":{"crate_id":0,"path":["ansi_term","Colour","Purple"],"kind":"variant"},"6:6864:7181":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:13506:5737":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:10052:7664":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:3431:128":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:9801:3755":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:7195:4548":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:15761:2383":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:48189:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:47581:79":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:6107:3334":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:9440:5146":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:7228:172":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:11480:3063":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:9368:5144":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:1524:3124":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:3294:2486":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:6923:7194":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:4899:3024":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"6:1540:6385":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:52091:3627":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"0:290:1825":{"crate_id":0,"path":["ansi_term","Colour","Red"],"kind":"variant"},"1:8298:4112":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"6:511:6302":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:11555:5256":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:49599:3422":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:45721:2506":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:8861:3209":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:1472:3102":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"0:304:1838":{"crate_id":0,"path":["ansi_term","Colour","Fixed"],"kind":"variant"},"1:7403:115":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:3939:5906":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:12776:3159":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:15747:2371":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:49449:3815":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:1658:3120":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:3320:1911":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:12073:5361":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:9600:60214":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"0:287:1691":{"crate_id":0,"path":["ansi_term","Colour"],"kind":"enum"},"2:49759:7748":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:9521:53361":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:47749:82":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:47497:78":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:8534:3344":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4272:6695":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:6051:7078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:6367:3021":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:6768:4690":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:10200:7667":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:584:6347":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:3429:4410":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:51457:3612":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:1563:6395":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:5071:2774":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:3908:3207":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:50868:3650":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:13685:5811":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:50095:3836":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:46124:3971":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:11221:3384":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:46436:3561":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:6366:4312":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:3187:203":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:51085:7353":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:10403:4762":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:900:3234":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"18:712:2674":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:14872:3194":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:53116:7394":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:50835:3617":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:50032:187":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:6935:7196":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:4790:5922":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:11358:4784":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:10962:2916":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:11001:7695":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:1760:6515":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:12756:5487":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:47413:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:10950:7691":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:52060:3624":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:55820:221":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12582:5455":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:9769:60211":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:48737:3989":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:11809:5313":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:7182:7764":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:15754:2376":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"5:8094:4082":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:6124:7103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:7636:3482":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:23751:3673":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:5766:4396":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:47225:2697":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:4871:2771":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:23863:38710":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:15766:2388":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:4419:6765":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:49126:3798":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:7822:4964":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:5231:5930":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"9:234:4187":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"6:4478:6790":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:5421:4374":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:10558:7674":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:8954:4787":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"12:160:4296":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:14411:53025":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:3218:4657":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:12795:5498":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:15762:2384":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:5555:3017":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:519:6307":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:13641:173":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:4101:6657":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:9296:5143":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:10378:3109":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:12343:5402":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:6028:7077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:46338:3553":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:46117:3970":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:10844:4766":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:10827:4782":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:47455:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"16:7378:4484":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:15763:2385":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:10934:2947":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:49674:3424":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:12547:124":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:49878:3827":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:49458:3052":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"11:46:6219":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:53096:7392":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:677:138":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:7205:4549":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:24521:3862":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:12442:5435":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"0:229:2273":{"crate_id":0,"path":["ansi_term","sub_string"],"kind":"function"},"16:4922:5926":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:10122:106":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:15759:2381":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:7279:4699":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:12507:5443":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:24283:3858":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"0:135:2193":{"crate_id":0,"path":["ansi_term","ANSIString"],"kind":"typedef"},"2:48989:3784":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:3157:111":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:6005:7059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:50739:7350":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:7863:4975":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"12:949:3123":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:23768:7213":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:55859:221":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:2013:3102":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:11970:3068":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:11246:3337":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:22441:57775":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:46110:3815":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"12:463:60204":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"12:937:3122":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:7406:4483":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:3325:4073":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:11604:5264":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:10377:4756":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:10309:4994":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"12:1762:4944":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:1527:6379":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:1572:6401":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"18:729:60223":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:11434:5221":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:7119:4414":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:13532:5747":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:8280:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46318:3551":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:3428:127":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:3092:212":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:8328:116":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"14:56:5236":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:4890:5925":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:13565:146":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:7856:4558":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:45756:3529":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:12028:5349":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:11328:5488":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:12385:5423":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:11696:5284":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:12556:4998":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:3338:4406":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:4494:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:14554:7770":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:7295:4497":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:7786:4490":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:51589:7359":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"9:900:6269":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:14351:3014":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:10516:4814":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:12059:3356":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"12:1667:4306":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:47242:3115":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:6577:4536":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:8170:2698":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:11172:3318":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:4612:220":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:6858:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:10248:5215":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:4290:3115":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:8335:7202":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"6:3905:6549":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:8364:4003":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:50086:3835":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:53191:7399":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:12632:5472":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"9:1075:4230":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:49093:3899":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:32214:57624":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"1:12054:3169":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:10941:2949":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:2190:3454":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"18:610:4850":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:696:3229":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:15723:52969":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:11962:5338":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:12480:5440":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:12685:5476":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:11001:2921":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"12:1144:3128":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:10179:5155":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:9943:60219":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:4614:2915":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:5299:186":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:3108:124":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:10571:7677":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:4557:2913":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:9261:3411":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12234:5383":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:5428:6972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:3028:58831":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:12015:3071":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:9404:5145":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:12594:3808":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:49553:3415":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:46150:3722":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:10489:4813":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:45598:181":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"11:54:4282":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:4255:3336":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:2246:4125":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"5:3023:59186":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:10599:7679":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:10140:4766":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:1446:3128":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:12610:5461":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:1908:40775":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:11118:46344":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:1547:6387":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:4535:5915":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:11304:46345":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:13733:5812":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:4385:2940":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"13:232:6209":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:7525:3178":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:15246:4323":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:7392:4485":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:3024:7198":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:10814:4781":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:14377:125":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:3282:2487":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:9551:4739":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"12:1100:3126":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:9839:4766":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:7453:4480":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:607:7652":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:5384:4372":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:1518:3123":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"5:5817:3995":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:605:6358":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:7987:2947":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"14:189:7724":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"12:556:139":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:3365:4407":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:7342:4512":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"9:927:44410":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:2852:166":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"12:2025:3104":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:3191:205":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:6887:7187":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:10912:7685":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:51133:3651":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:11847:5321":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:9264:5141":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:10130:2758":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:13746:5818":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:8376:3066":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:4401:6756":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:46094:3969":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:23809:3668":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:5821:3997":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:13180:5654":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13446:5721":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:4480:2948":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:11228:3777":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:7573:3181":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:3966:6590":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:3892:6539":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:7738:3549":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:9961:7661":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:49354:3809":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"12:812:3120":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:48523:3149":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11653:5273":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:3064:4711":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:45509:2511":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:51004:3618":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"14:194:44683":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:12094:3224":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:10138:2761":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:10081:4764":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:13054:5610":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:4183:6682":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:12095:5362":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"18:829:4843":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:3321:2492":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:4073:6641":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:4270:3301":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:1302:139":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"9:686:4160":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:45688:2503":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:48541:7343":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:8760:3097":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:46479:2920":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:10704:125":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:4377:6748":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:8352:4002":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"12:761:3115":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:49882:3828":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:2183:3105":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:3392:4666":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"12:892:4284":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:11048:3770":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:48979:3783":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:3945:6582":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:53142:7396":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:37348:2674":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:4164:6681":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"18:636:5049":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:14394:114":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:10673:46527":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:49108:3602":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:9528:2921":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:10126:115":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:616:6363":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:45987:7310":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:10623:7681":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"18:801:4840":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:22650:3043":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:22835:2979":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"12:2331:3096":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:13862:3837":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:6068:7080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:14401:2914":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:12284:3985":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:6670:4028":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:4083:6648":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:4347:6732":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:9186:4786":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:11254:4740":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"12:2039:3105":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:14571:3186":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:4439:6775":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:7420:4500":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"17:13465:5728":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:10224:7669":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:3440:2930":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"5:1080:4946":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13598:5762":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:55846:221":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:8929:46336":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:11628:5268":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:8353:2608":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:53087:7391":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:13627:5769":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:3311:2489":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:5312:6918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:11336:1687":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:3264:4659":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:10136:175":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"5:7355:2698":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:12327:5397":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:13942:5874":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:13370:5703":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:4936:2773":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:8482:153":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:2889:4669":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:4539:2911":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:6839:2977":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"19:117:5044":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:3465:2510":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:8293:2609":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:13978:5878":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:5987:7050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:537:6315":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:11159:3773":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:11936:3064":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:11750:5290":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:4023:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:50718:7349":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:5563:7019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:23901:38711":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:6936:3993":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:6345:2969":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7514:4499":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:6464:4492":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:49168:3772":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:15136:3316":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:294:7649":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:8763:3493":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:13676:7740":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:6614:7174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:14927:3085":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:11665:5274":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:7146:4544":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:50764:3649":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:3906:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:3247:2469":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:10821:3205":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:2543:4810":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:4627:4951":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:772:207":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:6087:4477":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:4241:6687":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:32062:57623":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"2:46388:3570":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:13384:53355":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:23837:7221":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:2801:101":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:5627:3001":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:4459:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:4506:5914":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:4704:5919":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:7151:7764":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:8578:3345":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:46009:3718":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:11050:3032":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"5:1581:3063":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10236:4727":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:7571:4476":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:15745:2369":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"6:624:6368":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:55807:221":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11080:3200":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"6:4364:6743":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:49414:3811":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:12142:5370":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:6964:3894":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:6200:7153":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:49028:3786":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:49886:3822":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:51409:3608":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4120:6667":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"0:288:1823":{"crate_id":0,"path":["ansi_term","Colour","Black"],"kind":"variant"},"2:47311:174":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:6136:4518":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:3235:3276":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:4127:6669":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:13119:5647":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:5077:640":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:13780:5830":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:52738:3641":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"12:1253:3129":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:0:262":{"crate_id":5,"path":["alloc"],"kind":"module"},"18:774:5049":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:6634:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:13192:5659":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:45557:182":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:9729:60216":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:46417:3559":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:10041:7663":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:22644:3041":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:10447:2979":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:1596:6418":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:48326:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:46695:2948":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:5522:4382":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:27770:3591":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:6861:2972":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:12598:5459":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:10458:5103":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:542:4415":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:375:4072":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:4:958":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:8060:2244":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:3997:6608":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11822:5317":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"0:294:1828":{"crate_id":0,"path":["ansi_term","Colour","Yellow"],"kind":"variant"},"18:152:52630":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:2294:4141":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:13331:5693":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:4499:4101":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"6:6185:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:11738:5289":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13377:5705":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:4417:5911":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:4307:2942":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:7194:3102":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:46370:3556":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:51432:3611":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:11378:4783":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12408:5432":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:1488:3118":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:7303:4554":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:3953:191":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:4230:5907":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:23822:3669":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:4523:6808":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"12:866:3102":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:10579:4131":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:45981:3052":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4005:6610":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:4823:5923":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:5561:2246":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:2773:4675":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:7236:4552":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:5838:3383":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:2723:2989":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:7360:180":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:52013:3620":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:47665:80":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:23966:3877":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:3411:2499":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:3189:103":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:1744:6510":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:3359:4074":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"12:747:3063":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:2162:3102":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:9225:3040":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:3664:3514":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:1507:3122":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:3284:92":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"12:930:3121":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"0:269:1692":{"crate_id":0,"path":["ansi_term","Style"],"kind":"struct"},"2:9643:76":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"15:269:4319":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"12:976:3125":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:51851:3647":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:12913:3417":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13386:5706":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:24385:3262":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:8813:3364":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:22846:3605":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:3113:3272":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:6636:7175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:7820:53349":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"2:13600:58059":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:46356:7321":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:1665:6468":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:3088:213":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13258:5676":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:46131:3972":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:5281:3315":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:3951:6583":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:13852:3451":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:14834:3076":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:13799:5835":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:46448:3562":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:12010:5348":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:12431:5433":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4325:6721":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:9516:4990":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"0:300:1834":{"crate_id":0,"path":["ansi_term","Colour","Cyan"],"kind":"variant"},"2:2867:163":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:4425:6767":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:9648:4991":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"1:2155:3063":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:1622:6434":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:11928:3063":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"5:8303:4088":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:5007:3732":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:3220:2607":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:49890:3823":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:1041:3048":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:3252:2483":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:6152:4479":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:5191:6854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:9653:4992":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"17:12783:5491":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:12287:5390":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:5241:6877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:47192:162":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:46287:2919":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:5295:44760":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:46025:3720":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:11877:53028":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:47539:85":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:5407:4373":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:3756:3115":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:7158:4545":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:9245:4722":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11572:5258":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:13163:5652":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:3116:2912":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:13067:38997":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"0:156:2208":{"crate_id":0,"path":["ansi_term","ANSIStrings"],"kind":"function"},"16:6110:4517":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"12:112:60203":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:2115:7204":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:7804:4489":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:50899:3638":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:8243:3585":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:6603:7070":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:6910:7193":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:4300:6708":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:46458:3563":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"12:1180:4293":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11915:5323":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:3179:196":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:10474:3256":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:10962:7692":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:15746:2370":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:4658:99":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:51384:3626":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"9:27:4211":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:6893:7188":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:10331:4766":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:11226:3387":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:46328:3552":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"0:158:2213":{"crate_id":0,"path":["ansi_term","ANSIByteStrings"],"kind":"typedef"},"16:6744:4688":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:7024:4697":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:10746:2934":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:4304:5908":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:3772:5904":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:5635:3002":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:3346:3105":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"18:766:5060":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:2843:4649":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"18:169:52631":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:23953:3878":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"18:620:5048":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:10826:2935":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:13574:5758":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:681:5215":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:6771:2976":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:1152:7753":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:5130:6812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:3313:3063":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:4133:6671":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:1459:3117":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:9133:46341":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:6100:7091":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:3333:2494":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:531:6313":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:4157:4790":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:3195:4656":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:24487:3190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:10134:2760":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:5998:7055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:11240:3317":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:10435:7670":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6238:4482":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:2968:4652":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:10383:3546":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:51509:7357":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:5210:6856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:15235:4323":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"12:784:3119":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:1132:2995":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:3990:6604":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"18:849:4844":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:11044:3027":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"5:3472:3103":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:24249:3857":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:10656:5160":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:7843:4557":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:5472:4379":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:12064:3220":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:15076:3035":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:4284:2698":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"18:744:60222":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:11779:5301":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"12:1200:4294":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:1628:3117":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:49568:3418":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:4512:2903":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:5400:6964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:2779:2471":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:48274:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:1619:3126":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:49725:3426":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:2765:2990":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"0:154:2208":{"crate_id":0,"path":["ansi_term","ANSIStrings"],"kind":"typedef"},"17:13098:5642":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:15760:2382":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:10988:7694":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"14:250:6164":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"5:1000:3063":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:32114:57620":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"12:968:3124":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:1602:6420":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:12494:5442":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:7753:219":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:49916:3227":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:55885:221":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"14:47:7724":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:2456:7761":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:1430:3126":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:10683:3014":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:5522:6993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:14971:3093":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:14864:7503":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:11109:7466":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:47956:2757":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:10119:106":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:11045:46343":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:11318:14094":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:3079:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:5595:4386":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:53127:7395":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:1827:4946":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"12:774:2698":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"7:0:1449":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:48502:3547":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:4449:6781":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:3868:6522":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:45763:2772":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:9648:83":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:1075:3049":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4306:6711":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"4:0:2338":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:11616:5267":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:2433:7760":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:22703:3605":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:48252:123":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:48511:142":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:5488:4380":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:7823:4491":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:8081:4975":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:11588:5263":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:5269:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4395:6755":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:9476:4989":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:983:4081":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"18:811:4841":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"12:1118:3127":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:14040:2943":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:14000:5884":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:7511:3177":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"5:8176:2698":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:7761:4556":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:9476:5147":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:5379:6952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:6605:4494":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:12568:5453":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:7426:4946":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"5:1224:4123":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:24959:3707":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:52277:3633":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:15707:7962":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:7264:4495":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:1584:6410":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:8103:3102":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:13564:5755":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:4145:6680":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:13865:5852":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:48207:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:4112:6662":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4046:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:13488:5733":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:4060:6635":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:7615:4058":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:6221:7165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:4945:3727":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:1658:6464":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:5399:2903":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:2776:94":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:7628:3183":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:5969:7043":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:1651:3129":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:9659:60217":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:13456:3167":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:3207:2668":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:10448:4729":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:6852:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:12275:5389":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:49442:3814":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:9027:3219":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"12:2303:6213":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:1602:2698":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:632:6373":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:45728:2994":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:5580:4385":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:10575:7770":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:7686:3189":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:12856:3413":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:22420:57777":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:5736:4392":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:14814:7502":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:14:1697":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:53029:3648":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:12917:5500":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:9971:60213":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:14558:3018":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:5167:6838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"12:377:4299":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:12221:5381":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:4511:6803":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:5505:4381":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:13205:5664":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:11074:3033":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"6:5386:6953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:5683:3005":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:10079:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:6413:4311":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"14:11:7724":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:11640:5271":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:11199:5211":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:15755:2377":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:12552:5452":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:12247:5385":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:11482:5236":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:11242:3778":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:1678:4120":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:6807:4541":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:3110:3271":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:6252:4528":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:46063:3816":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:10069:1910":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"9:749:4164":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:11711:3791":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:15157:3323":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:5766:3380":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"5:1204:4122":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:48310:2756":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:23931:7234":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:9719:7656":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:4066:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"18:644:4852":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"15:0:2345":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:1236:7653":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:23493:3599":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:13760:5824":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"9:776:4209":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:46278:3565":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:49858:3821":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:47970:2760":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:47319:191":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:8369:3065":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:5346:4478":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:5029:5929":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:3249:3280":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:3118:4665":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:10279:4764":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:49894:117":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:10420:4751":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:5815:4398":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:48494:7338":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:10938:7690":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4387:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:9210:46342":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:7797:4960":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:11277:5212":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:5507:3656":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:9799:7658":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:51027:3622":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"14:0:2344":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:8362:188":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:4052:6630":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:3866:2934":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:5091:2671":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:6091:7087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:6881:7186":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:8149:4010":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:2004:2903":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:12712:5480":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:2027:141":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:8626:3354":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:7815:3257":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"6:578:6344":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:10917:3063":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:12168:5165":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:783:4993":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:3257:2480":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:13609:5766":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:2733:4366":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:51773:3640":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:46468:3567":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:2537:4128":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:48891:3774":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:2582:7763":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:3286:2485":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:12051:5352":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:3617:2933":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:2945:4674":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:46670:7325":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:8268:3258":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"2:3337:2495":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:7559:3180":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:11519:5251":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:8133:2698":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:14118:3240":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:13154:5648":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:11232:3328":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:38568:2669":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:11895:7489":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:5889:3389":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"12:181:4300":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:4762:5921":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"12:429:4297":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:51234:3646":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:6101:4475":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"12:2315:60202":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"5:7593:4057":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:0:471":{"crate_id":2,"path":["core"],"kind":"module"},"5:6393:208":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:569:6338":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:6593:3004":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:13772:5827":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"13:0:2337":{"crate_id":13,"path":["std_detect"],"kind":"module"},"6:1522:6377":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"5:7239:4946":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:6682:4493":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:49372:3810":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:670:39803":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"5:3032:58830":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:510:7651":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:46050:3974":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:13219:3330":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"18:694:4855":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:24351:3859":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"12:0:2343":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:12155:5373":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:4008:7654":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:1723:6503":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:4689:3449":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:5693:3006":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:49746:3428":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:7226:4551":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:8223:3096":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:3085:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:1554:6390":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:13272:5681":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:51330:3619":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:55727:3595":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:3640:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:52126:3609":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:9005:46337":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"0:355:2205":{"crate_id":0,"path":["ansi_term","ANSIGenericStrings"],"kind":"struct"},"1:10259:7777":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"18:866:4846":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:3082:145":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:13497:5736":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:5632:4387":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:22844:3606":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13637:5774":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:3800:5905":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:14943:3086":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:3184:1795":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"5:421:2610":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:22792:2979":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:51613:7360":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:14782:3185":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:13306:5684":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:10095:4821":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:14977:3094":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"12:1159:4292":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:11499:5241":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:13819:5838":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:11086:3771":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:53168:7398":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"7:85:44313":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:4576:2903":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"18:790:4839":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:4386:5910":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:13041:5603":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:6812:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:5790:4397":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:5221:6864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:51046:7352":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:46489:3564":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"0:261:1689":{"crate_id":0,"path":["ansi_term","Suffix"],"kind":"struct"},"1:10730:3293":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:49582:3421":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:3014:3481":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:13062:7739":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:51557:7358":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:53283:7403":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:23885:38702":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:11947:5333":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:8141:180":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:9849:60218":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:4358:6740":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:3022:2179":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:2761:4127":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:10816:3204":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:4431:6770":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:10966:2923":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:46408:3572":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:299:7650":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:4331:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:24215:3856":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:11486:3154":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"3:300:191":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:15753:2375":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:2692:560":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:11873:7488":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"1:12554:3270":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:12217:7761":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"0:0:1677":{"crate_id":0,"path":["ansi_term"],"kind":"module"},"6:5436:6974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:50787:3637":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:51361:3623":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13172:5653":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:2816:4668":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:4517:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:51283:3631":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:1549:91":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:3718:2513":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:5228:6868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:3287:4660":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:9034:46338":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:12946:5520":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:47949:2758":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:3306:2488":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:5561:4384":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:3354:3104":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:10128:2757":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"0:252:1688":{"crate_id":0,"path":["ansi_term","Infix"],"kind":"struct"},"1:11077:3034":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"5:2202:4076":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"8:0:2339":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:3398:112":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:46040:3973":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:15740:2365":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:10468:4812":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:15712:10758":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:8691:158":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:13720:3181":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"12:354:6210":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:11214:3776":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:6166:4524":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:0:1302":{"crate_id":1,"path":["std"],"kind":"module"},"17:11714:5285":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:11082:4744":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:5753:4395":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:6636:4496":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:6331:3555":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:5456:4376":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:51180:3639":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:48969:3782":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:49929:3908":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"17:9088:46340":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:13884:5857":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:5871:4958":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"1:5868:3386":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:22443:57779":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"18:704:5049":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"18:837:3413":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:1461:3127":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:22422:57780":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:11015:7696":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:11047:3028":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"12:2032:1911":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:7093:4960":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:15758:2380":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:13520:5744":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:46677:3213":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:11981:5343":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:10543:5197":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:15491:5002":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:5953:7031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:6605:7072":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:46704:7328":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:8951:3174":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:55833:221":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3380:3106":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:10551:3130":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:9574:4745":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:4215:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:2362:581":{"crate_id":1,"path":["std","env"],"kind":"module"},"0:302:1836":{"crate_id":0,"path":["ansi_term","Colour","White"],"kind":"variant"},"17:13221:5667":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:12074:3076":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:5520:4015":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:13620:5767":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:10887:5194":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"12:2045:3106":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:12039:3350":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:4852:5924":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:4293:6707":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"18:754:60221":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:13583:3192":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:1617:6432":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"15:248:4315":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11147:5207":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12741:5483":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:820:4993":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"17:11159:5208":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:2166:3103":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:12699:5479":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:3278:2470":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:4501:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:5197:6855":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:11186:5209":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:15757:2379":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:13318:5687":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:6176:4525":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:8419:3103":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"12:1235:4295":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:6227:3335":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:10333:138":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:6767:2973":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:10448:3230":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:49050:3788":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"12:2018:3103":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:5990:3325":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:11835:5318":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"3:0:413":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:1493:3119":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:47234:3063":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11970:5340":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:49866:3826":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:15098:3315":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:3743:4778":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:10469:3238":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:4341:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:14686:1914":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:4634:3510":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:6032:4413":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:14702:5000":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:49530:3412":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:3522:5066":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:47623:86":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:11265:2970":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:3972:3520":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:53244:7402":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:11497:3155":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:49318:3807":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:1438:2698":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:7915:3258":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:46347:3554":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"9:1020:4229":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:46309:3569":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:8253:98":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:6214:7162":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:10950:2914":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:5860:3385":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:10673:3023":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:11835:3184":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:32015:3885":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"5:4583:4949":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"16:3041:4654":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:3018:4653":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:15211:7507":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:5978:7049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:4033:6622":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:8527:3342":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:31875:3921":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:1311:4828":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:7467:4481":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:57121:7410":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:45996:3717":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:49136:2921":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"12:925:3118":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:5717:4391":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:11026:7697":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:6106:7092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6518:4534":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:15764:2386":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:3714:5903":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:49711:3425":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:5855:4399":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:1708:6494":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:13933:5872":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:13348:5698":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:3646:2507":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:1018:3258":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11406:5217":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:6391:4531":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:5314:3965":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:5876:3388":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"0:137:2196":{"crate_id":0,"path":["ansi_term","ANSIByteString"],"kind":"typedef"},"2:14021:3080":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:3262:2479":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:8902:46335":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:6424:4532":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:5062:3733":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"7:38:44306":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:5697:3007":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"16:7216:4550":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:1149:7751":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:7013:14093":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:49069:3790":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:5941:175":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:11744:3792":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:11337:4809":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:2314:4757":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:6870:7182":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:4940:3726":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:1676:6476":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:6691:4539":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"18:857:4845":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"9:157:4179":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"12:877:3103":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:13736:53348":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:51934:3632":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:11850:3185":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:3483:2501":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:11410:3150":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:2320:3222":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:46165:97":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:6208:4526":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:13582:5759":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:3881:6531":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"18:667:4854":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:13590:5761":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:1717:6500":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:4346:2944":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"0:160:2213":{"crate_id":0,"path":["ansi_term","ANSIByteStrings"],"kind":"function"},"6:5407:6966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:13540:5750":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:3145:4664":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:11950:3067":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:47791:89":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:11269:7059":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"18:820:4842":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:45808:3685":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:49015:3785":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:13898:5859":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:7870:4486":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:5347:6939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:9600:3309":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:49870:3825":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:6491:4533":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:5185:6851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:46071:3968":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"17:9809:60215":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"6:3918:6559":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:12307:5396":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:3241:4658":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:88:39405":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:5469:6982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:10001:46389":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:3529:2931":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"19:0:973":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:1690:6487":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:12867:3409":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:49874:3829":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:10941:3115":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:15739:2364":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:7042:4698":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:525:6310":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"14:244:6162":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:6404:3568":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:51066:3607":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:8767:3587":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:8044:58747":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"12:2323:6216":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"9:963:4227":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:3185:2665":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:5643:3003":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:9140:3211":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:13394:5708":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:10266:4721":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:9933:7660":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:9886:7659":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:13842:5851":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:23658:3853":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:7337:171":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:6899:7189":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:1428:3115":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:47707:87":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:52990:3628":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:3955:123":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:50042:7348":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:51694:3652":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:9509:53356":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:4383:2939":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:49424:3812":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:50922:3642":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"18:885:4847":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:49647:3423":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:11214:3026":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:3957:6585":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:3197:2666":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:1633:3127":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:7174:4546":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:13904:4999":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:49041:3787":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:10737:199":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:23394:3042":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:4350:5909":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:10253:4718":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:6239:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:3425:126":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:22640:2979":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:13429:5714":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:11291:2974":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:5255:6888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:2794:4409":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:48533:7342":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:46715:7330":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:13062:5612":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:49862:3824":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:10028:7662":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:5414:6967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:781:105":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:3188:202":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"18:660:4853":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:11999:3070":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:11007:2923":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:46499:3484":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:46399:3558":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:15748:2372":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"6:3978:6595":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"9:603:7954":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:3013:2979":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:46686:7326":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:52484:3653":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:2171:3104":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:11983:3069":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"5:8286:3890":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:8341:201":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:2395:7758":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:12537:5448":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"14:216:44689":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:3935:3103":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:13296:5683":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:47388:164":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:9139:3212":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:4273:3302":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:5960:4404":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:11865:3186":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:5017:2772":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"9:692:4162":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"16:7477:4501":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:2188:3106":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:10149:7659":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"9:469:7944":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:10459:52970":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"5:1184:58862":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:3320:4713":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:52817:3625":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:11387:3149":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:8236:3133":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:3539:4974":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:13547:5751":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:23784:7216":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:6554:4535":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:10502:5156":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:7971:123":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10117:4823":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:14795:3224":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:47371:3115":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:5330:5142":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:3488:4662":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:45642:183":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:5533:757":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:4344:2943":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:4095:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:4173:2950":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"18:720:5051":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:2484:46427":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:8079:4001":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:6457:3102":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:48951:3780":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:10492:3240":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:12467:5438":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:15751:2373":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:7683:3187":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:15752:2374":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:46170:3889":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:3506:4661":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:8948:3351":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:48213:129":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:13913:187":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:3316:2490":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:912:4080":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:47259:3894":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:23729:7211":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:13831:3182":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:48222:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:9280:5142":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"9:809:3149":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:1923:3103":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:10801:7684":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:5945:7026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:13963:5877":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:6021:4648":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:4227:6686":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:48240:104":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"12:2005:3063":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:9062:7765":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:7808:3588":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:12308:3948":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:69:4052":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:9896:60210":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:10864:5193":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"18:739:1689":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:5927:4402":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:32050:3210":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:1700:6493":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:157:39471":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:11816:3182":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:5284:3316":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:13924:5868":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:53068:3613":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8796:3213":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:4305:2941":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:12659:5474":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:15220:52968":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12671:5475":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:24453:3861":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:50050:176":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:45481:2514":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:3233:3275":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:47379:2698":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:46258:7745":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:10211:7668":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:3422:2500":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:4477:5913":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:3327:2493":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:10106:4822":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:3604:5070":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:6949:4694":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:8436:4053":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:2108:559":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"5:1637:3118":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:12114:3225":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:3635:209":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:6085:7085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:5548:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:1669:180":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:3251:3281":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"}},"external_crates":{"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":15}