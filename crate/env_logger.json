{"root":"0:0:2058","crate_version":"0.10.0","includes_private":false,"index":{"0:511:2562":{"id":"0:511:2562","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:340:1762":{"id":"0:340:1762","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[301,0],"end":[301,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}},"0:491:650":{"id":"0:491:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:169:2408":{"id":"b:2:3304-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2659:222-0:543:1942":{"id":"a:2:2659:222-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2221-0:269:131":{"id":"b:2:2221-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11443:67059":{"id":"2:11443:67059","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4453:67059"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50284:4567","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2645:214-0:342:1790":{"id":"a:2:2645:214-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:591:650":{"id":"0:591:650","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2511-0:269:131":{"id":"b:2:2511-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[122,0],"end":[169,1]},"visibility":{"restricted":{"parent":"0:14:1755","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:1755","0:43:1985","0:44:1987"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2506-0:269:131":{"id":"b:2:2506-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:52:1929":{"id":"0:52:1929","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[216,4],"end":[225,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["filters",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:496:650":{"id":"0:496:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:571:1896":{"id":"b:2:2224-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:525:2657":{"id":"0:525:2657","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:527:1545"]}},"a:2:2709:2998-0:269:131":{"id":"a:2:2709:2998-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11355:2272":{"id":"2:11355:2272","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:554:650":{"id":"0:554:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2659:222-0:342:1790":{"id":"a:2:2659:222-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3304-0:36:1804":{"id":"b:2:3304-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2659:222-0:100:2492":{"id":"a:2:2659:222-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:169:2408":{"id":"0:169:2408","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2645:214-0:169:2408","a:2:7717:3002-0:169:2408","a:2:7718:3001-0:169:2408","a:2:2709:2998-0:169:2408","a:2:2659:222-0:169:2408","b:2:2511-0:169:2408","b:2:2496-0:169:2408","b:2:2506-0:169:2408","b:2:3304-0:169:2408","b:2:2500-0:169:2408","b:2:2221-0:169:2408","b:2:2224-0:169:2408","b:5:5360-0:169:2408","0:463","0:468","0:473","0:478","0:483","0:488","0:493","0:498","0:503"]}},"0:147:2431":{"id":"0:147:2431","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2556"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363:1894":{"id":"0:363:1894","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[621,4],"end":[624,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["timestamp",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"fmt::TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11348:65924":{"id":"2:11348:65924","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11347:65922"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50268:4565","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:599:1804":{"id":"b:2:2221-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:213:2514":{"id":"0:213:2514","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:476:650":{"id":"0:476:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2496-0:585:1773":{"id":"b:2:2496-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11352:63238":{"id":"2:11352:63238","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2659:222-0:169:2408":{"id":"a:2:2659:222-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:509:2422":{"id":"0:509:2422","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:215:2516":{"id":"0:215:2516","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:217:1545"]}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2506-0:571:1896":{"id":"b:2:2506-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:389:1749":{"id":"0:389:1749","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[907,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1753","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:3002-0:599:1804":{"id":"a:2:7717:3002-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11320:782":{"id":"2:11320:782","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12350:2688"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:210:224":{"id":"b:2:2221-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7718:3001-0:599:1804":{"id":"a:2:7718:3001-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2496-0:269:131":{"id":"b:2:2496-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2500-0:210:224":{"id":"b:2:2500-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2419","0:146:2559","0:147:2431"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1087,0],"end":[1094,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2221-0:585:1773":{"id":"b:2:2221-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11342:63221":{"id":"2:11342:63221","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11343:63222"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:36:1804":{"id":"b:2:2496-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:396:908":{"id":"0:396:908","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[975,4],"end":[977,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:585:1773":{"id":"b:2:2224-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7718:3001-0:269:131":{"id":"a:2:7718:3001-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:2223:1746":{"id":"2:2223:1746","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95:1895":{"id":"0:95:1895","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11345:4356":{"id":"2:11345:4356","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12350:2688"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49961:4551","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11349:3778":{"id":"2:11349:3778","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50239:2951","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[277,0],"end":[288,1]},"visibility":{"restricted":{"parent":"0:14:1755","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2659:222-0:508:2421":{"id":"a:2:2659:222-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:354:1856":{"id":"0:354:1856","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11358:63239":{"id":"2:11358:63239","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11408:2261":{"id":"2:11408:2261","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:355:1862":{"id":"0:355:1862","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:410:2012":{"id":"0:410:2012","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1044,4],"end":[1051,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:269:131":{"id":"b:2:3304-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11351:65920":{"id":"2:11351:65920","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50277:4566","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:458:2556":{"id":"b:2:3304-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:585:1773":{"id":"0:585:1773","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[317,0],"end":[320,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:2645:214-0:585:1773","a:2:7717:3002-0:585:1773","a:2:7718:3001-0:585:1773","a:2:2709:2998-0:585:1773","a:2:2659:222-0:585:1773","b:2:2511-0:585:1773","b:2:2496-0:585:1773","b:2:2506-0:585:1773","b:2:3304-0:585:1773","b:2:2500-0:585:1773","b:2:2221-0:585:1773","b:2:2224-0:585:1773","0:589","0:423","0:427"]}},"a:2:2659:222-0:458:2556":{"id":"a:2:2659:222-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2496-0:33:1757":{"id":"b:2:2496-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2659:222-0:36:1804":{"id":"a:2:2659:222-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11393:67046":{"id":"2:11393:67046","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:543:1942":{"id":"b:2:3304-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:544:2524":{"id":"0:544:2524","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:11416:67054":{"id":"2:11416:67054","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:11021:4325","prim@char":"1:12350:2688"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11046:4324","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142:1756":{"id":"0:142:1756","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:143"],"is_stripped":true}},"b:2:2224-0:508:2421":{"id":"b:2:2224-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:360:1886":{"id":"0:360:1886","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[602,4],"end":[605,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11346:2454":{"id":"2:11346:2454","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49971:2949","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:446:1830":{"id":"0:446:1830","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1242,0],"end":[1247,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3306:1432":{"id":"2:3306:1432","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46490:3876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:393:1997":{"id":"0:393:1997","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[970,4],"end":[970,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:3002-0:210:224":{"id":"a:2:7717:3002-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:33:1757":{"id":"0:33:1757","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[82,0],"end":[85,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:40","a:2:2645:214-0:33:1757","a:2:7717:3002-0:33:1757","a:2:7718:3001-0:33:1757","a:2:2709:2998-0:33:1757","a:2:2659:222-0:33:1757","b:2:2511-0:33:1757","b:2:2496-0:33:1757","b:2:2506-0:33:1757","b:2:3304-0:33:1757","b:2:2500-0:33:1757","b:2:2221-0:33:1757","b:2:2224-0:33:1757","0:60"]}},"2:11431:67057":{"id":"2:11431:67057","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:99:2437":{"id":"0:99:2437","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2492"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:361:1888":{"id":"0:361:1888","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[608,4],"end":[611,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11334:63197":{"id":"2:11334:63197","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48019:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:1987":{"id":"0:388:1987","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["metadata",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Metadata","id":"24:296:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:486:650":{"id":"0:486:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:578:1908":{"id":"0:578:1908","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"a:2:7717:3002-0:508:2421":{"id":"a:2:7717:3002-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:445:1832":{"id":"0:445:1832","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1231,0],"end":[1233,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2645:214-0:599:1804":{"id":"a:2:2645:214-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:385:1755":{"id":"0:385:1755","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[892,4],"end":[894,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2659:222-0:585:1773":{"id":"a:2:2659:222-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11441:61359":{"id":"2:11441:61359","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:517:2561":{"id":"0:517:2561","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::humantime::glob","name":"glob","id":"0:92:1756","glob":true}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11344:4586":{"id":"2:11344:4586","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12350:2688"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49955:4550","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:508:2421":{"id":"0:508:2421","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2422","0:511:2562","0:513:2563","0:515:2565","0:517:2561","0:519:2655","0:521:2564","0:523:2656","0:525:2657","0:528:2658"],"impls":["a:2:2645:214-0:508:2421","a:2:7717:3002-0:508:2421","a:2:7718:3001-0:508:2421","a:2:2709:2998-0:508:2421","a:2:2659:222-0:508:2421","b:2:2511-0:508:2421","b:2:2496-0:508:2421","b:2:2506-0:508:2421","b:2:3304-0:508:2421","b:2:2500-0:508:2421","b:2:2221-0:508:2421","b:2:2224-0:508:2421","b:5:671-0:508:2421","0:533","0:535","0:537","0:538","0:540","0:541"]}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:81:2480","glob":true}},"0:402:2006":{"id":"0:402:2006","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[1005,4],"end":[1012,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2511-0:585:1773":{"id":"b:2:2511-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:146:2559":{"id":"0:146:2559","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2556"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2195","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1117,4],"end":[1128,5]},"visibility":{"restricted":{"parent":"0:430:2018","path":"::std_fmt_impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:582:409":{"id":"0:582:409","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:100:2492":{"id":"b:2:3304-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:104:650":{"id":"0:104:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:36:1804":{"id":"b:2:2224-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:362:1891":{"id":"0:362:1891","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[615,4],"end":[618,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["indent",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:123:2480":{"id":"0:123:2480","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2060","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:458:2556","0:169:2408","0:508:2421"],"is_stripped":true}},"0:442:2036":{"id":"0:442:2036","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1217,0],"end":[1223,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2645:214-0:458:2556":{"id":"a:2:2645:214-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1756","glob":true}},"0:342:1790":{"id":"0:342:1790","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[347,0],"end":[351,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log/\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:2645:214-0:342:1790","a:2:7717:3002-0:342:1790","a:2:7718:3001-0:342:1790","a:2:2709:2998-0:342:1790","a:2:2659:222-0:342:1790","b:2:2511-0:342:1790","b:2:2496-0:342:1790","b:2:2506-0:342:1790","b:2:3304-0:342:1790","b:2:2500-0:342:1790","b:2:2221-0:342:1790","b:2:2224-0:342:1790","0:387","0:433"]}},"2:11446:55742":{"id":"2:11446:55742","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4451:55742"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50302:4568","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:379:1956":{"id":"0:379:1956","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[823,4],"end":[832,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397:1755":{"id":"0:397:1755","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[980,4],"end":[987,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["filter_env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5099:67693":{"id":"5:5099:67693","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:342:1790":{"id":"b:2:2496-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3304-0:599:1804":{"id":"b:2:3304-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2645:214-0:571:1896":{"id":"a:2:2645:214-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:381:1830":{"id":"0:381:1830","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[862,4],"end":[867,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2998-0:342:1790":{"id":"a:2:2709:2998-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2510:1419":{"id":"2:2510:1419","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:546:2526":{"id":"0:546:2526","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2657:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:278:1884":{"id":"0:278:1884","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2898:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:674:2015":{"id":"5:674:2015","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:3001-0:33:1757":{"id":"a:2:7718:3001-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7717:3002-0:458:2556":{"id":"a:2:7717:3002-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11399:67047":{"id":"2:11399:67047","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:11396:1985","`DoubleEndedIterator`":"2:7061:120","self::pattern":"2:11021:4325","prim@char":"1:12350:2688"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50207:4562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2511-0:508:2421":{"id":"b:2:2511-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5091":{"id":"5:5091","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5002:1344","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5092:67691","5:5093:2246","5:5096:67692","5:5099:67693","5:5107:67694","5:5108:67695","5:5109:2969","5:5110:61357","5:5111:61358"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11369:2252":{"id":"2:11369:2252","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11021:4325","str::rsplit":"2:11375:63232","prim@char":"1:12350:2688","`DoubleEndedIterator`":"2:7061:120","str::split_whitespace":"2:11347:65922"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49985:2893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11445:4098":{"id":"2:11445:4098","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4454:4098"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50293:4099","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:3002-0:543:1942":{"id":"a:2:7717:3002-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7717:3002-0:571:1896":{"id":"a:2:7717:3002-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:367:1907":{"id":"0:367:1907","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[642,4],"end":[644,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:100:2492":{"id":"b:2:2221-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:458:2556":{"id":"b:5:671-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2628","5:674:2015","5:675:3502"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11372:63230":{"id":"2:11372:63230","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10845:4088","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:462:409":{"id":"0:462:409","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:599:1804":{"id":"b:2:2500-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7718:3001-0:585:1773":{"id":"a:2:7718:3001-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:347:908":{"id":"0:347:908","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[411,4],"end":[413,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:384:1856":{"id":"0:384:1856","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:386:1985":{"id":"0:386:1985","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[897,4],"end":[899,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1753","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:8589:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:8589:2636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:491:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2500-0:269:131":{"id":"b:2:2500-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:176:2566":{"id":"0:176:2566","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5092:67691":{"id":"5:5092:67691","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1878","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1878","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:471:650":{"id":"0:471:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:210:224":{"id":"b:2:2224-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2500-0:571:1896":{"id":"b:2:2500-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2645:214-0:585:1773":{"id":"a:2:2645:214-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:675:3502":{"id":"5:675:3502","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11387:63236":{"id":"2:11387:63236","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:11021:4325","str::splitn":"2:11384:63234","prim@char":"1:12350:2688"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50107:4085","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2511-0:543:1942":{"id":"b:2:2511-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[58,0],"end":[66,1]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WritableTarget","id":"0:222:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:231:668"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2506-0:585:1773":{"id":"b:2:2506-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3304-0:33:1757":{"id":"b:2:3304-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:481:650":{"id":"0:481:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:599:1804":{"id":"b:2:2224-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:217:1545":{"id":"0:217:1545","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1878","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"io::Write","id":"1:3457:2399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}},"2:11336:63198":{"id":"2:11336:63198","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:571:1896":{"id":"b:2:2496-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11405:67049":{"id":"2:11405:67049","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11021:4325","str::match_indices":"2:11402:67048","`DoubleEndedIterator`":"2:7061:120","prim@char":"1:12350:2688"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50153:4560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5096:67692":{"id":"5:5096:67692","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:3001-0:36:1804":{"id":"a:2:7718:3001-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:371:1755":{"id":"0:371:1755","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[707,4],"end":[710,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:33:1757":{"id":"b:2:2221-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:532:1547":{"id":"0:532:1547","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:407:2010":{"id":"0:407:2010","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1031,4],"end":[1039,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["write_style_env",{"kind":"generic","inner":"E"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2998-0:571:1896":{"id":"a:2:2709:2998-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:237:59":{"id":"0:237:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:3002-0:100:2492":{"id":"a:2:7717:3002-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:179:2621":{"id":"0:179:2621","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2226:2398":{"id":"2:2226:2398","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:269:131":{"id":"b:2:2224-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11422:60205":{"id":"2:11422:60205","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11021:4325","prim@char":"1:12350:2688"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2998-0:169:2408":{"id":"a:2:2709:2998-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11425:63240":{"id":"2:11425:63240","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11021:4325","prim@char":"1:12350:2688"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:599:1804":{"id":"b:2:2506-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:81:2480","path":"::fmt::humantime::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:1895","0:96:2434","0:97:2435","0:98:2436","0:99:2437"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:8585:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:8585:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:486:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2496-0:169:2408":{"id":"b:2:2496-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:178:2617":{"id":"0:178:2617","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:33:1757":{"id":"b:2:2224-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5107:67694":{"id":"5:5107:67694","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::writer::glob","name":"glob","id":"0:206:1756","glob":true}},"0:599:1804":{"id":"0:599:1804","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[377,0],"end":[382,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# #[macro_use] extern crate log;\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:2645:214-0:599:1804","a:2:7717:3002-0:599:1804","a:2:7718:3001-0:599:1804","a:2:2709:2998-0:599:1804","a:2:2659:222-0:599:1804","b:2:2511-0:599:1804","b:2:2496-0:599:1804","b:2:2506-0:599:1804","b:2:3304-0:599:1804","b:2:2500-0:599:1804","b:2:2221-0:599:1804","b:2:2224-0:599:1804","0:604","0:435"]}},"0:279:1997":{"id":"0:279:1997","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2898:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:1942","glob":false}},"a:2:2659:222-0:599:1804":{"id":"a:2:2659:222-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:61:650":{"id":"0:61:650","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[269,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:342:1790":{"id":"b:2:2221-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[171,0],"end":[260,1]},"visibility":{"restricted":{"parent":"0:14:1755","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:46:908","0:47:1830","0:48:1915","0:49:1920","0:50:1755","0:52:1929","0:53:1956"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2709:2998-0:458:2556":{"id":"a:2:2709:2998-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:231:668":{"id":"0:231:668","crate_id":0,"name":"from","span":{"filename":"src/fmt/writer/mod.rs","begin":[59,4],"end":[65,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["target",{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1096,0],"end":[1103,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:211:2512":{"id":"0:211:2512","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:100:2492":{"id":"0:100:2492","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2645:214-0:100:2492","a:2:7717:3002-0:100:2492","a:2:7718:3001-0:100:2492","a:2:2709:2998-0:100:2492","a:2:2659:222-0:100:2492","b:2:2511-0:100:2492","b:2:2496-0:100:2492","b:2:2506-0:100:2492","b:2:3304-0:100:2492","b:2:2500-0:100:2492","b:2:2221-0:100:2492","b:2:2224-0:100:2492","b:5:5360-0:100:2492","0:103","0:112"]}},"a:2:7718:3001-0:508:2421":{"id":"a:2:7718:3001-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:268:59":{"id":"0:268:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:3001-0:342:1790":{"id":"a:2:7718:3001-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:81:2480","path":"::fmt::humantime::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:46:908":{"id":"0:46:908","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[173,4],"end":[179,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:81:2480":{"id":"0:81:2480","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1558","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:100:2492"],"is_stripped":true}},"a:2:2645:214-0:36:1804":{"id":"a:2:2645:214-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:50:1755":{"id":"0:50:1755","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[206,4],"end":[209,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11437:1929":{"id":"2:11437:1929","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:10982:2837","FromStr::Err":"2:10983:126"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:10982:2837","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:10982:2837","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11319":{"id":"2:11319","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10584:1344","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11320:782","2:11321:2236","2:11322:67036","2:11323:67037","2:11325:67038","2:11328:60124","2:11329:67039","2:11330:306","2:11331:63200","2:11332:2007","2:11334:63197","2:11336:63198","2:11338:63199","2:11340:67040","2:11341:67041","2:11342:63221","2:11343:63222","2:11344:4586","2:11345:4356","2:11346:2454","2:11347:65922","2:11348:65924","2:11349:3778","2:11350:67042","2:11351:65920","2:11352:63238","2:11355:2272","2:11358:63239","2:11361:3484","2:11365:3446","2:11369:2252","2:11372:63230","2:11375:63232","2:11378:67043","2:11381:67044","2:11384:63234","2:11387:63236","2:11390:67045","2:11393:67046","2:11396:1985","2:11399:67047","2:11402:67048","2:11405:67049","2:11408:2261","2:11410:67050","2:11412:67051","2:11414:67052","2:11415:67053","2:11416:67054","2:11419:67055","2:11422:60205","2:11425:63240","2:11428:67056","2:11431:67057","2:11434:67058","2:11437:1929","2:11439:4750","2:11440:2823","2:11441:61359","2:11442:61360","2:11443:67059","2:11445:4098","2:11446:55742"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:576:1905":{"id":"0:576:1905","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:262:1756":{"id":"0:262:1756","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:264","0:265","0:266"],"is_stripped":true}},"2:11412:67051":{"id":"2:11412:67051","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115:1758":{"id":"0:115:1758","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:210:224","0:543:1942"],"is_stripped":true}},"2:11331:63200":{"id":"2:11331:63200","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12367:2702"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11375:63232":{"id":"2:11375:63232","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:12350:2688","`DoubleEndedIterator`":"2:7061:120","str::split":"2:11369:2252","self::pattern":"2:11021:4325"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50003:4083","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:8587:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:8587:2637","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:496:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11419:67055":{"id":"2:11419:67055","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:351:1833":{"id":"0:351:1833","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[488,4],"end":[503,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:356:659":{"id":"0:356:659","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[579,4],"end":[585,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["format",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:2915:1876","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1753","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2898:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:8581:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8581:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:471:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:673:2628":{"id":"5:673:2628","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:542:595":{"id":"0:542:595","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:378:1964":{"id":"0:378:1964","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[814,4],"end":[817,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:571:1896":{"id":"b:2:3304-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7717:3002-0:36:1804":{"id":"a:2:7717:3002-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:559:701":{"id":"0:559:701","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8813:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:1366":{"id":"0:373:1366","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[739,4],"end":[742,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"resolved_path","inner":{"name":"fmt::Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5360-0:169:2408":{"id":"b:5:5360-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8581:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5358:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5362:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:2998-0:543:1942":{"id":"a:2:2709:2998-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[294,0],"end":[294,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fmt::glob","name":"glob","id":"0:262:1756","glob":true}},"2:11330:306":{"id":"2:11330:306","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12367:2702","str::as_mut_ptr":"2:11331:63200"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:3001-0:458:2556":{"id":"a:2:7718:3001-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:548:2461":{"id":"0:548:2461","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:437:1954":{"id":"0:437:1954","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1140,0],"end":[1142,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11325:67038":{"id":"2:11325:67038","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11323:67037"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:8593:2639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:8593:2639","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:506:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2514:127":{"id":"2:2514:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39262:3847","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2496-0:508:2421":{"id":"b:2:2496-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[268,0],"end":[275,1]},"visibility":{"restricted":{"parent":"0:14:1755","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2511-0:210:224":{"id":"b:2:2511-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[902,0],"end":[971,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:1987","0:389:1749","0:393:1997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2268:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:595"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:63:650":{"id":"0:63:650","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[278,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2511-0:169:2408":{"id":"b:2:2511-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2645:214-0:169:2408":{"id":"a:2:2645:214-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11415:67053":{"id":"2:11415:67053","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2998-0:36:1804":{"id":"a:2:2709:2998-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11329:67039":{"id":"2:11329:67039","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11428:67056":{"id":"2:11428:67056","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11021:4325","prim@char":"1:12350:2688"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:342:1790":{"id":"b:2:2500-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:2058":{"id":"0:0:2058","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1311,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\nLog levels are controlled on a per-module basis, and **by default all\nlogging is disabled except for the `error` level**.\n\nLogging is controlled via the **`RUST_LOG`** environment variable. The\nvalue of this environment variable is a comma-separated list of *logging\ndirectives*. A logging directive is of the form:\n\n```text\nexample::log::target=level\n```\n\nThe log target is typically equal to the path of the module the message\nin question originated from, though it can be overridden.\n\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target. A value of, for example, `RUST_LOG=example`, would\nmatch all of the messages with targets:\n\n* `example`\n* `example::test`\n* `example::test::module::submodule`\n* `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\nThe names of the log levels that may be specified correspond to the\nvariations of the [`log::Level`][level-enum] enum from the `log`\ncrate. They are:\n\n* `error`\n* `warn`\n* `info`\n* `debug`\n* `trace`\n\nThere is also a pseudo logging level, `off`, which may be specified to\ndisable all logging for a given module or for the entire application. As\nwith the logging levels, the letter case is not significant[^fn-off].\n\n[^fn-off]: Similar to the universe of log level names, the `off` pseudo\n   log level feature is also provided by the underlying `log` crate.\n\nThe letter case is not significant for the logging level names; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nAs the log level for a module is optional, the module to enable logging for\nis also optional. **If only a level is provided, then the global log\nlevel for all modules is set to this value.**\n\nSome examples of valid values of `RUST_LOG` are:\n\n* `hello` turns on all logging for the 'hello' module\n* `trace` turns on all logging for the application, regardless of its name\n* `TRACE` turns on all logging for the application, regardless of its name (same as previous)\n* `info` turns on all info logging\n* `INFO` turns on all info logging (same as previous)\n* `hello=debug` turns on debug logging for 'hello'\n* `hello=DEBUG` turns on debug logging for 'hello' (same as previous)\n* `hello,std::option` turns on hello, and std's option logging\n* `error,hello=warn` turn on global error logging and also warn for hello\n* `error,hello=off`  turn on global error logging, but turn off logging for hello\n* `off` turns off all logging for the application\n* `OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n# #[macro_use] extern crate log;\n#[cfg(test)]\nmod tests {\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/env-logger-rs/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log/\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:131"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:14:1755","0:70:650","0:340:1762","0:341:1765","0:585:1773","0:342:1790","0:599:1804","0:437:1954","0:438:1964","0:439:2021","0:442:2036","0:445:1832","0:446:1830","0:332"],"is_stripped":false}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_all","is_write_vectored","write_fmt","write_vectored","by_ref","write_all_vectored"],"trait":{"name":"Write","id":"1:3457:2399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:1884","0:279:1997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:574:1902":{"id":"0:574:1902","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"a:2:2645:214-0:269:131":{"id":"a:2:2645:214-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:584:650":{"id":"0:584:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2998-0:210:224":{"id":"a:2:2709:2998-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2506-0:210:224":{"id":"b:2:2506-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:2998-0:100:2492":{"id":"a:2:2709:2998-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[835,0],"end":[900,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:1830","0:384:1856","0:385:1755","0:386:1985"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2506-0:458:2556":{"id":"b:2:2506-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7718:3001-0:571:1896":{"id":"a:2:7718:3001-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:571:1896":{"id":"0:571:1896","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:1899","0:574:1902","0:576:1905","0:578:1908"],"impls":["a:2:2645:214-0:571:1896","a:2:7717:3002-0:571:1896","a:2:7718:3001-0:571:1896","a:2:2709:2998-0:571:1896","a:2:2659:222-0:571:1896","b:2:2511-0:571:1896","b:2:2496-0:571:1896","b:2:2506-0:571:1896","b:2:3304-0:571:1896","b:2:2500-0:571:1896","b:2:2221-0:571:1896","b:2:2224-0:571:1896","b:5:671-0:571:1896","0:580","0:581","0:583","0:267"]}},"0:48:1915":{"id":"0:48:1915","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:210:224":{"id":"b:2:2496-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:1896","glob":false}},"b:2:2500-0:508:2421":{"id":"b:2:2500-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:374:1776":{"id":"0:374:1776","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[760,4],"end":[763,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write_style",{"kind":"resolved_path","inner":{"name":"fmt::WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2420","0:176:2566","0:177:2423","0:178:2617","0:179:2621","0:180:2426"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11440:2823":{"id":"2:11440:2823","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2224-0:543:1942":{"id":"b:2:2224-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2511-0:571:1896":{"id":"b:2:2511-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2511-0:342:1790":{"id":"b:2:2511-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2224-0:169:2408":{"id":"b:2:2224-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2502:668":{"id":"2:2502:668","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:650":{"id":"0:113:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175:2420":{"id":"0:175:2420","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11378:67043":{"id":"2:11378:67043","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"2:11369:2252","prim@char":"1:12350:2688","`DoubleEndedIterator`":"2:7061:120","self::pattern":"2:11021:4325","str::rsplit_terminator":"2:11381:67044"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50035:4555","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177:2423":{"id":"0:177:2423","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:434:650":{"id":"0:434:650","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1110,8],"end":[1114,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11434:67058":{"id":"2:11434:67058","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11021:4325","prim@char":"1:12350:2688"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5360-0:100:2492":{"id":"b:5:5360-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8581:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5358:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5362:1398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2645:214-0:33:1757":{"id":"a:2:2645:214-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:563:595":{"id":"0:563:595","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7718:3001-0:169:2408":{"id":"a:2:7718:3001-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:44:1987":{"id":"0:44:1987","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[163,4],"end":[168,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["metadata",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Metadata","id":"24:296:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:169:2408":{"id":"b:2:2221-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:528:2658":{"id":"0:528:2658","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:530:1545","0:531:1546","0:532:1547"]}},"0:341:1765":{"id":"0:341:1765","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[304,0],"end":[304,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}},"b:2:2511-0:33:1757":{"id":"b:2:2511-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2506-0:33:1757":{"id":"b:2:2506-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2221-0:508:2421":{"id":"b:2:2221-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:369:1915":{"id":"0:369:1915","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[666,4],"end":[669,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:219:59":{"id":"0:219:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180:2426":{"id":"0:180:2426","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:585:1773":{"id":"b:2:2500-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2221-0:571:1896":{"id":"b:2:2221-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11338:63199":{"id":"2:11338:63199","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:599:1804":{"id":"b:2:2496-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:458:2556":{"id":"0:458:2556","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:2645:214-0:458:2556","a:2:7717:3002-0:458:2556","a:2:7718:3001-0:458:2556","a:2:2709:2998-0:458:2556","a:2:2659:222-0:458:2556","b:2:2511-0:458:2556","b:2:2496-0:458:2556","b:2:2506-0:458:2556","b:2:3304-0:458:2556","b:2:2500-0:458:2556","b:2:2221-0:458:2556","b:2:2224-0:458:2556","b:5:671-0:458:2556","0:461","0:191"]}},"a:2:7718:3001-0:210:224":{"id":"a:2:7718:3001-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2506-0:342:1790":{"id":"b:2:2506-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:671-0:543:1942":{"id":"b:5:671-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2628","5:674:2015","5:675:3502"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:98:2436":{"id":"0:98:2436","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2492"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:536:650":{"id":"0:536:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::Target","name":"Target","id":"0:210:224","glob":false}},"0:527:1545":{"id":"0:527:1545","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"a:2:7718:3001-0:100:2492":{"id":"a:2:7718:3001-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2224-0:458:2556":{"id":"b:2:2224-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:59:59":{"id":"0:59:59","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[263,4],"end":[265,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:372:1847":{"id":"0:372:1847","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[716,4],"end":[719,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["filters",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:436:650":{"id":"0:436:650","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1118,8],"end":[1127,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:543:1942":{"id":"0:543:1942","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2524","0:546:2526","0:548:2461"],"impls":["a:2:2645:214-0:543:1942","a:2:7717:3002-0:543:1942","a:2:7718:3001-0:543:1942","a:2:2709:2998-0:543:1942","a:2:2659:222-0:543:1942","b:2:2511-0:543:1942","b:2:2496-0:543:1942","b:2:2506-0:543:1942","b:2:3304-0:543:1942","b:2:2500-0:543:1942","b:2:2221-0:543:1942","b:2:2224-0:543:1942","b:5:671-0:543:1942","0:550","0:552","0:553","0:555","0:556","0:558","0:561","0:562","0:236"]}},"a:2:2645:214-0:508:2421":{"id":"a:2:2645:214-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2221-0:543:1942":{"id":"b:2:2221-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:97:2435":{"id":"0:97:2435","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2492"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:210:224":{"id":"b:2:3304-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:53:1956":{"id":"0:53:1956","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[228,4],"end":[259,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11381:67044":{"id":"2:11381:67044","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:11369:2252","self::pattern":"2:11021:4325","str::split_terminator":"2:11378:67043","prim@char":"1:12350:2688"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50053:4556","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:508:2421":{"id":"b:2:3304-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2645:214-0:543:1942":{"id":"a:2:2645:214-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:348:1830":{"id":"0:348:1830","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[443,4],"end":[450,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2511-0:458:2556":{"id":"b:2:2511-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2273:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2709:2998-0:585:1773":{"id":"a:2:2709:2998-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:376:1947":{"id":"0:376:1947","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[778,4],"end":[781,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["is_test",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11322:67036":{"id":"2:11322:67036","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:221:650":{"id":"0:221:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5111:61358":{"id":"5:5111:61358","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11442:61360"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5093:2246":{"id":"5:5093:2246","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5362:1398":{"id":"5:5362:1398","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41:1755":{"id":"0:41:1755","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[139,4],"end":[145,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92:1756":{"id":"0:92:1756","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:93"],"is_stripped":true}},"b:2:2500-0:543:1942":{"id":"b:2:2500-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:405:1776":{"id":"0:405:1776","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1019,4],"end":[1026,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["write_style_env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:508:2421":{"id":"b:2:2506-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:521:2564":{"id":"0:521:2564","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:572:1899":{"id":"0:572:1899","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:2511-0:599:1804":{"id":"b:2:2511-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11414:67052":{"id":"2:11414:67052","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11384:63234":{"id":"2:11384:63234","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325","str::rsplitn":"2:11387:63236"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50089:2894","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:439:2021":{"id":"0:439:2021","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1185,0],"end":[1192,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:8591:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:8591:189","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:476:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:8583:2634","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:8583:2634","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:481:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1109,4],"end":[1115,5]},"visibility":{"restricted":{"parent":"0:430:2018","path":"::std_fmt_impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2659:222-0:571:1896":{"id":"a:2:2659:222-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2515:1418":{"id":"2:2515:1418","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2645:214-0:100:2492":{"id":"a:2:2645:214-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11328:60124":{"id":"2:11328:60124","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10589:2453"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:426:668":{"id":"0:426:668","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["filter_env",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96:2434":{"id":"0:96:2434","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2492"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[973,0],"end":[1056,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:908","0:397:1755","0:399:2002","0:402:2006","0:405:1776","0:407:2010","0:410:2012"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:523:2656":{"id":"0:523:2656","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"a:2:7717:3002-0:585:1773":{"id":"a:2:7717:3002-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:192:650":{"id":"0:192:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:2002":{"id":"0:399:2002","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[992,4],"end":[1000,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["filter_env",{"kind":"generic","inner":"E"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:676:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[833,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:908","0:348:1830","0:351:1833","0:354:1856","0:355:1862","0:356:659","0:358:1881","0:359:1883","0:360:1886","0:361:1888","0:362:1891","0:363:1894","0:364:1898","0:365:1901","0:366:1904","0:367:1907","0:368:1910","0:369:1915","0:370:1920","0:371:1755","0:372:1847","0:373:1366","0:374:1776","0:375:1849","0:376:1947","0:377:1954","0:378:1964","0:379:1956"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:358:1881":{"id":"0:358:1881","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[590,4],"end":[593,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:458:2556":{"id":"b:2:2500-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5110:61357":{"id":"5:5110:61357","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11441:61359"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:169:2408":{"id":"b:2:2500-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2656:219","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:375:1849":{"id":"0:375:1849","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[769,4],"end":[772,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write_style",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:513:2563":{"id":"0:513:2563","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:466:650":{"id":"0:466:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:206:1756":{"id":"0:206:1756","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:207","0:208"],"is_stripped":true}},"0:534:409":{"id":"0:534:409","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:519:2655":{"id":"0:519:2655","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:2506-0:100:2492":{"id":"b:2:2506-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2221-0:458:2556":{"id":"b:2:2221-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:36:1804":{"id":"0:36:1804","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[110,0],"end":[114,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:45","a:2:2645:214-0:36:1804","a:2:7717:3002-0:36:1804","a:2:7718:3001-0:36:1804","a:2:2709:2998-0:36:1804","a:2:2659:222-0:36:1804","b:2:2511-0:36:1804","b:2:2496-0:36:1804","b:2:2506-0:36:1804","b:2:3304-0:36:1804","b:2:2500-0:36:1804","b:2:2221-0:36:1804","b:2:2224-0:36:1804","0:58","0:62"]}},"b:5:671-0:571:1896":{"id":"b:5:671-0:571:1896","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2628","5:674:2015","5:675:3502"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7717:3002-0:33:1757":{"id":"a:2:7717:3002-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7717:3002-0:169:2408":{"id":"a:2:7717:3002-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"5:5109:2969":{"id":"5:5109:2969","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6978:218"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:671-0:508:2421":{"id":"b:5:671-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:667:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:673:2628","5:674:2015","5:675:3502"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:531:1546":{"id":"0:531:1546","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:11340:67040":{"id":"2:11340:67040","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:11341:67041","crate::ops::Index":"2:2970:4050","`str`":"1:12356:2693"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:269:131":{"id":"0:269:131","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:2645:214-0:269:131","a:2:7717:3002-0:269:131","a:2:7718:3001-0:269:131","a:2:2709:2998-0:269:131","a:2:2659:222-0:269:131","b:2:2511-0:269:131","b:2:2496-0:269:131","b:2:2506-0:269:131","b:2:3304-0:269:131","b:2:2500-0:269:131","b:2:2221-0:269:131","b:2:2224-0:269:131","0:277","0:280"]}},"0:43:1985":{"id":"0:43:1985","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[148,4],"end":[160,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1753","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145:2419":{"id":"0:145:2419","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11439:4750":{"id":"2:11439:4750","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70:650":{"id":"0:70:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:571:1896","0:269:131","0:257","0:258"],"is_stripped":false}},"2:11323:67037":{"id":"2:11323:67037","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2998-0:33:1757":{"id":"a:2:2709:2998-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2500-0:100:2492":{"id":"b:2:2500-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7718:3001-0:543:1942":{"id":"a:2:7718:3001-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7718:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:359:1883":{"id":"0:359:1883","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[596,4],"end":[599,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":{"restricted":{"parent":"0:70:650","path":"::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2224-0:100:2492":{"id":"b:2:2224-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:605:59":{"id":"0:605:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2238:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:409"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2496-0:100:2492":{"id":"b:2:2496-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11442:61360":{"id":"2:11442:61360","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:364:1898":{"id":"0:364:1898","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[262,0],"end":[266,1]},"visibility":{"restricted":{"parent":"0:14:1755","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2547:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2506-0:543:1942":{"id":"b:2:2506-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:49:1920":{"id":"0:49:1920","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:81:2480","path":"::fmt::humantime::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8581:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11347:65922":{"id":"2:11347:65922","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11348:65924"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50259:4564","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11402:67048":{"id":"2:11402:67048","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"2:11405:67049","`DoubleEndedIterator`":"2:7061:120","self::pattern":"2:11021:4325","prim@char":"1:12350:2688"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50135:4559","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2500-0:36:1804":{"id":"b:2:2500-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2506-0:169:2408":{"id":"b:2:2506-0:169:2408","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11410:67050":{"id":"2:11410:67050","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:2998-0:508:2421":{"id":"a:2:2709:2998-0:508:2421","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:501:650":{"id":"0:501:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:47:1830":{"id":"0:47:1830","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2221-0:36:1804":{"id":"b:2:2221-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2215:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2223:1746"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2224-0:342:1790":{"id":"b:2:2224-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2218:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2226:2398"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2659:222-0:33:1757":{"id":"a:2:2659:222-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2496-0:458:2556":{"id":"b:2:2496-0:458:2556","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2556","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:515:2565":{"id":"0:515:2565","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:3304-0:342:1790":{"id":"b:2:3304-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7717:3002-0:269:131":{"id":"a:2:7717:3002-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:429:59":{"id":"0:429:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1097,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:530:1545":{"id":"0:530:1545","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:2509:127":{"id":"2:2509:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:11365:3446":{"id":"2:11365:3446","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325","`None`":"2:48019:174"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11041:4329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:366:1904":{"id":"0:366:1904","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[637,4],"end":[639,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:438:1964":{"id":"0:438:1964","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1153,0],"end":[1155,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11321:2236":{"id":"2:11321:2236","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2511-0:36:1804":{"id":"b:2:2511-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11361:3484":{"id":"2:11361:3484","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:12350:2688","self::pattern":"2:11021:4325","`None`":"2:48019:174"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2655:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2499:1845":{"id":"2:2499:1845","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2473:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11341:67041":{"id":"2:11341:67041","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12356:2693","crate::ops::IndexMut":"2:2974:4095","str::slice_unchecked":"2:11340:67040"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2659:222-0:269:131":{"id":"a:2:2659:222-0:269:131","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:377:1954":{"id":"0:377:1954","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[792,4],"end":[803,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48161:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1754","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:115:1758","glob":true}},"2:11390:67045":{"id":"2:11390:67045","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:210:224":{"id":"0:210:224","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2512","0:213:2514","0:215:2516"],"impls":["a:2:2645:214-0:210:224","a:2:7717:3002-0:210:224","a:2:7718:3001-0:210:224","a:2:2709:2998-0:210:224","a:2:2659:222-0:210:224","b:2:2511-0:210:224","b:2:2496-0:210:224","b:2:2506-0:210:224","b:2:3304-0:210:224","b:2:2500-0:210:224","b:2:2221-0:210:224","b:2:2224-0:210:224","0:218","0:220","0:230"]}},"a:2:2645:214-0:210:224":{"id":"a:2:2645:214-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2645:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2500-0:33:1757":{"id":"b:2:2500-0:33:1757","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2502:668"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:506:650":{"id":"0:506:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:8595:2638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:8595:2638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:501:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2511-0:100:2492":{"id":"b:2:2511-0:100:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2514:127","2:2515:1418"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2480","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8576:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:466:650"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:123:2480","glob":true}},"a:2:2709:2998-0:599:1804":{"id":"a:2:2709:2998-0:599:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2709:2998","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11396:1985":{"id":"2:11396:1985","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"2:11396:1985","self::pattern":"2:11021:4325","prim@char":"1:12350:2688","`DoubleEndedIterator`":"2:7061:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50189:2889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11026:4326","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11343:63222":{"id":"2:11343:63222","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11342:63221"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11350:67042":{"id":"2:11350:67042","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50249:4563","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2506-0:36:1804":{"id":"b:2:2506-0:36:1804","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2480:230","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2476:231","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1804","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2509:127","2:2510:1419"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":{"restricted":{"parent":"0:115:1758","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8799:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:701"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2659:222-0:210:224":{"id":"a:2:2659:222-0:210:224","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2659:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11332:2007":{"id":"2:11332:2007","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48019:174"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48017:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9118:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:370:1920":{"id":"0:370:1920","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[685,4],"end":[688,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:368:1910":{"id":"0:368:1910","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[647,4],"end":[650,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3304-0:585:1773":{"id":"b:2:3304-0:585:1773","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2652:3094","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3302:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3306:1432"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:14:1755":{"id":"0:14:1755","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[868,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:33:1757","0:36:1804"],"is_stripped":false}},"0:551:409":{"id":"0:551:409","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2496-0:543:1942":{"id":"b:2:2496-0:543:1942","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2473:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2470:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1942","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2499:1845"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:365:1901":{"id":"0:365:1901","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281:650":{"id":"0:281:650","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8536:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8525:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5108:67695":{"id":"5:5108:67695","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1878","`String`":"5:6978:218"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:276:1878","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6723:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6978:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7717:3002-0:342:1790":{"id":"a:2:7717:3002-0:342:1790","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7717:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1790","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"paths":{"17:12134:8596":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:2709:2998":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:7887:5161":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:7245:5244":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:9507:4084":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:50293:4099":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:999:4042":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:5684:7661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:1536:7906":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"21:1184:7952":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"20:2543:2894":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"16:7825:5253":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:9462:3812":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:11427:6051":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"28:37:5867":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"17:10752:5506":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:7084:3097":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:53891:4432":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:48444:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"31:4843:58471":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"6:4644:7496":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:13580:9021":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"31:7298:6940":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"16:8047:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:48254:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:6424:7737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:49309:3770":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:46385:197":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"20:2197:2356":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"17:13279:8952":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"31:6138:6633":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"31:5712:6511":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"31:4536:6195":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"29:5685:7486":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:2310:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:2942:3901":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"32:0:3039":{"crate_id":32,"path":["bitflags"],"kind":"module"},"22:1630:7864":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"17:12251:8619":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:6032:3054":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:4581:7470":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:135:41290":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:5625:7627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:7140:6044":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"12:2178:5754":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"9:111:4938":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"20:1398:8100":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"30:4745:68915":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"0:70:650":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"6:1525:7119":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:50736:4662":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"21:1389:4058":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"17:11606:8503":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"23:707:7843":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:2830:4115":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"15:175:5064":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"29:2052:7210":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"22:998:5797":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"23:624:7842":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"12:1065:5042":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11259:8425":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:11539:2482":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"18:636:7852":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:7803:5252":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"29:2130:6205":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"29:4558:42569":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"30:2989:5913":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"24:277:1753":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"21:2240:5772":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"6:6311:7719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"31:4822:10360":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"2:53391:4457":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"12:1852:3900":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:4716:7522":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"22:1060:5802":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"17:11288:8434":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:6164:5144":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:46510:5188":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:13327:8953":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:3986:3958":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"5:7055:3899":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"20:2255:2895":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"29:5154:7374":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:9108:8295":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:967:8204":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:5443:6557":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"20:1693:67826":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"16:6276:5171":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:11343:8453":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"26:101:2483":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"22:1604:7917":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"2:8799:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"21:2579:55784":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"6:6975:10502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:2311:5127":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"31:5964:6596":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"31:6569:10440":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"2:51862:4446":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:6209:3942":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:3400:2939":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"23:556:5796":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"22:1247:8072":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"16:5758:5212":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:10608:5509":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"20:1654:5695":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"31:7356:6946":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"31:6081:58489":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"5:6895:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"23:883:5669":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:6955:4815":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:5424:5198":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:4206:3851":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:4808:9072":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"29:7120:7649":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:1600:7161":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:13393:8976":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:6308:6035":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:10973:8399":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:1376:4033":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:49301:9481":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"30:3778:7014":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"2:10982:2837":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"23:816:5664":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:7822:4326":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"29:5033:7346":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:581:7103":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:3190:2966":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:4888:6007":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"21:1905:5756":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"5:3460:2961":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:11174:8417":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:4010:4225":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:11971:10641":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:29506:3565":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:20276:3931":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:1120:4046":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:8313:2975":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:50788:4664":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:21259:9443":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:6989:4751":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"33:409:3081":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:6037:5420":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"29:1687:6487":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"23:665:139":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"29:9297:7831":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:4810:10489":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"33:13:2549":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"2:10794:4558":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"29:480:41228":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"17:9526:5520":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"31:6932:58496":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"6:5534:6951":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"31:5245:7094":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"17:9627:5527":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:4965:3856":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:47207:4150":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"22:985:5660":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"6:4515:7441":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:6777:3451":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"31:4558:6202":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"1:12356:2693":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:8034:5125":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11576:8500":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"29:5725:7493":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:545:7097":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:54066:9560":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"12:1518:5055":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:11046:4324":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:9504:9664":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"21:1720:5745":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"2:3182:2808":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:47183:4148":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"29:1822:7129":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"20:1582:8134":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"2:51810:4454":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:20233:3852":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:13031:8861":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"29:5611:7470":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"12:1859:3901":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:2898:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"5:0:279":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:2250:3779":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:9577:5523":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:4421:4272":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:3326:158":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:12926:8837":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:941:3898":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"20:1906:8100":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"1:5653:4017":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:8405:2948":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:52765:4451":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:1964:4181":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:3623:9049":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"28:183:5876":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"1:4113:4233":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:53721:4429":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:12909:8832":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:6479:7774":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"31:4519:6192":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"31:7261:6926":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"12:1681:142":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"28:47:5874":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"2:11026:4326":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:12730:8790":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"31:4753:6239":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"16:6820:9147":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:1971:4838":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:5154:5406":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:12321:13323":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:50559:4341":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"30:4809:68914":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"1:9552:9727":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:3140:227":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:4224:7313":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"31:5586:6472":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"21:1402:5729":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"20:2211:2884":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"17:10583:5508":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:3130:4637":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"29:7203:7667":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:2141:572":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"12:1845:3899":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:2800:3906":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"29:6763:6556":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:39298:4844":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"5:771:4851":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:2859:5403":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:3457:2399":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:52477:9504":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:10866:6049":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"0:446:1830":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"17:11873:8540":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"12:777:5040":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:48770:2637":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"22:1013:5798":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"0:578:1908":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"17:10385:5583":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:4804:10487":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"15:193:5065":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:2607:2952":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"29:5077:7359":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"13:220:9723":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"31:4771:6247":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"30:5193:7082":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"17:8441:5608":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:9778:5572":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"30:3797:57128":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"17:11161:8415":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"20:2524:2885":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"21:2489:5753":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"2:48102:3149":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"21:2160:8046":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"2:49971:2949":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:11485:8481":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:4267:7329":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"21:1640:5741":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"20:1802:8161":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"2:58262:9572":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"29:7345:7698":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:21375:4623":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13141:8892":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:4042:2811":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:46829:4727":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"17:11186:8418":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"29:658:6453":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"31:4713:6223":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"31:5729:6520":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"17:12748:8794":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"31:4733:6233":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"5:1067:4836":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:11190:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"26:157:3030":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"17:9857:5556":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"29:5136:7372":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"20:2363:2901":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"6:4621:7489":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:48558:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"9:505:4870":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:21855:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:10810:4561":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:4298:3915":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:6807:5457":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:11637:65401":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:8666:8195":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:3067:4636":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"0:574:1902":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"2:48229:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:1884:3525":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"29:5817:6228":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:646:6487":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:4346:7367":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:2332:5439":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:1088:4043":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"24:0:1749":{"crate_id":24,"path":["log"],"kind":"module"},"2:2771:3017":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"31:6737:10476":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"6:6415:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"29:5783:7502":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:4761:7539":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"31:5263:7450":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"10:0:2664":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"0:599:1804":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"1:6006:3053":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"31:4996:10364":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"2:2722:3415":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:9303:5529":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:9497:5710":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"29:6830:7584":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:7843:61011":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:2810:4105":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"29:5454:7441":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:11515:8489":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"31:7097:6880":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"29:6961:7597":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:771:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"29:5945:7542":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:53994:9554":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:10221:8366":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:12353:2690":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:47197:4149":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:12860:8821":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:410:6055":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"6:4745:7534":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"12:725:4033":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:12934:8840":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"0:572:1899":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"6:4611:7486":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"29:8896:6511":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:1635:571":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:9539:5519":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:5005:3858":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:5174:4166":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"22:1683:7932":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"16:7022:5412":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"22:1195:127":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"1:9474:60207":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"6:4605:7483":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"31:6597:6771":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"21:1167:5707":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"20:1468:8118":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"20:931:2886":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"1:5007:3860":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:2911:3095":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"29:4581:7233":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:9831:5630":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"0:576:1905":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"2:20407:18441":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:4698:7516":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:678:9576":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46429:198":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:507:6483":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"30:534:3837":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"12:1836:3451":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:20426:3852":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:11953:9685":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"31:5580:6469":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"6:4361:7374":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"23:114:55221":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:4404:9060":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:7853:1804":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:5673:4018":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:20157:4293":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"6:6509:7790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:8622:4227":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"5:1404:4036":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:47103:4136":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"31:6677:6785":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"31:4742:6235":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"23:546:5671":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"28:132:5863":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"1:1629:3902":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:9314:2893":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"31:5049:6330":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"31:7214:7119":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"2:50950:4590":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:2763:3887":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"29:8295:7774":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:48634:3051":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"21:1602:5739":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"16:5365:5143":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:9274:8304":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:4029:6009":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:47131:9473":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:6262:5155":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:2573:2958":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:11617:8504":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:4496:7430":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:11997:5073":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"20:2238:2885":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"16:5450:5200":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"22:971:5796":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"17:1931:5518":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"30:2712:5884":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"24:352:1754":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"1:6778:3061":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"20:1545:205":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"2:50942:4589":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:12316:8100":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:386:8200":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:6008:6007":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"23:648:5674":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:9947:49008":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"6:6981:6511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"18:538:5675":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"33:396:3080":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"20:2144:2896":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"5:5962:3898":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"29:4627:7250":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"31:6108:58490":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"17:9317:5620":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:7717:3002":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:13192:8903":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:4335:7362":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"20:2277:2890":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"16:5175:47197":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:11134:3864":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"29:9240:7524":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"12:98:5045":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"29:5412:7430":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:50508:4339":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:8956:3977":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:7061:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"31:5704:6510":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"21:2200:2962":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:48144:3542":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:2816:5430":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:7113:5416":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:9644:5516":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"31:176:6187":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"2:11842:4591":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:48756:2635":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:50708:4579":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"18:599:67795":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:12337:5607":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:2751:3881":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:8418:2893":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:5749:10496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:46785:4387":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:7415:4124":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"14:221:9339":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:11271:8426":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:46882:4730":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"29:9194:7826":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:48153:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:495:7091":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"31:7219:6898":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"2:9357:4088":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:339:160":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:12617:8748":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"31:4782:6251":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"26:181:2492":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"2:47485:9430":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"21:2186:127":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"21:2109:7950":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"1:7005:3930":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"21:1748:5747":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"16:5927:5217":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:2900:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"29:7322:10496":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"23:638:5670":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"29:5981:10487":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"29:4962:7334":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"20:2096:2897":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"23:691:7842":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:6502:4132":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"9:19:4970":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:11787:8528":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:7266:10508":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"29:5225:7400":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"29:9104:6735":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:6308:5227":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"29:5344:7418":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:5390:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"30:479:5886":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"2:46407:196":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:5819:4027":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:12365:2700":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:49875:4082":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:5422:3898":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"21:2277:5729":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"17:9061:5531":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"23:807:5663":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"28:67:56671":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"31:6497:58492":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"2:52430:9503":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13404:8977":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"31:5282:6387":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"6:4665:6228":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:11145:10682":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:4212:3849":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:50249:4563":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"28:137:5864":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"1:7938:4047":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:1823:3508":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:12485:8642":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"31:6389:6739":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"6:6329:6907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:21297:65045":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:51963:4426":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:52379:4416":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"29:2074:7216":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:11087:8406":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"18:609:7847":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"31:7204:6895":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"11:36:10557":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:2023:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:8122:2959":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:675:9574":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:11734:8330":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"29:783:7115":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"2:47012:9472":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:11997:8577":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"16:7321:5152":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:12362:2697":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:1473:2197":{"crate_id":2,"path":["core","mem"],"kind":"module"},"18:624:67797":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:3482:2946":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:47248:4153":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"33:79:3074":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"29:522:6484":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"6:6392:7726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:10708:4020":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:52847:4436":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:2725:66863":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"27:5:2546":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"17:10360:5640":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:11324:3853":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"29:5394:4245":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:2421:1748":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:9398:3947":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:8488:3993":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:10445:5607":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:1824:2810":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:595:3816":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"20:2169:2896":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"29:8017:7724":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"22:1292:7892":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"2:47529:9478":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"29:8890:10502":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:10854:5567":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:1695:6955":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"24:357:2831":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"17:12103:8591":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:12073:8586":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:2921:2630":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"30:2838:5901":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"17:9712:8316":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:7256:5245":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:4900:6919":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:52333:4412":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:9691:5570":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"23:699:3402":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"12:1866:3902":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:10374:5582":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:4274:7332":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:215:4812":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"22:1429:7859":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"31:6043:6614":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"29:1693:6295":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:5587:7599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:7961:3520":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:3156:4213":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:50207:4562":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:7522:61500":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"16:5995:5219":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:13082:8874":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:8573:3955":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"17:9118:67786":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"29:8035:6907":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"22:1237:7887":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"17:12237:8618":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:9283:8305":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:2659:222":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"20:987:2891":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"0:438:1964":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"2:50732:4576":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:9517:5239":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"29:7166:7661":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:4706:7521":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"30:4359:7047":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"31:4628:10349":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"2:48017:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:1771:5522":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"22:1544:7907":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"17:12148:8598":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"29:6721:6557":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12198:8615":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:46875:4729":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:2478:5422":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:12361:8640":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:1338:3837":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:8425:2951":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:11520:4662":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:4332:2803":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:487:8202":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:7920:5255":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:6277:6927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:6843:5459":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"31:5236:7123":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"22:1568:68502":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"22:1489:7899":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"17:8418:5553":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:8633:4229":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:3707:9051":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:11041:4329":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:2218:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"20:2444:2900":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"31:6717:10460":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"1:9280:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:9488:5484":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:12349:8633":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"30:2624:5883":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"1:5701:4020":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:0:1336":{"crate_id":1,"path":["std"],"kind":"module"},"1:542:3807":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:49330:3971":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"29:4998:7341":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:5720:7679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:8537:4266":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:524:5396":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"31:6054:58488":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"16:3393:9046":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"29:5478:7448":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:7243:7524":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:10823:4021":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:5402:5197":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:7907:5254":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4461:7418":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:21147:9437":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:12176:8604":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:8114:4207":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:2664:2806":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"31:5788:6532":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"5:3751:6007":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"31:5602:6478":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"2:49803:4074":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:8130:2961":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"21:2078:5784":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"31:4645:6214":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"1:11652:4030":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:46868:4567":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:9738:5573":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:20948:3852":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"9:800:10558":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"33:311:2547":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"2:20274:3852":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:4629:7493":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"30:3571:68921":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"31:6202:58491":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"21:2510:5780":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"2:53967:4417":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:9274:4021":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"5:1301:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"31:6640:6780":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"6:4286:7336":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:2652:3094":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:2795:3905":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:6416:3458":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:4690:966":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"20:2346:2898":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"29:8351:7790":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:4527:7448":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:5226:9077":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:2570:5475":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:12884:8823":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"12:2069:4044":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:10639:4029":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"22:1552:7911":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"1:4242:3916":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:4426:650":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:48763:2634":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:3963:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"22:1668:7930":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"22:1560:7912":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"2:1551:2931":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"29:8203:7737":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:4258:2800":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:1505:6297":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"22:1457:5689":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"2:2653:2807":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:52611:4456":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:11996:3408":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"33:74:3072":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"17:13594:9024":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:46310:4378":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"30:4846:68923":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"1:11836:4225":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:1680:3899":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"14:165:47124":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:10875:5551":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:9371:8295":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"29:1781:6321":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:9805:5627":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"29:1869:7146":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"31:6980:6848":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"17:8911:67790":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"29:5903:7526":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:6307:4795":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"20:2559:2895":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"22:1271:1804":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"26:0:1558":{"crate_id":26,"path":["humantime"],"kind":"module"},"17:11528:8491":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:9658:8314":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6048:5134":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:9396:4076":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"6:6538:7806":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:7095:5415":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:6302:6201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"30:4144:7039":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"5:1385:4034":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"12:2184:10553":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:7098:10258":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:7249:7525":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"31:5748:7103":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"17:13413:8979":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:915:4033":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:5582:7598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:4355:2804":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13527:9012":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:9401:8309":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:3353:3875":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:448:3824":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:50720:4580":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:5503:5203":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:571:3814":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"5:5358:226":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:10121:5549":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:2456:5445":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:51686:9493":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"29:5496:7450":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:2906:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:50433:4337":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:3343:2972":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"29:695:6898":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"1:8106:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"21:1623:5740":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"2:1918:3959":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:4437:7408":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:1612:3899":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"18:699:5664":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"11:44:5032":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:4575:7467":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"31:5865:10426":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"29:4865:7318":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:768:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"20:1380:8028":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"5:6912:4813":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"11:0:2665":{"crate_id":11,"path":["adler"],"kind":"module"},"1:7831:3852":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"31:4467:6188":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"23:788:5661":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:4501:4235":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"30:4178:7041":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"29:7074:7627":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:8696:4227":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:49714:4549":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"31:5814:6536":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"1:9616:2482":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:2510:2957":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:2273:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"28:127:5862":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"20:1417:8107":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"16:4318:9057":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"9:188:4946":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"6:6448:7749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:2402:5440":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"29:5433:7437":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"21:2115:7952":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"31:6785:58495":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"21:1871:5754":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"2:2757:3884":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:8853:3769":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"31:5773:10411":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"1:5223:16569":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:0:2670":{"crate_id":17,"path":["object"],"kind":"module"},"17:8561:5566":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:4735:2992":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:13231:8915":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:46263:4376":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:5605:7611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:9021:8294":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:8212:5605":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"20:1725:8156":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"2:5831:4142":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:12550:8693":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"21:2311:5738":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"17:10506:8383":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:2424:5418":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"33:339:2548":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"31:4806:6260":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"2:50365:4327":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:51756:4433":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:1634:3903":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"9:622:4922":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"29:7185:7666":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:3150:4211":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:10774:5504":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:4096:6510":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"23:753:7852":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"23:731:67796":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:12874:8822":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"24:151:1751":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"1:9320:4025":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"14:202:4754":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:46451:2849":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:8991:67789":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:4932:4058":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:46517:9465":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:10721:8394":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:10845:4088":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:5999:3052":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:56922:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:6537:201":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:2974:4095":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:6293:6195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:6794:5456":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"29:7265:7680":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:11220:60548":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"20:2248:2883":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"1:9635:3014":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"29:5922:7534":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:2026:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"29:5893:7522":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:11217:8420":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:6506:5232":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:10642:5613":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"29:5763:7496":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:1642:3561":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:4840:9073":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"21:1188:1759":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"26:230:3035":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"2:21789:3819":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:10310:8373":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"31:7126:6885":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"2:21349:4682":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:12375:2710":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:5816:4026":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:8746:3859":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"21:1974:4252":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"2:46742:4099":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:21094:4607":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"23:97:55220":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:5808:18653":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:2622:5436":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:2816:4108":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:9071:67792":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:49047:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"29:5054:7353":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:4658:13324":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"31:5020:6317":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"12:119:5049":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:9681:8248":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"20:1947:8082":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"17:11828:8535":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:242:8198":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"23:681:5676":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:47174:4147":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"31:4833:6264":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:5488:5202":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:49866:4079":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:5504:7584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"12:646:3838":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"20:1780:8159":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"17:11356:8454":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"22:1188:1804":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"21:2360:5776":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"23:777:5660":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:58283:9573":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:8517:5711":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"20:1707:67816":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"30:4790:7070":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"29:1845:7138":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"31:5642:6484":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"2:2783:3895":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:4659:7504":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:11813:4002":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:9698:3525":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"29:8402:7806":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"14:160:9335":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"21:2649:5789":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"2:21276:65059":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:21690:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"21:1057:5791":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"17:13478:8997":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:29312:4677":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:9165:67794":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:9469:4083":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:10182:8361":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"21:1518:5735":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"21:1115:4265":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"17:12046:8584":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:4519:199":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:49020:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:12609:8745":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:2394:4194":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"30:3821:57129":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"6:1574:7146":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:3418:2941":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:3599:3451":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:49348:9487":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:2547:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"5:1584:6007":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:4797:7561":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"29:4564:6510":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:2534:2893":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"31:4975:6305":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"1:8608:3999":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"30:3610:68927":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"29:5650:7481":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:9193:67785":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"21:1919:5757":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"2:49943:3957":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:7215:5242":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:10108:5548":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"30:4724:68918":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"1:1605:3451":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:4598:7481":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:658:4182":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:4679:65418":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:12265:8622":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:5568:7597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:4902:6921":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:7411:3840":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:21:660":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:4778:7547":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:46821:4568":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:4777:9071":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:49961:4551":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:11897:4233":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:11832:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"30:549:5889":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"22:1052:5801":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"6:4115:7242":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:9601:5521":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:3417:6007":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"0:341:1765":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"21:1208:2962":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"5:3721:3898":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"21:1885:5755":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"22:1147:7876":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"17:1903:48904":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:1759:4684":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:1623:3901":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:54119:9563":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:3475:2943":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"30:3475:5921":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"17:11774:8527":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:1825:3509":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:52735:4448":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:10497:49081":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"29:6911:6728":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"31:4575:6206":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"16:6230:5226":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:46769:4385":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:8162:5554":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"29:4927:7329":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:50570:4342":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:21342:10680":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"21:1998:5712":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"17:11721:8520":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:2885:5437":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:4181:2793":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:5687:4019":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:5610:65841":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:8870:3972":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:4614:2931":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"31:5094:6351":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"0:437:1954":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"2:1750:10568":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:247:8199":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:52211:4435":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:10380:4240":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:20842:3932":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:7907:13318":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"28:28:5872":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"2:8595:2638":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"21:2544:5703":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"17:11247:8424":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"21:1850:5753":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"6:501:6484":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:19973:66013":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:38089:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:2431:3852":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:47233:4152":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"21:2125:8041":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"12:861:4042":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:1608:7166":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:7000:4752":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:5541:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:56961:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:11021:4325":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:7581:5170":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"29:641:6745":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"12:697:4037":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"20:1512:8100":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"12:815:4038":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:54089:9561":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:10403:5506":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"31:6343:6728":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"1:11210:2942":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:10321:5639":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:21822:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:8055:5502":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:7144:5241":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"21:1706:5744":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"17:12756:8795":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"29:6813:7581":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"31:7148:6887":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"17:11034:8403":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"31:5843:6546":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"31:5314:10398":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"5:5547:4765":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:13100:8878":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:6317:4796":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"20:2202:2889":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"16:3017:8212":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"29:4846:7317":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:8779:16570":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"21:1144:5705":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"2:50899:9491":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:9292:4023":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"29:2027:7199":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"31:5594:6475":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"28:142:5859":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"17:9671:5493":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"20:2572:2884":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"31:4957:6300":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"26:209:5856":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"20:1732:8157":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"16:6441:5230":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:10484:3518":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:20220:4460":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:9582:162":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"21:1733:5746":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"31:7157:10481":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"2:10734:4554":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:5974:5218":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:7958:5189":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:9892:4185":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:4712:9069":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:50700:4574":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:48482:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"31:5307:10397":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"2:49081:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:4437:4275":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:2767:2788":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:10420:5641":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"29:5298:7408":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:7255:10504":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:54104:9562":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:6759:5163":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:49133:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:4762:3935":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"22:0:2786":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"6:4354:7372":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:11155:3928":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:14:1884":{"crate_id":2,"path":["core","write"],"kind":"macro"},"0:439:2021":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"12:300:5048":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:51666:9492":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:9885:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:1049:4835":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:8585:2635":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"31:5872:10428":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"31:4635:10350":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"16:2273:5404":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:4673:7507":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"28:182:5879":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"17:12948:8842":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:7366:5167":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:8941:8292":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:54025:9557":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:8295:48819":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:2970:4050":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"29:8253:7749":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"31:6035:6611":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"31:7318:6941":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"1:4250:3917":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:8702:4246":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"20:2047:8186":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"1:8431:151":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"31:4588:6210":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"0:340:1762":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"12:2205:2855":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:54040:9558":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:9362:5531":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:4329:7359":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"30:457:106":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"2:11873:200":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:8945:3976":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"22:1449:5839":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"20:2358:2900":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"29:2151:7226":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"29:604:7094":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"31:6421:4239":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"17:10490:8381":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:8353:2973":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:7832:3826":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:53185:4437":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:10075:8358":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:7992:5188":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:9422:8310":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"29:1987:6317":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:3179:9044":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:4280:7334":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"20:2476:2889":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"6:1668:7210":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:10394:5584":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:11841:8536":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:9433:8311":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:9592:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:6953:7822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:842:4852":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:50239:2951":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"31:4762:6243":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"5:276:1878":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:11800:8530":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"30:3932:7037":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"31:7106:6882":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"29:5836:7507":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"5:1415:4037":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"12:387:67778":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"18:481:5671":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:5672:7654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:46846:4099":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:49117:3423":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"6:1500:6295":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:2596:5476":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:4258:3918":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:11014:8402":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:10575:4746":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:20323:4296":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:6632:5235":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:4:976":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:50889:200":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:8847:3971":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:1473:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"30:3000:5916":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"5:3472:4828":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:1562:7138":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"22:1514:7903":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"1:957:4035":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"31:5551:6453":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"12:762:3899":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:8631:8194":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:11150:10684":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"29:5955:7547":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:7718:3001":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:48406:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"22:1225:3971":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"20:1814:8078":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"16:6855:5238":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:5519:5204":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:53845:4414":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:11748:8524":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:5741:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:8796:5510":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:48077:3837":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"22:1437:4296":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"16:7535:5147":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"29:9212:7827":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"23:872:5668":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:716:13322":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"18:681:5662":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:1601:658":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"5:6793:4761":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"12:2198:10555":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:12361:2696":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:51880:9494":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:6288:4794":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:20194:4399":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:1532:6321":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:4300:7343":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:7928:3909":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:6322:7724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:21224:4474":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:5660:7649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:6495:5061":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:4248:2799":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"7:32:46391":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"29:1726:6300":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:8205:4013":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"21:2029:127":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"18:590:7843":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:7335:5165":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:5870:201":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:10149:4070":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:10708:5606":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:8412:2949":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:1671:1047":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:8393:5490":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:6670:3056":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:53985:9553":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:6820:3451":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"31:0:3038":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"6:554:6745":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"29:8377:7797":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"31:7167:10482":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"2:54005:9555":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:9590:4086":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:8871:8291":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:10108:4078":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:2645:214":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"26:100:2484":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"1:11416:6050":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"22:1342:5834":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"2:9434:4089":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:7071:5240":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:6755:4854":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:4432:9061":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:5713:7678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"20:1880:8169":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"2:48093:3451":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:13459:8993":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:49059:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:8471:3992":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:50387:4330":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"29:745:7105":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"2:2805:3907":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"23:655:5675":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"31:6560:10438":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"1:11500:4024":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"23:726:7847":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"29:5800:7504":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"20:713:8079":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"29:2005:7191":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:521:6031":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"22:1690:7933":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"2:8309:4536":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"9:863:4880":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:47519:6029":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"20:2005:8182":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"6:1686:7217":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:46224:3841":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"21:2140:55781":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"1:7207:4221":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"1:1808:592":{"crate_id":1,"path":["std","env"],"kind":"module"},"20:2351:2899":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"22:1211:5806":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"17:9722:8317":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:6115:5140":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:4191:7295":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"30:4685:68922":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"2:49783:4075":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"21:1504:5734":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"22:1315:5802":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"2:11899:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"20:2268:2892":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"1:5639:4016":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"21:1779:5749":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"1:8887:3973":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:2396:4195":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:4264:3919":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:987:4040":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"0:269:131":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"29:7282:7683":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:5567:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"29:9252:10504":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"21:2348:5775":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"16:4288:9056":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:21624:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:46365:194":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"22:1359:4328":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"1:9350:3944":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"29:7993:7719":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"22:1102:7874":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"31:4942:6295":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"29:9263:10508":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"22:1528:7905":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"29:7476:7701":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:9894:6048":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:47084:4134":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:2734:66392":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:46483:4398":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:2788:4100":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:50107:4085":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:928:4034":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:12896:8826":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:976:4039":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:7858:3811":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:10270:8370":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"5:1933:3807":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:2834:4117":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:2674:5425":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"12:1085:5043":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"21:1442:5731":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"17:8752:2949":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"9:0:2663":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"29:7042:7611":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"29:7443:6581":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:12354:2691":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:2833:5402":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"21:1817:5751":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"9:977:4883":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:2245:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:2976:3900":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12816:8809":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:4417:7401":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"21:1322:5727":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"6:560:6453":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"21:2059:5783":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"2:49929:4647":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:12357:2694":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:1608:3898":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2268:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"29:573:6490":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"2:20007:66072":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"29:8420:7809":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"12:274:10676":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"31:5560:6454":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"2:21251:9442":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"31:6749:58494":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"2:2822:4111":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"31:5618:6481":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"16:6474:5231":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"31:5650:6485":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"31:6649:6781":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"18:515:5673":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"33:358:2421":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"5:676:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:50035:4555":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:4653:7502":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"30:438:2800":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"2:24:592":{"crate_id":2,"path":["core","env"],"kind":"macro"},"20:2459:2887":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"21:2330:5774":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"5:4988:6015":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:12008:8579":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:7289:7831":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"31:5739:6525":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"26:99:2486":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"16:2291:5446":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"29:4605:7242":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:51710:4453":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:7227:5243":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:6352:7725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"31:7369:6951":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"31:7174:58499":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"6:4126:7250":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:2918:3096":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:6572:7816":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"29:7021:7604":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:3157:4321":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:11149:8412":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:11721:9593":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"29:8329:7787":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:2981:4758":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"18:574:7842":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:4177:202":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:50302:4568":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:51840:4442":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:8526:5586":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:3590:3995":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:6998:7823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:49885:4080":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:56987:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:2839:4120":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:6500:7787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:21987:4610":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:54181:9565":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:7408:3839":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:6402:6042":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:884:3837":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:13572:9018":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:48085:3838":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"21:1549:5737":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"31:5029:6321":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"22:1422:1804":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"1:11512:60550":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:20950:4297":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"29:2143:7223":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:46524:2800":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:48204:3837":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:12332:60375":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:11070:8405":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:5060:3862":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:48596:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:7237:7523":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"29:806:41289":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"2:48330:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"28:0:3036":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"31:5805:10419":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"30:466:5885":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"30:5305:7085":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"2:8591:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:10503:1773":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:8583:2634":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:7350:5463":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:6156:6007":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:50712:4578":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:8076:3929":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"12:1534:5056":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"0:442:2036":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"14:40:8400":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:5739:5211":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"20:2449:2901":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"1:6489:3942":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:420:5112":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:13039:8862":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"22:1281:7859":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"5:1201:4045":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:48520:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:20433:4409":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:1714:7223":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"0:571:1896":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"21:1416:5730":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"17:9250:8302":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"26:194:127":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"2:47299:4145":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:2718:5427":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:10257:8369":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13071:8870":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:1601:3837":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"31:6606:6773":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"17:8510:8284":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:49895:4081":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"12:1555:5057":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"31:6705:10456":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"12:1003:4044":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"9:592:4921":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"18:707:4328":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"30:4706:68926":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"1:9369:3945":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"31:6669:6784":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"17:9475:5481":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:6879:2856":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"31:4510:6190":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"16:5959:5400":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:12369:2704":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"23:81:55219":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:8526:2399":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"29:5117:7367":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"30:5209:7084":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"22:1698:2888":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"2:4072:2812":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"29:7953:6195":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:5366:4139":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11939:8565":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"30:4161:7040":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"2:11689:9435":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:13374:8971":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"29:1744:6303":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"31:7076:58498":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"1:5083:3857":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:6983:4144":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:12695:8789":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"22:1521:7904":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"18:727:5666":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"31:5860:10425":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"2:2915:1876":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"23:761:7842":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"2:29512:3566":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"31:6950:6839":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"2:51911:4434":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:9587:212":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:50003:4083":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"14:187:47130":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:12022:8581":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:11235:8421":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:2470:146":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"29:5875:7516":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:6545:5162":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:9339:5622":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"30:2853:5912":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"29:8221:7738":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:7879:3813":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:3153:4212":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:6545:7809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:12350:2688":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:153:5132":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"29:4828:7313":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:39302:3873":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:53035:4413":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:56552:4596":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:11333:60372":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:11628:6053":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:2736:2787":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:8701:8196":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"30:3908:68929":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"17:10670:5610":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:13518:9008":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:4367:7376":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:3891:2931":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"31:5009:10371":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:1518:6303":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"22:1157:7877":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"17:9820:5628":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"29:5974:7561":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"5:3094:3899":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"29:8181:7733":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:11351:4025":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:7221:4222":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"21:1335:5709":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"17:10528:5603":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"30:3872:68924":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"3:223:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"3:0:429":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"30:4338:68913":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"2:2900:2809":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:10546:48821":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"18:652:7842":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:4705:767":{"crate_id":2,"path":["core","iter"],"kind":"module"},"21:2593:67878":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"6:4534:7450":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:49985:2893":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:600:7110":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:6597:5234":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:29712:4635":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"12:1628:6005":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"29:6847:7585":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:6554:7813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:7720:8203":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:48777:2636":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:5835:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"9:956:4878":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:22386:4367":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:5894:6017":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:625:4096":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:9328:5621":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:12366:2701":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:12004:5073":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:6012:5220":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:52355:4415":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:3590:9048":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:50716:4582":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:2526:5423":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:2647:2960":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"31:6473:6756":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"2:2656:219":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:49765:4072":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:513:6507":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:9446:8312":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:11315:8443":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"5:5511:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"30:3293:5919":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"20:1422:4852":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"29:5277:7407":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"29:6871:6946":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:4013:4226":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:4308:3920":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:12278:8623":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13536:9014":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:8929:3974":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"22:1622:7863":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"29:7143:7654":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:3365:3874":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:2775:3891":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"22:961:5795":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"17:11536:8493":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:4974:6013":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:47510:2972":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:2741:3016":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"18:96:55220":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"29:5256:7401":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:2358:5421":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"12:2080:4045":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"5:939:6007":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:50416:4336":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:4014:238":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"26:102:2485":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"2:50704:4577":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"31:6614:6774":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"6:586:6486":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"22:1399:7897":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"17:11909:8546":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"29:4770:7300":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"33:0:2060":{"crate_id":33,"path":["termcolor"],"kind":"module"},"22:1167:4015":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"17:13148:8893":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:6149:5193":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"12:1029:4045":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"31:4796:6258":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"2:11616:35086":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:6087:5168":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:11330:8449":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:4312:2802":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:6713:5166":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"21:2323:5773":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"2:47062:2947":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"18:736:5667":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"31:6413:6745":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"16:5592:5394":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:6723:3008":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"21:1156:5706":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"2:2561:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"29:4714:6485":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"28:181:5877":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"2:52508:9505":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"30:4541:7049":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"1:3188:2965":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:9930:8326":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"29:6936:7586":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"28:56:5875":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"1:6834:211":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:13557:9017":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:50268:4565":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:7788:6047":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:11559:8497":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"9:827:4877":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"22:1611:7918":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"2:52309:4430":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"20:2062:8188":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"21:1376:5728":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"6:519:6490":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"20:1922:67828":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"17:13134:8891":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"30:4968:7078":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"16:6178:5223":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"20:1473:8119":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"29:4675:7270":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:10476:49080":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"31:4599:6211":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"2:50907:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:29606:4634":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:2583:6033":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:54142:9564":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"0:36:1804":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"1:4653:4244":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"31:7378:4245":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"21:2227:5771":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"6:4506:7437":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"20:1998:8179":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"20:2519:2356":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"16:5438:5199":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"18:521:5670":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:29548:4633":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"20:1861:67832":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"6:5554:7586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"24:219:1750":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"29:5914:7532":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"31:5070:6341":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"21:2087:7936":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"31:6590:6769":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"6:4200:7300":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:19988:66013":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"29:1913:7159":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:39311:3414":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"29:4884:7321":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:53533:4425":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:6375:6940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"21:2404:5779":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"20:2609:8096":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"29:7302:7685":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"29:6783:7568":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:4540:7453":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:49774:4071":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"33:173:2378":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"2:48996:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"31:4660:10356":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"2:47258:4154":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:11594:8501":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"24:155:2827":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"1:8054:4185":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"28:147:5865":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"2:21657:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:10062:8357":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:4179:6485":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:2762:5429":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"20:2487:2884":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"6:131:41289":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"29:8134:7726":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:9631:5517":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:6081:3451":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"31:6298:10435":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"1:907:3451":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:6763:66457":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"30:5180:7080":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"2:50481:4338":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"20:2552:2883":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"16:7430:193":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:1738:7227":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"22:1507:7902":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"2:29472:3564":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:7413:5185":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:2500:5434":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"31:5275:7512":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"20:2220:2893":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"24:290:2825":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"17:13059:8869":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"20:1938:6004":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"2:11954:3007":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"31:4528:6193":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"2:21921:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:8670:3955":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:21041:4606":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"12:669:4036":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:2864:4015":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"28:152:5866":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"12:822:4039":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:11488:4023":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:13221:8910":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"33:201:3078":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"21:1484:5733":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"5:3898:3837":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"21:2553:4265":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"12:1832:3837":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"22:1659:7928":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"20:1574:8059":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"2:47075:4133":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:12349:2687":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:5344:9583":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:1636:6317":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"29:5883:7521":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:4475:7429":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:49014:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"16:6354:5229":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:8475:5485":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"29:505:7091":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:8729:9433":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:53001:4431":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:13382:8972":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:21363:4624":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:9458:5491":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:2480:230":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:6337:5228":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:970:4038":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:12372:2707":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:5379:5196":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:50284:4567":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:21756:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:13126:8888":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:4510:9062":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"23:836:5665":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:4206:7301":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"20:1405:67831":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"31:6310:6713":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"6:5772:7698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:12955:8844":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:3226:2512":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:20245:4298":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"20:2174:2888":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"23:853:5667":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"33:62:3071":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"31:5292:6389":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"23:844:5666":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:8346:2971":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:9293:5624":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:11739:10686":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:39262:3847":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"31:5896:6553":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:592:7105":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:9118:216":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:8848:3768":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"31:6542:58493":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"2:46939:4643":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"7:0:1483":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:9328:3837":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"21:1309:5726":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"31:5799:10417":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"22:1406:4326":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"2:21184:9724":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"29:809:41290":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:4740:9070":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:47216:4151":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:6124:5192":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:1111:4045":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:7521:5146":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:5472:6556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"31:5610:6480":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"17:10894:5550":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"31:4813:6261":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"16:7489:5124":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:10520:8386":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:9509:9665":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"21:2423:5754":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"6:608:7115":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"29:1762:7119":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:11557:10118":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:13492:8999":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:47154:4146":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:1643:7191":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:7189:5135":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:9501:5529":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:52111:4443":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:46490:3876":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:8272:5612":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:47269:2948":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"22:1581:7914":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"21:1654:5742":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"16:7276:5247":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:46927:4642":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:6749:2971":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:8066:4187":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:1230:4046":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"30:5074:7079":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"},"1:12370:2705":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:11180:4187":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"20:1889:8166":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"16:7948:5157":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:1102:4044":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"20:1518:8124":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"2:50980:4172":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"15:0:2668":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:6702:3064":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"22:1596:1804":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"2:20435:4296":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:52000:4411":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:2406:4200":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"31:6585:10447":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"22:1023:5799":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"2:20028:66077":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:20690:18459":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"28:189:5878":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"21:1671:5743":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"21:1296:5710":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"20:1671:67823":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"16:2984:5433":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"29:2113:6955":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"21:2665:5790":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"6:62:41228":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"29:764:7110":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"5:2465:4840":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"21:1131:5704":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"29:5987:10489":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"31:5079:6347":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"21:0:2785":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"2:11247:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:50135:4559":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"29:4945:7332":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:4516:4724":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"31:4651:10353":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"5:5199:4794":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:3125:8207":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"29:5555:7459":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:9437:3055":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:4102:7233":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:48292:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"29:5171:7376":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"28:19:3040":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"21:1194:127":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"29:8856:7822":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:56948:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:755:5668":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:50593:4651":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:5113:9076":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"22:1201:2962":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"2:50580:4343":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:5210:8284":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:3373:2931":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:8059:3928":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:2784:5431":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:50402:4333":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:5510:7585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"18:690:5663":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:13184:8902":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:11603:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"31:5300:10395":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"22:1333:5833":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"17:8596:8193":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:4680:9068":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:2467:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"31:5626:6482":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"18:582:3402":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:12363:2698":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:10924:2965":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:10747:4022":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:10159:8360":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:6219:5225":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:46889:4731":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:9336:3941":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:11168:9679":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:50153:4560":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:13203:8907":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"22:1310:7895":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"6:4139:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:10332:5647":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"20:949:5687":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"6:575:6898":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:1511:6300":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:52531:9506":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:6785:193":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:51981:9495":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:5500:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"12:1120:5044":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:9382:8308":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"29:1887:7147":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:8797:3961":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:4816:10492":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:12192:6056":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:1861:3518":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"31:5251:10383":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"30:3192:5918":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"1:8628:4228":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:49814:4064":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:50613:4652":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:9414:3948":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:8141:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"31:7117:6884":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"31:5851:6549":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"16:5194:8283":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"4:0:2661":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:2380:5417":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:47002:6023":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:8593:2639":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:6434:9586":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:9844:5631":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"12:1138:4046":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:4348:9058":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:1935:4180":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:1359:3451":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"31:7278:6927":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"2:48212:3838":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"12:444:140":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:6474:6022":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"33:89:3076":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"1:993:4041":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"20:2012:8115":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"2:49029:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"20:2040:8185":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"9:920:4879":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"29:9276:6202":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:6386:4591":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:6867:2855":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:12964:8845":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12060:8585":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:7965:4844":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:7374:5251":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"21:2385:5778":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"20:1231:5687":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"16:4536:9063":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:5531:2992":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:3267:2964":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:2779:3893":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:2244:4841":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"31:5835:6543":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"5:3002:3903":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:10455:5642":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:3081:2974":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"16:6881:5239":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"31:5226:10378":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"22:1261:7889":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"16:6668:5151":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:5793:5214":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:12291:8624":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"29:5742:7494":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:7072:4790":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"29:676:6739":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"29:5572:7461":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"22:1304:7894":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"6:4449:7417":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:10553:3989":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:13024:8860":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"30:4114:68919":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"17:12211:8616":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"31:6965:6845":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"31:6325:6719":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"18:660:5660":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:47492:3056":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:897:3838":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"24:241:2824":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"17:8368:5505":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:4307:7346":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:52689:4444":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:2724:2628":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"9:896:4882":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:11320:3520":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"18:80:55219":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:12836:8817":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:21723:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"31:4723:6228":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"16:7850:5160":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:4551:6326":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"29:5321:7417":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"31:7235:6907":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"6:5841:6581":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:12225:8617":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"30:356:10113":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"1:11755:6055":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"31:5104:58477":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"6:7226:7827":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"29:1709:6297":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"29:2093:7217":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:11054:8404":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:2464:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:11761:8525":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"31:6357:6735":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"2:50992:3006":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"29:4651:7260":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:11893:8541":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"12:393:67779":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:2253:2940":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"5:6732:3451":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"28:69:56670":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"9:709:3971":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"22:1651:7926":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"2:50545:4340":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"30:3670:68925":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"17:11661:8512":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:4912:9075":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:5009:3861":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8560:4267":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:5756:4022":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:52163:4450":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:2432:3848":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:6646:5454":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:4059:2931":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:10434:8376":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:4294:7341":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"18:671:5661":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:5856:5216":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"29:7228:7678":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:48220:3451":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:2887:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:6449:6017":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:2826:4113":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:4320:3923":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:4317:7353":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:4231:7317":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"31:6743:10479":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"17:11137:8411":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"30:4828:68917":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"17:9873:8321":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:9263:8303":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"22:1368:5835":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"2:46852:4728":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:10930:2514":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"0:342:1790":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"2:11741:65402":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:56935:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:49840:4062":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:3302:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"31:5754:10403":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"17:10088:8359":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:7020:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:49544:4065":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:2657:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:9155:8296":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"30:0:3037":{"crate_id":30,"path":["rustix"],"kind":"module"},"31:6660:6782":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"20:2599:2890":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"20:213:67833":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"17:9700:5569":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:567:6739":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11125:8408":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"18:531:5674":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"31:6632:6779":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"21:1802:5750":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"2:21236:4475":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:4581:4243":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:4653:9067":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"29:5369:7429":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:6633:9587":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"31:6431:6750":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"16:2648:5435":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"23:632:5673":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:7475:5149":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"29:2167:7227":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4398:7400":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:5498:7581":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:1561:3971":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"17:11436:8459":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:46908:4389":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"0:14:1755":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"2:11092:4332":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:4429:4273":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"29:6986:7598":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:20854:66016":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:7461:5154":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:20685:4299":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"23:769:7842":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:3001:5432":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:10075:4077":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:9531:60378":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:6797:65998":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:1887:42569":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:21168:4479":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:4834:3869":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"14:215:9338":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"21:1535:5736":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"21:2048:131":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"17:12972:8847":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:454:3825":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:38106:3402":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"12:2053:4043":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:3145:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:48135:3150":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"22:1094:7871":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"20:2590:2892":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"16:6248:5145":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:1962:5568":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"18:564:5676":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:5523:6946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"26:134:127":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"21:1081:5700":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"17:9897:8323":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:11951:8567":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:2378:1988":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:25196:4381":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:1541:7123":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:9597:3013":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"20:1991:8177":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"23:824:4328":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"22:1080:2378":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"2:2696:3413":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:12364:2699":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:48068:3450":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:46569:4314":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"31:4547:6201":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"21:2455:5750":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"2:8589:2636":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:5884:3943":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"20:1528:8072":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"2:50724:4581":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:5715:5210":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"21:2367:5777":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"2:4186:2794":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"31:5666:6487":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"6:539:7094":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:6926:4643":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"29:8163:7731":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"23:0:2671":{"crate_id":23,"path":["memchr"],"kind":"module"},"31:7227:6901":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"1:8682:4274":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:1021:5625":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"30:4195:7042":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"29:0:787":{"crate_id":29,"path":["libc"],"kind":"module"},"6:4592:7478":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:7545:5173":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"25:0:2662":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"5:1426:193":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"29:7002:7599":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:5817:5215":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:12739:8793":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:12033:8582":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"14:31:9335":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"21:2173:5758":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"16:3557:9047":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:1678:7216":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:8596:3998":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"31:4567:6205":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"17:8137:48818":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4152:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:53783:4449":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:6654:5150":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:859:3837":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:8395:2947":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:12768:8800":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13091:8877":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"30:4450:7048":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"21:2119:1759":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"20:178:8071":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"2:7138:155":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"24:198:2195":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"29:5594:7467":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:5165:3952":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:47053:4131":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:8822:67787":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:10296:8372":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:620:9413":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:8304:4535":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:1033:66860":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:13436:8992":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:46341:193":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:10822:48822":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"29:1802:7123":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:50089:2894":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:13007:8853":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:9576:4087":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"31:5946:6581":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"12:353:5046":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"22:1637:7923":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"20:1433:67824":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"17:12514:8662":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:10559:4744":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:3548:6007":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"20:1628:127":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"2:49318:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"30:4023:7038":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"2:9548:2894":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"22:929:5807":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"22:923:3852":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"29:9158:7824":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:7922:13320":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:4565:9064":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"24:296:1752":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"17:8339:48820":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:4737:7532":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"20:1642:5689":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"2:49293:3771":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"5:3337:3837":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"9:586:4919":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"5:3792:3838":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:2952:4375":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:47122:4137":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:6747:3898":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:4376:9059":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"33:292:3082":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"31:5781:10416":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"17:12087:8589":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:6597:161":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:5861:7701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"31:4966:6303":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"1:12348:2686":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:4626:9066":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:12368:2703":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:8677:4271":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:7447:5153":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:8089:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:10350:5504":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"31:7387:6955":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"1:5877:3942":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4212:7304":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"29:7425:7700":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:9031:67788":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"31:5221:7831":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"21:2614:5788":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"16:3845:9052":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"29:5706:7489":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"9:649:4923":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"21:2436:5755":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"29:4905:7326":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"5:2730:66393":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"29:5993:10492":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:6101:5142":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10921:8396":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:5619:2931":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:10949:8398":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:56974:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4185:7293":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"18:644:7842":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"29:6893:6951":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"29:486:7086":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"30:4667:68920":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"29:1929:7161":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:11300:8437":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"31:6452:6755":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"17:8951:67793":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:48368:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:6768:5237":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:562:8203":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:6721:5236":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"12:810:4035":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"23:798:5662":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"29:7925:6927":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:52018:9496":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"30:3379:5920":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"6:7279:6202":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:21313:65050":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"29:8924:7823":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:4768:7542":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:6978:218":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"29:556:6507":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"31:5913:6557":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"2:50963:156":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:4253:9055":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"20:1213:2886":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"2:21888:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"0:0:2058":{"crate_id":0,"path":["env_logger"],"kind":"module"},"2:19960:3402":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:11664:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5472:5201":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:2746:3879":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"29:8105:6940":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:6775:3060":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"20:1790:8160":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"6:4427:7407":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:11547:8496":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:7637:5141":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:487:7086":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:46809:4733":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"5:2726:10565":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:0:2669":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:6869:9587":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:7945:3515":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:8688:4238":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"20:1605:8075":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"31:5983:10433":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"29:5668:7483":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"29:1948:7166":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:46325:195":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"31:5085:6349":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"22:1127:7868":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"2:50728:4575":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"26:164:121":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"1:951:3899":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:47145:4138":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"29:7355:7687":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:8813:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:9183:8297":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:1722:7226":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:13168:8899":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:5699:7667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:46757:4384":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:9265:3837":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:8454:3991":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:7033:3098":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:9791:8319":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"0:445:1832":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"2:20282:3933":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:3939:4461":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:7037:3149":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:13114:8885":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:7934:5156":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:7719:3151":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"29:2136:4239":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:4968:3854":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:12371:2706":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"12:1840:3898":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"21:2469:5752":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"29:4805:7304":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:49340:9486":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:10245:8368":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"29:712:7103":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"21:2294:5733":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"1:8939:3837":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6682:5164":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:47501:9476":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10625:5511":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:2935:3837":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:4257:7326":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:719:5665":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:12797:8808":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"31:5765:6529":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"1:11200:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:7166:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:50053:4556":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:8210:2962":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"31:5674:6490":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"2:8581:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"12:60:67777":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"31:5002:10367":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"21:1830:5752":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"22:1495:7900":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"1:683:13321":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:6068:3063":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"31:4674:58468":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"17:12118:8595":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:20005:66076":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:2215:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:10466:8379":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:13354:8965":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:4740:3854":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"21:1107:5703":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"17:11368:8457":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:46955:4644":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"30:3086:5917":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"2:10589:2453":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:1595:7159":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:46748:9466":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"12:738:4034":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"21:1945:5759":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"1:11691:9590":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:4904:6923":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"31:6578:10445":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:50277:4566":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"31:4501:6186":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"29:9246:7525":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"20:2054:8187":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"5:2968:3902":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"7:79:46398":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:8374:2944":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:7208:7824":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:8241:5609":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:8110:48814":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"29:9176:7825":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"29:5536:6326":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"31:5904:6556":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"2:8576:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"5:667:225":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:51778:4421":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"27:0:2059":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"1:9344:3451":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"29:539:6483":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"17:10283:8371":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"31:5888:10431":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"6:1580:7147":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:1701:6205":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:6972:10566":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"16:5642:5208":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"12:1872:3903":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"20:1289:2891":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:8536:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:6549:4502":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"20:2229:2894":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"20:1833:8162":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"2:4112:2792":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:6674:3057":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:0:481":{"crate_id":2,"path":["core"],"kind":"module"},"2:9562:4085":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:50755:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:13506:9006":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:4597:9065":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"31:6998:58497":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"17:11199:8419":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"21:1932:5758":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"17:12630:8754":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:7283:63096":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:2304:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:3249:5557":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:11500:8485":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:5313:9583":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"20:307:8074":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"1:8720:3855":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:6738:4853":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"20:2119:2897":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"5:1943:4760":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:11644:9683":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:2473:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:4379:7385":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:11035:4328":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:52971:4428":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:47113:1757":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"18:491:5796":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:2252:5405":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:2476:231":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"6:0:787":{"crate_id":6,"path":["libc"],"kind":"module"},"2:9289:3838":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"31:5634:6483":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"5:1435:4833":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:8362:2942":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"21:1284:5711":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"17:8774:5503":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"29:8070:7725":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:12374:2709":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"20:1896:8129":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"22:1042:5800":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"2:7024:148":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"29:4788:7301":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:11706:9591":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:7297:5249":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"12:751:3898":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:47163:4141":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"20:2437:2899":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"33:76:3073":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"17:12674:8784":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"22:1501:7901":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"20:2466:5693":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"1:10969:3813":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"21:1766:5748":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"16:6450:5062":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:2238:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:7404:5169":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"31:5658:6486":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"29:728:6486":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"2:21200:8158":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:6294:5172":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:2548:5424":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:4879:9074":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"29:5938:7539":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:5692:7666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:49853:4063":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:1617:3900":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:7731:9686":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"22:1378:5660":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"2:47284:4155":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:4559:7459":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"12:0:2666":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:10927:2512":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"13:0:2660":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:1394:4035":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"21:254:67879":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"17:10997:8400":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"18:614:67796":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"29:5513:7453":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:4683:7512":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"5:1185:4043":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:5443:4140":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"23:716:67795":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"20:1914:8174":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"15:214:5069":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"20:1492:8120":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"5:2039:4837":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:56909:239":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"31:4827:10362":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"17:12980:8849":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:50776:3020":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:51941:4422":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"33:161:2509":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"2:54014:9556":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:6405:237":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:10771:4557":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"31:7138:6886":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"1:3228:2967":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"21:1958:5760":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"22:1137:7875":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"22:1351:1804":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"1:2247:4186":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:4208:9054":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"5:1216:4044":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:53929:4452":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"31:4615:10345":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"1:3310:2546":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:6596:4125":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"20:2432:2898":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"1:3061:1028":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"17:10845:5607":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"12:320:5047":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10682:5611":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:36:4789":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:11708:8517":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"22:1677:7931":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"12:2190:67782":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"29:7906:6520":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:12373:2708":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:5536:5205":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:21954:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"31:7338:6942":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"2:49955:4550":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:3254:9045":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"12:1044:5041":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:9451:9662":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:1736:4685":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:10207:8362":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:10139:5531":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:3466:61056":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:50259:4564":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:3151:4129":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"31:5880:7227":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"2:9108:3852":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"13:108:67783":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:3680:9050":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:54051:9559":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"23:741:67797":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:4312:3921":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:6524:7797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11684:8516":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"22:1086:7858":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"5:2947:4757":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:7214:7825":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:6323:5148":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:9764:8318":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:4726:7526":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"22:1586:5674":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"16:5681:5209":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"29:7502:7712":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11813:8532":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:11853:8537":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"29:4749:7295":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:2655:220":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:4450:4276":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"29:7973:6201":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:4239:7318":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"0:33:1757":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"29:7246:7679":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:6814:3451":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:13176:8900":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:12781:8805":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:13214:8908":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"31:5041:6326":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"2:6987:4143":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"31:6623:6776":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"18:507:7842":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"5:1348:3838":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:52065:4455":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:8200:4012":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"29:5015:7343":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:8724:6907":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:2916:5545":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:9350:5623":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:9223:48866":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:11733:10685":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"12:632:3837":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"21:2574:8065":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"1:7769:6045":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"22:1388:5836":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"21:1178:7950":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"16:5606:5207":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:7266:5246":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:47032:4062":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"18:0:2671":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:11576:3013":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:46799:4732":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:12367:2702":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:4635:7494":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:6129:6035":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"21:1588:5738":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"2:52287:4427":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13158:8896":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:4135:9053":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"20:1754:2800":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"17:9885:8322":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"29:8440:7813":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"33:43:3070":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"17:12322:8630":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:4303:2801":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"22:1107:5804":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"17:13366:8968":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:11433:6052":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:6697:5452":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"33:81:3075":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"17:10233:8367":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:3529:3899":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"0:585:1773":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"16:7615:5158":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:9382:3946":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"12:659:3451":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:5782:7687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"29:5633:7478":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:4247:7321":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12164:8602":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:11974:8576":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:3265:2514":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:6188:5224":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:966:4037":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:53643:4445":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"20:1965:8103":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"2:3951:4462":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:8525:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"31:5521:58480":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"31:5825:6540":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"31:6399:6744":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"31:6373:6738":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"12:853:4041":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"29:5194:7385":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:9456:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:46922:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:4890:3919":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"29:4979:7336":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:52141:4447":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"20:1842:67827":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"6:6409:7731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:1654:7199":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"9:382:4875":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:5574:5206":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:2019:66463":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"20:1661:8140":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"6:1550:7129":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:49540:4748":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"31:4621:10348":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"20:1622:8139":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"1:8049:1752":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"29:5094:7362":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"20:1647:5690":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"31:5332:58479":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"17:11106:8407":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"21:1467:5732":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"17:8494:8283":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"30:3845:46523":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"17:12638:8755":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:5876:7712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"28:42:5873":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"5:4092:6009":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"14:7:9335":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"21:2099:5729":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"8:0:2662":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"30:2529:6958":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"6:5480:7568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:1886:3526":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:6139:5222":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:8587:2637":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"21:2132:8043":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"30:498:5887":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"6:5595:7604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"20:2581:2889":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"24:326:2826":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"16:7307:5250":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:4489:4245":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:6225:201":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:3350:3838":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:2380:4190":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"29:621:7097":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"1:12351:2689":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:52257:4423":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"19:0:991":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:962:4036":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:6430:7738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:11876:4226":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"31:4949:6297":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"2:20026:66074":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:8881:67791":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:8981:8293":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:10185:6030":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"17:9553:5531":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:3949:4000":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"30:4212:7043":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"31:6686:10449":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"29:4731:7293":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:2696:5426":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:4565:7461":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"9:676:4968":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"22:1413:5837":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"17:12307:8626":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"29:9234:7523":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:48161:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"18:113:55221":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"33:221:3079":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"20:0:1556":{"crate_id":20,"path":["regex"],"kind":"module"},"17:12850:8820":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"20:1452:67825":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"1:9306:4024":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"31:4988:6311":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"14:0:2667":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:13047:8863":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"31:6923:6835":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"1:12355:2692":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"29:8458:7816":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:20402:3852":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:47093:4135":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"29:5857:7512":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"9:33:4971":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"16:3448:8216":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:13340:8959":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:3219:3000":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"21:2569:5785":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"2:52925:4424":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:2740:5428":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"21:268:67880":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"1:12360:2695":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:9751:5571":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:7868:5159":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:5727:7680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:4399:4270":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:3167:4397":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:6809:2791":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"31:5990:58487":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"20:2496:2888":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"30:4867:7077":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"31:6711:10458":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"12:834:4040":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:49793:4073":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:8146:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:51732:4441":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:6942:4814":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:7287:5248":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:4936:4056":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:7220:7826":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:11639:8511":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:29534:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:8579:111":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"6:1707:4239":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:5733:7683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"12:985:4043":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:6571:5233":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:50189:2889":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:2921:5128":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:6030:5221":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:5771:5213":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:10725:63121":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:47540:9431":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:9909:8324":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10796:5604":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"20:1533:8129":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"31:5269:10392":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"31:5696:6507":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"6:6269:6520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"18:766:5669":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"22:1644:7924":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"21:2560:127":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"}},"external_crates":{"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"regex_syntax","html_root_url":null},"31":{"name":"linux_raw_sys","html_root_url":null},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"29":{"name":"libc","html_root_url":null},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"io_lifetimes","html_root_url":null},"23":{"name":"memchr","html_root_url":null},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"aho_corasick","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"regex","html_root_url":null},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"rustix","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"termcolor","html_root_url":null},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"27":{"name":"is_terminal","html_root_url":null},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"26":{"name":"humantime","html_root_url":null}},"format_version":23}