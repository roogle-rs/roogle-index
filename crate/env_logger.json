{"root":"0:0:2118","crate_version":"0.10.0","includes_private":false,"index":{"a:2:2684:220-0:342:1850":{"id":"a:2:2684:220-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[835,0],"end":[900,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:1890","0:384:1916","0:385:1815","0:386:2045"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3036-0:210:230":{"id":"a:2:8249:3036-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12132:2892":{"id":"2:12132:2892","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:9159:2708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:9159:2708","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:506:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:446:1890":{"id":"0:446:1890","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1242,0],"end":[1247,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:33:1817":{"id":"b:2:2542-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:458:2625":{"id":"a:2:2701:228-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:582:423":{"id":"0:582:423","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:571:1956":{"id":"0:571:1956","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:1959","0:574:1962","0:576:1965","0:578:1968"],"impls":["a:2:8249:3036-0:571:1956","a:2:2701:228-0:571:1956","a:2:2741:3112-0:571:1956","a:2:2684:220-0:571:1956","a:2:8250:3035-0:571:1956","b:2:3319-0:571:1956","b:2:2553-0:571:1956","b:2:2248-0:571:1956","b:2:2538-0:571:1956","b:2:2542-0:571:1956","b:2:2251-0:571:1956","b:2:2548-0:571:1956","b:5:684-0:571:1956","0:580","0:267","0:581","0:583"]}}},"b:2:3319-0:571:1956":{"id":"b:2:3319-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:554:668":{"id":"0:554:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:269:132":{"id":"b:2:2553-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3321:1491":{"id":"2:3321:1491","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39341:8287","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:1955","0:96:2503","0:97:2504","0:98:2505","0:99:2506"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:269:132":{"id":"b:2:3319-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2552:1478":{"id":"2:2552:1478","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:210:230":{"id":"a:2:2684:220-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5398:39933":{"id":"5:5398:39933","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:458:2625":{"id":"b:2:2251-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:585:1833":{"id":"0:585:1833","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[317,0],"end":[320,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:8249:3036-0:585:1833","a:2:2701:228-0:585:1833","a:2:2741:3112-0:585:1833","a:2:2684:220-0:585:1833","a:2:8250:3035-0:585:1833","b:2:3319-0:585:1833","b:2:2553-0:585:1833","b:2:2248-0:585:1833","b:2:2538-0:585:1833","b:2:2542-0:585:1833","b:2:2251-0:585:1833","b:2:2548-0:585:1833","0:589","0:427","0:423"]}}},"0:369:1975":{"id":"0:369:1975","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[666,4],"end":[669,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12011:811":{"id":"2:12011:811","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11888:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:268:60":{"id":"0:268:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:3112-0:585:1833":{"id":"a:2:2741:3112-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:599:1864":{"id":"b:2:2553-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:511:2631":{"id":"0:511:2631","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:362:1951":{"id":"0:362:1951","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[615,4],"end":[618,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["indent",{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:100:2561":{"id":"b:2:3319-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:599:1864":{"id":"a:2:2701:228-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12060:2321":{"id":"2:12060:2321","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11712:6160","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split_whitespace":"2:12038:36895","str::rsplit":"2:12066:32256"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43357:2953","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2541:1905":{"id":"2:2541:1905","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93-0:81:2549":{"id":"0:93-0:81:2549","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:81:2549","glob":true}}},"0:358:1941":{"id":"0:358:1941","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[590,4],"end":[593,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:36:1864":{"id":"b:2:2553-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:2057":{"id":"0:279:2057","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2867:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5400:3013":{"id":"5:5400:3013","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:438:2024":{"id":"0:438:2024","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1153,0],"end":[1155,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2489","0:176:2635","0:177:2492","0:178:2686","0:179:2690","0:180:2495"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2250:1806":{"id":"2:2250:1806","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2016":{"id":"0:53:2016","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[228,4],"end":[259,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:169:2477":{"id":"b:2:2553-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:60":{"id":"0:219:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12023:2067":{"id":"2:12023:2067","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12101:39272":{"id":"2:12101:39272","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3035-0:36:1864":{"id":"a:2:8250:3035-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3035-0:599:1864":{"id":"a:2:8250:3035-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:361:1948":{"id":"0:361:1948","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[608,4],"end":[611,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:3112-0:210:230":{"id":"a:2:2741:3112-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:145:2488":{"id":"0:145:2488","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:368:1970":{"id":"0:368:1970","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[647,4],"end":[650,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["suffix",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523:2725":{"id":"0:523:2725","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8249:3036-0:585:1833":{"id":"a:2:8249:3036-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12042:36907":{"id":"2:12042:36907","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43649:8240","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:506:668":{"id":"0:506:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3035-0:342:1850":{"id":"a:2:8250:3035-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12056:3485":{"id":"2:12056:3485","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99:2506":{"id":"0:99:2506","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12113:30901":{"id":"2:12113:30901","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:1423":{"id":"0:373:1423","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[739,4],"end":[742,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["target",{"resolved_path":{"name":"fmt::Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:169:2477":{"id":"b:2:2538-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:599:1864":{"id":"a:2:2684:220-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:574:1962":{"id":"0:574:1962","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2684:220-0:508:2490":{"id":"a:2:2684:220-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:508:2490":{"id":"b:2:2251-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211:2581":{"id":"0:211:2581","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8250:3035-0:269:132":{"id":"a:2:8250:3035-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5384:2315":{"id":"5:5384:2315","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3035-0:210:230":{"id":"a:2:8250:3035-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:342:1850":{"id":"b:2:2542-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:169:2477":{"id":"b:2:2542-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3036-0:508:2490":{"id":"a:2:8249:3036-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:210:230":{"id":"a:2:2701:228-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:544:2593":{"id":"0:544:2593","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8250:3035-0:458:2625":{"id":"a:2:8250:3035-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:123:2549":{"id":"0:123:2549","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2120","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:458:2625","0:169:2477","0:508:2490"],"is_stripped":true}}},"b:2:2248-0:571:1956":{"id":"b:2:2248-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:571:1956":{"id":"b:5:684-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2697","5:687:2075","5:688:3542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:517:2630":{"id":"0:517:2630","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:9151:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:9151:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12099:2330":{"id":"2:12099:2330","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:36:1864":{"id":"b:2:2548-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12081:39267":{"id":"2:12081:39267","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:543:2002":{"id":"a:2:2701:228-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:397:1815":{"id":"0:397:1815","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[980,4],"end":[987,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12072:39266":{"id":"2:12072:39266","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11712:6160","str::split":"2:12060:2321","prim@char":"1:11888:419","str::split_terminator":"2:12069:39265"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43425:8492","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:36:1864":{"id":"b:2:3319-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:48:1975":{"id":"0:48:1975","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:33:1817":{"id":"b:2:2248-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:578:1968":{"id":"0:578:1968","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8250:3035-0:33:1817":{"id":"a:2:8250:3035-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:436:668":{"id":"0:436:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1118,8],"end":[1127,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:92:1816":{"id":"0:257-0:92:1816","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::humantime::glob","name":"glob","id":"0:92:1816","glob":true}}},"2:12035:8241":{"id":"2:12035:8241","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43327:8234","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265-0:571:1956":{"id":"0:265-0:571:1956","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:1956","glob":false}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:407:2070":{"id":"0:407:2070","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1031,4],"end":[1039,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:36:1864":{"id":"a:2:2684:220-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:3112-0:100:2561":{"id":"a:2:2741:3112-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3036-0:543:2002":{"id":"a:2:8249:3036-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:210:230":{"id":"b:2:2553-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:378:2024":{"id":"0:378:2024","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[814,4],"end":[817,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5646:1455":{"id":"5:5646:1455","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:100:2561":{"id":"b:5:5644-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476:668":{"id":"0:476:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:576:1965":{"id":"0:576:1965","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2684:220-0:585:1833":{"id":"a:2:2684:220-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12090:39269":{"id":"2:12090:39269","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11712:6160","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:2045"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43579:8495","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12107:39276":{"id":"2:12107:39276","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11737:15695","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143-0:123:2549":{"id":"0:143-0:123:2549","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:123:2549","glob":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[268,0],"end":[275,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:49:1980":{"id":"0:49:1980","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:571:1956":{"id":"b:2:2542-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:605:60":{"id":"0:605:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:585:1833":{"id":"b:2:2248-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113:668":{"id":"0:113:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:2072":{"id":"0:410:2072","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1044,4],"end":[1051,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12037:2523":{"id":"2:12037:2523","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43343:2994","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:668":{"id":"0:486:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:100:2561":{"id":"a:2:2701:228-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5399:39934":{"id":"5:5399:39934","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:1938","`String`":"5:7255:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:1938","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:3042","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2489":{"id":"0:175:2489","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:599:1864":{"id":"b:2:2542-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:33:1817":{"id":"a:2:2701:228-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:543:2002":{"id":"a:2:2684:220-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:363:1954":{"id":"0:363:1954","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[621,4],"end":[624,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["timestamp",{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"fmt::TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:1815":{"id":"0:41:1815","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[139,4],"end":[145,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:559:729":{"id":"0:559:729","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3036-0:269:132":{"id":"a:2:8249:3036-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:359:1943":{"id":"0:359:1943","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[596,4],"end":[599,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389:1809":{"id":"0:389:1809","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[907,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12034:32246":{"id":"2:12034:32246","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12033:32245"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3035-0:508:2490":{"id":"a:2:8250:3035-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96:2503":{"id":"0:96:2503","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:599:1864":{"id":"b:2:2248-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:332-0:262:1816":{"id":"0:332-0:262:1816","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[294,0],"end":[294,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::fmt::glob","name":"glob","id":"0:262:1816","glob":true}}},"2:12021:314":{"id":"2:12021:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12022:32222","`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:572:1959":{"id":"0:572:1959","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2542-0:508:2490":{"id":"b:2:2542-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12014:39259":{"id":"2:12014:39259","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:668":{"id":"0:281:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:169:2477":{"id":"b:2:3319-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:384:1916":{"id":"0:384:1916","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12043:32262":{"id":"2:12043:32262","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:2504":{"id":"0:97:2504","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2253:2467":{"id":"2:2253:2467","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:458:2625":{"id":"b:2:2248-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:192:668":{"id":"0:192:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:9157:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:9157:194","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:476:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:466:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:508:2490":{"id":"b:2:2248-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12138:26423":{"id":"2:12138:26423","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4533:26423"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43674:8418","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:210:230":{"id":"b:2:2538-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:98:2505":{"id":"0:98:2505","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2561"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365:1961":{"id":"0:365:1961","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:1815":{"id":"0:385:1815","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[892,4],"end":[894,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:668":{"id":"0:491:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206:1816":{"id":"0:206:1816","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:668","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:207-0:142:1816","0:208-0:115:1818"],"is_stripped":true}}},"0:371:1815":{"id":"0:371:1815","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[707,4],"end":[710,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12046:2341":{"id":"2:12046:2341","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348:1890":{"id":"0:348:1890","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[443,4],"end":[450,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:668":{"id":"0:70:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:571:1956","0:269:132","0:257-0:92:1816","0:258-0:206:1816"],"is_stripped":false}}},"2:12131:33378":{"id":"2:12131:33378","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39552:32200","Self::is_ascii":"2:12130:33377"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39552:32200","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:2727":{"id":"0:528:2727","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:530:1606","0:531:1607","0:532:1608"]},"discriminant":null}}},"b:2:2553-0:585:1833":{"id":"b:2:2553-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12025:32219":{"id":"2:12025:32219","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:688:3542":{"id":"5:688:3542","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:36:1864":{"id":"a:2:2701:228-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3035-0:585:1833":{"id":"a:2:8250:3035-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:370:1980":{"id":"0:370:1980","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[685,4],"end":[688,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:100:2561":{"id":"a:2:2684:220-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:210:230":{"id":"b:2:2251-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:3112-0:342:1850":{"id":"a:2:2741:3112-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:269:132":{"id":"b:2:2251-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:39930","5:5384:2315","5:5387:39931","5:5390:39932","5:5398:39933","5:5399:39934","5:5400:3013","5:5401:33471","5:5402:33472"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3035-0:100:2561":{"id":"a:2:8250:3035-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:364:1958":{"id":"0:364:1958","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:100:2561":{"id":"b:2:2248-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:36:1864":{"id":"b:2:2542-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:44:2047":{"id":"0:44:2047","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[163,4],"end":[168,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1812","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:39260":{"id":"2:12016:39260","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12014:39259"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:939":{"id":"0:396:939","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[975,4],"end":[977,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:508:2490":{"id":"a:2:2701:228-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2628":{"id":"0:146:2628","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2625"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2264","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388:2047":{"id":"0:388:2047","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1812","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:2045":{"id":"0:386:2045","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[897,4],"end":[899,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:2690":{"id":"0:179:2690","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:95:1955":{"id":"0:95:1955","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3036-0:169:2477":{"id":"a:2:8249:3036-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12022:32222":{"id":"2:12022:32222","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:458:2625":{"id":"b:5:684-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2697","5:687:2075","5:688:3542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12078:32260":{"id":"2:12078:32260","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11888:419","str::splitn":"2:12075:32258","self::pattern":"2:11712:6160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43479:8227","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:571:1956":{"id":"b:2:2251-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:379:2016":{"id":"0:379:2016","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[823,4],"end":[832,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:169:2477":{"id":"a:2:2701:228-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:377:2014":{"id":"0:377:2014","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[792,4],"end":[803,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SetLoggerError","id":"24:352:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:342:1850":{"id":"b:2:2538-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:210:230":{"id":"b:2:2548-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104:668":{"id":"0:104:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:1893":{"id":"0:351:1893","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[488,4],"end":[503,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["env",{"generic":"E"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5390:39932":{"id":"5:5390:39932","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:531:1607":{"id":"0:531:1607","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:374:1836":{"id":"0:374:1836","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[760,4],"end":[763,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"resolved_path":{"name":"fmt::WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:548:2530":{"id":"0:548:2530","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:278:1944":{"id":"0:278:1944","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2867:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:1864":{"id":"0:36:1864","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[110,0],"end":[114,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:45","a:2:8249:3036-0:36:1864","a:2:2701:228-0:36:1864","a:2:2741:3112-0:36:1864","a:2:2684:220-0:36:1864","a:2:8250:3035-0:36:1864","b:2:3319-0:36:1864","b:2:2553-0:36:1864","b:2:2248-0:36:1864","b:2:2538-0:36:1864","b:2:2542-0:36:1864","b:2:2251-0:36:1864","b:2:2548-0:36:1864","0:62","0:58"]}}},"b:2:2538-0:599:1864":{"id":"b:2:2538-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:342:1850":{"id":"b:2:2248-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:269:132":{"id":"b:2:2542-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:584:668":{"id":"0:584:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3036-0:33:1817":{"id":"a:2:8249:3036-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:543:2002":{"id":"b:2:2553-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32020:9783","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12096:39271":{"id":"2:12096:39271","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11712:6160","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::match_indices":"2:12093:39270"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43525:8494","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5383:39930":{"id":"5:5383:39930","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:1938","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:3042","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:1938","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:3042","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:100:2561":{"id":"b:2:2251-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3036-0:458:2625":{"id":"a:2:8249:3036-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2488","0:146:2628","0:147:2500"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1096,0],"end":[1103,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12033:32245":{"id":"2:12033:32245","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12034:32246"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208-0:115:1818":{"id":"0:208-0:115:1818","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:115:1818","glob":true}}},"b:2:2553-0:342:1850":{"id":"b:2:2553-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:376:2007":{"id":"0:376:2007","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[778,4],"end":[781,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["is_test",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:60":{"id":"0:237:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2118":{"id":"0:0:2118","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1311,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\nLog levels are controlled on a per-module basis, and **by default all\nlogging is disabled except for the `error` level**.\n\nLogging is controlled via the **`RUST_LOG`** environment variable. The\nvalue of this environment variable is a comma-separated list of *logging\ndirectives*. A logging directive is of the form:\n\n```text\nexample::log::target=level\n```\n\nThe log target is typically equal to the path of the module the message\nin question originated from, though it can be overridden.\n\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target. A value of, for example, `RUST_LOG=example`, would\nmatch all of the messages with targets:\n\n* `example`\n* `example::test`\n* `example::test::module::submodule`\n* `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\nThe names of the log levels that may be specified correspond to the\nvariations of the [`log::Level`][level-enum] enum from the `log`\ncrate. They are:\n\n* `error`\n* `warn`\n* `info`\n* `debug`\n* `trace`\n\nThere is also a pseudo logging level, `off`, which may be specified to\ndisable all logging for a given module or for the entire application. As\nwith the logging levels, the letter case is not significant[^fn-off].\n\n[^fn-off]: Similar to the universe of log level names, the `off` pseudo\n   log level feature is also provided by the underlying `log` crate.\n\nThe letter case is not significant for the logging level names; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nAs the log level for a module is optional, the module to enable logging for\nis also optional. **If only a level is provided, then the global log\nlevel for all modules is set to this value.**\n\nSome examples of valid values of `RUST_LOG` are:\n\n* `hello` turns on all logging for the 'hello' module\n* `trace` turns on all logging for the application, regardless of its name\n* `TRACE` turns on all logging for the application, regardless of its name (same as previous)\n* `info` turns on all info logging\n* `INFO` turns on all info logging (same as previous)\n* `hello=debug` turns on debug logging for 'hello'\n* `hello=DEBUG` turns on debug logging for 'hello' (same as previous)\n* `hello,std::option` turns on hello, and std's option logging\n* `error,hello=warn` turn on global error logging and also warn for hello\n* `error,hello=off`  turn on global error logging, but turn off logging for hello\n* `off` turns off all logging for the application\n* `OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n# #[macro_use] extern crate log;\n#[cfg(test)]\nmod tests {\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/env-logger-rs/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log/\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:132"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:14:1815","0:70:668","0:340:1822","0:341:1825","0:585:1833","0:342:1850","0:599:1864","0:437:2014","0:438:2024","0:439:2081","0:442:2096","0:445:1892","0:446:1890","0:332-0:262:1816"],"is_stripped":false}}},"b:2:2548-0:571:1956":{"id":"b:2:2548-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12137:10350":{"id":"2:12137:10350","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4536:10350"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43665:8179","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:1816":{"id":"0:92:1816","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:668","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:93-0:81:2549"],"is_stripped":true}}},"a:2:2684:220-0:33:1817":{"id":"a:2:2684:220-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:341:1825":{"id":"0:341:1825","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[304,0],"end":[304,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}}},"0:47:1890":{"id":"0:47:1890","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12012:2305":{"id":"2:12012:2305","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:3112-0:269:132":{"id":"a:2:2741:3112-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:360:1946":{"id":"0:360:1946","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[602,4],"end":[605,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:3112-0:571:1956":{"id":"a:2:2741:3112-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:445:1892":{"id":"0:445:1892","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1231,0],"end":[1233,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:33:1817":{"id":"b:2:3319-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:100:2561":{"id":"b:2:2538-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1087,0],"end":[1094,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:471:668":{"id":"0:471:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:571:1956":{"id":"b:2:2538-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:585:1833":{"id":"b:2:2542-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:585:1833":{"id":"b:2:2548-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:81:2549":{"id":"0:81:2549","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1619","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:100:2561"],"is_stripped":true}}},"a:2:2684:220-0:269:132":{"id":"a:2:2684:220-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[122,0],"end":[169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:1815","0:43:2045","0:44:2047"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3036-0:100:2561":{"id":"a:2:8249:3036-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:684-0:508:2490":{"id":"b:5:684-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2697","5:687:2075","5:688:3542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:115:1818":{"id":"0:115:1818","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:210:230","0:543:2002"],"is_stripped":true}}},"0:347:939":{"id":"0:347:939","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[411,4],"end":[413,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:269:132":{"id":"b:2:2548-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12032:39263":{"id":"2:12032:39263","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11894:1397","crate::ops::IndexMut":"2:2985:10371","str::slice_unchecked":"2:12031:39262"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:2491":{"id":"0:509:2491","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_all","write_vectored","write_fmt","write_all_vectored","by_ref","is_write_vectored"],"trait":{"name":"Write","id":"1:3440:2468","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:1944","0:279:2057"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12039:36885":{"id":"2:12039:36885","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12038:36895"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43640:8498","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2583":{"id":"0:213:2583","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5402:33472":{"id":"5:5402:33472","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12134:33381"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:1890":{"id":"0:381:1890","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[862,4],"end":[867,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:543:2002":{"id":"0:543:2002","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2593","0:546:2595","0:548:2530"],"impls":["a:2:8249:3036-0:543:2002","a:2:2701:228-0:543:2002","a:2:2741:3112-0:543:2002","a:2:2684:220-0:543:2002","a:2:8250:3035-0:543:2002","b:2:3319-0:543:2002","b:2:2553-0:543:2002","b:2:2248-0:543:2002","b:2:2538-0:543:2002","b:2:2542-0:543:2002","b:2:2251-0:543:2002","b:2:2548-0:543:2002","b:5:684-0:543:2002","0:558","0:562","0:236","0:550","0:561","0:552","0:555","0:556","0:553"]}}},"a:2:8250:3035-0:543:2002":{"id":"a:2:8250:3035-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1117,4],"end":[1128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:458:2625":{"id":"0:458:2625","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:8249:3036-0:458:2625","a:2:2701:228-0:458:2625","a:2:2741:3112-0:458:2625","a:2:2684:220-0:458:2625","a:2:8250:3035-0:458:2625","b:2:3319-0:458:2625","b:2:2553-0:458:2625","b:2:2248-0:458:2625","b:2:2538-0:458:2625","b:2:2542-0:458:2625","b:2:2251-0:458:2625","b:2:2548-0:458:2625","b:5:684-0:458:2625","0:461","0:191"]}}},"0:536:668":{"id":"0:536:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:563:613":{"id":"0:563:613","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:585:1833":{"id":"b:2:2251-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12125:39280":{"id":"2:12125:39280","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:100:2561":{"id":"b:2:2553-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12036:8507":{"id":"2:12036:8507","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43333:8489","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:668":{"id":"0:63:668","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[278,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:1606":{"id":"0:217:1606","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:280:1938","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"io::Write","id":"1:3440:2468","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}},"a:2:8249:3036-0:342:1850":{"id":"a:2:8249:3036-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:515:2634":{"id":"0:515:2634","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12130:33377":{"id":"2:12130:33377","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:342:1850":{"id":"b:2:3319-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210:230":{"id":"0:210:230","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2581","0:213:2583","0:215:2585"],"impls":["a:2:8249:3036-0:210:230","a:2:2701:228-0:210:230","a:2:2741:3112-0:210:230","a:2:2684:220-0:210:230","a:2:8250:3035-0:210:230","b:2:3319-0:210:230","b:2:2553-0:210:230","b:2:2248-0:210:230","b:2:2538-0:210:230","b:2:2542-0:210:230","b:2:2251-0:210:230","b:2:2548-0:210:230","0:220","0:218"]}}},"2:12031:39262":{"id":"2:12031:39262","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11894:1397","str::slice_mut_unchecked":"2:12032:39263","crate::ops::Index":"2:2981:10370"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:1816":{"id":"0:142:1816","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1818","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:143-0:123:2549"],"is_stripped":true}}},"0:207-0:142:1816":{"id":"0:207-0:142:1816","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1816","glob":true}}},"0:375:1909":{"id":"0:375:1909","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[769,4],"end":[772,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264-0:210:230":{"id":"0:264-0:210:230","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::Target","name":"Target","id":"0:210:230","glob":false}}},"0:599:1864":{"id":"0:599:1864","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[377,0],"end":[382,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# #[macro_use] extern crate log;\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:8249:3036-0:599:1864","a:2:2701:228-0:599:1864","a:2:2741:3112-0:599:1864","a:2:2684:220-0:599:1864","a:2:8250:3035-0:599:1864","b:2:3319-0:599:1864","b:2:2553-0:599:1864","b:2:2248-0:599:1864","b:2:2538-0:599:1864","b:2:2542-0:599:1864","b:2:2251-0:599:1864","b:2:2548-0:599:1864","0:435","0:604"]}}},"0:542:613":{"id":"0:542:613","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12069:39265":{"id":"2:12069:39265","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11712:6160","str::split":"2:12060:2321","prim@char":"1:11888:419","`DoubleEndedIterator`":"2:7240:121","str::rsplit_terminator":"2:12072:39266"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43407:8491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:36:1864":{"id":"b:2:2538-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12020:39261":{"id":"2:12020:39261","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:668":{"id":"0:61:668","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[269,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:2633":{"id":"0:521:2633","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:519:2724":{"id":"0:519:2724","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8249:3036-0:571:1956":{"id":"a:2:8249:3036-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:585:1833":{"id":"b:2:2538-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12103:39273":{"id":"2:12103:39273","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:210:230":{"id":"b:2:3319-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215:2585":{"id":"0:215:2585","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:217:1606"]},"discriminant":null}}},"a:2:2701:228-0:571:1956":{"id":"a:2:2701:228-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":"default","docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:426:694":{"id":"0:426:694","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["filter_env",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12075:32258":{"id":"2:12075:32258","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160","str::rsplitn":"2:12078:32260"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43461:2954","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:508:2490":{"id":"b:2:3319-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12133:33380":{"id":"2:12133:33380","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:599:1864":{"id":"b:2:2548-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12134:33381":{"id":"2:12134:33381","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:9155:2705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:9155:2705","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:491:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[902,0],"end":[971,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:2047","0:389:1809","0:393:2057"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:169:2477":{"id":"b:2:2248-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:437:2014":{"id":"0:437:2014","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1140,0],"end":[1142,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SetLoggerError","id":"24:352:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501:668":{"id":"0:501:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12122:39279":{"id":"2:12122:39279","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:2490":{"id":"0:508:2490","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2491","0:511:2631","0:513:2632","0:515:2634","0:517:2630","0:519:2724","0:521:2633","0:523:2725","0:525:2726","0:528:2727"],"impls":["a:2:8249:3036-0:508:2490","a:2:2701:228-0:508:2490","a:2:2741:3112-0:508:2490","a:2:2684:220-0:508:2490","a:2:8250:3035-0:508:2490","b:2:3319-0:508:2490","b:2:2553-0:508:2490","b:2:2248-0:508:2490","b:2:2538-0:508:2490","b:2:2542-0:508:2490","b:2:2251-0:508:2490","b:2:2548-0:508:2490","b:5:684-0:508:2490","0:538","0:533","0:541","0:540","0:535","0:537"]}}},"b:2:3319-0:599:1864":{"id":"b:2:3319-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:458:2625":{"id":"b:2:2553-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:458:2625":{"id":"a:2:2684:220-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:169:2477":{"id":"0:169:2477","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8249:3036-0:169:2477","a:2:2701:228-0:169:2477","a:2:2741:3112-0:169:2477","a:2:2684:220-0:169:2477","a:2:8250:3035-0:169:2477","b:2:3319-0:169:2477","b:2:2553-0:169:2477","b:2:2248-0:169:2477","b:2:2538-0:169:2477","b:2:2542-0:169:2477","b:2:2251-0:169:2477","b:2:2548-0:169:2477","b:5:5644-0:169:2477","0:503","0:473","0:483","0:468","0:478","0:488","0:463","0:493","0:498"]}}},"b:2:2248-0:210:230":{"id":"b:2:2248-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:9161:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:9161:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:501:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:551:423":{"id":"0:551:423","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:33:1817":{"id":"b:2:2251-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3036-0:36:1864":{"id":"a:2:8249:3036-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:3112-0:169:2477":{"id":"a:2:2741:3112-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:169:2477":{"id":"a:2:2684:220-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:340:1822":{"id":"0:340:1822","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[301,0],"end":[301,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}}},"0:367:1967":{"id":"0:367:1967","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[642,4],"end":[644,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:508:2490":{"id":"b:2:2553-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:52:1989":{"id":"0:52:1989","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[216,4],"end":[225,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:3112-0:458:2625":{"id":"a:2:2741:3112-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:462:423":{"id":"0:462:423","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434:668":{"id":"0:434:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1110,8],"end":[1114,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:169:2477":{"id":"b:2:2548-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:525:2726":{"id":"0:525:2726","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:527:1606"]},"discriminant":null}}},"0:221:668":{"id":"0:221:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:599:1864":{"id":"b:2:2251-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:36:1864":{"id":"b:2:2251-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12106:39275":{"id":"2:12106:39275","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12040:3823":{"id":"2:12040:3823","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43611:2991","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12135:39281":{"id":"2:12135:39281","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4535:39281"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43656:8419","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:2697":{"id":"5:686:2697","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:534:423":{"id":"0:534:423","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3036-0:599:1864":{"id":"a:2:8249:3036-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:354:1916":{"id":"0:354:1916","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:585:1833":{"id":"b:2:3319-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:543:2002":{"id":"b:2:2251-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:100:2561":{"id":"b:2:2548-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3035-0:571:1956":{"id":"a:2:8250:3035-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:372:1907":{"id":"0:372:1907","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[716,4],"end":[719,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:169:2477":{"id":"b:5:5644-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:355:1922":{"id":"0:355:1922","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:3112-0:599:1864":{"id":"a:2:2741:3112-0:599:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:543:2002":{"id":"b:2:2538-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2544:694":{"id":"2:2544:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12128:1989":{"id":"2:12128:1989","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11673:127","`FromStr`":"2:11672:2906"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11672:2906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11672:2906","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12010":{"id":"2:12010","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12011:811","2:12012:2305","2:12013:39258","2:12014:39259","2:12016:39260","2:12019:32201","2:12020:39261","2:12021:314","2:12022:32222","2:12023:2067","2:12025:32219","2:12027:32220","2:12029:32221","2:12031:39262","2:12032:39263","2:12033:32245","2:12034:32246","2:12035:8241","2:12036:8507","2:12037:2523","2:12038:36895","2:12039:36885","2:12040:3823","2:12041:39264","2:12042:36907","2:12043:32262","2:12046:2341","2:12049:32263","2:12052:3524","2:12056:3485","2:12060:2321","2:12063:32254","2:12066:32256","2:12069:39265","2:12072:39266","2:12075:32258","2:12078:32260","2:12081:39267","2:12084:39268","2:12087:2045","2:12090:39269","2:12093:39270","2:12096:39271","2:12099:2330","2:12101:39272","2:12103:39273","2:12105:39274","2:12106:39275","2:12107:39276","2:12110:39277","2:12113:30901","2:12116:32264","2:12119:39278","2:12122:39279","2:12125:39280","2:12128:1989","2:12130:33377","2:12131:33378","2:12132:2892","2:12133:33380","2:12134:33381","2:12135:39281","2:12137:10350","2:12138:26423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12119:39278":{"id":"2:12119:39278","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:1817":{"id":"0:33:1817","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[82,0],"end":[85,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:40","a:2:8249:3036-0:33:1817","a:2:2701:228-0:33:1817","a:2:2741:3112-0:33:1817","a:2:2684:220-0:33:1817","a:2:8250:3035-0:33:1817","b:2:3319-0:33:1817","b:2:2553-0:33:1817","b:2:2248-0:33:1817","b:2:2538-0:33:1817","b:2:2542-0:33:1817","b:2:2251-0:33:1817","b:2:2548-0:33:1817","0:60"]}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:496:668":{"id":"0:496:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1815":{"id":"0:50:1815","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[206,4],"end":[209,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1810","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:3112-0:543:2002":{"id":"a:2:2741:3112-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:471:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2557:1477":{"id":"2:2557:1477","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12093:39270":{"id":"2:12093:39270","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11712:6160","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::rmatch_indices":"2:12096:39271"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43507:8493","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481:668":{"id":"0:481:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:543:2002":{"id":"b:2:3319-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:9153:2706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:9153:2706","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:496:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12013:39258":{"id":"2:12013:39258","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:508:2490":{"id":"b:2:2538-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:466:668":{"id":"0:466:668","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[833,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:599:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:939","0:348:1890","0:351:1893","0:354:1916","0:355:1922","0:356:679","0:358:1941","0:359:1943","0:360:1946","0:361:1948","0:362:1951","0:363:1954","0:364:1958","0:365:1961","0:366:1964","0:367:1967","0:368:1970","0:369:1975","0:370:1980","0:371:1815","0:372:1907","0:373:1423","0:374:1836","0:375:1909","0:376:2007","0:377:2014","0:378:2024","0:379:2016"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:458:2625":{"id":"b:2:2542-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:342:1850":{"id":"b:2:2251-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1109,4],"end":[1115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:3112-0:33:1817":{"id":"a:2:2741:3112-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:442:2096":{"id":"0:442:2096","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1217,0],"end":[1223,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5387:39931":{"id":"5:5387:39931","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12029:32221":{"id":"2:12029:32221","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12038:36895":{"id":"2:12038:36895","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12039:36885"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43631:8497","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2045":{"id":"0:43:2045","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[148,4],"end":[160,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:591:668":{"id":"0:591:668","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2500":{"id":"0:147:2500","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2625"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2264","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"resolved_path":{"name":"Level","id":"24:198:2264","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:39277":{"id":"2:12110:39277","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:2635":{"id":"0:176:2635","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[277,0],"end":[288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:14:1815":{"id":"0:14:1815","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[868,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33:1817","0:36:1864"],"is_stripped":false}}},"0:366:1964":{"id":"0:366:1964","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[637,4],"end":[639,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:458:2625":{"id":"b:2:2538-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:269:132":{"id":"b:2:2538-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12049:32263":{"id":"2:12049:32263","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:36:1864":{"id":"b:2:2248-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:169:2477":{"id":"b:2:2251-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:2467"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:342:1850":{"id":"a:2:2701:228-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:527:1606":{"id":"0:527:1606","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:60":{"id":"0:59:60","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[263,4],"end":[265,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:571:1956":{"id":"a:2:2684:220-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:405:1836":{"id":"0:405:1836","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1019,4],"end":[1026,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12105:39274":{"id":"2:12105:39274","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12019:32201":{"id":"2:12019:32201","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11279:2522"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[262,0],"end":[266,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:177:2492":{"id":"0:177:2492","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:132":{"id":"0:269:132","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:8249:3036-0:269:132","a:2:2701:228-0:269:132","a:2:2741:3112-0:269:132","a:2:2684:220-0:269:132","a:2:8250:3035-0:269:132","b:2:3319-0:269:132","b:2:2553-0:269:132","b:2:2248-0:269:132","b:2:2538-0:269:132","b:2:2542-0:269:132","b:2:2251-0:269:132","b:2:2548-0:269:132","0:277","0:280"]}}},"0:513:2632":{"id":"0:513:2632","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12041:39264":{"id":"2:12041:39264","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43621:8496","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[973,0],"end":[1056,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:939","0:397:1815","0:399:2062","0:402:2066","0:405:1836","0:407:2070","0:410:2072"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:458:2625":{"id":"b:2:3319-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:210:230":{"id":"b:2:2542-0:210:230","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:230","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:33:1817":{"id":"b:2:2538-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1905"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:9149:2703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:9149:2703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:481:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:543:2002":{"id":"b:5:684-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:2697","5:687:2075","5:688:3542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12052:3524":{"id":"2:12052:3524","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12084:39268":{"id":"2:12084:39268","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5401:33471":{"id":"5:5401:33471","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12133:33380"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:206:1816":{"id":"0:258-0:206:1816","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::writer::glob","name":"glob","id":"0:206:1816","glob":true}}},"a:2:2701:228-0:585:1833":{"id":"a:2:2701:228-0:585:1833","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:402:2066":{"id":"0:402:2066","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[1005,4],"end":[1012,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2495":{"id":"0:180:2495","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:3112-0:36:1864":{"id":"a:2:2741:3112-0:36:1864","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:178:2686":{"id":"0:178:2686","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:356:679":{"id":"0:356:679","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[579,4],"end":[585,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["format",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:2926:1936","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"resolved_path":{"name":"io::Result","id":"1:2867:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12063:32254":{"id":"2:12063:32254","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11535:8222","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12027:32220":{"id":"2:12027:32220","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:2561":{"id":"0:100:2561","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8249:3036-0:100:2561","a:2:2701:228-0:100:2561","a:2:2741:3112-0:100:2561","a:2:2684:220-0:100:2561","a:2:8250:3035-0:100:2561","b:2:3319-0:100:2561","b:2:2553-0:100:2561","b:2:2248-0:100:2561","b:2:2538-0:100:2561","b:2:2542-0:100:2561","b:2:2251-0:100:2561","b:2:2548-0:100:2561","b:5:5644-0:100:2561","0:112","0:103"]}}},"0:399:2062":{"id":"0:399:2062","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[992,4],"end":[1000,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46:939":{"id":"0:46:939","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[173,4],"end":[179,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:458:2625":{"id":"b:2:2548-0:458:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:687:2075":{"id":"5:687:2075","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:60":{"id":"0:429:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1097,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266-0:543:2002":{"id":"0:266-0:543:2002","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:2002","glob":false}}},"0:546:2595":{"id":"0:546:2595","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2542-0:543:2002":{"id":"b:2:2542-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:342:1850":{"id":"0:342:1850","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[347,0],"end":[351,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log/\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:8249:3036-0:342:1850","a:2:2701:228-0:342:1850","a:2:2741:3112-0:342:1850","a:2:2684:220-0:342:1850","a:2:8250:3035-0:342:1850","b:2:3319-0:342:1850","b:2:2553-0:342:1850","b:2:2248-0:342:1850","b:2:2538-0:342:1850","b:2:2542-0:342:1850","b:2:2251-0:342:1850","b:2:2548-0:342:1850","0:387","0:433"]}}},"2:12116:32264":{"id":"2:12116:32264","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:6160"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:100:2561":{"id":"b:2:2542-0:100:2561","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:508:2490":{"id":"b:2:2548-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:393:2057":{"id":"0:393:2057","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[970,4],"end":[970,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:543:2002":{"id":"b:2:2248-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[171,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:36:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:46:939","0:47:1890","0:48:1975","0:49:1980","0:50:1815","0:52:1989","0:53:2016"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3035-0:169:2477":{"id":"a:2:8250:3035-0:169:2477","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2477","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:571:1956":{"id":"b:2:2553-0:571:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12087:2045":{"id":"2:12087:2045","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11712:6160","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:2045"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43561:2949","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12066:32256":{"id":"2:12066:32256","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11712:6160","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split":"2:12060:2321"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43375:8225","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:6038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:15696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:269:132":{"id":"b:2:2248-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:3111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:1806"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:439:2081":{"id":"0:439:2081","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1185,0],"end":[1192,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SetLoggerError","id":"24:352:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:33:1817":{"id":"b:2:2548-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:3112-0:508:2490":{"id":"a:2:2741:3112-0:508:2490","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:3112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2490","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:532:1608":{"id":"0:532:1608","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:262:1816":{"id":"0:262:1816","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:264-0:210:230","0:265-0:571:1956","0:266-0:543:2002"],"is_stripped":true}}},"0:530:1606":{"id":"0:530:1606","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:2:2701:228-0:269:132":{"id":"a:2:2701:228-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:342:1850":{"id":"b:2:2548-0:342:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:33:1817":{"id":"b:2:2553-0:33:1817","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:543:2002":{"id":"b:2:2548-0:543:2002","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"21:1518:26399":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"2:21718:8252":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"11:731:8057":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:1382:3490":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:10857:22526":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"20:2169:2956":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"1:4578:5035":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:4332:2868":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:4255:2861":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"31:6597:4880":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"2:22425:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"18:707:6015":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:42476:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"11:991:7807":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"21:2553:6185":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"16:7767:22464":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:40438:8196":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:7821:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"20:0:1617":{"crate_id":20,"path":["regex"],"kind":"module"},"29:5572:5594":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"29:1913:5288":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"31:6357:4843":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"6:4970:5657":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:5908:2974":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"20:1906:6394":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"2:41454:3853":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:1546:4425":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:47666:8633":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"30:3475:5087":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"23:753:6002":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"21:0:2853":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"1:8784:3853":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:488:4589":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:8047:3019":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"5:35:4101":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:10948:4206":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"31:5094:4455":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:43479:8227":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"31:4966:4407":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"2:42695:6089":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"31:6413:4853":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"1:6101:4194":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8982:29851":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:11220:6833":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:10845:15692":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:42449:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"22:1489:6122":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"15:219:8941":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:40677:8202":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:43763:8500":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:40408:8194":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"21:2048:132":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"16:2808:7515":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"21:1720:6282":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"2:46716:8591":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"31:7204:5007":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"1:7665:3862":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:44131:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:11243:9982":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:4294:5362":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:5935:5784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:40693:8203":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:8776:8785":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:9803:10413":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:10130:8224":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:8389:22516":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:9098:6625":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:3401:2984":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"18:766:26374":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:1062:8066":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"12:0:2735":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"29:6871:5059":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:43631:8497":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:7644:10354":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"30:2989:5080":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"17:9478:6643":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:1995:8145":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"5:1213:8067":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:10244:2954":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:46212:8567":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:4667:5561":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"29:5725:5628":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"29:5893:5657":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"26:230:3064":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"17:12592:7062":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:13453:7336":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:46014:8561":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"20:1422:4113":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"29:7322:9722":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"11:1859:6285":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:20536:3451":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:12358:7022":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:5816:4836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:562:6514":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"20:1693:40406":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"29:4962:5464":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:13233:7279":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:5032:7575":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:4007:8181":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:7595:3382":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"21:1156:26413":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"6:562:5010":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:39998:8415":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:41631:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"29:5077:5491":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"23:665:141":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:40163:10385":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"16:7572:40383":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:12483:7051":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:43301:8485":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:9512:6648":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:2879:7518":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:975:6515":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:13461:7337":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"29:641:4853":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"2:4386:2870":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:10462:3381":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:1733:15839":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:10377:6749":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:6442:7711":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:10419:2581":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:11090:6816":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:10692:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:4952:5651":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:44283:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:5320:5127":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:1692:5345":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:8667:6616":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:41831:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:4125:10453":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:8948:6165":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"20:1289:2951":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"0:574:1962":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"21:2348:6325":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"2:9526:4165":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"21:1178:6200":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"2:21900:36648":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:8469:8673":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:4845:5637":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:7557:7897":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"9:352:21469":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:9826:6675":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:4784:5611":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"9:52:8945":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:2337:7490":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:7509:4198":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"29:7302:5820":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:40338:8436":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"29:4558:17515":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:7757:7906":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:2344:2048":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:8521:22520":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"33:62:3099":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"33:76:3101":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"1:11893:1367":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:13194:7268":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:7590:1864":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:10897:6803":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:11195:8696":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:3135:10000":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4499:5477":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:8075:3015":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:9153:2706":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:4327:7555":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:8129:7962":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:44389:8530":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:3355:2974":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:4019:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"29:8351:5927":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"20:1452:40410":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:9106:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"5:6248:4127":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12433:7034":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:11891:1049":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"28:137:26457":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"16:3749:7549":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"21:1107:6181":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"29:7355:5822":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"29:5225:5532":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:11163:6822":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"20:2238:2945":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"2:40684:3086":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:12318:7018":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"29:1709:4401":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"26:194:128":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"2:1667:1087":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:1058:38868":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:6890:7531":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:6008:5818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:11712:6160":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:5485:4138":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"22:1622:6047":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"17:9028:6624":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:6585:3498":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"20:1405:40409":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"16:2764:7513":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"28:37:26449":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"18:538:5988":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"29:658:4557":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"17:10052:6704":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"28:152:26460":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"1:11027:31109":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:11484:8238":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:10743:6794":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:1756:8172":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:4141:2881":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:1514:4399":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:930:8059":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"20:1842:40405":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"2:46682:8590":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:4813:5624":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"29:6847:5720":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:12019:6715":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:4466:5462":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:2189:8970":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:6981:7795":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"11:1091:8069":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"14:40:6836":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:12646:7076":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:7318:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"29:9252:9730":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:10505:6761":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:21088:10549":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:21561:10551":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:867:3490":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"29:806:16194":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"6:4890:9794":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"29:9246:5660":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"31:5292:4493":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"2:44084:9970":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"31:4996:9589":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"6:6545:4627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"31:5851:4656":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"16:6307:7520":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:4400:7556":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"18:0:2740":{"crate_id":18,"path":["memchr"],"kind":"module"},"29:5945:5677":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:7497:5964":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"21:2404:6292":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"0:572:1959":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"6:4911:9809":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:10615:6777":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:13667:7409":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:1716:4097":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:10257:6742":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"29:4564:4615":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:1889:6467":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"31:5712:4616":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"2:21114:10556":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"30:3821:26504":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"29:5321:5549":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:43525:8494":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:7198:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"21:1779:26396":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"31:6399:4852":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"2:40487:8199":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:13651:7405":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"29:8017:5861":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"23:114:26365":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"29:4998:5472":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:46446:8586":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:3158:6285":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13385:7315":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:7942:3006":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"0:70:668":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:41711:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:7263:3115":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:40076:8421":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:9386:4201":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"6:1736:5355":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"11:305:9962":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"20:2437:2959":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"6:1594:5276":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:13033:7230":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:7528:4200":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:9822:6674":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:39365:8288":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:7846:8713":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"29:7993:5856":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"31:7278:5039":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"22:1094:6073":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"29:1822:5258":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:5380:2974":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:1544:2974":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:10080:6707":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:41203:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"29:5194:5517":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:10885:6802":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:40424:6000":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"23:716:40398":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"29:8295:5911":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:9157:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:42666:8463":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"20:178:6361":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"17:13477:7340":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"11:1847:4127":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:22524:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:4251:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"29:7002:5734":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:13821:7452":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:8748:8783":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11544:6861":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:9161:2707":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:9961:3853":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:43357:2953":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"20:1582:6430":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"16:5976:7479":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:5967:5801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"18:644:5982":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:45561:8540":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:8156:7541":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:7498:7895":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:5755:5703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"5:3117:3853":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"20:1492:6415":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"2:43884:8243":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:47823:8644":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:21787:8971":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:4932:9824":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"21:1850:26394":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"16:2426:7499":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"22:1013:6056":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"17:10354:6748":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:8160:8758":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"20:2543:2954":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"31:5049:4434":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"1:11870:31108":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:5334:8679":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"21:1389:4084":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"5:6579:4138":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"29:5171:5508":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:9155:2705":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:1728:5352":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"31:7076:27624":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"2:14:1944":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:1576:5267":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"30:3610:41717":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"17:12622:6782":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:1228:8066":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"31:5009:9596":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"30:498:9364":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"22:1201:3006":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"17:10440:6756":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"18:590:5991":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"29:712:5232":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"21:2330:6171":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"29:1987:4421":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:43792:8508":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:3939:10431":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"22:1237:6092":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"2:6768:15795":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:4743:4430":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:7015:35699":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:11054:2551":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:2851:15818":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:41243:8213":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"29:5555:5592":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:6674:15803":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"11:2192:4082":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"22:1247:6362":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"30:4685:41713":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"29:1887:5276":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:43343:2994":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"31:7318:5053":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"1:7659:10355":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"20:1213:2946":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"1:1071:8067":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:595:5244":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"31:6669:4894":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"16:6431:7710":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:3370:15730":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"31:5236:5252":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"22:1107:6051":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"2:30836:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"31:6998:27623":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"26:99:2555":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"6:1682:5339":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:20909:10562":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:9149:2703":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"20:1965:6397":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"11:703:8056":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:43656:8419":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:2812:15812":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:46370:8584":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:13159:7258":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:10104:6709":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:6876:7530":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:2594:7506":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:45699:8546":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"20:1528:6362":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"21:254:40475":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"2:43163:8476":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:5779:5719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"29:6961:5732":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:1532:4407":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"29:5938:5674":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:10589:6774":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"5:4336:4133":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:39379:8289":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"20:1398:6394":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"1:9098:3392":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"5:6446:4105":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:40296:8432":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"22:1052:6067":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"20:1896:6424":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"29:1744:4407":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"31:6640:4890":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"2:40347:8188":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:43921:8511":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:11902:6940":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"26:181:2561":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"29:8856:5960":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"18:96:26364":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:3987:10434":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"21:1376:4083":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"11:2076:8066":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"24:277:1813":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"1:10682:8710":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"29:4884:5451":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"11:359:4095":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"21:1974:6308":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"21:1932:4076":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"17:12607:7066":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"5:2087:8146":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:888:8058":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:4492:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:6605:5019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"29:9263:9734":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"31:6452:4864":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"2:39192:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:8788:6503":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:6917:3015":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"29:9297:5969":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:11299:6838":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:4176:8669":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:480:4181":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"5:5712:4127":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:39216:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:7791:8709":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"31:5990:27613":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"1:10942:4205":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"22:1528:6128":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"17:12449:7038":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:44108:9976":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"21:2665:6359":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"2:43946:8512":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:5963:7626":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"20:1922:40403":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"16:4624:7563":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"21:1905:6303":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"31:6081:27615":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"5:7162:2923":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:4619:5539":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:42683:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"26:134:128":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"2:20729:10557":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"23:836:6019":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:815:4111":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:45543:8539":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"29:4749:5424":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13499:7345":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"23:707:5991":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:40356:8437":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:6662:7745":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"22:1536:6129":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"6:1700:5346":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:7932:8714":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:11410:6844":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:2744:3459":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:42658:3817":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"20:2524:2945":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"29:2143:5352":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:9981:3557":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11060:6782":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:6057:5822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:11913:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:7632:37481":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:4383:5424":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"0:437:2014":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"33:161:2578":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"6:6569:4297":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:6598:5861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"24:352:1814":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"16:6520:7721":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:39982:36658":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:10125:6711":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:5571:7524":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"31:6202:27617":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"31:5626:4587":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"20:2277:2950":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"2:12512:4179":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:10138:9368":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"22:1271:1864":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"17:11282:6836":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:1919:22565":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:4568:7561":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"29:6986:5733":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:12357:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"29:7925:5039":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"30:2712:5078":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"29:1693:4399":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"20:1725:6456":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"1:11688:4213":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:211:4103":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:5305:7578":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"9:388:21455":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:541:4853":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:2784:2856":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:13777:7437":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:7526:5659":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:6575:22458":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:3266:6528":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"14:165:21538":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:21966:8272":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:10416:3009":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:501:3371":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:1588:5275":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"14:160:8049":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:1637:3601":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:9148:40385":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"20:987:2951":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"33:0:2120":{"crate_id":33,"path":["termcolor"],"kind":"module"},"2:45413:8534":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:6907:4197":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:46158:8565":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"30:3908:41715":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"29:5478:5580":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:30272:3606":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:7532:5660":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:6830:5950":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:20984:10550":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"21:1416:26395":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"17:10823:6595":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"31:4528:4294":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"22:1342:41131":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"17:12282:7013":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:3995:8180":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:11737:15695":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:12536:7055":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:3775:4105":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:4790:5614":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"29:8035:5019":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:10967:6807":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"31:5002:9592":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"2:9295:8219":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:8823:6504":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:2768:7817":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:8360:22515":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"30:4968:5207":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"31:5521:27612":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"18:599:40398":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:3382:8178":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:9453:22536":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"30:4867:5206":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"1:8907:8789":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:6740:4142":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"9:502:8128":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:10545:6529":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:8918:3375":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"20:1790:6460":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"17:12046:6961":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"20:2197:2425":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"2:3510:4127":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:13865:7459":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:10647:9978":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:1048:7807":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"29:9240:5659":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"30:466:26489":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"31:4674:27608":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"31:5696:4612":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"2:41470:3490":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:40448:8440":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"21:1115:6185":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"30:2838:5074":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"1:6009:4190":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:9985:3854":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:2404:7498":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:1594:6161":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:13426:7329":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:2758:3047":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"20:1732:6457":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"1:11912:1126":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:9028:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"31:5913:4664":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"20:1707:40407":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"2:41332:8455":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:43184:8478":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:1080:8071":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"29:7042:5746":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:13791:7444":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:7016:7799":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:4789:7567":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:47800:8643":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"28:28:26444":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"18:624:40395":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:7544:9730":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:7036:4116":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:3276:4097":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:44096:9973":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"21:2569:6352":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"28:182:26462":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"1:11895:1481":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:911:4097":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:9038:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:21952:8271":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:9853:6677":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"9:445:21454":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:6294:4105":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:6621:8690":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:44152:3051":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"31:6705:9681":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"0:14:1815":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"1:7460:6514":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"20:1512:6394":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"2:22458:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:12461:7040":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:43956:8516":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"29:5922:5669":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"30:4212:5172":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"2:21916:36647":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"29:5903:5661":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:4436:10456":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"29:4905:5456":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"20:2211:2944":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"21:1671:26391":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"5:109:286":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"2:41289:6164":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"29:5836:5642":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"11:60:40365":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:1404:8057":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:5847:7611":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"22:0:2854":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"16:6868:7779":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"0:269:132":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"29:2052:5339":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"29:5817:4331":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"29:4714:4590":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:5021:8678":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11372:6842":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:7669:7538":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"22:1406:6038":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"22:998:6053":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"2:3169:15746":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"20:2534:2953":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"21:2294:4080":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"29:5974:5696":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:5468:2974":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:8825:8788":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:11449:8820":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:5829:5721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:7257:30099":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"29:8890:9728":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"30:438:2868":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"2:20770:15828":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:43561:2949":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"31:6343:4836":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"2:45792:8554":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:4854:10481":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:7937:8715":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:3925:10429":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:21862:8259":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"31:7148:4999":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"17:12770:7078":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"29:6813:5716":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:46606:8588":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"21:1284:6164":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"6:500:4612":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"20:2248:2943":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"1:6409:3094":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:47648:8632":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:2572:7505":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:41530:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:3440:2468":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"31:4796:4362":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"30:479:9366":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"22:1457:6436":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"1:9374:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:3163:39053":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:4459:5459":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:3150:6287":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"29:2005:5320":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:40246:8428":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"29:1929:5290":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"29:8458:5954":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:47686:8635":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"31:5618:4586":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"2:21771:8253":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"21:2469:26393":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"17:242:6507":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"29:1802:5252":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:6336:7701":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"27:0:2119":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"30:4450:5177":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"6:5974:5802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:7013:3490":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:20742:10558":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"2:44104:9975":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:917:8072":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:40226:8426":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:4112:10452":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:11500:8239":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:6254:7694":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:6133:8689":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"13:0:2729":{"crate_id":13,"path":["std_detect"],"kind":"module"},"22:1060:26437":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"6:5900:5762":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:11434:6848":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:4104:10451":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"29:1948:5295":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:554:3378":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"11:1540:8073":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"31:6743:9704":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"17:9617:6657":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:11459:6853":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:41309:37643":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:13803:7446":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:10761:22524":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13516:7352":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:11672:2906":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"31:5602:4583":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"6:5022:5677":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:9566:6629":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"29:4605:5371":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:7042:7804":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"22:1544:6130":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"16:6361:7704":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:22293:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:5051:5696":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"29:4770:5429":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"18:582:3451":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"15:198:21552":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:47770:8641":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"11:1634:4099":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"18:574:5982":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"21:2119:1819":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"6:1609:5288":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13015:7226":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:3615:10423":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:11225:8699":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:3325:3016":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:1197:7807":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:8858:6505":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:9120:32021":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:6696:22459":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:9405:3814":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:10527:22631":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:2906:38867":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"21:1830:26393":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"16:8090:7958":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:40196:4157":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:30302:36654":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:9670:6664":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"30:3571:41702":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"31:4645:4317":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"20:2459:2947":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"29:4927:5459":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"4:0:2730":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:11892:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:1947:6521":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:11072:9369":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:9876:6576":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"20:1417:6401":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"29:1726:4404":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"29:8105:5052":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"13:110:40371":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"26:101:2552":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"1:1931:653":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:9683:6665":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:42153:2704":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:2830:7516":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"29:5650:5614":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:6002:5815":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:7095:3490":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:11136:6820":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:11249:15882":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:4767:5600":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:2720:7511":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:5719:3084":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"30:3192:5084":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"22:1581:6137":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"17:13041:7231":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"29:2136:4856":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:8171:10421":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:4726:5582":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:3208:2581":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:7595:15799":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"23:624:5982":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:40459:2993":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:1583:6286":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:3047:21598":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"30:4790:5199":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"1:7838:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"18:699:6013":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"22:961:6050":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"21:1945:6306":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"1:8337:8772":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:11193:6826":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"31:7106:4992":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"17:11446:6851":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:7543:7537":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:12894:7181":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"5:1413:8058":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"11:828:10358":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:10165:8225":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:43778:8505":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:11891:6939":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:3168:3009":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:47572:8630":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:22326:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:2869:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:40367:8192":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"31:5888:9656":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"22:1310:6101":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"2:44334:8526":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:4980:5661":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:10428:6755":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:5944:7619":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:13024:7229":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:7029:7801":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:10721:6789":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:11493:8700":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:4:1014":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:4431:5448":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"20:1533:6424":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"2:43935:15709":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:21431:8249":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:7335:4097":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:2574:2995":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:7066:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:39334:8286":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:11237:9981":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:2161:15828":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"20:1780:6459":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"1:2387:1808":{"crate_id":1,"path":["std","io"],"kind":"module"},"16:7449:7885":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:12403:7031":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:10286:8229":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"29:1781:4425":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"21:2173:4076":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"30:3379:5086":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"17:8195:22502":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:22491:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:4110:2880":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"31:5964:4703":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"16:6904:7781":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:5809:5064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"31:5221:5969":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"30:5074:5208":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"},"31:5865:9651":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"6:6755:5911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:5724:7596":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:9370:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"21:2029:128":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"6:6700:5874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"30:2853:5079":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"1:2540:3002":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:1752:5356":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:42421:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:7596:22463":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"31:4628:9574":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"31:4806:4364":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"2:20990:10552":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"29:5433:5569":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:5655:7525":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"22:1351:1864":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"5:6696:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:3872:7552":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"11:783:4098":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"31:5079:4451":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"2:2706:2874":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:10652:9980":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:10226:30503":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:7697:7529":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:8490:22519":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"29:480:16145":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"1:8806:8684":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"21:1885:26392":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"17:8632:22501":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"20:1561:6089":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"31:4822:9585":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"6:5798:5059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:2694:7510":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:43135:8472":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:41445:3489":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:4344:5399":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"20:2351:2959":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"7:0:1543":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:554:4847":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:42393:9915":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"16:6919:40381":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:20549:38389":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"21:1184:6202":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"2:47732:8639":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"24:296:1812":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"17:13812:7450":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:7211:3116":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:11911:1553":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:2642:7508":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"24:0:1809":{"crate_id":24,"path":["log"],"kind":"module"},"33:79:3102":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"31:4733:4336":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"21:2436:26392":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"22:1127:6070":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"1:4639:10482":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:12372:7025":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:2319:7488":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"29:4581:5362":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:585:10349":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:9081:3046":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"29:8440:5950":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"31:5666:4592":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"6:6116:4688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:40057:15763":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:2929:3114":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"18:507:5982":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"29:5136:5504":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4472:5464":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:41751:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"21:1467:26404":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"31:6298:9660":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"17:13082:7244":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"31:4567:4307":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"31:7378:5068":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"21:1442:26403":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"2:43315:8488":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"31:5580:4574":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"17:10092:6708":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"31:5594:4580":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"16:6022:22456":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:6188:4188":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"16:6935:7784":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:21107:10413":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"29:5742:5629":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"29:2167:5356":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:6110:5837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:10923:6804":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"21:1402:4077":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"20:2202:2949":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"31:5650:4590":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"1:10722:31102":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"31:4510:4291":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"2:4602:15757":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:6485:3091":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"18:660:6003":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:10478:6759":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"21:1998:26414":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"14:202:15710":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:6785:5927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:41597:3490":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"26:164:122":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"29:7074:5762":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"31:7356:5059":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"31:4813:4365":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"2:9362:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:8142:7965":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12072:6964":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:3247:2583":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:9772:6672":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"5:7255:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:6164:7660":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:10598:6807":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:7781:1812":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:420:6512":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:3782:8667":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:39280:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:482:5220":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:9184:3563":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:2738:3457":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:8286:8672":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:4553:5506":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:11904:740":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"31:7174:27625":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"15:180:21551":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:5557:7521":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:41871:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"22:1668:6156":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"17:10026:6700":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"30:4846:41718":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"30:2624:5076":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"6:4546:5504":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4486:5472":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"26:157:3059":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"6:532:5226":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"31:4575:4309":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"6:4920:9815":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:3300:7546":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:47072:8624":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"21:2078:6320":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"2:40376:8193":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"11:2087:8067":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"23:761:5982":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"17:1787:6517":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11234:6834":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"21:2277:4077":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"20:2144:2956":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"17:13399:7322":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:9068:40386":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"20:1880:6470":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"5:7004:3042":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"22:1080:2447":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"17:13332:7300":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"28:147:26459":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"2:1596:678":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"20:1947:6373":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"2:2847:15817":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:11909:1495":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"11:1561:8074":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:8736:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"21:2323:6342":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"16:2742:7512":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"20:2432:2958":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"9:481:21453":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:8170:7967":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:2833:7827":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"31:6614:4883":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"31:5104:27610":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"1:5570:4189":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"31:6711:9683":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"6:5959:5796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"29:5094:5494":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:11899:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:9350:40392":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:10272:8228":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"5:963:4105":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"29:8924:5961":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:4005:4105":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"5:6180:4142":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"21:2649:6177":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"1:11910:789":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"20:2519:2425":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"17:13316:7298":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:10691:22632":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:2372:10410":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:12194:6982":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:9653:6661":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"11:2198:9781":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:8496:8781":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:11573:6870":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:5779:7599":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:4757:7566":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:2470:7501":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"22:1188:1864":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"5:4366:2974":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:7230:5960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:46416:8585":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"9:234:6089":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:4406:2871":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"23:691:5982":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:7520:5658":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:47402:8627":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"22:1604:6142":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"17:9228:40390":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:8909:2994":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"22:1659:6154":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"17:13309:7297":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"30:3670:41706":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"6:1715:4307":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"22:1304:6100":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"6:4377:5422":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:3931:2974":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"29:5857:5647":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"28:142:26458":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"2:40726:8207":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"30:5209:5213":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"33:201:3106":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"0:0:2118":{"crate_id":0,"path":["env_logger"],"kind":"module"},"1:7798:8710":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:10010:2953":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:8598:22523":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:42898:8470":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"31:5041:4430":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"5:2407:9842":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:20938:10548":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"29:5981:9713":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"21:1309:6236":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"29:676:4847":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"17:8651:6615":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"11:744:8058":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4875:5647":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:3782:7550":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:42674:3816":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:44326:8524":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"31:4742:4338":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"2:11726:6015":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"18:690:6012":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"31:5226:9603":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"2:30864:3451":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"29:5633:5611":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"30:4809:41712":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"1:3875:10427":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:43621:8496":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:7509:7535":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"20:2005:6484":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"6:7538:9841":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"11:2212:9784":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"11:1879:6161":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:2922:3113":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:9443:6640":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"23:0:2740":{"crate_id":23,"path":["memchr"],"kind":"module"},"31:6677:4895":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"31:6686:9674":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"1:8260:8765":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:10657:8709":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:4260:2862":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"23:655:5988":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:9523:6649":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:9498:6647":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:11339:6840":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:10050:8799":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:6151:5849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:45746:8547":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:9877:8452":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:2211:3824":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:7352:4144":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:43375:8225":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:43809:8509":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:7854:3003":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"31:6431:4859":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"6:5058:9835":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:9886:6680":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"33:311:2616":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"1:10000:1833":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"21:2186:128":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"2:12542:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"11:675:8055":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:40670:8201":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"31:4942:4399":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"21:1958:26397":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"1:11162:8694":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:8103:2990":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:39236:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"29:4651:5389":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:10068:6706":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:1895:8660":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"32:0:3068":{"crate_id":32,"path":["bitflags"],"kind":"module"},"30:5305:5214":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"22:1521:6127":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"0:599:1864":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"22:1368:41132":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"2:30466:36655":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"24:219:1810":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"22:1422:1864":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"30:3872:41710":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"1:676:10353":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"29:1845:5267":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"29:1762:5248":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:2788:3048":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:2805:7822":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:6047:5833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:6351:22457":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:5741:22454":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"31:6660:4892":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"2:9107:2468":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:21:681":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:12293:7015":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:47526:8629":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"20:2363:2961":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"22:1102:6077":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"2:5528:8186":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:39258:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"21:2574:6353":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:5988:5813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:46060:8563":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:43236:8481":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:7269:8167":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:4642:10455":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:42913:9967":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:2933:6525":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"11:1852:4097":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:13367:7311":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"20:307:6364":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"11:1524:21533":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:12388:7027":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:5747:4663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:8548:22521":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:12576:7060":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:1422:8072":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:638:8655":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"22:1429:6039":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"31:6717:9685":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"5:1612:4105":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:9380:22534":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:43857:8510":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:11901:742":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:40268:8429":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"31:6310:4821":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"17:13698:7417":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:20879:15828":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"31:7138:4997":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"21:2544:6181":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"31:6606:4882":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"31:5843:4653":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"17:13211:7273":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"31:6950:4949":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"29:8134:5863":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"29:5298:5540":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:1432:8055":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:7058:3490":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:4478:5467":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:10015:6699":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"29:4846:5446":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:119:16194":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:12308:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:8109:7961":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"29:7282:5818":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"14:31:8049":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"29:8221:5875":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"29:4627:5379":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"31:7157:9707":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"20:2559:2955":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"33:409:3109":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"20:2012:6409":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"1:361:3390":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:45662:8544":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:5773:5716":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"11:1144:8071":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:7711:7904":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:1650:4421":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:8838:10514":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:6460:7523":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:1555:5252":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:1078:40034":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"31:5729:4627":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"21:1296:6165":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"31:4949:4401":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"2:43579:8495":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"30:0:3066":{"crate_id":30,"path":["rustix"],"kind":"module"},"31:6585:9672":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"20:2040:6487":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"1:11898:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"29:522:4589":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"17:10660:6782":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:13678:7414":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:45459:8536":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:10142:22606":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:12522:7054":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"29:8377:5934":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:4288:4615":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:526:5223":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:11854:6394":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:3124:6286":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:12330:36512":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:1589:6287":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:10989:6529":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:6552:3096":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:8893:3085":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:44364:8529":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:10936:6806":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:10628:8807":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"21:2560:128":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"17:9907:6686":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:42167:2706":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:1564:5258":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:844:3853":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:2843:15816":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:11015:8784":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"23:844:6022":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"29:6721:4664":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:7471:8823":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"9:0:2732":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:7225:8164":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"21:1549:26400":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"29:7021:5739":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:4540:7560":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"29:5668:5617":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:12345:7021":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:783:4108":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:21332:10553":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"21:1167:6198":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"11:867:8065":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:4439:5451":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:10626:6778":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:5886:7613":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:265:4105":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:43407:8491":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:6598:4149":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:2470:15768":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:2448:7500":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"31:4957:4404":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"17:11471:6854":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"29:2074:5345":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:12113:6971":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"29:764:5239":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"1:3132:9999":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:39075:3857":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:10316:6746":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"26:102:2554":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"1:4508:10473":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"29:8402:5943":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:21443:38392":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:2912:38860":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:12158:6976":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"18:80:26363":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:9340:6631":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:1978:6524":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:2985:10371":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:12033:6960":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:11265:8232":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:7478:7534":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"23:81:26363":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"30:457:107":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"2:20760:10554":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"5:3622:4105":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"29:7203:5802":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:41226:8211":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"29:5496:5582":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:10847:31100":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:2362:10405":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"22:971:6499":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"31:5029:4425":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"16:6201:7676":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"30:534:3853":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"21:1081:26411":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"16:6236:7692":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:22260:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"5:2169:40029":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:3983:10433":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:3881:10426":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:42031:3081":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"20:2466:6496":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"22:985:6003":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"29:9176:5963":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:959:8065":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"22:1225:6089":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"2:39358:7864":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:5586:8187":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:7467:7891":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:12098:6968":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:1614:5290":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"21:2200:3006":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:21116:6044":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:11615:6885":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:6400:7708":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"11:768:4097":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:40083:15764":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:8762:8784":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"29:5611:5603":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:10580:6773":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:10303:6745":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:4845:10480":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"18:481:5981":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:2692:2875":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:7626:7901":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"28:67:26443":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"23:816:6013":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:13842:7455":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:8256:7974":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:6097:10640":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:10039:6702":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:1572:4097":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"22:1157:6080":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"23:872:6027":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:5987:8189":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"9:174:8960":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:45622:8542":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"26:209:41174":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"16:3640:6540":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:568:5232":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:20804:10560":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:11905:1499":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"31:5781:9641":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"5:6367:3490":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:8968:8796":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:11502:6856":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"11:2060:7807":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:10649:6780":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"11:1839:3853":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:44080:9969":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"31:5020:4421":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"1:11210:8697":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:4702:7564":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:11907:1497":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:11889:1515":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"24:198:2264":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"7:79:21447":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"31:6138:4741":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"2:8250:3035":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"0:439:2081":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"17:9946:6691":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:953:8064":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:6865:9483":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:11770:6917":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1924:10383":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:11003:8783":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:8955:8793":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:9696:6647":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"18:671:6009":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:10270:6743":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:8479:3853":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6390:7707":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:6132:7655":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:2552:2943":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"6:1539:5248":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:12382:8247":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:4751:5592":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:20564:38389":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"16:6376:7522":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"29:7185:5801":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:21559:10413":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:5354:8680":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:8953:6617":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:8925:30906":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:46189:8566":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"20:2047:6488":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"24:155:2893":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"31:6421:4856":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"17:12085:6966":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"5:3673:3005":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:11468:9923":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:11556:6862":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"0:571:1956":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"29:621:5226":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"1:11168:8819":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:8420:22517":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:6474:7540":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"22:1137:6078":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"2:43969:8520":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"20:1647:6438":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"6:7275:5961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:9188:40387":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:4137:2974":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:4818:7568":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:7837:7918":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:4480:7558":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"11:859:8064":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"31:7097:4990":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"17:8573:22522":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:6506:7719":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"20:1605:6365":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"2:22392:3383":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"11:665:3490":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"0:585:1833":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"2:2839:15815":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:11894:1397":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"31:6325:4827":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"17:10465:6758":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:12331:7020":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:9159:2708":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:44076:9968":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:8166:8760":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:11844:6933":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"23:699:3451":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:4872:7570":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:5418:7580":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:8670:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:9147:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:2298:21570":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:9138:6626":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:5818:3028":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"29:7265:5815":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"30:4359:5176":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"1:947:8062":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"20:1833:6462":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"21:2455:4081":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"1:530:3376":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:4679:10442":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:547:4557":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"29:783:5244":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"21:1602:26401":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"17:13469:7339":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"21:1208:3006":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"17:13689:7415":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:11903:744":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"29:7120:5784":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:2749:3461":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"27:5:2615":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"31:7235:5019":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"31:4588:4313":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"31:4771:4351":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"29:5054:5484":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:6668:5863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:4797:5617":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:45491:8537":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:8154:2991":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:39552:32200":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:6943:22460":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"31:7219:5010":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"6:5015:5674":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:5239:15684":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"20:2054:6489":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"20:2220:2953":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"6:474:5215":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"29:7502:5849":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"33:396:3110":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"1:6369:3086":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:8091:2989":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"5:7074:8160":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:9596:6655":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"29:6936:5721":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:42433:6308":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"31:6560:9663":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"29:8420:5946":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:7065:7806":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"20:1654:6439":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"31:5586:4577":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"2:40022:8417":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:41538:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:4941:9830":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"20:1622:6435":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"2:39114:15681":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"31:5658:4591":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"17:11641:6890":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:10735:6792":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:4827:5629":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:7238:8166":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:11821:6929":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"31:6749:27620":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"2:43611:2991":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"31:5860:9650":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"2:6977:2859":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:3995:10436":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:13324:7299":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:5439:8683":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:4821:5628":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"31:6980:4958":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"21:1535:6262":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"31:5946:4688":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"2:20596:38690":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"20:1628:128":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"17:12307:7017":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"11:1009:8066":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:30288:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"21:1766:4079":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"10:0:2733":{"crate_id":10,"path":["adler"],"kind":"module"},"2:41394:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"24:241:2901":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"2:40708:4163":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:4629:5540":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"22:1333:6102":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"0:578:1968":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"29:4788:5430":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"18:727:6022":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"31:6043:4722":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"20:1545:210":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"31:5880:5356":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"17:9424:6638":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:45938:8558":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:4773:5603":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"31:4501:4287":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"21:1817:6295":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"31:5788:4639":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"31:5634:4588":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"29:4731:5422":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:355:3389":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"22:1437:6044":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"2:2981:10370":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"29:573:4595":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"2:2796:15809":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:6243:40379":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:12419:7032":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:6821:5946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:5402:6616":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:23037:8169":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"21:2227:4086":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"22:1495:6123":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"1:11461:32059":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:9381:8708":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"20:2255:2955":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"17:12006:6956":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"29:5875:5651":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:3210:3011":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:5862:5734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:635:8653":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:1561:3853":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:4328:8671":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"0:576:1965":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"5:7178:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:12597:3041":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"30:2529:5075":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"31:7167:9708":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"1:2614:3004":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:13443:7333":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:8870:10515":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"21:1504:6258":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"6:62:16145":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:5708:7595":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"21:2311:6274":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"18:736:26373":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"21:2360:6343":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"5:6765:4153":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4527:5494":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:40473:8198":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:2163:15829":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"18:755:6027":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4398:5430":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:47862:8645":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:5499:5835":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"31:5085:4453":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"2:2774:15808":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:30232:3604":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:0:1389":{"crate_id":1,"path":["std"],"kind":"module"},"17:9488:6646":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"21:2423:4082":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"31:4713:4326":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"1:10865:8785":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:2827:7826":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:41521:3585":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"30:4338:41714":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"22:1552:6134":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"6:5071:9715":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4404:5433":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:10670:8812":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"30:4667:41719":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"2:41345:8668":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"30:4144:5168":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"21:2099:4077":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"17:9534:6651":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:7259:3166":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"5:3534:3853":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:7161:15801":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"31:6623:4885":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"29:2027:5328":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:39970:8412":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:12835:7129":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:11585:6873":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"24:357:2904":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"21:1484:4080":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"1:8485:8780":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"22:1630:6048":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"10:44:8076":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:41911:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:2911:2877":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:40286:8431":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"20:1468:6412":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"16:4904:7571":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"29:5454:5573":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:39341:8287":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:9796:6673":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:4737:4186":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:5071:7576":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:2862:7517":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:5104:7577":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"20:2096:2957":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"16:5677:22453":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:3030:7542":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:1467:2266":{"crate_id":2,"path":["core","mem"],"kind":"module"},"29:9104:4843":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"31:5835:4650":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"21:2510:6347":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"2:41991:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"22:1261:6094":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"20:2609:6390":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"33:74:3100":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"31:5896:4660":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:6578:4303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"22:1378:6003":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"17:13433:7330":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:2206:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:4688:5562":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"31:6542:27619":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"2:45347:8531":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:10000:6695":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"30:3797:26503":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"17:11832:6932":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"29:6911:4836":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"31:4519:4293":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"2:3234:2878":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:12178:6977":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"29:9234:5658":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:875:8057":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:39176:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"22:1698:2948":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"17:9973:6693":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:6482:3090":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:3040:1068":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"2:46111:8564":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"29:809:16195":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"11:652:3854":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"20:1661:6440":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"2:47706:8637":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:21945:9965":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"16:7335:40380":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:11900:745":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:8960:8794":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"31:7126:4996":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"1:8242:8764":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:11035:8976":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"18:531:5985":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:4559:5508":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:1042:40033":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11319:6839":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:926:8056":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:6724:5886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:3753:4097":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"29:8203:5874":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"23:883:26374":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:6179:7662":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"29:4945:5462":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"5:5035:3028":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:12059:6963":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"21:1623:26402":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"29:8329:5924":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:2546:7504":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"31:5904:4663":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"5:2636:9846":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:7485:5962":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:11938:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"24:151:1811":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"17:12915:7190":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:43333:8489":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:10705:6787":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"11:1035:8067":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"22:923:10413":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"31:6632:4889":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"2:41479:3166":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:47695:8636":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:4377:2869":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"11:1873:6287":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"31:4615:9570":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"31:4753:4343":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"29:604:5223":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:2077:3371":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:9108:40391":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:3142:6527":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:8134:2993":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"31:6373:4846":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"6:4318:5379":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:6691:5870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:4074:35698":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:12126:6972":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:4757:5594":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"30:4745:41709":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"17:8443:22518":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:6671:7746":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:11887:936":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:6558:7723":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:46866:8592":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11011:6809":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"31:5674:4595":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"11:840:8062":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"22:1042:41130":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"21:2579:26431":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"2:21083:10413":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:9043:3045":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:10283:6744":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:10258:8227":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"22:1359:6015":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"29:7345:5833":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:11393:8667":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:4322:2867":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"18:609:5996":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:24:610":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:45367:8532":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:40116:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"29:5513:5585":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"20:1802:6461":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"29:9158:5962":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:6587:5856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:4590:5532":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:7571:10413":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:3644:3490":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"31:6965:4955":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"24:326:2903":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"1:11837:8826":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:9734:6668":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:3973:10432":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:11535:8222":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:46036:8562":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"30:4706:41703":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"1:8730:8782":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"29:8163:5868":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"11:2204:40364":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"30:4023:5167":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"0:445:1892":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"16:0:2738":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:2616:7507":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"23:97:26364":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:32060:8279":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:1034:6516":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:40133:37640":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:8718:6501":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"14:187:21545":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"29:6783:5703":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:11888:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:1351:3853":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10491:6760":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"31:5872:9653":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"21:1654:26405":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"17:11109:6819":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:41671:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:11628:6889":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:7693:3568":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"31:4988:4415":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"2:20922:10413":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"30:3086:5083":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"29:8253:5886":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:4865:5642":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"31:4547:4303":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"31:5754:9628":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"18:515:5980":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"21:268:40473":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"17:13625:7396":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"31:0:3067":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"5:1242:8071":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:10402:6750":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:7616:3381":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:5797:7603":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:11924:6947":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"21:1640:6280":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"2:2963:15680":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:8356:6038":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:0:2739":{"crate_id":17,"path":["object"],"kind":"module"},"16:5346:7579":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:47785:8642":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"29:745:5234":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"2:32056:8278":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:43640:8498":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:5065:9713":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:55:7945":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"16:4932:7572":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:39961:8411":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:40389:8438":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"11:1843:3490":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"28:127:26455":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"14:221:8053":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:43245:8482":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:11532:6860":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"31:7387:5071":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"2:7165:15800":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"31:5799:9642":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"1:5370:8681":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:40399:8439":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"11:119:4091":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:3383:2982":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"33:13:2618":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"31:4635:9575":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"22:1596:1864":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"23:769:5982":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"29:7973:4303":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"22:1611:6143":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"2:45844:8556":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:4609:5533":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"8:0:2731":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:4845:7569":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:8427:10504":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"29:5015:5474":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"21:1335:26390":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"29:5800:5639":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12236:7003":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:2867:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:3815:7551":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:936:10358":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"22:1507:6125":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"6:7555:9734":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:47747:8640":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:47610:8631":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"18:636:6002":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:2502:7502":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:45644:8543":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"29:6763:4663":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:9624:4174":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:1783:3548":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:11861:6936":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:21839:37641":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"20:713:6369":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"2:41791:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:13506:7347":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"20:1473:6413":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"17:8310:22514":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"0:340:1822":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"22:1086:6028":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"17:11653:6893":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:1916:8175":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:41380:8215":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:4782:38012":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:12295:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"14:215:8052":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"21:2140:26430":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"6:7252:9728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:9265:6629":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:6721:36320":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:10334:6628":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"5:280:1938":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"29:6830:5719":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:5693:7592":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:21879:36661":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:4857:4331":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:3079:10372":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:2822:15814":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:43649:8240":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"20:2119:2957":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"16:6488:7712":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:4449:5456":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:6776:5924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"28:19:3069":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"11:1050:21532":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:10712:2989":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"20:1814:6368":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"17:12138:6973":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:5000:7574":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"31:5560:4559":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"29:5685:5620":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"14:7:8049":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10712:22633":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:11813:6927":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"29:4979:5467":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:43327:8234":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:45990:8560":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11091:3045":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:40050:8419":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:9839:6676":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:45521:8538":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:5630:7586":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"28:56:26448":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"29:4865:5448":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:7317:40382":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:8264:5019":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:3899:7553":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"29:7425:5837":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:5386:6615":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:21665:8251":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"11:1126:8070":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:4433:2872":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"9:325:9787":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"30:4161:5169":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"22:1388:6114":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"17:11993:6953":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:13659:7408":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"30:3000:5082":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:653:4592":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:41462:3854":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:11424:8235":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"30:356:9363":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"6:4991:5667":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:7588:3855":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:7786:8708":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"0:33:1817":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"2:44347:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"30:4828:41711":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"2:43210:8426":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"29:2093:5346":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:49668:10566":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:9721:6667":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:7743:7527":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:7258:4616":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:43989:8244":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"29:5536:4430":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:9410:3815":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:41589:3854":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:7195:8161":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:13376:7314":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"22:1637:6148":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"6:494:4588":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"29:1687:4592":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"28:69:26442":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"29:7906:4627":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:3060:3018":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"30:4114:41708":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"1:3911:10428":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:5870:5739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"31:4833:4368":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:6819:7773":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:9557:6628":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"21:1057:6178":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"16:6728:7759":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:9577:6654":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:20594:38688":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"30:3845:21491":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"29:0:816":{"crate_id":29,"path":["libc"],"kind":"module"},"17:11520:6857":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:9813:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:6854:7777":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"29:5763:5631":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:44088:9971":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"31:5748:5232":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"1:5502:10509":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:10826:8125":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"20:2229:2954":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"17:487:6513":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:1821:2879":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:1366:3854":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:22227:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:2931:21596":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:13066:7241":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:506:4595":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:11902:743":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"20:1938:4087":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"17:11879:6937":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:40315:8185":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:4392:5429":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:1668:5328":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:11946:6948":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:2780:7821":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:3975:4127":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"31:6108:27616":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"16:8072:7957":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:3142:15820":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:6685:5868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:2208:8663":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:9592:4168":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"23:741:40395":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"31:4536:4297":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"2:47675:8634":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"22:1195:128":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"17:13053:7236":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:573:4591":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:4681:5068":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:11600:6879":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:3063:6536":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"18:681:6010":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"31:4558:4304":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"23:638:26375":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11422:6847":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:9986:6694":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"29:7143:5789":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"11:1071:40370":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:9748:6628":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:7202:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:5616:7582":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"29:7246:5814":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:3458:2985":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:5077:9718":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"20:1861:40426":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"6:6024:9722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:7803:7914":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:4574:5031":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:4698:5569":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:12550:7058":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"31:7298:5052":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"2:39372:2868":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"18:652:5982":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"31:6785:27621":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"17:9545:6612":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"11:399:40366":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"11:97:9958":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:43084:8471":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"33:221:3107":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"21:2385:6340":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"2:11783:15702":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"20:1380:6301":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"31:5739:4632":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"2:21337:10563":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:13219:7276":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:11484:6855":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:6793:7772":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:5594:7526":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:8234:8758":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:40149:8424":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:20869:10555":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"30:5180:5209":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"0:342:1850":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"2:44164:15922":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:8251:3168":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"29:4828:5442":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:3292:2615":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:13257:7284":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:10357:4202":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"29:5033:5477":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"20:1914:6475":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"5:2116:8969":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:7578:5969":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:43741:15708":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"11:279:9959":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"20:2496:2948":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"5:3184:6161":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:5995:5814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:41581:3853":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:8208:8668":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:863:4113":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:1568:4127":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:44291:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:8283:22513":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:45681:8545":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:41606:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:4732:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"21:1919:6305":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"31:5825:4647":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"20:1518:6419":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"0:446:1890":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"16:2668:7509":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:4538:5499":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"23:648:5985":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:5910:4188":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:6814:5943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:6990:7798":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"28:0:3065":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"29:1869:5275":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:42713:8469":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:8319:10491":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"31:4975:4409":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"26:100:2553":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"2:42498:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:123:16195":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:8180:22466":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:42458:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:2856:15819":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:10452:6757":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"11:326:4093":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:6553:5039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"11:821:8059":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:10635:6779":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:5563:4188":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"20:1998:6481":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"29:7953:4297":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:11969:6952":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:7862:3005":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:20768:37145":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"7:32:21440":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:40012:8416":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"31:4599:4314":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"17:13488:7344":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:10209:8682":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"5:1981:3005":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"29:8896:4616":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:3163:15747":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"31:6035:4719":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"17:13721:7430":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:2469:10413":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"0:438:2024":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"2:45391:8533":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:43223:8480":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:9275:40388":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:44100:9974":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:4399:4133":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"31:176:4288":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"2:2926:1936":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:5693:3083":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"22:1514:6126":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"1:618:8652":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:40255:2992":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:2691:3111":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:13879:7462":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:9609:4169":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:9933:6689":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6717:7758":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:12902:7184":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:32020:9783":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:46652:8589":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"31:4762:4347":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"2:47214:8625":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:1821:3557":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"31:5704:4615":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"31:6578:9670":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:47464:8628":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:8912:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"22:1023:6058":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"16:7366:22462":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:2378:7497":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:9117:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8387:6089":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:1565:3490":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:4990:8678":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:8753:6502":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:7503:9840":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:10203:8226":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:43674:8418":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:6327:7700":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"29:5993:9718":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"30:4195:5171":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"5:7044:39049":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:1846:3564":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"22:1683:6158":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"23:546:5981":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:7019:8159":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:12563:7059":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:13265:7286":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"29:9276:4304":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"31:4467:4289":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"6:7509:5965":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:386:6510":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"29:6893:5064":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:9409:22535":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"31:5814:4643":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"31:4782:4355":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"21:2593:40474":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"2:47721:8638":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:2967:21597":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:5717:4664":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:11859:10356":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:12634:7069":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"20:2444:2960":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"16:2905:7519":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:10422:2583":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:4371:4590":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:10681:6785":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"11:1866:6286":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"29:8070:5862":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:11391:6843":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:7150:2922":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:4414:10455":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:8838:37480":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:9322:40389":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"23:777:6003":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:2905:2697":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"31:5610:4585":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"6:1908:17515":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:8226:8762":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:8214:7864":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:6136:5838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"29:2151:5355":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:7437:7884":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:43255:8483":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"20:213:40429":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"2:4808:795":{"crate_id":2,"path":["core","iter"],"kind":"module"},"29:5277:5539":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"21:1131:6193":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"22:1568:41134":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"2:43461:2954":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"30:4541:5178":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"29:5987:9715":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11355:6841":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"29:5706:5624":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"22:1315:26437":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"2:46292:8568":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:4851:5639":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:7293:7844":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:4510:7559":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:9151:2704":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"23:726:5996":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:21827:8257":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"29:5883:5656":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:30266:3605":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:4576:5033":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:1525:4404":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:22359:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"22:1147:6079":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"1:11500:8700":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:5385:8682":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:7568:4304":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:45892:8557":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:5998:22455":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:9866:6678":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:13763:7435":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"20:1642:6436":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"2:45592:8541":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"20:1231:6388":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"5:7028:4127":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:3249:3008":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:12980:7225":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"20:2572:2944":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"1:11331:8665":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:4683:10445":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"11:757:4127":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:7443:4843":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"29:5594:5600":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"18:719:6019":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:4416:5442":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:4256:8670":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:2215:2983":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:4307:5371":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"20:2581:2949":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"16:4445:7557":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:1721:4856":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"33:292:3108":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"2:8843:8974":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:5367:21568":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"29:5154:5506":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:13249:7282":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:11717:6038":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"20:2358:2960":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"1:11145:4207":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:43153:8475":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13135:7256":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:1709:5071":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:12923:7191":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:11069:22528":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:6061:21569":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:4803:5620":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:1622:5295":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:7209:37640":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"28:189:4075":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"23:681:5990":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"29:505:5220":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"30:4724:41707":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"5:4732:668":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:2550:4169":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:2817:15813":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"29:5412:5562":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:21004:6044":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"29:4805:5433":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:1577:6285":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:4914:2974":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:8410:8775":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"9:421:21456":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"23:731:40397":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"21:2240:26416":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"2:3182:38755":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"31:4621:9573":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"1:7697:8278":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:12501:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"30:549:26491":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"31:7214:5248":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"17:12259:7012":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:42174:2705":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"29:695:5010":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"33:339:2617":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"1:7677:3567":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:7683:7539":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"22:929:26438":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"2:39302:2916":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:1463:8144":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"28:47:26447":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"16:5643:7591":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:7588:7900":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:13169:7259":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:21978:10425":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:10416:6754":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"21:1706:6281":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"21:1188:1819":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"1:922:8055":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:9895:6682":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:4037:7554":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:43507:8493":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"31:6389:4847":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"2:30041:10424":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:1657:5320":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"33:43:3098":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"5:7280:8168":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"31:6737:9701":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"31:7338:5054":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"1:3677:8665":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"30:4178:5170":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"1:9033:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"29:8181:5870":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:2524:7503":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:587:5239":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:20982:10413":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:13356:7307":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:5032:5682":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:880:3853":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:9218:6628":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:40277:8430":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:45968:8559":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"31:4827:9587":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"17:11800:6925":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"33:358:2490":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"2:10053:8222":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"31:6473:4865":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"31:7227:5013":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"2:20577:38691":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"31:5765:4636":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"2:42917:8220":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:4521:5491":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"31:7261:5038":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"17:13612:7390":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"31:5307:9622":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"0:36:1864":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"1:857:3854":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"20:2449:2961":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"31:5269:9617":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"1:643:10352":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"21:2115:6202":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"21:1733:6284":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"16:6535:4090":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"20:2590:2952":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"2:1747:9849":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:10092:8223":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:3465:2987":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"20:2346:2958":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"31:5773:9636":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"17:12496:7052":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"20:1433:40402":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"22:1281:6039":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"1:8082:3017":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"20:2476:2949":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"1:4096:10450":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:43425:8492":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:3129:39048":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:7411:7630":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"31:5805:9644":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"1:11886:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"30:3293:5085":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"2:40718:8205":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"21:1194:128":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"1:2360:10404":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:154:4088":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:11785:6921":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"29:7476:5838":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:13292:7290":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"21:1748:26398":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"29:5394:5068":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:1519:4401":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"0:341:1825":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"1:3170:3010":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:9062:2551":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:30360:36665":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"29:556:4612":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"2:40034:8418":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:22557:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"31:6569:9665":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"16:6544:7528":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:22590:8275":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"20:2487:2944":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"29:5783:5637":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:11372:8666":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:5811:7604":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:11732:15696":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"22:1413:6107":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"6:6706:5875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:12510:7053":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"28:132:26456":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"17:9178:6627":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"26:0:1619":{"crate_id":26,"path":["humantime"],"kind":"module"},"17:9959:6692":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:44112:8976":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:11258:6835":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"29:728:4591":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"1:8792:8787":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"21:1871:4082":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"17:8256:22500":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:4042:15679":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:13240:7281":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:3688:8145":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:44273:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:9142:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"15:0:2737":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:8047:7955":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:6293:7697":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"20:2268:2952":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"6:4999:5669":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:44376:3040":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:13419:7328":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"29:7228:5813":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"22:1449:6106":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"30:5193:5211":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"31:5314:9623":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"28:183:4072":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"21:2160:6327":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"1:3129:30055":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"22:1677:6157":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"6:5857:5733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"22:1399:6119":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"31:6923:4945":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"16:3225:7545":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:3449:31438":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:5920:7474":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:6321:7699":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"29:5117:5499":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"21:1802:4081":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"31:7117:4995":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"17:10840:6800":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"31:5245:5223":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"22:1292:6098":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"2:11279:2522":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:43144:8473":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:9312:6630":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"11:393:40369":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:6757:10546":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:2477:3001":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"29:5369:5561":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:579:5234":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13181:7262":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"23:853:26373":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:3680:8666":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:4331:5389":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:2832:4185":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:39161:8282":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"21:2367:6172":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"22:1501:6124":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"17:9628:6658":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:43173:8477":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"31:5275:5647":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"1:8854:10513":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:11906:1496":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"21:2109:6200":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"1:3933:10430":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"22:1167:4185":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"33:81:3103":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"20:949:6388":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"1:11308:4209":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"31:4843:27609":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"22:1651:6151":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:4167:2974":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:9641:6659":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"20:931:2946":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"1:8800:3490":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:247:6508":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:11461:8237":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"31:5282:4491":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"29:7443:4688":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"29:2130:4307":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"21:2489:26394":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"1:6332:8690":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:4641:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"22:1690:6159":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"2:4761:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"31:5263:5582":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"17:9917:6687":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"29:2113:5071":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:41512:3167":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"21:2132:6323":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"2:46528:8587":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:2800:15811":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:901:4127":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:13744:7431":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7488:7894":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:7103:8796":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:40042:8179":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:4571:5517":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:42705:8468":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:42403:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"6:6651:5052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:40699:3016":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:5843:5732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:5686:3082":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"20:1991:6479":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"5:6608:4150":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:8147:2953":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:7591:3856":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:4681:10444":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:32147:3462":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13639:7402":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:13411:7325":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:41368:8214":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:43265:8484":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:7519:7896":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"31:6590:4878":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"31:5251:9608":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"6:6848:5954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:2357:7496":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:13121:7253":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:7572:3391":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"18:491:6499":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"10:36:9786":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:11721:6895":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:40206:8425":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:4653:5550":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"6:5880:5746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:9469:6641":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"29:9212:5965":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:4903:10487":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"22:1560:6135":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"17:13564:7389":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:10931:4204":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"21:2125:6321":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"11:816:8072":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"31:6497:27618":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"23:824:6015":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:6016:5820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:4898:9799":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:12224:7001":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:40102:8422":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:4969:7573":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"23:807:6012":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"31:5551:4557":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"16:3446:7547":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"24:290:2902":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"1:7808:8711":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:10670:6784":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:4728:7565":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:6628:5862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"31:5070:4445":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"29:5256:5533":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:39955:8179":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:6373:3087":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:6767:7771":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4947:9833":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:10835:8683":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:4707:5573":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:8141:2994":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:2763:7820":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:40324:8433":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:10516:6762":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"31:5300:9620":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"29:5914:5667":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"33:173:2447":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"1:8124:2992":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"5:5834:16119":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"18:521:26375":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:10771:8230":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"13:226:8944":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"11:2157:21526":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"29:9194:5964":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"20:2062:6490":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"29:539:4588":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"17:9038:40394":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"21:2087:6166":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"2:45437:8535":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"11:0:2734":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"22:1211:6029":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"31:6649:4891":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"17:11037:22527":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"11:2219:2922":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"31:4723:4331":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"1:11908:1498":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"18:564:5990":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"21:1322:6238":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"29:5344:5550":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:44092:9972":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:10314:8782":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:10804:8231":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:1443:8056":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:25847:8170":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"31:5332:27611":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"17:10798:22525":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:2346:10400":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:12799:7098":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:4719:5580":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:5191:4105":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"31:6932:27622":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"1:4760:10441":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:4183:2860":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:1844:3563":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"16:2786:7514":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:13145:7257":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:3547:3854":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:40306:1817":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:4509:5484":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:13344:7306":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:2741:3112":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:10702:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:47324:8626":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:40121:8423":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:7491:5963":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"31:4660:9581":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"0:442:2096":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"6:4423:5446":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:10822:3568":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"28:181:26461":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"2:40069:8420":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:3585:7548":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:7103:3490":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:6218:7682":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:4596:7562":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"23:798:6010":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"18:113:26365":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"20:2174:2948":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"18:614:40397":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"31:4651:9578":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"31:6054:27614":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"16:7859:22465":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:21854:8258":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:2908:9845":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:9003:8977":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:5785:5720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"30:3932:5166":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"2:41260:10422":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"20:1671:40408":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"31:7369:5064":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"22:1586:5985":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"16:7635:7902":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:8249:3036":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:41951:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:20841:10561":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:10569:6769":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:6800:5934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:535:7477":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:4564:10431":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"23:556:6499":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"21:2614:26434":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"29:4675:5399":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"25:0:2731":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"20:1754:2868":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"1:8215:9977":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"21:2059:6318":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"5:633:8141":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:4960:5656":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"20:1574:6341":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"21:1144:26412":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"16:7244:40384":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:5235:4084":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:3197:2876":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:2753:2855":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"29:5955:5682":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"11:638:3853":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"29:7166:5796":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:4207:3853":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"23:632:5980":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:2932:2699":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:2916:38859":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:21803:6458":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"30:3778:5143":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"20:2599:2950":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"1:5764:3093":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"21:1588:6274":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"2:20579:38686":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:13101:7245":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12959:7220":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:7529:7536":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:5947:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:7077:22461":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:8675:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:6538:3095":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:1785:3549":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:7670:8705":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"33:89:3104":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"17:10555:6764":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"31:5983:9658":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"1:6085:4179":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:8683:6500":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"5:4047:3854":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"22:1644:6149":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"23:788:6009":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:2792:15810":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:43665:8179":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:7240:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:8220:10454":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:8025:7954":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"14:0:2736":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:42160:2703":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:8979:40393":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:13857:7456":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:45822:8555":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:8931:6509":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:4836:5631":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"28:42:26450":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"29:486:5215":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"31:5642:4589":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"}},"external_crates":{"31":{"name":"linux_raw_sys","html_root_url":null},"28":{"name":"io_lifetimes","html_root_url":null},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"aho_corasick","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"29":{"name":"libc","html_root_url":null},"26":{"name":"humantime","html_root_url":null},"23":{"name":"memchr","html_root_url":null},"20":{"name":"regex","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"termcolor","html_root_url":null},"30":{"name":"rustix","html_root_url":null},"27":{"name":"is_terminal","html_root_url":null},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"21":{"name":"regex_syntax","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}