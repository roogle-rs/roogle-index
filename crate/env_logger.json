{"root":"0:0:2251","crate_version":"0.10.1","includes_private":false,"index":{"b:2:2606-0:269:140":{"id":"b:2:2606-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2251":{"id":"0:0:2251","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1301,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\n**By default all logging is disabled except for the `error` level**\n\nThe **`RUST_LOG`** environment variable controls logging with the syntax:\n```text\nRUST_LOG=[target][=][level][,...]\n```\nOr in other words, its a comma-separated list of directives.\nDirectives can filter by **target**, by **level**, or both (using `=`).\n\nFor example,\n```text\nRUST_LOG=data=debug,hardware=debug\n```\n\n**target** is typically the path of the module the message\nin question originated from, though it can be overridden.\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target.\n\nFor example, `RUST_LOG=example` would match the following targets:\n- `example`\n- `example::test`\n- `example::test::module::submodule`\n- `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\n**level** is the maximum [`log::Level`][level-enum] to be shown and includes:\n- `error`\n- `warn`\n- `info`\n- `debug`\n- `trace`\n- `off` (pseudo level to disable all logging for the target)\n\nLogging level names are case-insensitive; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nSome examples of valid values of `RUST_LOG` are:\n\n- `RUST_LOG=hello` turns on all logging for the `hello` module\n- `RUST_LOG=trace` turns on all logging for the application, regardless of its name\n- `RUST_LOG=TRACE` turns on all logging for the application, regardless of its name (same as previous)\n- `RUST_LOG=info` turns on all info logging\n- `RUST_LOG=INFO` turns on all info logging (same as previous)\n- `RUST_LOG=hello=debug` turns on debug logging for `hello`\n- `RUST_LOG=hello=DEBUG` turns on debug logging for `hello` (same as previous)\n- `RUST_LOG=hello,std::option` turns on `hello`, and std's option logging\n- `RUST_LOG=error,hello=warn` turn on global error logging and also warn for `hello`\n- `RUST_LOG=error,hello=off`  turn on global error logging, but turn off logging for `hello`\n- `RUST_LOG=off` turns off all logging for the application\n- `RUST_LOG=OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n#[cfg(test)]\nmod tests {\n    use log::info;\n\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/rust-cli/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:140"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:14:1949","0:70:712","0:340:1956","0:341:1959","0:585:1967","0:342:1984","0:599:1998","0:437:2148","0:438:2158","0:439:2215","0:442:2230","0:445:2027","0:446:2025","0:332-0:262:1950"],"is_stripped":false}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[825,0],"end":[890,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:2025","0:384:2051","0:385:1949","0:386:2179"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:437:2148":{"id":"0:437:2148","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1130,0],"end":[1132,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:458:2769":{"id":"b:2:2606-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:9853:2850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:9853:2850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:506:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12842:32952":{"id":"2:12842:32952","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2300-0:210:255":{"id":"b:2:2300-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:585:1967":{"id":"0:585:1967","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[308,0],"end":[311,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:8879:3179-0:585:1967","a:2:2832:253-0:585:1967","a:2:2872:3256-0:585:1967","a:2:2815:243-0:585:1967","a:2:8878:3180-0:585:1967","b:2:2300-0:585:1967","b:2:2303-0:585:1967","b:2:2610-0:585:1967","b:2:2616-0:585:1967","b:2:3450-0:585:1967","b:2:2606-0:585:1967","b:2:2621-0:585:1967","0:423","0:589","0:427"]}}},"a:2:2872:3256-0:342:1984":{"id":"a:2:2872:3256-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3450-0:35:1998":{"id":"b:2:3450-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:599:1998":{"id":"b:2:2610-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:523:2867":{"id":"0:523:2867","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:548:2673":{"id":"0:548:2673","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2621-0:210:255":{"id":"b:2:2621-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12735:34370":{"id":"2:12735:34370","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:100:2704":{"id":"b:2:3450-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:35:1998":{"id":"b:2:2610-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:3179-0:571:2090":{"id":"a:2:8879:3179-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:2089","0:96:2645","0:97:2646","0:98:2647","0:99:2648"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:49:2109":{"id":"0:49:2109","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:571:2090":{"id":"0:571:2090","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:2093","0:574:2096","0:576:2099","0:578:2102"],"impls":["a:2:8879:3179-0:571:2090","a:2:2832:253-0:571:2090","a:2:2872:3256-0:571:2090","a:2:2815:243-0:571:2090","a:2:8878:3180-0:571:2090","b:2:2300-0:571:2090","b:2:2303-0:571:2090","b:2:2610-0:571:2090","b:2:2616-0:571:2090","b:2:3450-0:571:2090","b:2:2606-0:571:2090","b:2:2621-0:571:2090","b:5:682-0:571:2090","0:583","0:581","0:267","0:580"]}}},"0:358:2075":{"id":"0:358:2075","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[580,4],"end":[583,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[366,9],"end":[366,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8879:3179-0:543:2136":{"id":"a:2:8879:3179-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:35:1998":{"id":"a:2:2815:243-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:442:2230":{"id":"0:442:2230","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1207,0],"end":[1213,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:458:2769":{"id":"b:2:3450-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178:2830":{"id":"0:178:2830","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:169:2619":{"id":"b:2:2616-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:546:2739":{"id":"0:546:2739","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5546:38899":{"id":"5:5546:38899","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:342:1984":{"id":"b:2:3450-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3450-0:210:255":{"id":"b:2:3450-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:369:2109":{"id":"0:369:2109","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[656,4],"end":[659,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:268:60":{"id":"0:268:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:1970":{"id":"0:405:1970","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1009,4],"end":[1016,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:585:1967":{"id":"b:2:2616-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2621-0:342:1984":{"id":"b:2:2621-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5531:38896":{"id":"5:5531:38896","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2072","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2072","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2612:739":{"id":"2:2612:739","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388:2181":{"id":"0:388:2181","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[893,4],"end":[895,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1946","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:32:1951":{"id":"b:2:2303-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12719:867":{"id":"2:12719:867","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12034:448"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462:452":{"id":"0:462:452","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:210:255":{"id":"a:2:2832:253-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:384:2051":{"id":"0:384:2051","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[876,4],"end":[878,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:532:1748":{"id":"0:532:1748","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"2:12737:34371":{"id":"2:12737:34371","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12757:34004":{"id":"2:12757:34004","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2642":{"id":"0:147:2642","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2769"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"resolved_path":{"name":"Level","id":"24:198:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:38897":{"id":"5:5535:38897","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:519:2866":{"id":"0:519:2866","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2872:3256-0:543:2136":{"id":"a:2:2872:3256-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[307,9],"end":[307,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2621-0:543:2136":{"id":"b:2:2621-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2872:3256-0:32:1951":{"id":"a:2:2872:3256-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2300-0:35:1998":{"id":"b:2:2300-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2631","0:176:2779","0:177:2634","0:178:2830","0:179:2834","0:180:2637"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2303-0:269:140":{"id":"b:2:2303-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219:60":{"id":"0:219:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:269:140":{"id":"b:2:2616-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12731:2201":{"id":"2:12731:2201","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12741:34394":{"id":"2:12741:34394","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12742:34395"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:543:2136":{"id":"b:5:682-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:2841","5:685:2209","5:686:3709"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:341:1959":{"id":"0:341:1959","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[295,0],"end":[295,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}}},"0:145:2630":{"id":"0:145:2630","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12836:2123":{"id":"2:12836:2123","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12376:133","`FromStr`":"2:12375:3054"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12375:3054","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12375:3054","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:599:1998":{"id":"a:2:2815:243-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2606-0:169:2619":{"id":"b:2:2606-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:3179-0:269:140":{"id":"a:2:8879:3179-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2624:134":{"id":"2:2624:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32351:10550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:8879:3179-0:585:1967":{"id":"a:2:8879:3179-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:377:2148":{"id":"0:377:2148","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[782,4],"end":[793,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SetLoggerError","id":"24:352:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12827:38236":{"id":"2:12827:38236","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434:712":{"id":"0:434:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1100,8],"end":[1104,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:712":{"id":"0:491:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12780:38226":{"id":"2:12780:38226","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12415:7348","str::split":"2:12768:2464","prim@char":"1:12034:448","str::split_terminator":"2:12777:38225"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43919:9607","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:534:452":{"id":"0:534:452","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:712":{"id":"0:104:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:3256-0:210:255":{"id":"a:2:2872:3256-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:115:1952":{"id":"0:115:1952","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:210:255","0:543:2136"],"is_stripped":true}}},"0:96:2645":{"id":"0:96:2645","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2704"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:367:2101":{"id":"0:367:2101","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:508:2632":{"id":"a:2:2815:243-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2300-0:508:2632":{"id":"b:2:2300-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:571:2090":{"id":"b:2:2610-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2815:243-0:543:2136":{"id":"a:2:2815:243-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2616-0:32:1951":{"id":"b:2:2616-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2621-0:458:2769":{"id":"b:2:2621-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:253-0:269:140":{"id":"a:2:2832:253-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2300-0:269:140":{"id":"b:2:2300-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12801:38228":{"id":"2:12801:38228","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12415:7348","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatch_indices":"2:12804:38229"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44001:9608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44":{"id":"0:44","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[170,0],"end":[271,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:45:1029","0:46:2025","0:49:2109","0:50:2114","0:51:1949","0:53:2123","0:54:2150"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8879:3179-0:100:2704":{"id":"a:2:8879:3179-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:506:712":{"id":"0:506:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:682-0:571:2090":{"id":"b:5:682-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:2841","5:685:2209","5:686:3709"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:376:2141":{"id":"0:376:2141","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[768,4],"end":[771,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["is_test",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:2150":{"id":"0:54:2150","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[243,4],"end":[270,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:9845:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:9845:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5550:32950":{"id":"5:5550:32950","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12842:32952"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:571:2090":{"id":"b:2:2621-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2872:3256-0:458:2769":{"id":"a:2:2872:3256-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:476:712":{"id":"0:476:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:458:2769":{"id":"a:2:2832:253-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2610-0:210:255":{"id":"b:2:2610-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:591:712":{"id":"0:591:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[307,9],"end":[307,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14:1949":{"id":"0:14:1949","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[879,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:32:1951","0:35:1998"],"is_stripped":false}}},"b:2:2610-0:458:2769":{"id":"b:2:2610-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:266-0:543:2136":{"id":"0:266-0:543:2136","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:2136","glob":false}}},"b:2:2303-0:169:2619":{"id":"b:2:2303-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:35:1998":{"id":"0:35:1998","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[109,0],"end":[113,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:44","a:2:8879:3179-0:35:1998","a:2:2832:253-0:35:1998","a:2:2872:3256-0:35:1998","a:2:2815:243-0:35:1998","a:2:8878:3180-0:35:1998","b:2:2300-0:35:1998","b:2:2303-0:35:1998","b:2:2610-0:35:1998","b:2:2616-0:35:1998","b:2:3450-0:35:1998","b:2:2606-0:35:1998","b:2:2621-0:35:1998","0:62","0:58"]}}},"0:217:1746":{"id":"0:217:1746","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:276:2072","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"io::Write","id":"1:3484:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}},"0:265-0:571:2090":{"id":"0:265-0:571:2090","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:2090","glob":false}}},"a:2:2872:3256-0:508:2632":{"id":"a:2:2872:3256-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8878:3180-0:210:255":{"id":"a:2:8878:3180-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2815:243-0:585:1967":{"id":"a:2:2815:243-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:361:2082":{"id":"0:361:2082","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[598,4],"end":[601,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2610-0:508:2632":{"id":"b:2:2610-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:63:712":{"id":"0:63:712","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[289,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:342:1984":{"id":"b:2:2616-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12746:35878":{"id":"2:12746:35878","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12747:35890"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44125:9612","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:32:1951":{"id":"b:2:2300-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8878:3180-0:599:1998":{"id":"a:2:8878:3180-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12742:34395":{"id":"2:12742:34395","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12741:34394"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:32:1951":{"id":"b:2:2606-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:81:2692":{"id":"0:81:2692","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1759","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:100:2704"],"is_stripped":true}}},"2:12751:34413":{"id":"2:12751:34413","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:584:712":{"id":"0:584:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2606-0:210:255":{"id":"b:2:2606-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:356:724":{"id":"0:356:724","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[569,4],"end":[575,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["format",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3077:137","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1947","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"resolved_path":{"name":"io::Result","id":"1:2946:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[279,0],"end":[286,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:605:60":{"id":"0:605:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[366,9],"end":[366,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12840:3040":{"id":"2:12840:3040","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:206:1950":{"id":"0:206:1950","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:712","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:207-0:142:1950","0:208-0:115:1952"],"is_stripped":true}}},"b:2:2621-0:169:2619":{"id":"b:2:2621-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:585:1967":{"id":"b:2:2610-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:402:2200":{"id":"0:402:2200","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[995,4],"end":[1002,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:169:2619":{"id":"a:2:8878:3180-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12830:38237":{"id":"2:12830:38237","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:342:1984":{"id":"0:342:1984","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[338,0],"end":[342,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:8879:3179-0:342:1984","a:2:2832:253-0:342:1984","a:2:2872:3256-0:342:1984","a:2:2815:243-0:342:1984","a:2:8878:3180-0:342:1984","b:2:2300-0:342:1984","b:2:2303-0:342:1984","b:2:2610-0:342:1984","b:2:2616-0:342:1984","b:2:3450-0:342:1984","b:2:2606-0:342:1984","b:2:2621-0:342:1984","0:433","0:387"]}}},"0:175:2631":{"id":"0:175:2631","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:2028":{"id":"0:351:2028","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[478,4],"end":[493,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["env",{"generic":"E"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332-0:262:1950":{"id":"0:332-0:262:1950","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[285,0],"end":[285,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::fmt::glob","name":"glob","id":"0:262:1950","glob":true}}},"0:92:1950":{"id":"0:92:1950","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:712","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:93-0:81:2692"],"is_stripped":true}}},"a:2:2832:253-0:35:1998":{"id":"a:2:2832:253-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2616-0:35:1998":{"id":"b:2:2616-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374:1970":{"id":"0:374:1970","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[750,4],"end":[753,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"resolved_path":{"name":"fmt::WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:513:2776":{"id":"0:513:2776","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:378:2158":{"id":"0:378:2158","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[804,4],"end":[807,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:528:2869":{"id":"0:528:2869","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:530:1746","0:531:1747","0:532:1748"]},"discriminant":null}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:452"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2606-0:585:1967":{"id":"b:2:2606-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12846:27474":{"id":"2:12846:27474","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4613:27474"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44168:9532","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501:712":{"id":"0:501:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:543:2136":{"id":"b:2:2300-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2606-0:571:2090":{"id":"b:2:2606-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2369:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12729:339":{"id":"2:12729:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12730:34372","`u8`":"1:12051:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:1950":{"id":"0:262:1950","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:264-0:210:255","0:265-0:571:2090","0:266-0:543:2136"],"is_stripped":true}}},"a:2:8878:3180-0:458:2769":{"id":"a:2:8878:3180-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:466:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:9851:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:9851:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:476:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8879:3179-0:342:1984":{"id":"a:2:8879:3179-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:364:2092":{"id":"0:364:2092","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[617,4],"end":[619,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12814:38233":{"id":"2:12814:38233","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:543:2136":{"id":"0:543:2136","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2737","0:546:2739","0:548:2673"],"impls":["a:2:8879:3179-0:543:2136","a:2:2832:253-0:543:2136","a:2:2872:3256-0:543:2136","a:2:2815:243-0:543:2136","a:2:8878:3180-0:543:2136","b:2:2300-0:543:2136","b:2:2303-0:543:2136","b:2:2610-0:543:2136","b:2:2616-0:543:2136","b:2:3450-0:543:2136","b:2:2606-0:543:2136","b:2:2621-0:543:2136","b:5:682-0:543:2136","0:555","0:561","0:236","0:558","0:550","0:552","0:556","0:553","0:562"]}}},"b:2:2300-0:342:1984":{"id":"b:2:2300-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:397:1949":{"id":"0:397:1949","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[970,4],"end":[977,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12798:38227":{"id":"2:12798:38227","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12415:7348","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::matches":"2:12795:2179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44073:9610","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:210:255":{"id":"b:2:2303-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12743:9478":{"id":"2:12743:9478","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43821:9471","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221:712":{"id":"0:221:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:543:2136":{"id":"a:2:8878:3180-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8878:3180-0:585:1967":{"id":"a:2:8878:3180-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12747:35890":{"id":"2:12747:35890","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12746:35878"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44134:9613","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12764:3652":{"id":"2:12764:3652","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:2646":{"id":"0:97:2646","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2704"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:712":{"id":"0:466:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:210:255":{"id":"b:2:2616-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2303-0:585:1967":{"id":"b:2:2303-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:3179-0:35:1998":{"id":"a:2:8879:3179-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2300-0:458:2769":{"id":"b:2:2300-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211:2725":{"id":"0:211:2725","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:360:2080":{"id":"0:360:2080","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[592,4],"end":[595,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12843:38239":{"id":"2:12843:38239","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4615:38239"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44150:9533","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:559:776":{"id":"0:559:776","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10060:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[121,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:40:1949","0:42:2179","0:43:2181"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:445:2027":{"id":"0:445:2027","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1221,0],"end":[1223,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:1029":{"id":"0:45:1029","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[172,4],"end":[178,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:3256-0:585:1967":{"id":"a:2:2872:3256-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2619:134":{"id":"2:2619:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:3450-0:269:140":{"id":"b:2:3450-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2815:243-0:100:2704":{"id":"a:2:2815:243-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3450-0:32:1951":{"id":"b:2:3450-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:192:712":{"id":"0:192:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:1949":{"id":"0:385:1949","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[882,4],"end":[884,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93-0:81:2692":{"id":"0:93-0:81:2692","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:81:2692","glob":true}}},"0:50:2114":{"id":"0:50:2114","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[210,4],"end":[212,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:3256-0:100:2704":{"id":"a:2:2872:3256-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:253-0:342:1984":{"id":"a:2:2832:253-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2364:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2302:1940":{"id":"2:2302:1940","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:51:1949":{"id":"0:51:1949","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[218,4],"end":[224,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2625:1612":{"id":"2:2625:1612","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:527:1746":{"id":"0:527:1746","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"b:5:682-0:508:2632":{"id":"b:5:682-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:2841","5:685:2209","5:686:3709"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2303-0:458:2769":{"id":"b:2:2303-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5530":{"id":"5:5530","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5531:38896","5:5532:2458","5:5535:38897","5:5538:38898","5:5546:38899","5:5547:38900","5:5548:3155","5:5549:32949","5:5550:32950"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2815:243-0:571:2090":{"id":"a:2:2815:243-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:517:2774":{"id":"0:517:2774","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2620:1614":{"id":"2:2620:1614","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:2206":{"id":"0:410:2206","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1034,4],"end":[1041,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:393:2191":{"id":"0:393:2191","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[960,4],"end":[960,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12722:38219":{"id":"2:12722:38219","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:2633":{"id":"0:509:2633","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:439:2215":{"id":"0:439:2215","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1175,0],"end":[1182,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Result","id":"2:42074:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1948","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:458:2769":{"id":"a:2:2815:243-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:515:2778":{"id":"0:515:2778","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2621-0:585:1967":{"id":"b:2:2621-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12804:38229":{"id":"2:12804:38229","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12415:7348","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::match_indices":"2:12801:38228"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44019:9609","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:1029":{"id":"0:396:1029","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[965,4],"end":[967,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12811:38231":{"id":"2:12811:38231","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12783:34407":{"id":"2:12783:34407","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348","str::rsplitn":"2:12786:34409"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43955:3091","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348:2025":{"id":"0:348:2025","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[433,4],"end":[440,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:599:1998":{"id":"b:2:2300-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:438:2158":{"id":"0:438:2158","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1143,0],"end":[1145,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12733:34369":{"id":"2:12733:34369","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41931:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10500:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:253-0:100:2704":{"id":"a:2:2832:253-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12815:38234":{"id":"2:12815:38234","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12440:16523","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:2772":{"id":"0:146:2772","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2769"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2405","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389:1943":{"id":"0:389:1943","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[897,4],"end":[958,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1947","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366:2098":{"id":"0:366:2098","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:342:1984":{"id":"b:2:2610-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:576:2099":{"id":"0:576:2099","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8879:3179-0:508:2632":{"id":"a:2:8879:3179-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:99:2648":{"id":"0:99:2648","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2704"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:571:2090":{"id":"a:2:8878:3180-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5547:38900":{"id":"5:5547:38900","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2072","`String`":"5:7529:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2072","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:100:2704":{"id":"b:2:2610-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:253-0:169:2619":{"id":"a:2:2832:253-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2610-0:169:2619":{"id":"b:2:2610-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:496:712":{"id":"0:496:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210:255":{"id":"0:210:255","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2725","0:213:2727","0:215:2729"],"impls":["a:2:8879:3179-0:210:255","a:2:2832:253-0:210:255","a:2:2872:3256-0:210:255","a:2:2815:243-0:210:255","a:2:8878:3180-0:210:255","b:2:2300-0:210:255","b:2:2303-0:210:255","b:2:2610-0:210:255","b:2:2616-0:210:255","b:2:3450-0:210:255","b:2:2606-0:210:255","b:2:2621-0:210:255","0:220","0:218"]}}},"b:2:2616-0:543:2136":{"id":"b:2:2616-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2630","0:146:2772","0:147:2642"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1086,0],"end":[1093,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12845:11172":{"id":"2:12845:11172","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4616:11172"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44159:9416","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:342:1984":{"id":"b:2:2303-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12745:2666":{"id":"2:12745:2666","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43837:3136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:563:656":{"id":"0:563:656","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:2179":{"id":"0:386:2179","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[887,4],"end":[889,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1947","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:578:2102":{"id":"0:578:2102","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2616-0:458:2769":{"id":"b:2:2616-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2606-0:100:2704":{"id":"b:2:2606-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:237:60":{"id":"0:237:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354:2051":{"id":"0:354:2051","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[513,4],"end":[515,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2181":{"id":"0:43:2181","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[162,4],"end":[167,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1946","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:210:255":{"id":"a:2:2815:243-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:372:2042":{"id":"0:372:2042","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[706,4],"end":[709,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208-0:115:1952":{"id":"0:208-0:115:1952","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:115:1952","glob":true}}},"0:368:2104":{"id":"0:368:2104","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[637,4],"end":[640,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["suffix",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12768:2464":{"id":"2:12768:2464","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12415:7348","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split_whitespace":"2:12746:35878","str::rsplit":"2:12774:34405"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43851:3090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:543:2136":{"id":"b:2:3450-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:542:656":{"id":"0:542:656","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:599:1998":{"id":"b:2:2621-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:371:1949":{"id":"0:371:1949","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[697,4],"end":[700,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10052:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2303-0:571:2090":{"id":"b:2:2303-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1077,0],"end":[1084,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::borrow::Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:739"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:359:2077":{"id":"0:359:2077","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[586,4],"end":[589,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12760:3691":{"id":"2:12760:3691","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41931:197","prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46:2025":{"id":"0:46:2025","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[181,4],"end":[189,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2815:243-0:169:2619":{"id":"a:2:2815:243-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2826:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12824:34414":{"id":"2:12824:34414","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:426:739":{"id":"0:426:739","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1081,4],"end":[1083,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["filter_env",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2727":{"id":"0:213:2727","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:169:2619":{"id":"0:169:2619","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8879:3179-0:169:2619","a:2:2832:253-0:169:2619","a:2:2872:3256-0:169:2619","a:2:2815:243-0:169:2619","a:2:8878:3180-0:169:2619","b:2:2300-0:169:2619","b:2:2303-0:169:2619","b:2:2610-0:169:2619","b:2:2616-0:169:2619","b:2:3450-0:169:2619","b:2:2606-0:169:2619","b:2:2621-0:169:2619","b:5:5804-0:169:2619","0:463","0:468","0:483","0:478","0:498","0:503","0:473","0:488","0:493"]}}},"0:370:2114":{"id":"0:370:2114","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[675,4],"end":[678,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:342:1984":{"id":"a:2:8878:3180-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","write_vectored","write_fmt","write_all","write_all_vectored","is_write_vectored"],"trait":{"name":"Write","id":"1:3484:2610","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:2078","0:279:2191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2606-0:599:1998":{"id":"b:2:2606-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1107,4],"end":[1118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5806:1589":{"id":"5:5806:1589","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2303-0:508:2632":{"id":"b:2:2303-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:685:2209":{"id":"5:685:2209","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:2647":{"id":"0:98:2647","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2704"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:2196":{"id":"0:399:2196","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[982,4],"end":[990,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:362:2085":{"id":"0:362:2085","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[605,4],"end":[608,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["indent",{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:712":{"id":"0:61:712","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[280,4],"end":[285,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:572:2093":{"id":"0:572:2093","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2606-0:508:2632":{"id":"b:2:2606-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:3179-0:210:255":{"id":"a:2:8879:3179-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2832:253-0:32:1951":{"id":"a:2:2832:253-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:511:2775":{"id":"0:511:2775","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:525:2868":{"id":"0:525:2868","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:527:1746"]},"discriminant":null}}},"a:2:2872:3256-0:269:140":{"id":"a:2:2872:3256-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12809:38230":{"id":"2:12809:38230","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2609:2040":{"id":"2:2609:2040","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2583:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:32:1951":{"id":"b:2:2621-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:176:2779":{"id":"0:176:2779","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:2078":{"id":"0:278:2078","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2946:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5532:2458":{"id":"5:5532:2458","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2872:3256-0:599:1998":{"id":"a:2:2872:3256-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:508:2632":{"id":"0:508:2632","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2633","0:511:2775","0:513:2776","0:515:2778","0:517:2774","0:519:2866","0:521:2777","0:523:2867","0:525:2868","0:528:2869"],"impls":["a:2:8879:3179-0:508:2632","a:2:2832:253-0:508:2632","a:2:2872:3256-0:508:2632","a:2:2815:243-0:508:2632","a:2:8878:3180-0:508:2632","b:2:2300-0:508:2632","b:2:2303-0:508:2632","b:2:2610-0:508:2632","b:2:2616-0:508:2632","b:2:3450-0:508:2632","b:2:2606-0:508:2632","b:2:2621-0:508:2632","b:5:682-0:508:2632","0:540","0:537","0:541","0:535","0:538","0:533"]}}},"b:5:5804-0:100:2704":{"id":"b:5:5804-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2303-0:35:1998":{"id":"b:2:2303-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:682-0:458:2769":{"id":"b:5:682-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2316:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:678:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:684:2841","5:685:2209","5:686:3709"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12728:38221":{"id":"2:12728:38221","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:207-0:142:1950":{"id":"0:207-0:142:1950","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1950","glob":true}}},"2:12730:34372":{"id":"2:12730:34372","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12051:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:543:2136":{"id":"b:2:2610-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":"default","docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:142:1950":{"id":"0:142:1950","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1952","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:143-0:123:2692"],"is_stripped":true}}},"b:2:2606-0:342:1984":{"id":"b:2:2606-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2303-0:599:1998":{"id":"b:2:2303-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:9849:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:9849:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:491:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:531:1747":{"id":"0:531:1747","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:379:2150":{"id":"0:379:2150","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[813,4],"end":[822,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:100:2704":{"id":"b:2:2616-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:269:140":{"id":"b:2:2610-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:100:2704":{"id":"0:100:2704","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8879:3179-0:100:2704","a:2:2832:253-0:100:2704","a:2:2872:3256-0:100:2704","a:2:2815:243-0:100:2704","a:2:8878:3180-0:100:2704","b:2:2300-0:100:2704","b:2:2303-0:100:2704","b:2:2610-0:100:2704","b:2:2616-0:100:2704","b:2:3450-0:100:2704","b:2:2606-0:100:2704","b:2:2621-0:100:2704","b:5:5804-0:100:2704","0:103","0:112"]}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[892,0],"end":[961,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:2181","0:389:1943","0:393:2191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:140":{"id":"0:269:140","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:8879:3179-0:269:140","a:2:2832:253-0:269:140","a:2:2872:3256-0:269:140","a:2:2815:243-0:269:140","a:2:8878:3180-0:269:140","b:2:2300-0:269:140","b:2:2303-0:269:140","b:2:2610-0:269:140","b:2:2616-0:269:140","b:2:3450-0:269:140","b:2:2606-0:269:140","b:2:2621-0:269:140","0:277","0:280"]}}},"b:2:2621-0:35:1998":{"id":"b:2:2621-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:42:2179":{"id":"0:42:2179","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[147,4],"end":[159,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1947","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:508:2632":{"id":"b:2:3450-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12777:38225":{"id":"2:12777:38225","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12415:7348","str::split":"2:12768:2464","prim@char":"1:12034:448","`DoubleEndedIterator`":"2:7785:127","str::rsplit_terminator":"2:12780:38226"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43901:9606","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12749:38224":{"id":"2:12749:38224","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44115:9611","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:9855:2849","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:9855:2849","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:501:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12744:9622":{"id":"2:12744:9622","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12034:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43827:9604","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530:1746":{"id":"0:530:1746","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"2:12838:32947":{"id":"2:12838:32947","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12839:35536":{"id":"2:12839:35536","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39878:35532","Self::is_ascii":"2:12838:32947"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39878:35532","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12740:38223":{"id":"2:12740:38223","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12040:1531","crate::ops::IndexMut":"2:3116:11204","str::slice_unchecked":"2:12739:38222"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:2841":{"id":"5:684:2841","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:143-0:123:2692":{"id":"0:143-0:123:2692","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:123:2692","glob":true}}},"b:2:2606-0:543:2136":{"id":"b:2:2606-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3450-0:169:2619":{"id":"b:2:3450-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:281:712":{"id":"0:281:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:32:1951":{"id":"a:2:8878:3180-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:686:3709":{"id":"5:686:3709","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:554:712":{"id":"0:554:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2305:2609":{"id":"2:2305:2609","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12720:2451":{"id":"2:12720:2451","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12727:30885":{"id":"2:12727:30885","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11970:2665"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:3179-0:599:1998":{"id":"a:2:8879:3179-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2616-0:571:2090":{"id":"b:2:2616-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:253-0:585:1967":{"id":"a:2:2832:253-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12786:34409":{"id":"2:12786:34409","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12034:448","str::splitn":"2:12783:34407","self::pattern":"2:12415:7348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43973:9464","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:2692":{"id":"0:123:2692","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2253","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:458:2769","0:169:2619","0:508:2632"],"is_stripped":true}}},"2:12841:32951":{"id":"2:12841:32951","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:100:2704":{"id":"a:2:8878:3180-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:574:2096":{"id":"0:574:2096","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:95:2089":{"id":"0:95:2089","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12795:2179":{"id":"2:12795:2179","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12415:7348","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::rmatches":"2:12798:38227"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44055:3086","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:100:2704":{"id":"b:2:2300-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257-0:92:1950":{"id":"0:257-0:92:1950","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::humantime::glob","name":"glob","id":"0:92:1950","glob":true}}},"a:2:2872:3256-0:571:2090":{"id":"a:2:2872:3256-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:458:2769":{"id":"0:458:2769","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:8879:3179-0:458:2769","a:2:2832:253-0:458:2769","a:2:2872:3256-0:458:2769","a:2:2815:243-0:458:2769","a:2:8878:3180-0:458:2769","b:2:2300-0:458:2769","b:2:2303-0:458:2769","b:2:2610-0:458:2769","b:2:2616-0:458:2769","b:2:3450-0:458:2769","b:2:2606-0:458:2769","b:2:2621-0:458:2769","b:5:682-0:458:2769","0:461","0:191"]}}},"b:2:3450-0:599:1998":{"id":"b:2:3450-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2303-0:543:2136":{"id":"b:2:2303-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180:2637":{"id":"0:180:2637","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355:2057":{"id":"0:355:2057","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[539,4],"end":[541,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:571:2090":{"id":"b:2:2300-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8879:3179-0:458:2769":{"id":"a:2:8879:3179-0:458:2769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12821:31266":{"id":"2:12821:31266","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:2025":{"id":"0:381:2025","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[852,4],"end":[857,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:712":{"id":"0:536:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12754:2484":{"id":"2:12754:2484","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2606-0:35:1998":{"id":"b:2:2606-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2609:2040"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2815:243-0:32:1951":{"id":"a:2:2815:243-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2825:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:446:2025":{"id":"0:446:2025","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1232,0],"end":[1237,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12807:2473":{"id":"2:12807:2473","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5804-0:169:2619":{"id":"b:5:5804-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5802:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5806:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9841:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:471:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8878:3180-0:508:2632":{"id":"a:2:8878:3180-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2616-0:599:1998":{"id":"b:2:2616-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2872:3256-0:169:2619":{"id":"a:2:2872:3256-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2303-0:100:2704":{"id":"b:2:2303-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2297:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2305:2609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:486:712":{"id":"0:486:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:9847:2848","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:9847:2848","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:496:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:264-0:210:255":{"id":"0:264-0:210:255","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::Target","name":"Target","id":"0:210:255","glob":false}}},"0:32:1951":{"id":"0:32:1951","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[81,0],"end":[84,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:39","a:2:8879:3179-0:32:1951","a:2:2832:253-0:32:1951","a:2:2872:3256-0:32:1951","a:2:2815:243-0:32:1951","a:2:8878:3180-0:32:1951","b:2:2300-0:32:1951","b:2:2303-0:32:1951","b:2:2610-0:32:1951","b:2:2616-0:32:1951","b:2:3450-0:32:1951","b:2:2606-0:32:1951","b:2:2621-0:32:1951","0:60"]}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[374,0],"end":[823,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:1029","0:348:2025","0:351:2028","0:354:2051","0:355:2057","0:356:724","0:358:2075","0:359:2077","0:360:2080","0:361:2082","0:362:2085","0:363:2088","0:364:2092","0:365:2095","0:366:2098","0:367:2101","0:368:2104","0:369:2109","0:370:2114","0:371:1949","0:372:2042","0:373:1556","0:374:1970","0:375:2044","0:376:2141","0:377:2148","0:378:2158","0:379:2150"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:436:712":{"id":"0:436:712","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1108,8],"end":[1117,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1099,4],"end":[1105,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:544:2737":{"id":"0:544:2737","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2815:243-0:342:1984":{"id":"a:2:2815:243-0:342:1984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:347:1029":{"id":"0:347:1029","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[401,4],"end":[403,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5549:32949":{"id":"5:5549:32949","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12841:32951"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:2204":{"id":"0:407:2204","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1021,4],"end":[1029,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:687:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2729":{"id":"0:215:2729","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:217:1746"]},"discriminant":null}}},"a:2:2832:253-0:571:2090":{"id":"a:2:2832:253-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:253-0:543:2136":{"id":"a:2:2832:253-0:543:2136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[288,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:179:2834":{"id":"0:179:2834","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2616-0:508:2632":{"id":"b:2:2616-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2586:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2619:134","2:2620:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:582:452":{"id":"0:582:452","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:269:140":{"id":"a:2:8878:3180-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2621-0:100:2704":{"id":"b:2:2621-0:100:2704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258-0:206:1950":{"id":"0:258-0:206:1950","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::writer::glob","name":"glob","id":"0:206:1950","glob":true}}},"0:177:2634":{"id":"0:177:2634","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12721:38218":{"id":"2:12721:38218","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12718":{"id":"2:12718","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12719:867","2:12720:2451","2:12721:38218","2:12722:38219","2:12724:38220","2:12727:30885","2:12728:38221","2:12729:339","2:12730:34372","2:12731:2201","2:12733:34369","2:12735:34370","2:12737:34371","2:12739:38222","2:12740:38223","2:12741:34394","2:12742:34395","2:12743:9478","2:12744:9622","2:12745:2666","2:12746:35878","2:12747:35890","2:12748:3999","2:12749:38224","2:12750:36191","2:12751:34413","2:12754:2484","2:12757:34004","2:12760:3691","2:12764:3652","2:12768:2464","2:12771:34403","2:12774:34405","2:12777:38225","2:12780:38226","2:12783:34407","2:12786:34409","2:12789:34411","2:12792:34412","2:12795:2179","2:12798:38227","2:12801:38228","2:12804:38229","2:12807:2473","2:12809:38230","2:12811:38231","2:12813:38232","2:12814:38233","2:12815:38234","2:12818:38235","2:12821:31266","2:12824:34414","2:12827:38236","2:12830:38237","2:12833:38238","2:12836:2123","2:12838:32947","2:12839:35536","2:12840:3040","2:12841:32951","2:12842:32952","2:12843:38239","2:12845:11172","2:12846:27474"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113:712":{"id":"0:113:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:269:140":{"id":"b:2:2621-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9836:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:60":{"id":"0:59:60","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[274,4],"end":[276,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2827:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2300-0:585:1967":{"id":"b:2:2300-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3450-0:585:1967":{"id":"b:2:3450-0:585:1967","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12748:3999":{"id":"2:12748:3999","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44105:3133","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[273,0],"end":[277,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2657:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12771:34403":{"id":"2:12771:34403","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12231:9459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:3179-0:169:2619":{"id":"a:2:8879:3179-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:340:1956":{"id":"0:340:1956","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[292,0],"end":[292,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[963,0],"end":[1046,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Env","id":"0:585:1967","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:1029","0:397:1949","0:399:2196","0:402:2200","0:405:1970","0:407:2204","0:410:2206"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:53:2123":{"id":"0:53:2123","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[231,4],"end":[240,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:2044":{"id":"0:375:2044","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[759,4],"end":[762,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:9843:2845","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:9843:2845","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:481:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12750:36191":{"id":"2:12750:36191","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44143:9477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5548:3155":{"id":"5:5548:3155","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3450-0:571:2090":{"id":"b:2:3450-0:571:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3448:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3452:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5538:38898":{"id":"5:5538:38898","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:551:452":{"id":"0:551:452","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WriteStyle","id":"0:543:2136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:32:1951":{"id":"b:2:2610-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2583:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:739"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279:2191":{"id":"0:279:2191","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2946:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12792:34412":{"id":"2:12792:34412","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12818:38235":{"id":"2:12818:38235","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12833:38238":{"id":"2:12833:38238","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:448","self::pattern":"2:12415:7348"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8878:3180-0:35:1998":{"id":"a:2:8878:3180-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8878:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:363:2088":{"id":"0:363:2088","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[611,4],"end":[614,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["timestamp",{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"fmt::TimestampPrecision","id":"0:571:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:60":{"id":"0:429:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1087,4],"end":[1092,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2621-0:508:2632":{"id":"b:2:2621-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2580:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2590:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:134","2:2625:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2815:243-0:269:140":{"id":"a:2:2815:243-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2815:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:481:712":{"id":"0:481:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8879:3179-0:32:1951":{"id":"a:2:8879:3179-0:32:1951","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8879:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1951","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:253-0:599:1998":{"id":"a:2:2832:253-0:599:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:253-0:508:2632":{"id":"a:2:2832:253-0:508:2632","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2832:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12813:38232":{"id":"2:12813:38232","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12739:38222":{"id":"2:12739:38222","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12040:1531","str::slice_mut_unchecked":"2:12740:38223","crate::ops::Index":"2:3112:11203"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12789:34411":{"id":"2:12789:34411","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41929:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:1949":{"id":"0:40:1949","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[138,4],"end":[144,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:712":{"id":"0:70:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:571:2090","0:269:140","0:257-0:92:1950","0:258-0:206:1950"],"is_stripped":false}}},"0:365:2095":{"id":"0:365:2095","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[622,4],"end":[624,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3452:1627":{"id":"2:3452:1627","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39691:9523","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:2777":{"id":"0:521:2777","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:471:712":{"id":"0:471:712","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9811:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9792:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2300-0:169:2619":{"id":"b:2:2300-0:169:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2822:3255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2294:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2302:1940"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2872:3256-0:35:1998":{"id":"a:2:2872:3256-0:35:1998","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2872:3256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:1998","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:373:1556":{"id":"0:373:1556","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[729,4],"end":[732,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["target",{"resolved_path":{"name":"fmt::Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:599:1998":{"id":"0:599:1998","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[367,0],"end":[372,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::{LevelFilter, error, info};\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:8879:3179-0:599:1998","a:2:2832:253-0:599:1998","a:2:2872:3256-0:599:1998","a:2:2815:243-0:599:1998","a:2:8878:3180-0:599:1998","b:2:2300-0:599:1998","b:2:2303-0:599:1998","b:2:2610-0:599:1998","b:2:2616-0:599:1998","b:2:3450-0:599:1998","b:2:2606-0:599:1998","b:2:2621-0:599:1998","0:435","0:604"]}}},"2:12724:38220":{"id":"2:12724:38220","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12722:38219"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12774:34405":{"id":"2:12774:34405","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12415:7348","`DoubleEndedIterator`":"2:7785:127","prim@char":"1:12034:448","str::split":"2:12768:2464"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43869:9462","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12420:7277","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12435:16524","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:22:726":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:2201:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:42481:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"31:7148:6283":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"29:9246:6942":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:39608:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:14523:8574":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"21:2455:5393":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"21:1167:7384":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"2:43186:3993":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"31:5282:5779":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"22:1683:7346":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"2:2899:8933":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"11:2423:3656":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:13898:8396":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"33:311:2760":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"2:31167:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:39691:9523":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"18:590:4873":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:14043:8430":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:6479:5427":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:7041:8915":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:10647:7814":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:5111:10602":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:42559:3225":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"22:1147:4913":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"22:1281:7278":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"2:4070:9418":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:1913:18346":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"31:7076:28664":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"0:442:2230":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"1:3932:11261":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:4989:10591":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"23:665:149":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"22:1630:7283":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"17:11474:7687":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"23:624:4884":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:14479:8567":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:4755:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:3049:22531":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:6513:8828":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"29:5117:6782":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"20:2524:3082":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"6:6764:6336":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:48066:9745":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:9165:3545":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"10:0:2875":{"crate_id":10,"path":["adler"],"kind":"module"},"2:46055:9655":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"29:8924:7242":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:5417:9790":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"22:1304:7316":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"6:4922:6924":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:7692:5591":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"18:491:7588":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:41746:7352":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:14325:8524":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:14402:8546":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:6646:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:23228:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"22:1333:7318":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"20:2047:4838":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"1:12045:688":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:533:3529":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:8167:9081":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"11:1887:3656":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:7362:3656":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:4682:16576":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"20:1671:39226":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"2:22653:36160":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:13817:8373":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"31:7338:6338":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"16:7128:9903":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:8867:3656":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:44570:10763":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:21370:11379":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:12038:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"22:1060:27488":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"20:2519:2567":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"5:3338:5441":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:9791:39208":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:13072:8151":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:10127:7758":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:9049:30723":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:7622:7246":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:4516:6743":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:43202:3992":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:10279:7773":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:4947:10561":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:1651:3755":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"11:2498:22454":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:9243:7593":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"31:6998:28663":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"31:5049:5722":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"17:14077:8443":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:5648:8701":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:6944:39194":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:8282:10771":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:7894:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:1450:3656":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"20:2599:3087":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"29:4605:6655":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:10697:3090":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"22:1651:7339":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"17:9004:23459":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:8205:23402":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:7284:3310":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:2663:3146":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"31:5990:28653":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"31:5765:5921":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"1:11621:9809":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:9847:2848":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:12420:7277":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:23042:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:13203:8177":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"11:364:5403":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"21:2173:5389":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"17:12155:7975":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"22:1413:4931":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"17:9052:23437":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:8563:9888":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:1650:6612":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"11:2548:10548":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:8992:30780":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:7651:9017":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:43837:3136":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"5:3682:5410":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:4394:3015":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:9845:2846":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:1570:6559":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"24:241:3049":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"16:6226:8794":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:4557:8675":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:11112:7877":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"11:1917:7471":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"11:1160:9188":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"11:2536:5394":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:3150:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:42074:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:6813:11373":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:1734:6640":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:42206:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:10946:9246":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:43746:9596":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:44602:5238":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:8195:9083":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:6017:23391":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:6542:3234":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:10228:7770":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:13547:8300":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"33:13:2762":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"6:4939:1092":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:1903:11214":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"20:1693:39224":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"21:1309:7421":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"29:4979:6751":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"21:2593:39934":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"0:14:1949":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"11:687:4037":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:11199:2694":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:2872:3256":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:12971:8137":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:10648:4036":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"28:56:27499":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"30:5209:6497":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"0:35:1998":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"22:1568:39971":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"17:13452:8217":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"11:1903:7469":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:2832:8632":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"29:6911:6121":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:1490:9189":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:2953:16643":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:30605:3759":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"23:798:4860":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:44777:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:1481:2406":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:13555:8303":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:8138:3157":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:7365:10494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:13086:8153":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:44574:10764":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"31:7167:10474":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"6:5955:7014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:11640:7619":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:7006:8911":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:5104:6978":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"24:219:1944":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"16:4835:8683":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"20:1814:4823":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"16:5661:8706":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:11539:9777":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:42362:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:3445:3122":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:22244:11467":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:7534:8651":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:21827:11246":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"17:11390:7911":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:5085:6964":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"28:189:5388":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"2:9306:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"31:7204:6291":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"17:13967:8412":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"11:844:11191":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:4556:6761":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:482:5484":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:860:3656":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:7333:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:11762:7938":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:9608:7724":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"30:3845:22417":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"6:533:6510":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:9565:7723":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:2150:23517":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:7311:38072":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:48160:4950":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"31:6325:6112":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"22:1437:7281":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"29:5763:6913":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"28:19:3213":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"23:769:4884":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"31:4733:5623":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"17:11508:23462":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:11227:7892":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"11:430:39184":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:3813:5441":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:1610:723":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"1:7581:5498":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:5053:9788":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:2936:8938":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:21197:37158":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"20:2012:4822":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"22:1368:39969":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"5:6998:5453":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:7866:9819":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"21:2115:7388":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"31:5851:5941":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"23:777:7267":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:6428:3230":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:4745:6845":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:12712:8082":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:12044:7962":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"31:5642:5875":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"17:14356:8532":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:3220:7469":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"29:5914:6949":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:4449:3017":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"31:5946:5973":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"21:1974:7486":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"31:5825:5932":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"2:43869:9462":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:7544:9012":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"29:2113:6355":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:1718:6639":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:7907:9821":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:21226:37171":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"29:5903:6943":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"31:6640:6175":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"2:4404:3016":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:4870:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:5989:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:9913:7738":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"20:2476:3086":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"17:9575:39206":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:14283:8511":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"31:4949:5689":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"31:5560:5847":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"17:12124:7973":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"11:1923:7349":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:12057:1691":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:11273:7895":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:21429:11378":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:1644:629":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"20:1422:5418":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"18:624:39214":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:12646:8072":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:46156:9659":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"31:6677:6180":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"2:30797:36171":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"16:2359:8612":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:1591:6572":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:40322:9529":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:42323:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"21:1442:27454":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"6:5969:7015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"31:5521:28652":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"33:221:3251":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"29:8377:7215":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"31:5860:10416":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"5:207:5409":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"29:486:6499":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"21:2404:4845":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"2:44159:9416":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"31:5729:5912":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"29:4581:6646":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:23321:9511":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:11846:7945":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:8191:3134":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"26:157:3203":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"17:11317:7901":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:41830:36170":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"21:2614:27485":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"6:4628:6800":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:5612:8642":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:4943:848":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:43755:9597":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:6868:7192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"21:254:39944":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"2:32405:3016":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"16:6415:8823":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:46484:9675":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:4364:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:8843:9892":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:6196:9799":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:11172:33502":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:14146:8459":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"30:3670:40427":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"5:7529:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:5117:10605":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"31:6717:10451":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"5:5387:16512":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:7902:4826":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"29:5394:6352":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"33:62:3243":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"1:8974:9896":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"29:2027:6612":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:10930:7863":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"29:8163:7149":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:6450:2589":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"6:1682:6630":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"5:1522:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"29:8402:7224":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"15:288:22483":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:7341:9281":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"22:1023:7291":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"20:2466:7585":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"29:658:5845":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"6:7388:7242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:10686:7821":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"29:4846:6730":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:43827:9604":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:1703:6141":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"20:2119:3094":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"2:42949:36715":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:44578:10765":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:1820:3728":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:9208:7592":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"30:3872:40420":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"2:10060:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:31195:3611":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:11063:7873":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:9532:39207":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:4584:6777":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"23:81:27414":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:7522:3005":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:6456:8826":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:40336:9530":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:11138:7879":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:7669:3535":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"29:8890:10494":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:6059:7070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"31:5551:5845":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"1:8214:3090":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"22:1521:4940":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"2:3692:3656":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:557:3531":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"21:1376:5395":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"2:21442:7281":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:47958:9743":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:21857:9486":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:7023:5456":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4488:6732":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:3315:8661":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:9311:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:4473:6726":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"5:2178:10029":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"20:2062:7579":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"20:1991:4829":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"2:40346:9531":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:13245:8181":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:105:313":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"22:1247:4984":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"29:480:16974":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"6:654:5878":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"20:1582:7567":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"2:3049:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:4406:3112":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:6468:3238":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:4949:8687":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"31:7356:6343":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"31:176:5575":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"2:2869:3617":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:5921:6348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"31:4615:10336":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"16:6879:8893":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:43673:9591":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11491:7918":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:2911:8937":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"30:3086:6367":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"23:546:4867":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:4385:9781":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"29:6847:7002":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:1680:5410":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:8134:9077":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"23:872:7276":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:4082:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:12099:7970":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"30:4178:6454":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"16:2933:22529":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:1967:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:45907:9649":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:9811:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"21:1518:27450":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"6:555:6132":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:646:11174":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:13827:8374":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8979:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:8248:37453":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:6346:11469":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"21:2048:140":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"2:32391:8980":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"28:42:27501":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"16:5121:8692":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:9110:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"21:2240:27467":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"2:44055:3086":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"30:2838:6358":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"29:6721:5949":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:10341:7778":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:3201:3151":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:12033:1025":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:923:9176":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:10298:5472":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:4233:9779":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:13091:9484":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"12:0:2877":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:2722:8627":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"20:1965:4970":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"28:182:27513":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"16:8181:8657":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:42520:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"29:6763:5948":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"20:2351:3096":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"1:12041:1617":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"30:2853:6363":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"2:2974:16645":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:2355:11233":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"20:1661:4781":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"1:9469:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:44436:9627":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"31:4813:5652":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"1:8331:6303":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:10988:9892":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:62:16974":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"5:2231:38052":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:44001:9608":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:10166:23490":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:42014:3310":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:5502:9792":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"31:4519:5580":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"2:22289:11246":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"31:4621:10339":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"2:2880:3621":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"20:2572:3081":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"6:6071:7077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:2364:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:11125:7878":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:7862:9034":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:582:7603":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"28:67:27494":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"2:21158:3611":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:42167:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:9824:23470":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:40473:9538":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:1019:5410":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"29:7002:7016":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:644:4884":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"31:5002:10358":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"24:326:3051":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"31:6542:28659":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"2:2580:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"29:4788:6714":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"31:5964:5988":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"6:4878:6910":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:10955:9792":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"23:816:7273":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"7:0:1681":{"crate_id":7,"path":["unwind"],"kind":"module"},"26:181:2704":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"17:10198:7766":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:40627:9546":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"29:5412:6845":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:641:9766":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4824:6882":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:724:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:2968:38216":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"20:1906:4958":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"5:4361:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:46554:9678":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:3287:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:7541:9932":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:3734:9775":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"29:1822:6542":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:2927:16638":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"29:539:5874":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"1:9481:5501":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"6:6927:7224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"29:745:6518":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"31:5712:5902":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"2:11940:16713":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:3272:16649":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:45861:9647":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"20:2174:3085":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"20:1914:4965":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"1:5827:3237":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"31:5983:10424":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"2:22698:10759":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:4523:6746":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:5433:9791":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:46138:9658":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:3512:3126":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"15:0:2879":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:3241:2725":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"22:1668:7344":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"11:883:9182":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:8552:9887":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:1822:3729":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"31:5029:5713":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"1:7896:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:11983:9935":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"5:2469:10619":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:47022:9702":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"22:1611:7331":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"2:2537:11246":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"31:5263:6865":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"17:10215:7769":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:10576:7806":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:10323:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:10500:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"31:4988:5703":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"2:9851:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:3282:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"29:7476:7119":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"30:3293:6369":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"6:4461:6717":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:7932:3147":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:13488:8248":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:687:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:12429:4862":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:3764:8664":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"31:4966:5695":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"20:2609:4969":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"30:4667:40423":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"6:5009:5901":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:39466:16509":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"29:5725:6910":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:11174:23582":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"29:7246:7095":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:5748:3226":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:3461:8662":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"21:2665:7536":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"22:1406:7277":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"2:23197:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:2427:1942":{"crate_id":1,"path":["std","io"],"kind":"module"},"18:531:4881":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:6913:7215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"22:1013:7288":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"20:2197:2567":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"17:14127:8454":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:6600:23394":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:7054:8917":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"20:1380:7479":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"1:1744:653":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:44253:9615":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:527:6507":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"29:5321:6832":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"31:7227:6297":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"30:479:10181":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"11:800:5427":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:1539:3656":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:10469:7796":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:40779:9554":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:41989:4036":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:2884:3001":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"28:137:27508":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"2:2987:16648":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"31:6743:10470":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"29:9297:7250":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"29:556:5898":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"1:9100:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:4921:8686":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:9986:7748":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:43919:9607":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:48200:9750":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:42440:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:4808:6874":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:40400:9535":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"31:5814:5928":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"5:7445:3536":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:5830:8720":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:9493:37450":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"33:409:3253":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"6:6222:7118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:4800:5486":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"22:1080:2589":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"16:2406:8614":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"18:80:27414":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:8147:3159":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:4742:11276":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:5956:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:22615:9495":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:10140:23489":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"16:3888:8667":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:13011:8141":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:10340:33067":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:5130:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:10789:23558":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:40720:9552":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:4705:11289":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"29:9234:6940":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:14379:8545":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"30:4359:6460":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"2:45953:9651":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:42702:2847":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:10931:3091":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:2827:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:44646:3195":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:5974:7016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:952:9182":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:596:6528":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"20:1561:4917":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"29:5706:6906":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:536:8592":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:1055:9183":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:2428:8615":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"29:2151:6639":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"29:7993:7137":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"18:481:4867":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:30621:3099":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:22202:36200":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:1041:8923":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"11:774:9174":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"29:8295:7192":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:30633:36159":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:8072:9071":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:4455:6714":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:10293:7725":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"21:1296:7353":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"31:4822:10351":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"21:1208:3148":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"17:10739:7827":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"33:74:3244":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"29:4905:6740":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:40617:9545":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4860:6902":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:13724:8356":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:0:528":{"crate_id":2,"path":["core"],"kind":"module"},"29:5572:6876":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"30:466:27540":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"6:4449:6713":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:40698:9430":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"29:5015:6758":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:588:11171":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:9853:2850":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:7702:7250":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:483:6504":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:8233:9867":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:43654:9588":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:22418:9487":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:7645:6942":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:13974:8413":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"14:40:7955":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:40279:9416":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"31:5781:10407":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"17:11075:7874":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:7690:3534":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:10215:5468":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:8210:16628":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"22:1094:7303":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"21:1389:5396":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"31:5079:5739":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"6:4480:6730":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:21832:11381":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:2970:16644":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:12438:8040":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"20:1231:7545":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"5:6008:16948":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"22:1677:7345":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"6:588:6523":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"21:1850:27445":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"5:785:5413":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:10078:3722":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:46116:9657":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:6658:5912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"30:0:3210":{"crate_id":30,"path":["rustix"],"kind":"module"},"17:12374:8014":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"30:4846:40422":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"2:3080:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:3968:11262":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:47210:9706":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"29:5225:6815":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:12699:8080":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:8896:23455":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:2369:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:22580:9493":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:6721:23395":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:44019:9609":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:4571:11307":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:11357:9806":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:46175:9660":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:8454:4917":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"31:6452:6149":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"17:14014:8422":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"22:1271:1998":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"16:2907:8635":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:2709:9292":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"22:1449:4934":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"17:1184:7606":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:2583:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:40381:16582":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"21:2078:7497":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"22:1637:7336":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"17:14101:8448":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:10963:7865":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"24:290:3050":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"2:46037:9654":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"11:2304:8923":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:43955:3091":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:8239:8980":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:940:9179":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"31:5009:10362":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:5384:23388":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"31:7174:28665":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"2:12120:9472":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:10534:3151":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:10085:7754":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:11372:9808":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:5963:8735":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"22:1157:4914":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"16:7736:9020":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:4738:6352":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"11:0:2876":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:6666:6323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"21:1416:27446":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"1:9148:3190":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"21:1588:7458":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"11:102:10751":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"18:609:7261":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"31:6202:28657":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"2:41167:9443":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:5403:7711":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:9868:7735":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"22:1042:39968":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"29:6936:7003":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"31:5913:5949":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"28:0:3209":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"16:5634:8697":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:2875:3619":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:13668:8345":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"11:2443:5427":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:12008:7960":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:44134:9613":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:6332:8636":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:13275:7899":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:4578:6774":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"28:127:27506":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"16:8154:9078":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"11:856:9179":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:6263:7130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"23:761:4884":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"15:327:10001":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"29:5993:10484":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"31:6138:6026":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"29:8070:7143":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:6268:39199":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:42066:3181":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"29:4564:5901":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"31:4628:10340":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"16:2788:8630":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"0:341:1959":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"16:2670:8625":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:1146:38085":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:3576:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:6425:8824":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:3441:7617":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"24:151:1945":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"31:5739:5917":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"31:5104:28650":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"1:894:5427":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"28:142:27509":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"17:8826:23453":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:11952:7957":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:11532:16520":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:11099:7876":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:22632:36185":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:12497:8052":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:6691:5590":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:13039:37324":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:12466:8046":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:0:2880":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:6318:8814":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:43211:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:2623:3137":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:2284:22502":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:4823:11275":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"31:6749:28660":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"29:9176:7244":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:46015:9653":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:2877:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:6079:7082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:6279:8812":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:43594:9586":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:40687:9551":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"31:7318:6337":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"21:1335:27441":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"2:22204:16655":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:14461:8561":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:11478:9775":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:9763:39201":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:10475:5502":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"29:5875:6933":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:6599:3656":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"22:1457:4779":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"22:1560:4951":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"1:4052:11270":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:48226:9752":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:9276:3728":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"11:328:10755":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"20:1922:39271":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"21:1467:27455":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"2:43765:9598":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:11382:7909":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:8281:9090":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:10157:9907":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:4955:10566":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"20:2437:3096":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"6:6943:7231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:6700:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:7844:9816":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:11236:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"17:2209:7614":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"21:1504:7442":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"2:2316:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:13260:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"30:3932:6450":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"1:10804:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:9897:23472":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"29:5668:6899":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"26:134:134":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"20:1518:4977":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"2:40457:36165":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:1558:6551":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:4375:6663":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:2837:3023":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:2210:3121":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:46786:9683":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"29:5194:6800":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:21421:11246":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:8829:9891":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:40294:9526":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"11:2383:4036":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:7474:9001":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:6898:5496":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:5627:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"20:1398:4958":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"29:8896:5902":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:40306:36176":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"30:4023:6451":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"31:5872:10419":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:9853:23471":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"30:3571:40426":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"20:1861:39222":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"2:40374:9533":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:8766:23451":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"11:123:4853":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"11:1051:9184":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"22:985:7267":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"13:226:10004":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:9129:2694":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:44231:16536":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"30:2624:6360":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"31:4575:5596":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"2:3116:11204":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"22:1195:134":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"31:4713:5613":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"2:11491:9468":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:7262:3187":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:7360:39197":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:14435:8552":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"23:883:27425":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:2919:3192":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:43795:9600":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"29:728:5877":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"2:40655:9547":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:5383:6411":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:5828:9425":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:10281:5471":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"29:764:6523":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"9:237:4917":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"20:1528:4984":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"16:4585:8676":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:11160:9891":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"31:7097:6274":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"2:44143:9477":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"31:7214:6532":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"21:2367:7358":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"17:13114:8159":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:4210:3029":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:13907:8397":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13686:8349":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:9138:7590":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:10266:7772":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"31:5666:5878":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"29:5955:6964":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:11282:7896":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:12375:3054":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:40739:9433":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"20:1574:7518":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"11:2124:8923":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"21:1766:5391":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"28:132:27507":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"23:741:39214":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:7710:16629":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"21:1671:27442":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"2:13017:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:5982:8742":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:256:7596":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"20:2444:3097":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"6:542:6138":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"30:4706:40417":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"21:1156:27464":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"29:8420:7227":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"31:5618:5872":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"17:10371:7780":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"22:1378:7267":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"2:44479:9481":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:41700:9451":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:5435:8695":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"15:306:22484":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:40550:3161":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"31:5070:5733":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"33:89:3248":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"17:10548:7804":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:11743:7935":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:44150:9533":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:44268:9620":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:4843:417":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"5:825:5416":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"21:1905:7481":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"2:9843:2845":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"29:573:5881":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"31:4742:5625":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"2:42688:2845":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"29:4770:6713":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"30:4685:40428":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"17:11202:7883":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"29:4627:6663":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:21214:37161":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:10740:9915":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"21:2200:3148":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:23104:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:23073:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:7651:10614":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"30:549:27542":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"6:4789:6868":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"20:713:4788":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"1:2913:4564":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"20:1405:39225":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"16:6929:8897":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:2297:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"29:5800:6921":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:10535:7803":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:6100:7094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"22:1342:39970":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"2:21180:37163":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:12048:791":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"29:7302:7101":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44446:9631":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:40769:9435":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:13189:8174":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:11359:23584":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:47708:9740":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"16:6753:8875":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"31:6081:28655":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"5:7370:3656":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:3982:11263":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:4207:3112":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"31:5835:5935":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"17:14157:8460":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:12791:8092":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"11:2326:9183":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:12440:16523":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"29:1693:5687":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:3986:3112":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:3062:3026":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"31:6421:6141":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"17:10113:7756":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:46086:9656":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:11992:7959":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:43973:9464":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:9793:2610":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"22:1137:4912":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"29:5611:6885":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:43663:9590":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:14270:8505":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:10604:7808":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"5:2251:10030":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:12831:8096":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6545:8837":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:1576:6560":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:4764:6856":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"22:998:7285":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"17:13711:8351":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"31:6054:28654":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"18:755:7276":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4830:6885":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:10727:7826":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:22731:11259":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:13759:8360":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"20:307:7539":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"31:6497:28658":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"2:9638:3100":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:4549:6758":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:1961:4776":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"11:1007:8923":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:5928:6121":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:40919:9437":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:9391:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:11053:5506":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"29:5938:6956":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"21:1932:5389":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"21:2423:5394":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"6:4401:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:26168:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:781:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:35:4774":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:7782:9022":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:6243:8800":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"29:7042:7028":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:1749:16665":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:40426:9536":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:11720:23464":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:7621:23399":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:3493:33505":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:4177:3112":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"11:710:9172":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"20:2169:3093":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"2:2825:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"29:2074:6629":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"29:6961:7014":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:13793:8371":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"20:1468:7556":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"17:12226:7989":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:12415:7348":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:4613:8677":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"29:5136:6787":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:7613:9016":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"20:1512:4958":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"11:2352:9184":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:14111:8451":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:44767:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"20:1545:232":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"29:5783:6919":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"30:5305:6498":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"11:1883:4036":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"11:2369:9194":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"11:2554:39176":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:5867:6985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"29:5594:6882":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:2203:9774":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"30:3192:6368":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"5:5872:5427":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"11:1025:9183":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:1639:6604":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:2206:4000":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"22:1536:4942":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"30:4867:6490":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"1:12054:1635":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"20:2255:3092":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"1:12000:4958":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:12044:686":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:2149:9267":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"20:1833:4807":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"2:41929:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"23:788:7271":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"0:572:2093":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"1:1910:699":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"24:155:3041":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"2:25:653":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:4:1105":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:434:7601":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"29:6783:6985":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:47566:9739":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"20:2238:3082":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"6:6159:7114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"29:4945:6746":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"29:604:6507":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:10095:3990":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:4351:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10457:7792":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:43645:9587":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:5802:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:44566:10762":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:44105:3133":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:12034:448":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:6718:6303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:10495:7799":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:5885:6998":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"21:1830:27444":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"17:12173:7976":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:6741:7143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:39427:4040":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"29:7143:7070":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:8879:3179":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:5146:10481":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"31:6669:6179":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"6:4724:6844":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:11688:23463":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"13:110:39185":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"29:5945:6959":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"29:5171:6791":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"30:4809:40431":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"2:21195:37170":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:8115:9074":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:1407:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:11711:7899":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:4058:9417":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:14537:8577":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:39542:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:40393:9534":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"31:6343:6121":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"31:6711:10449":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"31:7106:6276":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"9:450:22380":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"0:269:140":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"16:7492:9007":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:504:7602":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"20:1289:3088":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"17:9973:7746":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:8204:4039":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"31:7261:6322":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"6:5123:10608":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:5905:8729":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:48294:9756":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:44374:9480":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:8201:4038":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"31:5307:10388":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"6:6120:7099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"29:8253:7167":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"18:690:7272":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"29:7345:7114":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"29:4749:6708":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"20:1628:134":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"2:30565:3178":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:14025:8426":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:6361:8818":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"23:681:4876":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"11:434:39181":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"22:1086:4916":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"17:11935:7955":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"31:6108:28656":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"30:4144:6452":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"2:3293:16566":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:10779:9460":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"31:4635:10341":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"6:1521:6532":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:11146:9890":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:475:6499":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"31:4674:28648":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"2:22607:9494":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"31:6923:6230":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"21:1081:27462":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"16:7015:8914":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"21:2140:27481":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"2:41980:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"31:6614:6168":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"30:457:113":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"11:837:9176":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:12544:8058":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"31:7387:6355":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"1:9973:9566":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:5140:10479":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"21:1945:7484":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"17:10917:7862":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"31:6413:6138":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"20:2211:3081":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"1:11180:5238":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"6:548:5845":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"33:76:3245":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"26:99:2698":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"26:100:2696":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"1:929:11191":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:13568:8309":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:8905:11348":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:881:9175":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:7679:10615":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"29:7925:6323":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"29:2143:6636":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:4998:10597":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"20:2268:3089":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"33:161:2722":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"2:1558:3112":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"31:6785:28661":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"18:0:2882":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:8097:9073":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:10432:9889":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:12659:8075":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:1551:7469":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:4253:3006":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:42005:3656":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:43775:9599":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:7436:8746":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:11536:7920":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:43004:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:14317:8523":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"21:0:2998":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"1:8201:3135":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:7644:11246":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"21:2330:7357":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"20:1707:39220":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"6:6228:5973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:2178:7611":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:14135:8455":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"31:5888:10422":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"17:14164:8462":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"30:4195:6455":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"1:8536:9783":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:22151:11463":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"6:495:5874":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:3557:5427":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:43683:9592":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:11614:9809":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:11001:7867":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:9173:7591":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"29:7906:5912":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"31:4536:5584":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"17:10037:7751":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:6352:8817":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:43441:10761":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:12053:1634":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:47146:9704":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:43223:4917":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:501:5898":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:2601:5472":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:7718:11177":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:11236:7893":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"31:6623:6170":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"2:41853:9569":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"21:1188:1953":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"29:4962:6748":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:10759:10772":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:4932:6929":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:5939:8589":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:10782:9920":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"31:5292:5781":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"16:7391:23398":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:1664:6623":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:21168:37163":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"29:1762:6532":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:8007:4568":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"20:1533:7561":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"5:7492:9286":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"29:5836:6924":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:5995:8594":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"22:1052:7300":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"2:12196:9476":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:5897:7002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:48215:9751":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:44299:9624":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"21:2544:7367":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"2:2668:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:11607:33003":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:6545:3235":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"30:3379:6370":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"16:4745:8680":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"31:5251:10374":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"2:46683:9681":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"22:1690:7347":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"6:6781:7144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:14309:8520":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"29:1887:6560":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:46386:9672":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:13175:8173":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:7884:23401":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:1064:9184":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:9781:7728":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10904:7861":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:30691:36162":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:7554:8652":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:1310:9188":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"23:753:4888":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:2577:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"5:6525:5410":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:48356:9758":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"31:5799:10408":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"2:21869:37168":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:14470:8565":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"31:5843:5938":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"29:2167:6640":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"21:1958:27448":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"2:40599:9543":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"31:6705:10447":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"21:1284:7352":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"17:11192:7619":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"5:1531:9265":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:4388:6673":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:3655:7631":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:2294:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:6156:8773":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:1473:7557":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"31:6043:6007":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"6:4595:6782":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"29:1987:5709":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:10187:7764":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"31:6560:10429":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"17:11449:23461":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:10772:7830":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"31:4723:5618":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"6:7633:6940":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"20:178:7538":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"2:44598:10770":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:0:2881":{"crate_id":17,"path":["object"],"kind":"module"},"17:12137:7974":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:10970:31246":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:400:7599":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:3672:11257":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"11:742:9173":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:8851:4036":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:12056:842":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"21:2360:7520":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"5:1110:38087":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:9960:7745":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:3225:38142":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"28:28:27495":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"31:6373:6131":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"2:46193:9661":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"31:7138:6281":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"16:6083:22501":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"11:1566:22459":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"33:201:3250":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"2:2943:16641":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:3312:37100":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:1557:7470":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"0:70:712":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"5:7429:11190":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"20:2559:3092":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"16:6204:8780":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"18:574:4884":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:2915:3002":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"25:0:2873":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"5:898:4036":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:12040:1531":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:3179:4036":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:12960:8136":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:5310:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:8227:9865":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:5033:6943":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"18:671:7271":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:6012:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"28:47:27498":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"1:3484:2610":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:40358:9532":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:12049:792":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:4641:8678":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:12281:8008":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:9855:2849":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:11036:5504":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:7102:23397":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"29:7973:5590":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:12063:7963":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"11:1142:9187":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"20:2358:3097":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"33:396:3254":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"16:3232:8603":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"18:652:4884":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"20:2534:3090":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"1:919:9173":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:42117:4036":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"29:1687:5878":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"29:2093:6630":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:13004:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"0:437:2148":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"1:4702:11316":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"16:5816:8719":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"29:1929:6574":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:1546:5441":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:48169:9748":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:5973:5493":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:3191:38141":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:39878:35532":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"30:4212:6456":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"2:39513:9518":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"31:7278:6323":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"2:32351:10550":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:4710:6833":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"0:571:2090":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"6:1632:5709":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:1537:6536":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:23290:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"4:0:2872":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:7291:5427":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:13877:8391":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"11:1676:5407":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:48279:9755":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:7839:1946":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:13260:8185":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:14449:8559":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:12087:7967":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:6261:8810":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"20:1213:3083":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"17:13950:8405":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"21:2574:7530":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"2:11956:9469":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"28:152:27511":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"30:4338:40418":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"31:5594:5866":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"9:177:10020":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"24:296:1946":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"6:5004:10600":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"31:5896:5945":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:5891:7001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"10:36:10553":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:9922:7740":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:2321:8604":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:10580:3534":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:12877:8120":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:6445:10758":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"22:1489:4935":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"11:299:10752":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"29:4805:6717":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"23:807:7272":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:13041:8146":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:9456:39204":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:6136:10488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:1127:4902":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"17:12025:7961":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:5829:5949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"31:5041:5718":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"17:14034:8429":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:14057:8437":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"18:766:27425":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"30:534:4036":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"21:2569:7529":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"17:12306:8012":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"28:181:27512":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"31:7298:6336":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"1:5242:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:3502:3123":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"7:31:22366":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:3396:3112":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:946:9181":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"21:2649:7363":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"2:41119:9440":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:3209:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"20:1938:5399":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"31:4753:5630":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"1:9476:9816":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"21:1194:134":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"6:5068:6956":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:5673:8641":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:4543:6756":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"21:1779:27447":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"16:7090:8922":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:9792:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:2948:16642":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:23135:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"9:0:2874":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:4966:11321":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:12005:11179":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"20:949:7545":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"11:1603:9191":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:44411:9626":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:6169:7103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:563:6294":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"22:923:11246":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"5:2970:10622":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"21:1549:27451":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"29:5893:6939":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:43194:9578":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:13915:8399":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:10052:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:12485:8051":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"31:4996:10355":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"17:9071:7711":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:13102:8157":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"30:5193:6495":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"31:6606:6167":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"6:580:6518":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:3427:3120":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:7694:8654":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:1265:8923":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:6804:7151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:4497:8673":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:1507:5692":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"26:102:2697":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"21:2227:5398":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"23:632:4871":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:22333:11458":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"29:8458:7235":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:12037:1142":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:7543:9289":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:4616:6791":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:6386:8820":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:5715:9424":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:10794:9818":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"27:0:2252":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"29:7228:7094":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"9:393:22381":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:2057:9266":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:48142:9747":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:32387:9513":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"29:806:17023":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"1:11390:10776":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:11384:10775":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:44125:9612":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:4535:6751":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:12725:8083":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:21979:11246":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"22:1351:1998":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"17:10060:7752":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:10662:7818":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"20:2229:3091":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"31:7117:6279":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"2:9841:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"18:736:27424":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:10942:3733":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:2964:8943":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"18:538:4879":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:42921:10692":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:11873:7952":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"20:2202:3086":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"21:2579:27482":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"2:22338:11456":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"29:5094:6777":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:910:9189":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:10441:7787":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"31:6950:6233":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"5:7271:3656":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:6072:5488":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:39586:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:9329:3136":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:43026:3101":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"20:1754:3016":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"29:1726:5692":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"29:1913:6572":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"30:5180:6493":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"16:2472:8617":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:11024:7868":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"20:1492:7559":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"6:1697:5594":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:4986:8688":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:2400:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"11:2140:9183":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:6696:8862":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:22592:36166":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"29:5077:6774":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"29:5685:6902":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:12946:8134":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"29:8017:7142":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"31:6389:6132":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"2:4321:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:12046:793":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:6961:7235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"29:2005:6604":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"31:5773:10402":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"1:8287:11288":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:4893:6913":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:2574:8621":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"11:1896:5441":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:44828:9641":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:42142:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"29:6871:6343":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:1596:1998":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"17:12766:8090":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:10099:9906":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"29:8134:7144":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"5:4376:5434":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"22:1429:7278":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"29:5513:6868":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:357:3542":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:21423:11375":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:7645:3544":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:10313:5477":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:1604:6579":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"20:1725:4792":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"2:4330:3008":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:44590:10768":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:5363:8694":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:7879:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"21:2087:7354":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"21:1115:7371":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"30:4968:6491":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"16:4719:8679":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:12051:1636":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:10317:7777":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:40707:9431":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"24:198:2405":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"21:1178:7386":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"26:194:134":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"31:7369:6348":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"6:4566:6768":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:4666:6816":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:2339:8606":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"22:1552:4947":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"2:43241:9584":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"33:358:2632":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"17:14500:8570":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"21:1706:7465":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"20:1998:4832":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"17:11587:7924":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:7639:6941":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:4902:3160":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"16:3032:8658":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"21:1107:7367":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"11:2542:10547":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:9887:7737":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:10973:9466":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"20:2432:3095":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"31:5269:10383":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"5:7462:9283":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:2744:8628":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"29:7425:7118":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:11887:7953":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:9836:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"21:1871:5394":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"29:4651:6673":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"20:1605:7540":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"20:2449:3098":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"1:8921:11347":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"30:438:3016":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"2:6253:9427":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:13136:8170":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11328:7902":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:5987:3170":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"29:7502:7130":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10508:7801":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"21:2348:7502":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"16:5712:8707":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:10097:1967":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:4862:8684":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:47176:9705":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:10617:7809":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"20:2590:3089":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"17:9661:39203":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"22:961:4812":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"5:7325:3656":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:638:9764":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:43733:9595":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:7067:8920":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6041:23392":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:41133:3230":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"31:5704:5901":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"2:21540:11246":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:10421:7668":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:10367:7779":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:13779:8368":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:5760:23390":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"0:445:2027":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"2:39566:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"9:330:10554":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:4496:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:2978:37981":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"18:96:27415":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:12555:8059":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:3733:3147":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"29:5369:6844":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"29:6813:6998":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:44459:9635":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"21:1640:7464":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"1:12058:1238":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:10699:7823":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:10890:9463":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:12157:9474":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:2958:8942":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:7240:35959":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"33:173:2589":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"17:12577:8066":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:4040:11267":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"29:4714:5876":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:10384:7781":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:44785:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"31:5626:5873":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"17:13891:8394":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"31:4467:5576":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"23:648:4881":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:5866:8727":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:6837:5439":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"33:339:2761":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"6:4884:6911":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:8386:11325":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"22:1292:7314":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"3:0:473":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:12112:7972":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:7505:9288":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:11394:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:11789:7939":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:8494:11338":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:8327:9872":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:9702:7726":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:48317:9757":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"31:6357:6128":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"11:673:4036":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"29:5536:5718":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:40586:3134":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"29:2130:5594":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"28:37:27500":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"31:4782:5642":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"1:5782:3228":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"20:1452:39276":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"21:1998:27465":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"0:438:2158":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"17:9278:7594":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:10959:9465":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:44347:9625":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:2931:16640":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:7523:9011":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:1568:7349":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:3737:9776":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:6359:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:5727:8710":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:13163:8172":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"22:1188:1998":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"16:6189:8778":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"18:699:7273":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:13990:8415":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:9618:39209":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:2974:37982":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"29:5987:10481":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"0:576:2099":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"21:2029:134":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"6:5992:7028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:574:5877":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:42977:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:1382:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:13211:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:6248:7119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"29:8351:7208":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"23:716:39213":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:5570:7116":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"31:4528:5581":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"17:14421:8550":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"11:2469:5441":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:11049:7869":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:13299:8195":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:12486:16530":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:4746:11279":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:40285:9525":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:2210:16655":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"29:7953:5584":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:6898:7208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:4169:11286":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"29:9263:10500":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"18:614:39215":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:7137:32899":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:13740:8359":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"0:578:2102":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"6:123:17024":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:6792:8887":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:7343:7241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"30:3475:6371":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"21:1144:27463":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"1:11292:5507":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:12453:8044":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:11307:7899":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"5:2139:3524":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:4776:6863":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:23166:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"31:4942:5687":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"2:39526:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"31:5020:5709":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"20:2363:3098":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"23:638:27426":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:868:9174":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"29:5742:6911":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"24:0:1943":{"crate_id":24,"path":["log"],"kind":"module"},"1:12016:31259":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:8660:23436":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:881:5418":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"22:1388:4926":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"31:6686:10440":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"1:4182:11287":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"29:8440:7231":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:21212:37166":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:507:5881":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:14119:8452":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"9:507:9249":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"20:2096:3094":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"6:6114:7096":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:5149:3170":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:4639:6317":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:2978:16646":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"30:3000:6366":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"17:13056:8150":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"31:6632:6174":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"6:1691:6355":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:622:9763":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:13315:3186":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:5743:8711":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:10411:7783":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"30:498:10178":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"1:8158:3131":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"20:987:3088":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"17:12185:7979":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"24:357:3052":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"31:4975:5697":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:40530:9539":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:2519:3143":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:22556:7575":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"20:2040:4837":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"2:47360:9707":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"29:5496:6865":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:7070:3664":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:1674:6629":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:12059:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"20:1647:7572":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"6:4428:5876":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"9:426:22382":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:1542:5427":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:2012:7607":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:4610:6789":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"33:0:2253":{"crate_id":33,"path":["termcolor"],"kind":"module"},"11:1087:39180":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"14:31:9167":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:4854:6899":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"5:5645:5439":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:3031:16508":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"29:9276:5591":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"22:1422:1998":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"2:22067:11461":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:11911:7954":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:4493:11290":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:13423:8197":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"31:4510:5578":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"2:1763:10626":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"30:2989:6364":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"29:7265:7096":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:8892:9895":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13229:8179":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:4313:9780":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"11:1066:22458":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:4478:3019":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"31:4558:5591":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"2:46316:9670":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"31:7126:6280":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"1:9187:31271":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"29:5256:6816":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:2698:10623":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:40577:9542":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"29:5650:6896":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12474:8048":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"20:2581:3086":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"5:1419:4036":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"21:1602:27452":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"11:875:9181":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:11816:7941":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"5:137:2966":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"2:32499:3622":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"20:213:39223":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"26:230:3208":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"5:4087:4037":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:13576:8310":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:6856:5451":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"31:4645:5604":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"6:4847:6896":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:42133:3656":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:3168:4778":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"24:352:1948":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"29:1869:6559":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:47896:9742":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:40646:9423":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:5152:10484":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:3565:7618":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:6485:8639":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:11368:7906":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:6499:8656":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:10945:9464":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:7371:5902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"22:1359:4862":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"1:6598:3239":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"31:5300:10386":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"21:1802:5393":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"16:4344:8670":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:5017:8689":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"23:0:2882":{"crate_id":23,"path":["memchr"],"kind":"module"},"20:1732:7574":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"2:42245:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"23:836:4868":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:42047:3311":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"30:356:10177":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"22:1211:4900":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"17:9087:7712":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:41908:9453":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:837:4036":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"30:3821:27555":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"29:5981:10479":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:1797:3722":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:7838:3258":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"31:7157:10473":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"16:2450:8616":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:41175:9445":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:5383:5396":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:41866:9778":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:13803:8372":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:13066:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"18:582:3611":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:44168:9532":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:11342:9805":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:43426:9585":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"31:6660:6177":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"2:40608:9544":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:42681:2846":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"20:1622:4982":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"6:7616:10613":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"20:1654:7573":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"21:2510:7524":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"1:12050:788":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:46508:9676":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:46605:9679":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"20:2277:3087":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"22:1261:7311":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"17:14069:8440":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"18:727:7275":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"20:2054:4840":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"6:5910:6343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:11970:2665":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:504:3524":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:40909:3135":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:42057:3777":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"29:4675:6683":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:40669:9550":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:42961:7486":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:3448:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"31:6298:10426":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"31:4957:5692":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"17:13612:8339":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"9:52:10005":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:7706:16630":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"31:4599:5601":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"2:4179:3028":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"33:292:3252":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"1:2371:11238":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:23011:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:7756:3259":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"31:4796:5649":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"29:0:872":{"crate_id":29,"path":["libc"],"kind":"module"},"16:7828:9030":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:4968:10576":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:9489:39202":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:21368:11246":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"29:641:6138":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"5:5:1702":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:8477:9882":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:7849:9817":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:3839:9777":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:30599:3758":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:5798:8714":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:11152:7880":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:13222:5482":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:5049:8690":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"15:394:22493":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"20:2459:3084":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"21:1184:7388":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"1:6251:5493":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:11455:5509":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"31:5314:10389":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"31:6578:10436":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"0:446:2025":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"17:13633:8344":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:8878:3180":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:1874:9771":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"22:0:2999":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"33:79:3246":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"1:5573:11343":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:7476:36165":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:7924:3145":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:6583:8839":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"31:4660:10347":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"21:1322:7423":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"17:10013:7725":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11662:7927":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"19:0:1122":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:3797:8665":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"20:1842:39269":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"6:1496:5687":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:2504:8618":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:7530:7603":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:3165:4576":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"31:5748:6516":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"0:32:1951":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"32:0:3212":{"crate_id":32,"path":["bitflags"],"kind":"module"},"29:4927:6743":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:2696:8626":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"30:3908:40435":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"21:2186:134":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"16:7708:8655":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:1075:7604":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:13869:8388":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:43821:9471":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"33:43:3242":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"21:1131:7379":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"18:707:4862":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:8301:9865":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:39684:9522":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:41157:5466":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"29:6893:6348":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"30:4161:6453":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"1:10833:33499":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:40755:7265":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:13923:8401":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"11:1891:5427":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"29:522:5875":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"21:1484:5392":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"1:1535:4036":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:10521:7802":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:41717:11256":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:4647:6815":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"30:4114:40419":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"22:1698:3085":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"2:2894:8936":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:46240:9662":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"29:1845:6551":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:22524:9489":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:13694:8350":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"31:5094:5743":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"2:44841:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:10769:9817":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"23:556:7588":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"2:9849:2847":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:8238:11255":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"0:340:1956":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"1:12035:1652":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:2982:16647":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:1710:6636":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:4458:3018":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"23:824:4862":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"11:2151:9184":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12672:7834":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:3299:16565":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"29:4731:6706":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:9498:10034":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"22:1495:4936":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"1:3243:3153":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:8859:9894":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:4744:11278":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:12039:1498":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:48180:9749":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"31:5580:5862":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"22:1581:4915":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"29:2136:6141":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:11352:7904":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:6687:8861":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:2526:8619":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"29:4828:6726":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:3325:2759":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:8985:3528":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"31:6569:10431":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"17:9522:7722":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:4637:6315":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:2889:3191":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:14222:8504":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"29:8035:6303":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"29:8221:7156":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5982:7021":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:9035:9903":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:3128:1160":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"31:4567:5594":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"6:0:872":{"crate_id":6,"path":["libc"],"kind":"module"},"1:9105:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"29:9194:7245":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"21:2560:134":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"1:5634:5493":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:2574:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"11:832:9189":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"22:929:27489":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"0:599:1998":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"8:0:2873":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:787:9175":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:44586:10767":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"11:1910:7470":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:3065:7626":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:4044:11268":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"29:8329:7205":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"29:7166:7077":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"31:7378:6352":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"1:9197:10699":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:45931:9650":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"20:1433:39270":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"17:11574:7922":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:10814:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"0:0:2251":{"crate_id":0,"path":["env_logger"],"kind":"module"},"1:1563:7471":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:44858:9644":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:8795:23452":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:46940:9701":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:6439:9432":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"29:5154:6789":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"31:6649:6176":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"2:15:2078":{"crate_id":2,"path":["core","write"],"kind":"macro"},"0:585:1967":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"5:1500:9172":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"20:1802:7577":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"16:2969:22530":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:44594:10769":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:149:5400":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:4462:8672":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"14:0:2878":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:2823:3024":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"31:5658:5877":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"29:5454:6856":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:8404:9879":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:11262:7894":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:10672:4037":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:46910:9700":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:10024:7726":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:12686:8079":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:12032:399":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"29:1781:5713":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8002:4567":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"31:5865:10417":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"6:6047:7065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"30:4828:40425":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"2:11458:9467":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:10950:7864":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:5084:9788":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:8960:3229":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:4161:11285":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:12646:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:2587:3144":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"5:1481:9175":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10751:7828":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:5448:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:8012:3148":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"5:1511:9173":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:45985:9652":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"29:9158:7243":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"31:6597:6165":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:14336:8529":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4800:5718":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:21551:7281":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"31:5602:5869":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"31:5674:5881":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"14:160:9167":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"22:1514:4939":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"17:10098:7755":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"29:4884:6735":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:8309:9871":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:46864:9699":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:4806:8682":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:4247:4036":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"29:5633:6893":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:12998:8140":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:1501:5689":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:3364:3027":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:45841:9646":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"20:1780:4975":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"17:8687:23449":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"31:4806:5651":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"2:46462:9674":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:7582:9013":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:7318:8960":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"29:5883:6938":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"29:695:6294":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"6:6128:7101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:11309:9803":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:5015:6933":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"29:5298:6823":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"11:811:5441":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:12751:8087":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:915:9172":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:11518:9776":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:5339:5410":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:22471:9488":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:2832:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"29:5344:6833":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"30:3610:40430":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"17:9753:7727":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:2369:11237":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:5641:9793":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:41660:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:22190:11466":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:13982:8414":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"21:1720:7466":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"1:2353:2182":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"31:4501:5574":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"1:6432:3231":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:2538:16587":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:8546:4036":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:4131:32909":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"21:1402:4814":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"20:2543:3091":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"17:8954:23457":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"22:971:7588":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"6:4686:6823":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:10638:7813":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:2618:8623":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2406:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"31:4827:10353":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"31:6965:6239":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"16:5088:8691":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:4977:10582":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:2815:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"20:2248:3080":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"6:7668:10500":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:21549:11376":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"31:5754:10394":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"23:655:4879":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:2380:8613":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"9:486:22379":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:41683:9449":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:12197:7980":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:42986:3099":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4902:6919":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"22:1201:3148":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"16:2644:8624":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11245:7925":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:1582:9190":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13287:8188":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:42401:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:2905:16637":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:10100:3991":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:6299:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:6560:5402":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:7657:10496":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"21:1535:7446":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"2:10490:11246":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:1472:9174":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:5419:7712":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"11:2403:4037":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:22705:9507":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"21:2059:7496":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"2:12435:16524":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:22540:10031":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:10981:7725":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:7381:31529":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:8275:9778":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:4505:3020":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:10740:9459":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"22:1604:4859":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"6:5859:5948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:8849:23454":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:9999:7704":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:4434:6706":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"21:2277:4814":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"31:5236:6536":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"1:8803:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"21:2323:7519":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"2:39652:11184":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:7176:16632":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"18:521:27426":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:10764:10774":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"29:9104:6128":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:44425:16537":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:6819:7156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:10249:10183":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"18:515:4871":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:3186:7470":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"29:7120:7065":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"29:676:6132":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"21:1733:7468":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"16:4774:8681":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:40366:9416":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:45885:9648":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"29:1744:5695":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"23:731:39215":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"31:5904:5948":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"1:3368:3158":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:6901:8646":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"23:853:27424":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:9651:7725":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:4627:11265":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:678:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:40678:9426":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:4917:11315":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:6837:7167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"30:3797:27554":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"17:10398:7782":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"0:342:1984":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"22:1225:4917":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"6:6682:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:4325:3007":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"26:164:128":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"1:5397:9789":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:14002:8421":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:41126:9441":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"31:7219:6294":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"17:12622:8071":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:3077:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"18:660:7267":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:43851:3090":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"26:101:2695":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"17:14515:8571":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:4603:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:41142:9442":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"31:4843:28649":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"30:2712:6362":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"18:599:39213":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6531:8835":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:41148:3158":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:3073:3257":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"18:113:27416":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"29:5817:5618":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"21:2553:7371":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"2:42125:4037":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:3162:31442":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:5588:8640":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:10589:7807":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"16:2881:8634":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:4506:6740":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:6968:23396":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:3282:3150":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:5075:6959":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:12238:7992":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"14:7:9167":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:3212:7471":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"10:44:9196":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:4864:37082":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:48189:4952":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"14:202:16538":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"5:4772:712":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:9934:7743":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:4471:11289":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:9095:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:9712:39205":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:1514:5695":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:3203:3152":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:261:5410":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:6711:7142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:10448:7790":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"31:5805:10410":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"16:6401:8638":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:10842:33501":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:44658:16752":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:40933:9438":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"29:621:6510":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"17:10562:7805":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:12052:1633":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"28:183:5385":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"16:2864:8633":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:12047:790":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"21:2385:7517":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"17:12738:8085":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"31:6590:6163":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"22:1507:4938":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"1:7733:11178":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"21:2469:27444":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"6:4698:6832":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"21:2311:7458":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"23:97:27415":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:276:2072":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:40487:11218":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:6612:3240":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:5542:3112":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"21:1748:27449":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"30:2529:6359":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"1:3990:11264":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"21:1817:7473":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"31:5634:5874":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"6:5941:7003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:4529:6748":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"29:7355:7103":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:8050:9070":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:46530:9677":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:40730:9553":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"21:2099:4814":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"5:4045:5410":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:46432:9673":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:12984:8139":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:22112:11462":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"14:221:9171":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"24:277:1947":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"2:41889:9452":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:4641:6319":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"18:564:4876":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"31:6585:10438":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"29:6830:7001":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:40407:16583":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:8221:3133":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:8595:23438":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:7597:39195":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"31:5221:7250":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"18:507:4884":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"29:5857:6929":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"31:5332:28651":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"2:1681:1179":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:14084:8444":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:9351:7598":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"20:0:1760":{"crate_id":20,"path":["regex"],"kind":"module"},"21:1919:7483":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"18:636:4888":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"31:6932:28662":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"2:30338:11258":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:3600:8663":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"20:1896:7561":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"0:439:2215":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"6:6934:7227":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:2590:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:11548:7921":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"30:4724:40429":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"2:7292:16624":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"18:681:4860":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"14:165:22464":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:10241:7744":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:4860:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:7600:5500":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:7629:5445":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:1622:7282":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"17:8714:23450":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11216:7888":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:3915:8668":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"29:5478:6863":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"21:2160:7504":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"20:2005:4835":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"31:5696:5898":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"1:8293:9869":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"31:0:3211":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"31:6399:6137":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:12294:8009":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:43809:9603":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:11595:9929":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:40637:1951":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:7513:9010":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:6889:7205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:2305:22528":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"5:4999:3112":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:3996:11265":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"21:1057:7364":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"1:5755:3227":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"26:0:1759":{"crate_id":26,"path":["humantime"],"kind":"module"},"6:5044:6949":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:12075:7966":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:10629:7812":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"21:2119:1953":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"22:1528:4941":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"17:12779:8091":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:22719:9508":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:46338:9671":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:1528:5713":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:1784:5441":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:8170:3132":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:12935:8132":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:3246:7349":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3083:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:40557:9540":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:2212:16656":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"29:505:6504":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:7660:9018":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:13677:8348":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:7598:7243":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:22669:36173":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:3280:2727":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:5130:6939":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"20:1417:7549":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"29:7443:5973":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:1237:4922":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"2:44820:9639":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"23:699:3611":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:7916:9822":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:12889:8122":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:11296:7897":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:4914:5618":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"22:1586:4881":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"6:6813:7155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:6569:8644":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"31:4762:5634":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"30:4450:6461":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"31:5610:5871":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"2:12231:9459":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"22:1644:7337":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"16:4053:8669":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"29:4998:6756":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:6985:10249":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:569:6516":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"29:9240:6941":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"29:5433:6852":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:6866:5452":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"29:9252:10496":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"11:351:39178":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:12253:7998":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:11972:7958":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"31:6310:6106":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"7:78:22373":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"21:2132:7500":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"2:10852:9462":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:32398:9514":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:9015:7353":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:7556:6128":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:7554:9290":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"31:5586:5865":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"29:8105:6336":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:3830:8666":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:23766:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:4908:11314":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:8353:9782":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"33:81:3247":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"31:4547:5590":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"29:9212:7246":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:5696:23389":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:3589:4036":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"31:5226:10369":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"2:21981:11377":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:1281:9184":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:8991:7277":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"31:5650:5876":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"2:40445:9537":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"21:1623:27453":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"20:2552:3080":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"20:2487:3081":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"22:1399:7324":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"31:4771:5638":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"16:6893:8895":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:44870:3185":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:8815:9890":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"29:5974:6978":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:2548:8620":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:10817:9461":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:5574:8637":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:12180:9475":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:6844:8889":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:10715:7825":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:10431:7785":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:11163:7881":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:12912:8131":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"11:2231:7790":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:1970:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:48104:9746":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:1772:4460":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:7785:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"21:2489:27445":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"16:4527:8674":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:43720:9540":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:489:5875":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:43445:9456":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:32412:9515":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:7568:8653":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:7768:8643":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"29:5922:6951":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"21:2125:7498":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"29:809:17024":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:5052:6951":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:2826:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"29:7074:7044":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:22304:11457":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"6:4908:6921":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:6681:5410":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:11217:5235":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"31:6737:10467":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"16:5322:8693":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:41997:4037":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:10540:2727":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:904:5441":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:6798:7149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"29:6986:7015":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"22:1544:4943":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"2:43233:9583":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:46652:9680":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:13839:8377":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:6818:8888":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"29:7282:7099":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"31:5788:5924":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"31:6473:6150":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"1:3938:11260":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:44115:9611":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:2948:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:7342:39198":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"22:1501:4937":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"1:8873:9794":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4783:6865":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:44582:10766":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"29:5054:6768":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"29:1802:6536":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:48241:9753":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:14297:8517":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"20:2144:3093":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"30:4790:6483":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"16:4889:8685":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:46286:9669":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:2946:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:2923:16639":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:11818:5513":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:11315:9928":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:8937:11349":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:40520:5460":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:7417:9282":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:2596:8622":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"13:0:2871":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:7028:5497":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:2381:11243":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:9027:9901":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:47100:9703":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"28:147:27510":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"29:712:6516":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"2:1840:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"14:215:9170":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:3602:4037":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"29:8203:7155":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:13025:8144":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"20:2346:3095":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"29:5277:6822":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:7739:3732":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:2657:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"31:4588:5600":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"29:7322:10488":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"11:1107:9186":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"29:5033:6761":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:7301:5420":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"20:1947:4793":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"5:7613:5441":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:850:4037":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:47818:9741":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"22:1167:4564":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"1:8208:3136":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:12209:7981":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"31:5245:6507":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"17:9373:7713":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:7755:3733":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:6742:8874":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:6467:8827":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:8927:23456":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"20:1889:4854":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"17:13852:8383":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"22:1310:7317":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"16:7269:39196":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:7610:7245":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:7722:8645":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:1759:3713":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"0:574:2096":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"2:44621:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:22175:11246":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:629:9262":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:9946:7744":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:3327:3025":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"31:4833:5656":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:6376:23393":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:2766:8629":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"21:268:39945":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"11:2562:10551":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:44073:9610":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:9070:10036":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:48264:9754":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"9:357:22395":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:4030:11266":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:13149:8171":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:4841:6893":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:12055:1632":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:10824:3131":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"22:1659:7342":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"16:7503:8650":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:2967:2841":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:44883:9645":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:12811:8095":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"21:1885:27443":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"17:3232:7615":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:3112:11203":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"29:7203:7083":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:4153:11284":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:7604:7244":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:6960:8900":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"29:8856:7241":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:42695:2848":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:7664:1998":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"23:691:4884":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"23:726:7261":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:9446:7721":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:6915:8647":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:4439:5434":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"29:7021:7021":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"21:1654:27456":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"5:1434:4037":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:2822:3255":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"21:2436:27443":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"22:1315:27488":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"2:2586:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:46706:9682":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:7518:3176":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:4440:6708":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:6954:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:2569:9282":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:4105:16507":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"5:4015:5427":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"31:5275:6929":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"31:6035:6004":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"20:931:3083":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"31:5085:5741":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"2:22258:16655":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"29:4865:6732":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:10479:7797":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:44282:9623":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"30:3778:6427":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"21:2109:7386":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"1:9022:9900":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:7462:9000":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:7747:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"20:2496:3085":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"31:6431:6144":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"2:40440:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"11:700:3656":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"18:719:4868":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:7279:9280":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:5023:6938":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:6086:7083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:39630:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"29:2052:6623":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"29:1709:5689":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:9103:7589":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:11087:7875":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:6346:8816":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:14347:8530":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"20:2220:3090":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"23:707:4873":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:261:7597":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:4814:6876":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6107:7095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:6148:5482":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:4417:8671":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:14174:8467":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:10537:2725":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:1296:9183":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"31:7235:6303":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"2:2200:630":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:7743:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:11618:7925":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"29:7185:7082":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"14:187:22471":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"27:5:2759":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"29:1948:6579":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"23:844:7275":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:43901:9606":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"29:5555:6874":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:12268:8004":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:8797:9889":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:11047:5505":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"26:209:40333":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"2:43694:9593":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:6112:3112":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:22980:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:12514:8055":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:1546:6542":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"28:69:27493":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"1:1761:3714":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:12599:8067":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"5:1126:38144":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"20:1790:7576":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"17:12532:8056":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"31:5880:6640":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"2:8880:3312":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:3748:9266":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"20:1642:4779":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"1:363:3543":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:1073:9188":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:10673:7819":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"31:4651:10344":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"17:11338:23583":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"16:2810:8631":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:13216:8178":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"29:4558:18346":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:5637:3112":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"30:4745:40424":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"22:1102:7306":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"1:6164:5492":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:0:1523":{"crate_id":1,"path":["std"],"kind":"module"},"16:7792:23400":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:23259:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:11408:23460":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:7462:3157":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"29:8181:7151":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"22:1107:4901":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"2:42284:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:39705:9524":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"31:6980:6242":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"17:14091:8445":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:12847:8101":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:8979:23458":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:12423:8036":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:42931:3099":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"20:1880:4892":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"29:783:6528":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"6:119:17023":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"5:2043:3147":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"30:4541:6462":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"23:114:27416":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:4676:6822":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:1596:6574":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:7856:9818":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:48020:9744":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"11:396:5405":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"21:2294:5392":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"30:5074:6492":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"}},"external_crates":{"31":{"name":"linux_raw_sys","html_root_url":null},"28":{"name":"io_lifetimes","html_root_url":null},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"aho_corasick","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"29":{"name":"libc","html_root_url":null},"26":{"name":"humantime","html_root_url":null},"23":{"name":"memchr","html_root_url":null},"20":{"name":"regex","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"termcolor","html_root_url":null},"30":{"name":"rustix","html_root_url":null},"27":{"name":"is_terminal","html_root_url":null},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"21":{"name":"regex_syntax","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}