{"root":"0:0:2170","crate_version":"0.10.0","includes_private":false,"index":{"0:362:2004":{"id":"0:362:2004","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[615,4],"end":[618,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["indent",{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[835,0],"end":[900,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:1943","0:384:1969","0:385:1868","0:386:2098"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:9435:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:9435:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:506:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:365:2014":{"id":"0:365:2014","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2782:231-0:342:1903":{"id":"a:2:2782:231-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:531:1660":{"id":"0:531:1660","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:2:8523:3100-0:210:233":{"id":"a:2:8523:3100-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2560-0:571:2009":{"id":"b:2:2560-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:386:2098":{"id":"0:386:2098","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[897,4],"end":[899,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1866","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12314:2583":{"id":"2:12314:2583","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43711:3057","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:2008","0:96:2563","0:97:2564","0:98:2565","0:99:2566"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5529:30280":{"id":"5:5529:30280","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12411:30282"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8523:3100-0:269:132":{"id":"a:2:8523:3100-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:8523:3100-0:571:2009":{"id":"a:2:8523:3100-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:458:2685":{"id":"b:2:2556-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:96:2563":{"id":"0:96:2563","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2621"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12361:36961":{"id":"2:12361:36961","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2645":{"id":"0:215:2645","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:217:1659"]},"discriminant":null}}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2607:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2765:223-0:599:1917":{"id":"a:2:2765:223-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2327:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12315:35268":{"id":"2:12315:35268","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12316:35264"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43999:8534","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:2787":{"id":"0:528:2787","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:530:1659","0:531:1660","0:532:1661"]},"discriminant":null}}},"0:374:1889":{"id":"0:374:1889","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[760,4],"end":[763,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"resolved_path":{"name":"fmt::WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:571:2009":{"id":"b:2:2263-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5509":{"id":"5:5509","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5510:37629","5:5511:2375","5:5514:37630","5:5517:37631","5:5525:37632","5:5526:37633","5:5527:3076","5:5528:30279","5:5529:30280"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:147:2560":{"id":"0:147:2560","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2685"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"resolved_path":{"name":"Level","id":"24:198:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332-0:262:1869":{"id":"0:332-0:262:1869","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[294,0],"end":[294,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::fmt::glob","name":"glob","id":"0:262:1869","glob":true}}},"0:97:2564":{"id":"0:97:2564","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2621"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:585:1886":{"id":"b:2:2266-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2266-0:169:2537":{"id":"b:2:2266-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2822:3177-0:585:1886":{"id":"a:2:2822:3177-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12373:36964":{"id":"2:12373:36964","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11989:6169","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::match_indices":"2:12370:36963"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43893:8531","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:342:1903":{"id":"b:2:2566-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268:60":{"id":"0:268:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5773:1502":{"id":"5:5773:1502","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:210:233":{"id":"b:2:2266-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12312:8278":{"id":"2:12312:8278","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12033:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43695:8271","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:571:2009":{"id":"b:5:680-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2757","5:683:2128","5:684:3621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:585:1886":{"id":"b:2:2571-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:175:2549":{"id":"0:175:2549","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:585:1886":{"id":"b:2:2556-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:14:1868":{"id":"0:14:1868","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[868,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33:1870","0:36:1917"],"is_stripped":false}}},"a:2:2782:231-0:508:2550":{"id":"a:2:2782:231-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:169:2537":{"id":"b:2:2263-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:213:2643":{"id":"0:213:2643","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5511:2375":{"id":"5:5511:2375","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:2641":{"id":"0:211:2641","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2688":{"id":"0:146:2688","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2685"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12299:319":{"id":"2:12299:319","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12050:1547"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:100:2621":{"id":"b:2:2263-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2549","0:176:2695","0:177:2552","0:178:2746","0:179:2750","0:180:2555"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12343:32420":{"id":"2:12343:32420","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11989:6169","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::split":"2:12337:2381"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43743:8262","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12383:36968":{"id":"2:12383:36968","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:60":{"id":"0:219:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:571:2009":{"id":"b:2:2571-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12308:36955":{"id":"2:12308:36955","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12039:1444","str::slice_mut_unchecked":"2:12309:36956","crate::ops::Index":"2:3062:10468"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:100:2621":{"id":"b:2:2560-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:258-0:206:1869":{"id":"0:258-0:206:1869","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::writer::glob","name":"glob","id":"0:206:1869","glob":true}}},"b:2:2566-0:585:1886":{"id":"b:2:2566-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2560-0:269:132":{"id":"b:2:2560-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:458:2685":{"id":"b:5:680-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2757","5:683:2128","5:684:3621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12349:36959":{"id":"2:12349:36959","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11989:6169","str::split":"2:12337:2381","prim@char":"1:12033:428","str::split_terminator":"2:12346:36958"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43793:8529","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12405:2042":{"id":"2:12405:2042","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11950:127","`FromStr`":"2:11949:2969"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11949:2969","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11949:2969","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12311:32410":{"id":"2:12311:32410","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12310:32409"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:342:1903":{"id":"b:2:2560-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8522:3101-0:342:1903":{"id":"a:2:8522:3101-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2332:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:123:2609":{"id":"0:123:2609","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2172","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:458:2685","0:169:2537","0:508:2550"],"is_stripped":true}}},"2:12355:32424":{"id":"2:12355:32424","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12033:428","str::splitn":"2:12352:32422","self::pattern":"2:11989:6169"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43847:8264","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12387:36970":{"id":"2:12387:36970","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8523:3100-0:508:2550":{"id":"a:2:8523:3100-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2566-0:599:1917":{"id":"b:2:2566-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:491:686":{"id":"0:491:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12296:32367":{"id":"2:12296:32367","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11549:2582"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2265:1859":{"id":"2:2265:1859","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366:2017":{"id":"0:366:2017","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[637,4],"end":[639,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:36:1917":{"id":"b:2:2556-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12318:36957":{"id":"2:12318:36957","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43989:8533","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:33:1870":{"id":"b:2:2566-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:354:1969":{"id":"0:354:1969","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:169:2537":{"id":"b:2:3401-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8523:3100-0:33:1870":{"id":"a:2:8523:3100-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:486:686":{"id":"0:486:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:543:2055":{"id":"b:5:680-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2757","5:683:2128","5:684:3621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:445:1945":{"id":"0:445:1945","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1231,0],"end":[1233,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:2007":{"id":"0:363:2007","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[621,4],"end":[624,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["timestamp",{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"fmt::TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:9427:2764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:9427:2764","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2570:1525":{"id":"2:2570:1525","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:506:686":{"id":"0:506:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:33:1870":{"id":"a:2:2822:3177-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2266-0:458:2685":{"id":"b:2:2266-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476:686":{"id":"0:476:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:515:2694":{"id":"0:515:2694","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12297:36954":{"id":"2:12297:36954","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:543:2055":{"id":"b:2:2571-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2782:231-0:571:2009":{"id":"a:2:2782:231-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8523:3100-0:458:2685":{"id":"a:2:8523:3100-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:591:686":{"id":"0:591:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:578:2021":{"id":"0:578:2021","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:513:2692":{"id":"0:513:2692","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2571-0:599:1917":{"id":"b:2:2571-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12293:36953":{"id":"2:12293:36953","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12291:36952"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:543:2055":{"id":"0:543:2055","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2653","0:546:2655","0:548:2590"],"impls":["a:2:2765:223-0:543:2055","a:2:8523:3100-0:543:2055","a:2:2822:3177-0:543:2055","a:2:2782:231-0:543:2055","a:2:8522:3101-0:543:2055","b:2:2560-0:543:2055","b:2:2263-0:543:2055","b:2:2571-0:543:2055","b:2:2566-0:543:2055","b:2:2266-0:543:2055","b:2:2556-0:543:2055","b:2:3401-0:543:2055","b:5:680-0:543:2055","0:562","0:236","0:556","0:561","0:553","0:552","0:558","0:555","0:550"]}}},"2:12320:32426":{"id":"2:12320:32426","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2559:1958":{"id":"2:2559:1958","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2533:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:527:1659":{"id":"0:527:1659","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:348:1943":{"id":"0:348:1943","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[443,4],"end":[450,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177:2552":{"id":"0:177:2552","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2069":{"id":"0:53:2069","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[228,4],"end":[259,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12367:36962":{"id":"2:12367:36962","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11989:6169","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::matches":"2:12364:2098"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43947:8532","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:599:1917":{"id":"b:2:2266-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:36:1917":{"id":"b:2:2263-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2822:3177-0:571:2009":{"id":"a:2:2822:3177-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2822:3177-0:342:1903":{"id":"a:2:2822:3177-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[268,0],"end":[275,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:46:961":{"id":"0:46:961","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[173,4],"end":[179,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:584:686":{"id":"0:584:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:605:60":{"id":"0:605:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2170":{"id":"0:0:2170","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1311,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\nLog levels are controlled on a per-module basis, and **by default all\nlogging is disabled except for the `error` level**.\n\nLogging is controlled via the **`RUST_LOG`** environment variable. The\nvalue of this environment variable is a comma-separated list of *logging\ndirectives*. A logging directive is of the form:\n\n```text\nexample::log::target=level\n```\n\nThe log target is typically equal to the path of the module the message\nin question originated from, though it can be overridden.\n\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target. A value of, for example, `RUST_LOG=example`, would\nmatch all of the messages with targets:\n\n* `example`\n* `example::test`\n* `example::test::module::submodule`\n* `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\nThe names of the log levels that may be specified correspond to the\nvariations of the [`log::Level`][level-enum] enum from the `log`\ncrate. They are:\n\n* `error`\n* `warn`\n* `info`\n* `debug`\n* `trace`\n\nThere is also a pseudo logging level, `off`, which may be specified to\ndisable all logging for a given module or for the entire application. As\nwith the logging levels, the letter case is not significant[^fn-off].\n\n[^fn-off]: Similar to the universe of log level names, the `off` pseudo\n   log level feature is also provided by the underlying `log` crate.\n\nThe letter case is not significant for the logging level names; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nAs the log level for a module is optional, the module to enable logging for\nis also optional. **If only a level is provided, then the global log\nlevel for all modules is set to this value.**\n\nSome examples of valid values of `RUST_LOG` are:\n\n* `hello` turns on all logging for the 'hello' module\n* `trace` turns on all logging for the application, regardless of its name\n* `TRACE` turns on all logging for the application, regardless of its name (same as previous)\n* `info` turns on all info logging\n* `INFO` turns on all info logging (same as previous)\n* `hello=debug` turns on debug logging for 'hello'\n* `hello=DEBUG` turns on debug logging for 'hello' (same as previous)\n* `hello,std::option` turns on hello, and std's option logging\n* `error,hello=warn` turn on global error logging and also warn for hello\n* `error,hello=off`  turn on global error logging, but turn off logging for hello\n* `off` turns off all logging for the application\n* `OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n# #[macro_use] extern crate log;\n#[cfg(test)]\nmod tests {\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/env-logger-rs/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log/\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:132"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:14:1868","0:70:686","0:340:1875","0:341:1878","0:585:1886","0:342:1903","0:599:1917","0:437:2067","0:438:2077","0:439:2134","0:442:2149","0:445:1945","0:446:1943","0:332-0:262:1869"],"is_stripped":false}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2776:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12408:33539":{"id":"2:12408:33539","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39797:32366","Self::is_ascii":"2:12407:30277"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39797:32366","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:1659":{"id":"0:217:1659","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:276:1991","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"io::Write","id":"1:3501:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}},"2:12340:32418":{"id":"2:12340:32418","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11805:8259","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2782:231-0:33:1870":{"id":"a:2:2782:231-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:462:432":{"id":"0:462:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12407:30277":{"id":"2:12407:30277","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12287":{"id":"2:12287","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12288:833","2:12289:2365","2:12290:36951","2:12291:36952","2:12293:36953","2:12296:32367","2:12297:36954","2:12298:320","2:12299:319","2:12300:2120","2:12302:32385","2:12304:32386","2:12306:32387","2:12308:36955","2:12309:36956","2:12310:32409","2:12311:32410","2:12312:8278","2:12313:8544","2:12314:2583","2:12315:35268","2:12316:35264","2:12317:3906","2:12318:36957","2:12319:35261","2:12320:32426","2:12323:2401","2:12326:32427","2:12329:3603","2:12333:3563","2:12337:2381","2:12340:32418","2:12343:32420","2:12346:36958","2:12349:36959","2:12352:32422","2:12355:32424","2:12358:36960","2:12361:36961","2:12364:2098","2:12367:36962","2:12370:36963","2:12373:36964","2:12376:2390","2:12378:36965","2:12380:36966","2:12382:36967","2:12383:36968","2:12384:36969","2:12387:36970","2:12390:29937","2:12393:32428","2:12396:36971","2:12399:36972","2:12402:36973","2:12405:2042","2:12407:30277","2:12408:33539","2:12409:2955","2:12410:30281","2:12411:30282","2:12412:36974","2:12414:10448","2:12415:26650"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12302:32385":{"id":"2:12302:32385","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41765:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:98:2565":{"id":"0:98:2565","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2621"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:3101-0:571:2009":{"id":"a:2:8522:3101-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12313:8544":{"id":"2:12313:8544","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12033:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43701:8526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:686":{"id":"0:70:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:571:2009","0:269:132","0:257-0:92:1869","0:258-0:206:1869"],"is_stripped":false}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12310:32409":{"id":"2:12310:32409","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12311:32410"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8523:3100-0:342:1903":{"id":"a:2:8523:3100-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:100:2621":{"id":"b:2:2556-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:342:1903":{"id":"b:2:2263-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:44:2100":{"id":"0:44:2100","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[163,4],"end":[168,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:2621":{"id":"0:100:2621","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2765:223-0:100:2621","a:2:8523:3100-0:100:2621","a:2:2822:3177-0:100:2621","a:2:2782:231-0:100:2621","a:2:8522:3101-0:100:2621","b:2:2560-0:100:2621","b:2:2263-0:100:2621","b:2:2571-0:100:2621","b:2:2566-0:100:2621","b:2:2266-0:100:2621","b:2:2556-0:100:2621","b:2:3401-0:100:2621","b:5:5771-0:100:2621","0:112","0:103"]}}},"b:2:2556-0:33:1870":{"id":"b:2:2556-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8522:3101-0:100:2621":{"id":"a:2:8522:3101-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2765:223-0:508:2550":{"id":"a:2:2765:223-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:534:432":{"id":"0:534:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:543:2055":{"id":"a:2:2822:3177-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2332:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279:2110":{"id":"0:279:2110","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2918:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:961":{"id":"0:396:961","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[975,4],"end":[977,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:1943":{"id":"0:446:1943","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1242,0],"end":[1247,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12384:36969":{"id":"2:12384:36969","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12014:15786","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2028":{"id":"0:48:2028","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:466:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12290:36951":{"id":"2:12290:36951","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:9433:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:9433:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:476:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2560-0:508:2550":{"id":"b:2:2560-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210:233":{"id":"0:210:233","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2641","0:213:2643","0:215:2645"],"impls":["a:2:2765:223-0:210:233","a:2:8523:3100-0:210:233","a:2:2822:3177-0:210:233","a:2:2782:231-0:210:233","a:2:8522:3101-0:210:233","b:2:2560-0:210:233","b:2:2263-0:210:233","b:2:2571-0:210:233","b:2:2566-0:210:233","b:2:2266-0:210:233","b:2:2556-0:210:233","b:2:3401-0:210:233","0:220","0:218"]}}},"a:2:2822:3177-0:269:132":{"id":"a:2:2822:3177-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12393:32428":{"id":"2:12393:32428","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:458:2685":{"id":"b:2:2571-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:192:686":{"id":"0:192:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:1962":{"id":"0:375:1962","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[769,4],"end":[772,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:543:2055":{"id":"b:2:3401-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8522:3101-0:169:2537":{"id":"a:2:8522:3101-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:437:2067":{"id":"0:437:2067","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1140,0],"end":[1142,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:269:132":{"id":"b:2:2556-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41:1868":{"id":"0:41:1868","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[139,4],"end":[145,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:100:2621":{"id":"a:2:2822:3177-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2765:223-0:458:2685":{"id":"a:2:2765:223-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2566-0:210:233":{"id":"b:2:2566-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:100:2621":{"id":"b:2:2571-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12378:36965":{"id":"2:12378:36965","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530:1659":{"id":"0:530:1659","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:2:2765:223-0:100:2621":{"id":"a:2:2765:223-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:340:1875":{"id":"0:340:1875","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[301,0],"end":[301,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}}},"2:12370:36963":{"id":"2:12370:36963","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11989:6169","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::rmatch_indices":"2:12373:36964"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43875:8530","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2782:231-0:169:2537":{"id":"a:2:2782:231-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2560-0:33:1870":{"id":"b:2:2560-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:523:2785":{"id":"0:523:2785","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:179:2750":{"id":"0:179:2750","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:368:2023":{"id":"0:368:2023","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[647,4],"end":[650,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["suffix",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:100:2621":{"id":"b:2:2266-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8523:3100-0:585:1886":{"id":"a:2:8523:3100-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:206:1869":{"id":"0:206:1869","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:686","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:207-0:142:1869","0:208-0:115:1871"],"is_stripped":true}}},"2:12288:833":{"id":"2:12288:833","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12033:428"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12402:36973":{"id":"2:12402:36973","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:599:1917":{"id":"b:2:3401-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2327:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:628"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12399:36972":{"id":"2:12399:36972","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377:2067":{"id":"0:377:2067","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[792,4],"end":[803,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SetLoggerError","id":"24:352:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12323:2401":{"id":"2:12323:2401","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:585:1886":{"id":"0:585:1886","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[317,0],"end":[320,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:2765:223-0:585:1886","a:2:8523:3100-0:585:1886","a:2:2822:3177-0:585:1886","a:2:2782:231-0:585:1886","a:2:8522:3101-0:585:1886","b:2:2560-0:585:1886","b:2:2263-0:585:1886","b:2:2571-0:585:1886","b:2:2566-0:585:1886","b:2:2266-0:585:1886","b:2:2556-0:585:1886","b:2:3401-0:585:1886","0:423","0:589","0:427"]}}},"0:373:1470":{"id":"0:373:1470","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[739,4],"end":[742,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["target",{"resolved_path":{"name":"fmt::Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12309:36956":{"id":"2:12309:36956","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12039:1444","crate::ops::IndexMut":"2:3066:10469","str::slice_unchecked":"2:12308:36955"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:100:2621":{"id":"b:2:2566-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12382:36967":{"id":"2:12382:36967","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12316:35264":{"id":"2:12316:35264","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12315:35268"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44008:8535","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2574:128":{"id":"2:2574:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32268:9840","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"5:683:2128":{"id":"5:683:2128","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264-0:210:233":{"id":"0:264-0:210:233","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::Target","name":"Target","id":"0:210:233","glob":false}}},"b:2:2566-0:571:2009":{"id":"b:2:2566-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:281:686":{"id":"0:281:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:169:2537":{"id":"b:2:2556-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:576:2018":{"id":"0:576:2018","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:405:1889":{"id":"0:405:1889","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1019,4],"end":[1026,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:2125":{"id":"0:410:2125","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1044,4],"end":[1051,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:1868":{"id":"0:385:1868","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[892,4],"end":[894,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2560-0:599:1917":{"id":"b:2:2560-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2822:3177-0:210:233":{"id":"a:2:2822:3177-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2765:223-0:571:2009":{"id":"a:2:2765:223-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2566-0:543:2055":{"id":"b:2:2566-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2560-0:585:1886":{"id":"b:2:2560-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:438:2077":{"id":"0:438:2077","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1153,0],"end":[1155,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12352:32422":{"id":"2:12352:32422","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169","str::rsplitn":"2:12355:32424"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43829:3017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12329:3603":{"id":"2:12329:3603","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41765:181","prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12412:36974":{"id":"2:12412:36974","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4541:36974"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44024:8455","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:1943":{"id":"0:381:1943","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[862,4],"end":[867,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:358:1994":{"id":"0:358:1994","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[590,4],"end":[593,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:100:2621":{"id":"b:2:3401-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:266-0:543:2055":{"id":"0:266-0:543:2055","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:2055","glob":false}}},"2:12300:2120":{"id":"2:12300:2120","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41765:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8523:3100-0:169:2537":{"id":"a:2:8523:3100-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12358:36960":{"id":"2:12358:36960","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:458:2685":{"id":"a:2:2822:3177-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2571-0:210:233":{"id":"b:2:2571-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:388:2100":{"id":"0:388:2100","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2782:231-0:543:2055":{"id":"a:2:2782:231-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:93-0:81:2609":{"id":"0:93-0:81:2609","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:81:2609","glob":true}}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:99:2566":{"id":"0:99:2566","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2621"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:361:2001":{"id":"0:361:2001","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[608,4],"end":[611,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:169:2537":{"id":"a:2:2822:3177-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:525:2786":{"id":"0:525:2786","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:527:1659"]},"discriminant":null}}},"0:532:1661":{"id":"0:532:1661","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:542:628":{"id":"0:542:628","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:2551":{"id":"0:509:2551","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2566-0:508:2550":{"id":"b:2:2566-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2548","0:146:2688","0:147:2560"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1096,0],"end":[1103,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2607:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:496:686":{"id":"0:496:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208-0:115:1871":{"id":"0:208-0:115:1871","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:115:1871","glob":true}}},"0:145:2548":{"id":"0:145:2548","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:686":{"id":"0:536:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439:2134":{"id":"0:439:2134","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1185,0],"end":[1192,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:36:1917":{"id":"a:2:2822:3177-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:237:60":{"id":"0:237:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:1871":{"id":"0:115:1871","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:210:233","0:543:2055"],"is_stripped":true}}},"0:342:1903":{"id":"0:342:1903","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[347,0],"end":[351,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log/\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:2765:223-0:342:1903","a:2:8523:3100-0:342:1903","a:2:2822:3177-0:342:1903","a:2:2782:231-0:342:1903","a:2:8522:3101-0:342:1903","b:2:2560-0:342:1903","b:2:2263-0:342:1903","b:2:2571-0:342:1903","b:2:2566-0:342:1903","b:2:2266-0:342:1903","b:2:2556-0:342:1903","b:2:3401-0:342:1903","0:433","0:387"]}}},"0:169:2537":{"id":"0:169:2537","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2765:223-0:169:2537","a:2:8523:3100-0:169:2537","a:2:2822:3177-0:169:2537","a:2:2782:231-0:169:2537","a:2:8522:3101-0:169:2537","b:2:2560-0:169:2537","b:2:2263-0:169:2537","b:2:2571-0:169:2537","b:2:2566-0:169:2537","b:2:2266-0:169:2537","b:2:2556-0:169:2537","b:2:3401-0:169:2537","b:5:5771-0:169:2537","0:478","0:488","0:498","0:463","0:468","0:473","0:483","0:503","0:493"]}}},"a:2:2765:223-0:36:1917":{"id":"a:2:2765:223-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:551:432":{"id":"0:551:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:33:1870":{"id":"a:2:2765:223-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2556-0:599:1917":{"id":"b:2:2556-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:585:1886":{"id":"b:2:2263-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12333:3563":{"id":"2:12333:3563","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41765:181","prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:686":{"id":"0:63:686","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[278,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:269:132":{"id":"a:2:2765:223-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:369:2028":{"id":"0:369:2028","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[666,4],"end":[669,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:1869":{"id":"0:92:1869","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:686","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:93-0:81:2609"],"is_stripped":true}}},"0:36:1917":{"id":"0:36:1917","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[110,0],"end":[114,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:45","a:2:2765:223-0:36:1917","a:2:8523:3100-0:36:1917","a:2:2822:3177-0:36:1917","a:2:2782:231-0:36:1917","a:2:8522:3101-0:36:1917","b:2:2560-0:36:1917","b:2:2263-0:36:1917","b:2:2571-0:36:1917","b:2:2566-0:36:1917","b:2:2266-0:36:1917","b:2:2556-0:36:1917","b:2:3401-0:36:1917","0:58","0:62"]}}},"b:2:3401-0:571:2009":{"id":"b:2:3401-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:360:1999":{"id":"0:360:1999","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[602,4],"end":[605,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9634:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:747"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:367:2020":{"id":"0:367:2020","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[642,4],"end":[644,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:543:2055":{"id":"a:2:2765:223-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1087,0],"end":[1094,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::borrow::Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3403:1538":{"id":"2:3403:1538","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39610:8324","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:1870":{"id":"0:33:1870","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[82,0],"end":[85,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:40","a:2:2765:223-0:33:1870","a:2:8523:3100-0:33:1870","a:2:2822:3177-0:33:1870","a:2:2782:231-0:33:1870","a:2:8522:3101-0:33:1870","b:2:2560-0:33:1870","b:2:2263-0:33:1870","b:2:2571-0:33:1870","b:2:2566-0:33:1870","b:2:2266-0:33:1870","b:2:2556-0:33:1870","b:2:3401-0:33:1870","0:60"]}}},"b:2:2266-0:543:2055":{"id":"b:2:2266-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:572:2012":{"id":"0:572:2012","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:95:2008":{"id":"0:95:2008","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2776:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:436:686":{"id":"0:436:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1118,8],"end":[1127,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:169:2537":{"id":"b:2:2571-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:364:2011":{"id":"0:364:2011","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[122,0],"end":[169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:1868","0:43:2098","0:44:2100"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:341:1878":{"id":"0:341:1878","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[304,0],"end":[304,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}}},"0:402:2119":{"id":"0:402:2119","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[1005,4],"end":[1012,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2562:712":{"id":"2:2562:712","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5510:37629":{"id":"5:5510:37629","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1991","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1991","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12396:36971":{"id":"2:12396:36971","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2777:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","write_all_vectored","is_write_vectored","write_all","write_fmt","write_vectored"],"trait":{"name":"Write","id":"1:3501:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:1997","0:279:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8523:3100-0:100:2621":{"id":"a:2:8523:3100-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1117,4],"end":[1128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257-0:92:1869":{"id":"0:257-0:92:1869","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::humantime::glob","name":"glob","id":"0:92:1869","glob":true}}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2775:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3401-0:508:2550":{"id":"b:2:3401-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8522:3101-0:543:2055":{"id":"a:2:8522:3101-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2560-0:543:2055":{"id":"b:2:2560-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:1943":{"id":"0:47:1943","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384:1969":{"id":"0:384:1969","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:169:2537":{"id":"a:2:2765:223-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:113:686":{"id":"0:113:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:33:1870":{"id":"b:2:2571-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2556-0:508:2550":{"id":"b:2:2556-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:397:1868":{"id":"0:397:1868","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[980,4],"end":[987,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:559:747":{"id":"0:559:747","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9642:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372:1960":{"id":"0:372:1960","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[716,4],"end":[719,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:458:2685":{"id":"b:2:2566-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8522:3101-0:33:1870":{"id":"a:2:8522:3101-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2782:231-0:585:1886":{"id":"a:2:2782:231-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12306:32387":{"id":"2:12306:32387","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:682:2757":{"id":"5:682:2757","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2560-0:36:1917":{"id":"b:2:2560-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:178:2746":{"id":"0:178:2746","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:3101-0:508:2550":{"id":"a:2:8522:3101-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:680-0:508:2550":{"id":"b:5:680-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2279:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2757","5:683:2128","5:684:3621"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8522:3101-0:210:233":{"id":"a:2:8522:3101-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:543:2055":{"id":"b:2:2263-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5771-0:169:2537":{"id":"b:5:5771-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5773:1502"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":"default","docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2607:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:142:1869":{"id":"0:142:1869","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1871","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:143-0:123:2609"],"is_stripped":true}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:9431:2765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:9431:2765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:491:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:466:686":{"id":"0:466:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:571:2009":{"id":"b:2:2556-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:599:1917":{"id":"0:599:1917","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[377,0],"end":[382,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# #[macro_use] extern crate log;\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:2765:223-0:599:1917","a:2:8523:3100-0:599:1917","a:2:2822:3177-0:599:1917","a:2:2782:231-0:599:1917","a:2:8522:3101-0:599:1917","b:2:2560-0:599:1917","b:2:2263-0:599:1917","b:2:2571-0:599:1917","b:2:2566-0:599:1917","b:2:2266-0:599:1917","b:2:2556-0:599:1917","b:2:3401-0:599:1917","0:435","0:604"]}}},"0:389:1862":{"id":"0:389:1862","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[907,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1866","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[902,0],"end":[971,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:2100","0:389:1862","0:393:2110"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2569:128":{"id":"2:2569:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:5:5771-0:100:2621":{"id":"b:5:5771-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1502"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:481:686":{"id":"0:481:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:3101-0:458:2685":{"id":"a:2:8522:3101-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:210:233":{"id":"b:2:2263-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262:1869":{"id":"0:262:1869","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:264-0:210:233","0:265-0:571:2009","0:266-0:543:2055"],"is_stripped":true}}},"b:2:3401-0:458:2685":{"id":"b:2:3401-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2765:223-0:342:1903":{"id":"a:2:2765:223-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12409:2955":{"id":"2:12409:2955","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501:686":{"id":"0:501:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2765:223-0:585:1886":{"id":"a:2:2765:223-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12410:30281":{"id":"2:12410:30281","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2607:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2782:231-0:458:2685":{"id":"a:2:2782:231-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:9437:2767","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:9437:2767","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:501:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12319:35261":{"id":"2:12319:35261","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44017:8277","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12304:32386":{"id":"2:12304:32386","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10083:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:508:2550":{"id":"a:2:2822:3177-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:548:2590":{"id":"0:548:2590","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:471:686":{"id":"0:471:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:2550":{"id":"0:508:2550","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2551","0:511:2691","0:513:2692","0:515:2694","0:517:2690","0:519:2784","0:521:2693","0:523:2785","0:525:2786","0:528:2787"],"impls":["a:2:2765:223-0:508:2550","a:2:8523:3100-0:508:2550","a:2:2822:3177-0:508:2550","a:2:2782:231-0:508:2550","a:2:8522:3101-0:508:2550","b:2:2560-0:508:2550","b:2:2263-0:508:2550","b:2:2571-0:508:2550","b:2:2566-0:508:2550","b:2:2266-0:508:2550","b:2:2556-0:508:2550","b:2:3401-0:508:2550","b:5:680-0:508:2550","0:537","0:538","0:533","0:540","0:535","0:541"]}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8522:3101-0:36:1917":{"id":"a:2:8522:3101-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2266-0:508:2550":{"id":"b:2:2266-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2782:231-0:210:233":{"id":"a:2:2782:231-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:554:686":{"id":"0:554:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:269:132":{"id":"b:2:3401-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12390:29937":{"id":"2:12390:29937","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2782:231-0:36:1917":{"id":"a:2:2782:231-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:376:2060":{"id":"0:376:2060","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[778,4],"end":[781,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["is_test",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143-0:123:2609":{"id":"0:143-0:123:2609","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:123:2609","glob":true}}},"a:2:8522:3101-0:599:1917":{"id":"a:2:8522:3101-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:221:686":{"id":"0:221:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:1997":{"id":"0:278:1997","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2918:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:1868":{"id":"0:371:1868","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[707,4],"end":[710,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12291:36952":{"id":"2:12291:36952","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:2123":{"id":"0:407:2123","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1031,4],"end":[1039,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:458:2685":{"id":"b:2:2263-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12326:32427":{"id":"2:12326:32427","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12033:428","self::pattern":"2:11989:6169"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12009:15787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:574:2015":{"id":"0:574:2015","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:511:2691":{"id":"0:511:2691","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8523:3100-0:599:1917":{"id":"a:2:8523:3100-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12317:3906":{"id":"2:12317:3906","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43979:3054","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12414:10448":{"id":"2:12414:10448","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4542:10448"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44033:8215","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355:1975":{"id":"0:355:1975","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:81:2609":{"id":"0:81:2609","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1672","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:100:2621"],"is_stripped":true}}},"b:2:2571-0:342:1903":{"id":"b:2:2571-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104:686":{"id":"0:104:686","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:3621":{"id":"5:684:3621","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:1946":{"id":"0:351:1946","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[488,4],"end":[503,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["env",{"generic":"E"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:585:1886":{"id":"b:2:3401-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2607:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265-0:571:2009":{"id":"0:265-0:571:2009","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:2009","glob":false}}},"0:434:686":{"id":"0:434:686","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1110,8],"end":[1114,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2822:3177-0:599:1917":{"id":"a:2:2822:3177-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2822:3177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:599:1917":{"id":"b:2:2263-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2775:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2566-0:269:132":{"id":"b:2:2566-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180:2555":{"id":"0:180:2555","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9423:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:471:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2263-0:33:1870":{"id":"b:2:2263-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:52:2042":{"id":"0:52:2042","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[216,4],"end":[225,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1868":{"id":"0:50:1868","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[206,4],"end":[209,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41763:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:33:1870":{"id":"b:2:3401-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:36:1917":{"id":"b:2:2571-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2566-0:169:2537":{"id":"b:2:2566-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:393:2110":{"id":"0:393:2110","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[970,4],"end":[970,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12346:36958":{"id":"2:12346:36958","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11989:6169","str::split":"2:12337:2381","prim@char":"1:12033:428","`DoubleEndedIterator`":"2:7438:121","str::rsplit_terminator":"2:12349:36959"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43775:8528","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:9429:2766","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:9429:2766","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:496:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[833,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:961","0:348:1943","0:351:1946","0:354:1969","0:355:1975","0:356:697","0:358:1994","0:359:1996","0:360:1999","0:361:2001","0:362:2004","0:363:2007","0:364:2011","0:365:2014","0:366:2017","0:367:2020","0:368:2023","0:369:2028","0:370:2033","0:371:1868","0:372:1960","0:373:1470","0:374:1889","0:375:1962","0:376:2060","0:377:2067","0:378:2077","0:379:2069"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3401-0:342:1903":{"id":"b:2:3401-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:347:961":{"id":"0:347:961","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[411,4],"end":[413,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2033":{"id":"0:49:2033","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:269:132":{"id":"b:2:2263-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:379:2069":{"id":"0:379:2069","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[823,4],"end":[832,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:546:2655":{"id":"0:546:2655","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1109,4],"end":[1115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:544:2653":{"id":"0:544:2653","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2560-0:458:2685":{"id":"b:2:2560-0:458:2685","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12411:30282":{"id":"2:12411:30282","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5525:37632":{"id":"5:5525:37632","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:2115":{"id":"0:399:2115","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[992,4],"end":[1000,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:582:432":{"id":"0:582:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5528:30279":{"id":"5:5528:30279","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12410:30281"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:3101-0:585:1886":{"id":"a:2:8522:3101-0:585:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2571-0:269:132":{"id":"b:2:2571-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8523:3100-0:543:2055":{"id":"a:2:8523:3100-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2575:1524":{"id":"2:2575:1524","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41908:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:426:712":{"id":"0:426:712","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["filter_env",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[277,0],"end":[288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2266-0:269:132":{"id":"b:2:2266-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:571:2009":{"id":"0:571:2009","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:2012","0:574:2015","0:576:2018","0:578:2021"],"impls":["a:2:2765:223-0:571:2009","a:2:8523:3100-0:571:2009","a:2:2822:3177-0:571:2009","a:2:2782:231-0:571:2009","a:2:8522:3101-0:571:2009","b:2:2560-0:571:2009","b:2:2263-0:571:2009","b:2:2571-0:571:2009","b:2:2566-0:571:2009","b:2:2266-0:571:2009","b:2:2556-0:571:2009","b:2:3401-0:571:2009","b:5:680-0:571:2009","0:583","0:581","0:267","0:580"]}}},"a:2:2782:231-0:599:1917":{"id":"a:2:2782:231-0:599:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2560-0:169:2537":{"id":"b:2:2560-0:169:2537","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5514:37630":{"id":"5:5514:37630","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:342:1903":{"id":"b:2:2266-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:43:2098":{"id":"0:43:2098","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[148,4],"end":[160,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1866","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8523:3100-0:36:1917":{"id":"a:2:8523:3100-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8523:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9418:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:60":{"id":"0:59:60","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[263,4],"end":[265,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:2077":{"id":"0:378:2077","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[814,4],"end":[817,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2777:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:563:628":{"id":"0:563:628","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[262,0],"end":[266,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2607:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:176:2695":{"id":"0:176:2695","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2685","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:132":{"id":"0:269:132","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:2765:223-0:269:132","a:2:8523:3100-0:269:132","a:2:2822:3177-0:269:132","a:2:2782:231-0:269:132","a:2:8522:3101-0:269:132","b:2:2560-0:269:132","b:2:2263-0:269:132","b:2:2571-0:269:132","b:2:2566-0:269:132","b:2:2266-0:269:132","b:2:2556-0:269:132","b:2:3401-0:269:132","0:280","0:277"]}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[973,0],"end":[1056,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:961","0:397:1868","0:399:2115","0:402:2119","0:405:1889","0:407:2123","0:410:2125"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3401-0:36:1917":{"id":"b:2:3401-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2266-0:571:2009":{"id":"b:2:2266-0:571:2009","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:9425:2763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:9425:2763","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:481:686"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:442:2149":{"id":"0:442:2149","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1217,0],"end":[1223,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3401-0:210:233":{"id":"b:2:3401-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3399:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3403:1538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5517:37631":{"id":"5:5517:37631","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:458:2685":{"id":"0:458:2685","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:2765:223-0:458:2685","a:2:8523:3100-0:458:2685","a:2:2822:3177-0:458:2685","a:2:2782:231-0:458:2685","a:2:8522:3101-0:458:2685","b:2:2560-0:458:2685","b:2:2263-0:458:2685","b:2:2571-0:458:2685","b:2:2566-0:458:2685","b:2:2266-0:458:2685","b:2:2556-0:458:2685","b:2:3401-0:458:2685","b:5:680-0:458:2685","0:191","0:461"]}}},"0:359:1996":{"id":"0:359:1996","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[596,4],"end":[599,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:2033":{"id":"0:370:2033","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[685,4],"end":[688,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12337:2381":{"id":"2:12337:2381","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11989:6169","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::split_whitespace":"2:12315:35268","str::rsplit":"2:12343:32420"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43725:3016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12364:2098":{"id":"2:12364:2098","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11989:6169","`DoubleEndedIterator`":"2:7438:121","prim@char":"1:12033:428","str::rmatches":"2:12367:36962"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43929:3012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11994:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8522:3101-0:269:132":{"id":"a:2:8522:3101-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8522:3101","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2566-0:36:1917":{"id":"b:2:2566-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2536:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:128","2:2570:1525"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:517:2690":{"id":"0:517:2690","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12380:36966":{"id":"2:12380:36966","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12298:320":{"id":"2:12298:320","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12299:319","`u8`":"1:12050:1547"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:686":{"id":"0:61:686","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[269,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9393:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9382:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:60":{"id":"0:429:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1097,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12376:2390":{"id":"2:12376:2390","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:508:2550":{"id":"b:2:2263-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2257:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:1859"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2560-0:210:233":{"id":"b:2:2560-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2562:712"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12289:2365":{"id":"2:12289:2365","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5526:37633":{"id":"5:5526:37633","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1991","`String`":"5:7449:227"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1991","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2556-0:342:1903":{"id":"b:2:2556-0:342:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:508:2550":{"id":"b:2:2571-0:508:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2540:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2574:128","2:2575:1524"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2556-0:543:2055":{"id":"b:2:2556-0:543:2055","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2055","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12415:26650":{"id":"2:12415:26650","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4539:26650"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44042:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:2693":{"id":"0:521:2693","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2782:231-0:100:2621":{"id":"a:2:2782:231-0:100:2621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:519:2784":{"id":"0:519:2784","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[171,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:46:961","0:47:1943","0:48:2028","0:49:2033","0:50:1868","0:52:2042","0:53:2069"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2556-0:210:233":{"id":"b:2:2556-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2533:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2530:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2559:1958"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2782:231-0:269:132":{"id":"a:2:2782:231-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:356:697":{"id":"0:356:697","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[579,4],"end":[585,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["format",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3007:1989","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1866","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"resolved_path":{"name":"io::Result","id":"1:2918:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2782:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5527:3076":{"id":"5:5527:3076","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2266-0:36:1917":{"id":"b:2:2266-0:36:1917","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1917","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2266-0:33:1870":{"id":"b:2:2266-0:33:1870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2772:3176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2260:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1870","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2268:2527"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2268:2527":{"id":"2:2268:2527","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207-0:142:1869":{"id":"0:207-0:142:1869","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1869","glob":true}}},"a:2:2765:223-0:210:233":{"id":"a:2:2765:223-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2765:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"6:4794:5626":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"30:4809:39743":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"16:6352:7736":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"22:1086:6037":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"17:14522:7493":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:45735:8569":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:43260:8507":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"29:4564:4624":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:50036:10658":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:4254:2921":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:39797:32366":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:5626:4208":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:1075:6523":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:4456:5468":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:2690:9907":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:6930:4170":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:4949:4624":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"31:7369:5073":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"18:690:6021":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:32308:7899":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"29:5321:5558":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:6429:3151":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:44146:8542":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"26:181:2621":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"2:42040:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"31:6711:9739":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"29:9252:9786":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"29:8017:5870":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:10083:225":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"31:6686:9730":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"1:6165:4214":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"22:1668:6165":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"23:844:6031":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"33:221:3172":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"2:12827:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:40551:1870":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:12004:10455":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"31:5521:27839":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"2:46404:8599":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:4788:36736":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"18:609:6005":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:3508:4144":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"30:3670:39739":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"17:9650:6644":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:41848:3231":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"29:7993:5865":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"33:161:2638":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"21:2048:132":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"1:10535:2641":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:5088:7610":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:13632:7263":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:11235:3110":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"29:5194:5526":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:1477:2326":{"crate_id":2,"path":["core","mem"],"kind":"module"},"29:7002:5743":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"21:1322:6247":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"16:6156:7692":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"26:99:2615":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"20:2169:3019":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"2:40347:8458":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"31:5748:5241":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"22:1596:1917":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"6:4781:5620":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:42522:2763":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"20:2211:3007":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"16:7677:200":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"24:151:1864":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"0:14:1868":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"18:481:5990":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"11:2194:9841":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:12154:6894":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:6156:5847":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"29:4927:5468":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:40541:8468":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"29:4998:5481":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:40601:8473":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:8003:8750":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:11719:22641":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:7660:7937":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:119:16281":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:42001:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"29:1726:4413":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13914:7318":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:9682:3898":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"23:0:2800":{"crate_id":23,"path":["memchr"],"kind":"module"},"31:5560:4568":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"1:6983:9539":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:12585:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:5051:8715":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:41087:8244":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"20:1574:6349":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"2:40441:4177":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:12057:1160":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:3261:2641":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"29:5650:5623":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"23:665:141":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:4550:5515":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:1663:5348":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:41031:8238":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:4985:3037":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:1717:5364":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"29:2136:4865":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7102:22574":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:2893:15896":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:8394:10591":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:9617:38447":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:21:699":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:1570:6293":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:1426:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"16:4641:7597":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"20:2238:3008":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"31:5226:9659":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"31:4467:4297":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"5:5128:3091":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"31:5009:9652":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"5:3171:3942":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:11137:6798":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"29:1987:4430":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:12598:6986":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"22:1659:6163":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"17:12645:6991":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:6820:5943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"21:1442:26630":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"2:9114:35524":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"29:4675:5408":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6485:7558":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2855:15892":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:2488:15851":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"31:5739:4641":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"5:4348:248":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"24:357:2967":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"11:1822:3568":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:8072:7990":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:2450:7535":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:8554:3942":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:40847:8236":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"11:736:8095":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"29:7302:5829":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:7528:6522":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"20:1545:212":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"16:5727:7629":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:41951:3942":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:8181:7576":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"21:1416:26622":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"1:8295:10554":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"30:3821:26731":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"5:895:3942":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:4824:5638":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"31:6640:4899":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"17:13202:7096":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:1743:15923":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:11327:6821":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:4135:31948":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:11473:6606":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:4569:10573":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:22098:6466":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:6968:22573":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:8229:3054":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"20:2496:3011":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"5:6558:3568":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"29:1781:4434":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12267:6923":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"31:6677:4904":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"26:194:128":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"1:10764:10056":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"15:306:21661":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"21:2200:3069":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"5:6485:4127":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:12293:6928":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"30:5074:5217":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"},"5:3735:8183":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:3764:7583":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"22:1013:6064":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"1:7879:8747":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"5:3581:3942":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:4774:7600":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:6960:7819":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"22:1698:3011":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"5:2243:9007":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:10538:2643":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"29:5981:9769":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"20:1693:38514":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"21:2078:6328":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"17:9070:6630":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:10628:6731":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:12711:7001":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:5562:5844":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"31:7076:27851":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"30:4541:5187":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"6:488:4598":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"31:5712:4625":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"2:21228:10641":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:2918:212":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:10165:22667":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"20:2005:6492":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"1:8339:5028":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"29:6847:5729":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"31:5594:4589":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"17:8895:22632":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:0:2798":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:2861:7856":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:5435:7614":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:5798:7633":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:13778:7287":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:30288:10524":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"33:79:3167":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"1:3345:2675":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"0:70:686":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"1:4742:10544":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"29:1762:5257":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"31:4536:4305":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"29:9246:5669":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"31:5292:4502":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"31:5650:4599":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"17:13174:7092":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:12136:6893":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:11910:6873":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:39445:202":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"10:44:8113":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:45990:8579":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"29:522:4598":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"2:45781:8571":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:2166:602":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:43028:8500":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"31:6431:4868":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"31:4628:9630":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"20:1914:6483":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"1:3843:8704":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:9429:2766":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:2504:7537":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:923:8096":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:44460:10050":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"13:226:8981":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:4328:5398":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:7661:1917":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:22885:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"0:437:2067":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"2:21212:10513":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:9998:6623":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:9119:9011":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:4800:5629":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:4678:5077":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:532:5235":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:46784:8622":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"5:7365:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"11:119:4115":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"21:1919:6313":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"29:2167:5365":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"31:5825:4656":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"22:1315:26664":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"16:7544:7931":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"31:7278:5048":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"24:326:2966":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"2:42079:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:2595:3058":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"29:7074:5771":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"31:5754:9684":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"2:10556:8266":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"31:4975:4418":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:1590:5297":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"22:1102:6086":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"16:6083:21678":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"29:7925:5048":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:9677:3897":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:3642:3568":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:47770:8664":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"30:479:9422":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"6:4389:5438":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:8953:22634":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:12184:6898":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"28:19:3134":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"2:41900:195":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:13298:7114":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:7523:7930":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"14:221:8090":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:3049:21708":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"31:5983:9714":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"2:2279:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:39430:8319":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:4984:5676":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"0:585:1886":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"17:13611:7258":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"23:97:26591":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"29:9263:9790":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:12685:6998":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:1064:8104":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"20:1842:38508":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"1:8178:3053":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"26:101:2612":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"21:1208:3069":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"17:14478:7486":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:21843:10644":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:3720:3068":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"21:254:39206":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"6:4917:9872":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"31:7117:5004":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"1:6612:3161":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:21373:10513":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"6:5900:5755":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:14324:7443":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"31:5236:5261":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"16:2428:7534":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:10829:3052":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"20:2012:6417":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"6:5849:5730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"29:8035:5028":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:40683:8233":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:6671:5061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:643:10450":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:4446:5465":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:43989:8533":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:40644:8475":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"21:2455:4105":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"30:4867:5215":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"5:3568:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:10990:8821":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:10255:3943":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:1426:3943":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"29:8924:5970":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:44520:3116":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:2524:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"5:1011:4127":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"11:844:8102":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:43591:8517":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:11023:6787":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:2540:240":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"29:9240:5668":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"30:466:26716":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"21:2404:6300":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"17:10661:6737":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:5963:7654":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:21719:8286":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:10947:3647":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"25:0:2791":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"16:6332:7555":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"29:5763:5640":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"20:2599:3013":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"21:0:2913":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"2:48100:8676":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:2533:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:11805:8259":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"31:5814:4652":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:41763:183":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:7377:34724":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:11507:22639":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:7436:7665":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"21:1107:6190":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"2:46428:8600":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:11815:6860":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:8825:22630":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:2012:6526":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"20:1433:38512":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"29:5857:5656":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:1073:8108":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:4685:5571":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:5395:8716":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:26142:250":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"22:1225:6098":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"17:10316:6696":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:2782:231":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:12465:6965":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:6687:7780":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:11151:6799":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:6573:5048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:9423:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:7568:7572":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:2332:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:7547:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:42515:2764":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:7598:4221":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"11:760:4158":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:21142:10650":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"31:5610:4594":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"28:67:26670":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"21:2510:6355":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"17:13546:7219":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:22522:179":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"29:5922:5678":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:579:5243":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:5866:7646":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"29:5903:5670":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"20:1213:3009":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"29:4905:5465":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:7546:5668":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:2839:3112":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:5828:3158":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:7272:9784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:7892:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"29:5836:5651":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:910:8109":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"11:836:8101":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:47234:8629":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"29:8856:5969":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:2635:3067":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:4524:5503":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:8524:3233":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11595:8857":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:4518:5500":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:6439:4144":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12024:6880":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:4497:10556":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"24:241:2964":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"17:400:6518":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:8361:8709":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:40243:8451":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:46896:8624":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"20:1231:6396":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"31:6578:9726":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:12934:7051":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:12911:7050":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:31084:185":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:21397:10513":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:4759:686":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:10214:6688":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:46479:8601":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13010:7060":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:43604:8518":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:21404:10651":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:1302:8108":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:2305:21705":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:42529:2766":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:7722:7564":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"21:1309:6245":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"5:878:4135":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"21:2665:6367":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"2:48230:8682":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:30520:3685":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"23:681:5999":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:2359:7531":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:619:8689":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:4496:5486":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:10637:6732":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:11191:6538":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:573:4600":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:12543:6977":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:3250:15829":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:586:10447":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"26:134:128":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"11:2201:2985":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"29:4651:5398":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:44033:8215":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"22:1611:6152":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"2:21960:8288":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"11:399:38424":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:1709:5361":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"20:1965:6405":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"9:0:2792":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"29:8458:5963":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:261:6516":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"31:5020:4430":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"1:9285:3642":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:46030:8581":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"29:1802:5261":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"31:5765:4645":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"21:2109:6209":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"0:599:1917":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"1:8235:8794":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:2969:21707":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:4889:7604":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"31:6108:27843":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"21:2423:4106":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"31:6138:4750":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"18:644:5991":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:7231:37966":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:9425:2763":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:3501:2528":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:7295:5970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"20:1861:38519":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"17:9790:38451":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"21:1518:26626":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"11:1852:6295":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:7768:8314":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:12074:6885":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:44757:8567":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"20:2047:6496":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"2:41069:4183":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"22:1107:6059":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"29:4770:5438":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:11872:6871":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:10532:3072":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:9531:38452":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:4165:10551":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:22753:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:46738:8621":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:5967:5798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:10528:8264":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:3217:37992":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11788:6858":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:14024:7345":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"20:1647:6446":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"20:2346:3021":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"17:13792:7290":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:638:8692":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:1837:3642":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:7933:3068":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:21156:15912":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"17:12123:6892":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:5920:5771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:8317:8800":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"16:5743:7630":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:1980:187":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"17:8713:22627":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"0:574:2015":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"31:5696:4621":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"31:6743:9760":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"17:10903:6780":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:2722:7546":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"21:2099:4101":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"1:8945:10615":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"29:8105:5061":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"29:8134:5872":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:44732:8566":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"5:7253:200":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:1603:5304":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:1673:5354":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:11951:6876":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:6792:7806":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"29:4605:5380":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"31:6325:4836":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"29:728:4600":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"31:5781:9697":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"31:5104:27837":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"30:3192:5093":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"17:9607:6643":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"22:1281:6048":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"17:11124:6797":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:46160:8591":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"31:6473:4874":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"2:41045:3151":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"31:6043:4731":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"31:7227:5022":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"2:20820:35357":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:9634:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:14221:7423":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:12496:6971":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:952:8102":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:4417:7590":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"9:357:21572":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:8134:7996":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:9383:2528":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"29:8377:5943":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:8913:10614":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"20:1512:6402":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"31:7235:5028":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"2:7400:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"5:1503:8093":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:40321:8457":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:2178:15913":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:46336:8596":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"21:1602:26628":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"11:97:10035":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:12014:15786":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"20:2054:6497":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"5:2223:37965":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:2966:38140":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:4872:5656":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"33:339:2677":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"2:46557:8603":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"22:1413:6116":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"29:7345:5842":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10126:6677":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:4032:4127":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:8659:22613":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"29:6893:5073":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"29:7021:5748":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"29:6721:4673":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"22:1333:6111":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"29:5496:5591":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:39571:2979":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:3223:3073":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:3444:3045":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:21195:10646":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"22:998:6061":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"2:9881:4189":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"20:1654:6447":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"17:11617:6844":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"5:1442:3568":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"31:5788:4648":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"22:1437:6053":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"31:7261:5047":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"2:3223:15904":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10456:6711":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:43521:8512":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:2873:15894":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"30:3379:5095":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"1:12043:658":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:9156:3111":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:13685:7268":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:12790:4199":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:43613:8519":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"29:8402:5952":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:9078:9014":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:526:5232":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:41737:8251":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"23:872:6036":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:22122:8294":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:595:5253":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:8115:7993":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:6171:5858":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:7730:10454":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"29:7203:5811":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:13148:7090":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:41908:212":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"31:6785:27848":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"6:4963:5665":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:7363:15884":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:6598:3160":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"0:269:132":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"2:40215:8448":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:47978:8668":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"29:4714:4599":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"23:81:26590":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:7862:7953":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:7067:7839":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:3263:3074":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:4664:5570":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"29:5433:5578":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"20:1880:6478":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"17:10588:6726":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"31:5618:4595":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"5:7245:3568":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"33:358:2550":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"20:987:3014":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"2:2536:241":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"22:1501:6133":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"2:40823:3056":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"31:6923:4954":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"2:9433:196":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:9437:2767":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:3942:10526":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:13554:7222":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:7503:7569":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:12215:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:644:3943":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"31:4822:9641":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"2:7115:3078":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:6469:3159":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:7857:8744":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:276:1991":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:5308:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"22:1247:6370":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"2:44472:10053":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:2886:7857":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:3915:7587":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:14:1997":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:8560:8816":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"29:5987:9771":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:44499:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"31:5245:5232":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"31:5913:4673":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"21:2311:6282":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"5:7199:8197":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"29:2005:5329":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:10575:6725":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"6:4955:5660":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"26:100:2613":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"11:1538:8111":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"29:4581:5371":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"29:1929:5299":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"31:5085:4462":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"2:20837:35362":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:6744:5895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:11761:6857":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"21:1188:1872":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"9:177:8997":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:6960:15879":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:7025:4218":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"21:2553:6194":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"1:2885:4205":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:5082:8715":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"31:5275:5656":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"29:539:4597":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"29:5136:5513":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:1288:8103":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"20:1790:6468":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"17:11358:22761":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"5:5839:4144":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:4380:5433":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:3232:6534":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:44715:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:10578:3449":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:7694:7573":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:6598:4311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"29:5742:5638":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:5588:7559":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"11:365:4119":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:41814:3567":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:30480:3099":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"29:7185:5810":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:3600:7582":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"21:1184:6211":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"5:7282:3568":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"31:6623:4894":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"22:1560:6144":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"1:11037:4225":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:46306:8595":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:3183:37993":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:14100:7367":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"14:202:15801":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:30514:3684":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:43725:3016":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"18:113:26592":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:46660:8605":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:4053:7588":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"29:9234:5667":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:42157:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:4002:4144":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:536:7511":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:1569:5284":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"30:3845:21594":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"2:20971:10513":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:3007:1989":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:12007:6879":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"23:753:6011":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:44659:197":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:2960:38139":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:5318:4127":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:0:1436":{"crate_id":1,"path":["std"],"kind":"module"},"5:5366:15775":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:5955:5793":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:7828:7949":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:3738:8702":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:7517:5973":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"14:40:6874":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:4906:10580":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:3244:15830":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:5384:22565":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:6565:4636":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:4186:10553":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:4527:7593":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7768:7562":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:14076:7362":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"31:7219:5019":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"22:1060:26664":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"21:268:39207":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"2:43743:8262":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:10106:8835":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"1:8502:10604":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"20:1707:38461":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"2:4005:8217":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"29:5817:4339":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:4854:4339":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"5:7463:8205":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:11547:6840":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:10799:8746":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:45911:8576":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:10036:6670":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:47084:8628":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"22:1080:2507":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"5:6955:4173":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:4344:7589":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:11371:8735":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:10616:6728":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:8241:8796":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"18:766:26601":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:43947:8532":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"31:5551:4566":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"6:7523:9897":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:12056:1603":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"21:2160:6335":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"1:8805:8818":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:8013:3069":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:44744:3105":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:2391:10510":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:3160:10470":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"31:5070:4454":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"6:1911:17602":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:11519:15969":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:4194:3037":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:2970:38142":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:2574:7540":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"18:515:5989":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"29:1687:4601":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:21065:10654":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:414:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"31:5041:4439":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"6:4754:5603":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"31:6054:27841":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"20:2519:2485":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"6:123:16282":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"31:4510:4299":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"2:43275:10045":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:41976:185":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:7741:8741":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"29:8420:5955":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:14013:7341":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:1561:4144":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:5593:8223":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:10929:6782":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"16:5696:22566":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"21:2614:26661":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"5:7396:35327":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"30:4828:39731":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"17:11381:6828":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:6688:5872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"31:4645:4325":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"20:2197:2485":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"1:10819:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:12671:6753":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:47582:8662":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"21:1178:6209":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"30:5209:5222":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"2:3238:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:10278:6692":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:40394:8460":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"29:8163:5877":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"20:2609:6398":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"2:2822:3177":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"28:181:26688":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"6:4420:5455":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:4483:5481":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"30:2838:5083":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"11:968:7842":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:10750:6747":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"21:1779:26623":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"9:393:21558":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"0:578:2021":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"21:2029:128":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"1:12055:809":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:6818:7807":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:10254:9424":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"18:736:26600":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:5535:8222":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:8146:3078":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"30:4706:39741":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:1500:4410":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:6425:7743":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:8294:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:3994:10530":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:44177:8546":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"11:311:10039":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:7599:4312":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:22819:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:7133:31945":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:40295:8455":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"29:5633:5620":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:4333:2930":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:6028:5827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"20:2552:3006":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"2:12572:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:40634:8474":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"31:4615:9626":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"6:6726:5884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:40653:8231":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"29:4731:5431":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:10085:3636":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:2932:15902":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"22:1368:39208":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"1:9023:6174":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:7736:7939":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:44042:8454":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"30:4212:5181":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"2:32322:2930":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"21:2059:6326":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"6:4374:5431":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"29:5117:5508":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:10097:6674":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:11062:6792":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:22720:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"31:4988:4424":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"17:10962:6784":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:6361:7737":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"11:986:8103":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"31:5773:9692":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"6:6868:5963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:45889:8575":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:45859:8574":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:6073:4210":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:3519:3048":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:13897:7315":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:8199:3055":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"11:657:3568":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:10468:6715":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:11341:8732":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:9030:8829":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:12554:6978":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:44480:9013":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"30:5305:5223":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"6:5051:9892":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:1587:6170":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:2618:7542":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:7687:3449":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"26:0:1672":{"crate_id":26,"path":["humantime"],"kind":"module"},"31:5835:4659":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"1:8859:3942":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:5015:5686":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:12196:6899":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:2670:7544":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:14308:7439":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:13966:7331":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"31:5896:4669":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"29:1845:5276":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"20:2040:6495":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"33:201:3171":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"2:43020:3900":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:40560:8221":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"31:7167:9764":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"31:6569:9721":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"21:1802:4105":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"30:4338:39732":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"16:2933:21706":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:3185:10092":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:41079:8242":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"24:352:1867":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"6:4469:5473":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"31:5642:4598":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"21:2593:38522":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"2:39610:8324":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"26:164:122":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"17:504:6521":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:1702:4865":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:5044:5705":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:9959:6664":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"18:590:6000":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"29:556:4621":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"30:4685:39735":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"2:11694:8272":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"30:4450:5186":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"1:8412:8808":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:7191:3568":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:9172:6510":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:2618:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:7852:3944":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"31:6357:4852":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"6:5008:5683":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"29:9104:4852":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:12039:1444":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:40569:8469":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:11586:6843":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:40471:8462":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:6841:5955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:2559:3065":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"23:761:5991":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"1:6300:208":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"29:5685:5629":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:11383:10059":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"33:13:2678":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"2:41658:6173":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"31:6413:4862":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"17:12452:6963":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:8794:22629":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"11:1027:21635":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:5634:7616":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13906:7316":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:22247:8308":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:8929:10613":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:20973:10647":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:9102:6508":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"29:5945:5686":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"15:327:8978":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:1582:6295":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"29:6911:4845":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:12034:1563":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:3315:7580":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:40833:8235":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"31:7204:5016":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"17:11086:6794":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"18:707:6024":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"11:695:8093":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:9103:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:22687:180":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:4556:5517":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:2150:22694":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"30:4790:5208":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"14:31:8086":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"21:1640:6288":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"31:4567:4315":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"31:7378:5077":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"18:719:6028":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6879:7812":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:13851:7302":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:11731:8274":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"20:1814:6376":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"2:45929:8577":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"20:1642:6444":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"6:1733:5365":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"22:1637:6157":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"2:46382:8598":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:9207:6511":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"20:2543:3017":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"6:6834:5952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:11115:15783":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:6646:219":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:9701:6645":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:5994:5811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:2644:7543":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:6130:5846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:22621:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:48054:8672":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:4401:5442":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"30:4846:39734":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"20:307:6372":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"5:1411:3942":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:6268:38443":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"21:1549:26627":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"2:30714:35313":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"29:8329:5933":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:6531:7754":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:13135:7089":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:41701:8491":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"23:816:6022":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"22:923:10513":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"1:9478:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:21731:35150":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"29:8221:5884":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"29:4627:5388":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"31:7157:9763":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"8:0:2791":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:4017:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:5074:9771":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:6813:10639":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"20:2119:3020":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"2:7855:3945":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:12003:6024":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"11:1611:4121":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9137:6509":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:3416:3037":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"20:1452:38511":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"5:7438:3097":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:4915:10581":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"29:8070:5871":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"32:0:3133":{"crate_id":32,"path":["bitflags"],"kind":"module"},"2:43578:8462":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"29:2074:5354":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"0:342:1903":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"1:1761:625":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:10951:8163":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:6618:5870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:868:8094":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:6499:7575":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:6545:3156":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:2381:10505":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:7391:22575":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"9:486:21556":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:40513:8465":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:13259:7104":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:3462:3047":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:3232:7522":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:40314:8456":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:4434:2934":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:9418:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"31:4806:4372":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"33:396:3175":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"28:56:26675":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"17:14346:7449":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"11:2033:7842":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:7491:3180":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:6711:5879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:11934:6874":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:14460:7480":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:47832:8665":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:6583:7758":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:11845:6864":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"28:137:26684":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"1:904:4158":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:6560:4114":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"17:11393:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"29:9176:5972":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:12046:761":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"30:4023:5176":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"2:44448:10047":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"18:521:26602":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"9:450:21557":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"29:5611:5612":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"29:6783:5712":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"20:1405:38509":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"17:11573:6841":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:7090:7841":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:7540:5667":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:4164:3037":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"11:2180:9838":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11226:6811":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:12513:6974":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:5121:7611":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:13989:7334":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"30:3086:5092":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"30:2853:5088":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"31:6497:27845":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"2:11770:8276":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:7318:7879":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"21:2186:128":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"20:1473:6421":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"17:11244:6844":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:10949:6783":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"31:6980:4967":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"31:5946:4697":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"16:5648:7620":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:5987:5810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"22:1042:39227":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"29:783:5253":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"17:13487:7167":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:2170:9006":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"21:1885:26619":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"17:9086:6631":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"24:198:2324":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"17:10520:6721":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:43452:8508":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:43875:8530":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:1527:4434":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:8281:8009":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"23:114:26592":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:11389:6830":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:8544:8710":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"29:4558:17602":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:7041:7834":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:12882:3106":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:44641:207":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:14316:7442":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"31:7097:4999":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"29:5938:5683":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:2992:2940":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:3233:237":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:44532:16009":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:13055:7069":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:5863:5741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:9242:6512":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"22:1127:6079":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"31:6606:4891":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"20:2351:3022":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"31:4813:4373":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"29:0:838":{"crate_id":29,"path":["libc"],"kind":"module"},"6:4606:5542":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"20:2534:3016":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"23:546:5990":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:21009:10649":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"15:394:21670":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:12052:1545":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:12607:35924":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"29:5572:5603":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:2920:15899":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:7290:3568":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"20:0:1670":{"crate_id":20,"path":["regex"],"kind":"module"},"6:587:5248":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:13826:7293":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:850:3943":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:7579:4219":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:6788:4168":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:6545:7756":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"30:3475:5096":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"30:3797:26730":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"21:1932:4100":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"2:2369:191":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:5793:5725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:11048:4226":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"14:0:2796":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"29:806:16281":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"1:7909:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"5:4074:3943":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:10547:6723":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:10340:6697":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"23:798:6019":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"20:1518:6427":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"17:12062:6882":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:8335:8801":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"11:630:3942":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:22240:10043":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"29:5298:5549":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"20:931:3009":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"1:8823:8819":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:3010:3179":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:14110:7370":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:14514:7490":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"33:43:3163":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"6:7529:5974":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:653:4601":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"31:4796:4370":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"2:9642:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"28:47:26674":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"16:5661:7625":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:7534:7570":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:4848:5648":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"31:4635:9631":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"2:2924:15900":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"5:2959:2757":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"30:2712:5087":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"1:11159:8820":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"29:7282:5827":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"29:6871:5068":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"22:1514:6135":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"2:40361:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"22:1237:6101":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"2:2877:15893":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"31:4827:9643":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"17:9711:38450":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"9:330:9844":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"29:7265:5824":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"20:1380:6309":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"20:1492:6423":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"31:6373:4855":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"20:2174:3011":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"17:13922:7320":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:2211:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:4833:5640":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:11314:8856":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"30:498:9420":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"30:2624:5085":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"2:6775:3576":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:4557:7594":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:42315:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:1638:5329":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:3238:6170":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:4767:397":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:8951:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"29:4979:5476":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:7642:3458":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:7438:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:4695:5578":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:2908:7861":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"29:7120:5793":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"29:5054:5493":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"21:1115:6194":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"31:6035:4728":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"17:10240:6663":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:4393:3037":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:11448:22638":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"29:7425:5846":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"22:1683:6167":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"2:2903:15898":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:7545:4162":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:12208:6900":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:2141:8184":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"28:147:26686":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"6:5737:4673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"12:0:2795":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"21:2560:128":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"29:7502:5858":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:21622:10648":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"16:6415:7742":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:2216:3907":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"11:403:38425":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:43541:8514":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"29:6936:5730":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:2049:8183":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"30:3610:39729":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"16:5905:7648":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"29:2093:5355":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:43633:8521":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:43893:8531":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"18:96:26591":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:10362:8260":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"20:2559:3018":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"22:961:6058":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"11:805:10457":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"28:0:3130":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"16:7582:7932":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"31:5049:4443":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"29:7906:4636":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:22261:8309":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:4703:10555":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:3330:4158":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"29:5993:9774":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:1696:4315":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:5240:192":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"11:1068:8106":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:7278:4625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"30:3908:39747":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"21:2115:6211":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"1:12051:1544":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"30:457:107":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"17:13981:7333":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:1545:5267":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:48034:8670":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:4787:5623":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:3112:3081":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"20:1889:6475":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"16:7269:38442":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:45805:8572":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:8290:10055":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"0:571:2009":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"20:213:38521":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"16:6243:7719":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"29:7973:4311":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:10430:8818":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"21:2574:6361":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"17:12305:6931":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:8811:188":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:4626:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:11308:8730":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"28:142:26685":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"16:6467:7746":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"14:165:21641":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"20:2229:3017":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"2:11994:6047":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:4862:5651":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:14355:7451":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:9564:6642":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:2379:10504":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:8154:7997":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"20:1468:6420":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"2:7409:3181":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"29:695:5019":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"1:5619:208":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:6044:9778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"11:749:4144":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"22:1528:6137":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"11:2186:38423":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"28:42:26677":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"11:1858:6170":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:3972:10528":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"29:7246:5823":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:7715:10453":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:44324:8553":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:6318:7733":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:7896:35525":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:14145:7378":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"30:2529:5084":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"31:6669:4903":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"1:11518:8703":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:5818:5068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:12634:194":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:2527:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:10788:22735":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"33:74:3165":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"20:1896:6432":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"31:6421:4865":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"17:13286:7107":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:13274:6818":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:9867:6654":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"20:1938:4111":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"5:4234:3942":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:7641:10513":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:2907:7554":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"22:929:26665":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"21:2119:1872":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"21:1974:6316":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"22:1147:6088":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"22:1536:6138":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"23:632:5989":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:362:3457":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"31:5805:9700":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"16:6915:7566":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:6625:5028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"23:731:38455":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:13676:7267":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"31:4957:4413":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"23:648:5994":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:531:3444":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:5049:7609":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:9372:6632":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:3565:6537":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:40408:10485":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:11000:6786":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:40451:8461":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:11337:22760":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:7925:3066":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:10325:8719":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:1928:8211":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:10745:8844":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:13890:7313":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:44357:8281":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:3066:10469":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:14296:7436":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:4395:5439":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:3741:8703":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:21272:10513":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"5:1102:36933":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:4304:5380":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:48016:8669":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:4587:5541":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"14:215:8089":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"11:1012:8104":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:5025:5691":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:9051:22614":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:2849:7852":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"9:507:8166":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:7175:2919":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"23:691:5991":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:14282:7430":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:4637:5042":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"5:7382:8199":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"21:1167:6207":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"17:13071:7070":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:12997:7059":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:12473:6967":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12983:7058":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:2766:7548":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:3655:6550":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:7359:15885":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:2825:3530":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:14083:7363":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:8968:3150":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:6796:5933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"9:52:8982":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:21021:35839":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"6:4992:5678":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"10:0:2793":{"crate_id":10,"path":["adler"],"kind":"module"},"5:676:234":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:9445:6640":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:6769:4156":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"31:5626:4596":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"2:0:508":{"crate_id":2,"path":["core"],"kind":"module"},"16:7513:7929":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"31:5307:9678":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"16:2380:7532":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"30:3872:39738":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"6:4413:5451":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:10847:29926":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"5:6306:10732":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"11:1048:38428":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:5995:7513":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:10059:6671":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:2881:7553":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:4635:5040":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"29:9212:5974":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"22:1544:6139":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"22:1457:6444":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"1:5446:8719":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:39549:205":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:43045:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:41595:8248":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:21627:10656":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"11:2130:21630":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:9393:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"21:1484:4104":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"2:9435:2768":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"13:0:2789":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:12876:7039":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:635:8690":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:7917:8749":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:1513:4416":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:6279:7731":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"31:6717:9741":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"31:6389:4856":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"6:5836:4845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:6944:38439":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:2777:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:4764:5609":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:11281:6815":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:940:8099":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"5:2962:9906":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"29:8896:4625":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:12737:7004":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"14:187:21648":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:7782:7941":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"22:1271:1917":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"6:4506:5493":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:13575:7229":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:14118:7371":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:12779:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"5:1672:4127":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"29:4945:5471":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:14163:7381":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"30:534:3942":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"1:3092:1093":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"2:40287:8215":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"5:0:291":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:1595:5299":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:44464:10051":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:10366:6698":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:43999:8534":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:8222:3016":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:4821:10541":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"31:5880:5365":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"2:48138:8678":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:2775:229":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"29:5555:5601":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:4740:4439":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"23:741:38457":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:3044:15771":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:6850:5959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"31:5314:9679":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"23:788:6018":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"31:6343:4845":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"29:7476:5847":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:1257:7842":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"29:5394:5077":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:1554:3942":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"23:716:38454":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"31:6737:9757":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"20:2248:3006":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"17:10292:6644":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"0:445:1945":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"2:40328:15847":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:12098:6889":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"11:1845:6294":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"21:1131:6202":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"21:1733:6292":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"2:2257:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"21:1905:6311":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"2:11989:6169":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"29:8203:5883":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"20:1628:128":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"20:2144:3019":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"6:5877:5742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"21:2087:6175":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"17:1184:6525":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:10104:1886":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:14269:7424":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"29:7166:5805":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:1406:6047":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"6:4568:5526":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"22:985:6012":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"28:37:26676":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"29:4788:5439":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:12060:15793":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:2178:6530":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"29:5513:5594":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:9574:38446":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:14173:7386":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"23:624:5991":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"23:807:6021":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:5017:7608":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:43701:8526":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:8851:8821":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"31:5586:4586":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"29:9158:5971":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:11098:6795":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"28:182:26689":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"21:1817:6303":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"16:7128:8832":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:4585:7595":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:43929:3012":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:8848:22631":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"22:1449:6115":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"1:5783:3149":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"23:777:6012":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:8167:8000":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"22:1677:6166":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"31:4588:4321":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"16:6513:7747":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"29:2151:5364":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"20:1422:4135":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"6:568:5241":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"31:6660:4901":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"1:5381:5136":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:4810:5633":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:12484:6970":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:4463:5471":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:1831:2942":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:12037:317":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:8594:22615":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"20:2437:3022":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"31:5888:9712":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"17:11639:6538":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"18:681:6019":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:7651:7936":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"21:1504:6266":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"20:1725:6464":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"29:8253:5895":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:39624:8325":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"21:1720:6290":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"29:5883:5665":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:6252:4208":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:12049:759":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"11:1831:4158":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:5982:7661":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:881:8095":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:3399:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"30:0:3131":{"crate_id":30,"path":["rustix"],"kind":"module"},"2:4040:15770":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:11454:4230":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:43669:8522":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:5387:3037":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:10494:6718":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:31112:3522":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:11111:6796":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"31:7126:5005":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"6:4973:5670":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:2914:7862":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"5:7211:4144":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"11:1121:8108":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:11295:6816":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:12790:7011":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:48115:8677":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:13113:7078":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:2788:7549":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:46212:8593":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"21:2173:4100":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"2:2898:15897":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"29:712:5241":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"16:6929:7816":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:10342:30219":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"31:5282:4500":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"20:178:6369":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"27:0:2171":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"29:7443:4697":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"31:5860:9706":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"16:7054:7836":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:40669:6009":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:6569:7563":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"22:1157:6089":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"6:4368:4599":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:105:291":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"30:549:26718":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"5:7261:8198":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:3830:7585":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6204:7699":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"29:2027:5337":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"29:1693:4408":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:12054:1543":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:14126:7373":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"16:4745:7599":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"21:2579:26658":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"28:189:4099":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"2:6172:8230":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"20:2572:3007":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"14:7:8086":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10534:6722":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:3300:2643":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:8155:3080":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"29:2143:5361":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:2131:3439":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:11817:4234":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"31:4501:4295":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"31:5634:4597":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"6:4818:5637":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:11982:8863":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:12045:764":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"29:8890:9784":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:11607:34549":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:10435:8262":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:11173:22759":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"29:5800:5648":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:5799:5728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:32416:3533":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"29:5412:5571":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:30608:35321":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"18:564:5999":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:3188:10093":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:6079:3037":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:2526:7538":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"0:340:1875":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"1:10473:4223":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"29:6763:4672":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:8097:7992":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"20:2358:3023":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"16:7613:7935":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:40206:8447":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"30:4178:5179":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"31:5602:4592":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"20:2444:3023":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"17:13040:7065":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"20:1732:6465":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"6:1649:5337":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"18:636:6011":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:3461:7581":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"21:1057:6187":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"1:9981:8488":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"16:4497:7592":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"22:1581:6146":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"1:10960:8720":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:7792:22577":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:6696:7781":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:42783:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:48063:8673":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:12031:379":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"31:4575:4317":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"2:8522:3101":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"29:621:5235":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"2:46580:8604":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"29:573:4604":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"1:8008:8751":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:2209:6533":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"30:3571:39742":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"17:11991:6878":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"21:2569:6360":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"2:4259:2922":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:2834:2915":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:7492:7926":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:40227:35338":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:4638:5558":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:4744:10545":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"29:6830:5728":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"20:1991:6487":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"29:5077:5500":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"21:2469:26620":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"1:555:3446":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"29:604:5232":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:5923:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"5:261:4127":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:1523:8182":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:6893:7814":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:10646:6733":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:5769:235":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"23:883:26601":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:12750:7006":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"22:1310:6110":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"33:81:3168":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"23:707:6000":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:1690:5080":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:44476:10054":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"31:6081:27842":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"2:48153:8679":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"22:1211:6038":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"17:10197:6685":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"30:4161:5178":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"29:5344:5559":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"11:2049:8103":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:10231:3942":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:13816:7292":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:4729:5594":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:6433:3152":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:9390:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"16:5322:7612":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"11:2168:4106":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"30:4359:5185":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"1:4798:4206":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"30:3000:5091":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"6:5979:5805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"28:28:26671":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"5:5612:4156":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:10980:6644":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:2844:7855":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:8195:8002":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"11:1517:8110":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:44160:8545":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:5990:208":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:2363:2101":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:11535:8269":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:4700:10582":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"31:5704:4624":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"9:426:21559":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:4048:10534":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"16:7474:7920":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:32315:8315":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:14134:7374":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:6197:8726":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:4879:1023":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:22786:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:919:8093":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:562:5019":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:9455:38445":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:8900:8824":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:10809:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:39383:15772":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:1055:8103":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"22:1359:6024":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"16:5363:7613":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:44225:8547":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:9521:6641":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:3212:6293":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:2920:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:1118:36897":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"30:4114:39730":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"2:2772:3176":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:39344:3946":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:12659:8284":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"11:2060:8104":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:7342:38444":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:724:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"29:745:5243":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"17:13228:7098":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:10186:6683":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:11742:6854":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"20:1533:6432":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"2:2773:2938":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:43829:3017":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"21:2436:26619":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"2:41629:10522":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"22:1586:5994":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"16:4921:7605":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8462:6098":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"22:1304:6109":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"2:20777:3522":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"5:1776:4158":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:6542:3155":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:4719:7598":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:8301:8798":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:1558:3568":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"20:1998:6489":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"1:11054:4227":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"20:1754:2930":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"31:5300:9676":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"31:5964:4712":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"0:36:1917":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"18:699:6022":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"31:6590:4887":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"31:5221:5978":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"2:4109:2943":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"9:237:6098":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:46049:8582":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"31:7138:5006":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"2:41572:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"0:572:2012":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"0:33:1870":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"21:1671:26618":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"18:755:6036":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4929:9881":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"29:7143:5798":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"18:652:5991":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"21:2132:6331":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"1:10774:8745":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"24:219:1863":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"17:13710:7270":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"0:341:1878":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"16:6017:22568":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:10542:8265":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:62:16232":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:40257:8452":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:40693:8476":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"31:4674:27835":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"17:13101:7076":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"31:5079:4460":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"5:2461:9903":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"20:1661:6448":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"29:676:4856":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"31:4753:4351":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"5:5975:16206":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:42274:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"20:1561:6098":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"29:7228:5822":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:39485:201":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:12009:15787":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:40500:3055":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:41831:3943":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:7597:38438":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:8283:8705":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:10726:6745":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:44252:8280":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"22:1644:6158":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"17:9003:22636":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:22852:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"20:2487:3007":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"31:4996:9645":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"17:9823:22647":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"31:7174:27852":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"2:43695:8271":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:13567:7228":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"30:5180:5218":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"1:3676:10523":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:41054:8240":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"29:4828:5451":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"31:5799:9698":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"2:44694:8561":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:9118:3110":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:1273:8104":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:1514:200":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"29:5369:5570":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"28:152:26687":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"17:13838:7296":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"3:234:212":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:4:1036":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:13162:7091":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:2363:184":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"22:1351:1917":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"6:7511:5972":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"21:1588:6282":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"2:42838:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:14068:7359":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:4378:2931":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"23:726:6005":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:40366:8459":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"31:0:3132":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"29:1913:5297":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"29:480:16232":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"1:915:8092":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"21:1945:6314":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"5:4363:4151":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:4044:10533":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"31:6932:27849":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"16:6456:7745":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:9137:2611":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:10012:6644":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:12036:1074":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:6901:7565":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:6886:247":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"24:0:1862":{"crate_id":24,"path":["log"],"kind":"module"},"29:1948:5304":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:5403:6630":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:14469:7484":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"22:1489:6131":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"17:10738:6746":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:10771:6749":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:0:838":{"crate_id":6,"path":["libc"],"kind":"module"},"1:7736:3952":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:3315:2941":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:44444:10046":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:2220:3046":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:43711:3057":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:11306:6818":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:43036:3899":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"31:7387:5080":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"1:8993:3443":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:9864:4188":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"23:556:6507":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"17:13758:7279":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:11215:6807":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:1677:1112":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:2865:2916":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:3993:8216":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"5:2035:3068":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:46358:8597":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"31:4547:4311":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"17:11162:6800":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"31:7356:5068":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"31:4733:4344":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"21:2544:6190":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"29:5033:5486":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:9113:221":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"20:1802:6469":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"2:40302:15846":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:12048:763":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:9798:4185":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"20:1289:3014":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"2:43683:8525":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:8205:22579":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:6178:10042":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:9277:6513":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:7748:3646":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"20:2449:3024":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"2:43775:8528":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"20:2466:6504":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"1:1576:6294":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:12765:7009":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:10370:6699":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:22134:35316":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"31:5865:9707":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"2:1766:8208":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"29:5725:5637":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:12032:958":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:9972:6665":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"11:1103:8107":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"20:2590:3015":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"2:43623:8520":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"31:5094:4464":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"1:4964:10587":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"20:2476:3012":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"31:4966:4416":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"21:1296:6174":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"11:332:4117":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"20:1528:6370":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"17:12373:6933":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:12047:762":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:9945:6663":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"21:2240:26643":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"17:11201:6802":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"15:288:21660":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:6386:7739":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:6149:4199":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:5431:8718":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:11949:2969":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:44702:8563":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"5:1482:8109":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:4291:5371":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:9108:220":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"29:1869:5284":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"29:4865:5457":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:8216:3057":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:9205:9983":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:41678:35333":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"22:1388:6123":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"2:41612:8250":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:41959:3943":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"29:5454:5582":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:4250:209":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"21:2330:6180":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"16:4949:7606":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:48043:8671":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"33:62:3164":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"17:11351:6823":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"31:6298:9716":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"6:4315:5388":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"22:1604:6151":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"17:12252:6917":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"31:6614:4892":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"6:6136:4697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:47894:8666":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"29:5536:4439":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"29:5914:5676":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:47940:8667":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"29:7322:9778":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:2530:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:6912:35520":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"20:2268:3015":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"22:0:2914":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"5:3204:6295":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:43847:8264":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:1041:7842":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:2548:7539":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:5816:7638":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"29:9194:5973":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:2573:4189":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:42536:2765":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"21:1389:4108":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"6:4650:5559":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:47440:8661":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"24:296:1865":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"16:7554:7571":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:1575:5285":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"20:949:6396":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"17:12422:6955":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"24:290:2965":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"17:12888:7041":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:21406:6053":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"18:507:5991":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:12043:6881":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:11535:6839":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11886:6872":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:256:6515":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:7474:8206":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:2869:3113":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:40491:8464":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"31:7298:5061":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"5:1492:8092":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:1647:3681":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:6015:5823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:42860:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:4608:15840":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"7:32:21543":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:39527:203":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:22588:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:6775:5920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:2776:228":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:8239:7899":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:7360:38441":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"11:667:8092":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"21:2348:6333":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"29:2130:4315":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:4625:10531":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"22:1195:128":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"31:176:4296":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"22:1622:6056":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"2:22654:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"21:1958:26624":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"19:0:1054":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:2321:7523":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:21109:10655":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"23:638:26602":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:1565:4158":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:8875:3568":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"20:2220:3016":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"2:43503:8509":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:6401:7557":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:10561:6724":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"29:5277:5548":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"18:660:6012":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:1776:3627":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:2830:3532":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:48191:8681":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"22:1188:1917":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"6:4944:9890":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:4475:10555":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:44017:8277":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:12437:6959":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"30:3932:5175":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"29:5706:5633":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"0:442:2149":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"22:1521:6136":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"2:8946:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"18:599:38454":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:10838:29915":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:11999:6402":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6753:7794":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:22149:8295":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:12237:6911":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:7505:5971":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"29:7953:4305":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:12050:1547":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:1778:3628":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:3797:7584":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"20:2096:3020":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"6:4716:5589":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:6036:5829":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:10164:8836":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:11272:6814":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:9780:6647":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:32268:9840":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:44651:213":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:5994:8225":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:4157:10550":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"31:4833:4377":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"31:5332:27838":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"30:438:2930":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"1:8209:3056":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"23:699:3522":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:10420:6587":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:43279:8256":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:11261:6813":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:22273:10525":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"31:4651:9634":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"1:5749:3147":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:7462:7919":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"31:4723:4339":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"1:1839:3643":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:4704:5582":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:3182:30144":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:7564:9786":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"31:6597:4889":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"31:4942:4408":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"23:769:5991":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"20:1947:6381":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"29:5154:5515":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:47020:8626":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:4543:5513":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"18:0:2800":{"crate_id":18,"path":["memchr"],"kind":"module"},"21:1376:4107":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"21:2323:6350":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"16:7006:7830":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:10972:29920":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:7558:9898":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:7621:22576":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"31:5990:27840":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"16:2284:21679":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:42118:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"22:1429:6048":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"17:10440:6706":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:1536:5261":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:1928:671":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"5:7529:4158":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"11:817:8099":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"29:1822:5267":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"29:4805:5442":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:1506:4413":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:5475:3037":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"5:4426:4151":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"20:2581:3012":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"2:44109:15799":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:5756:3148":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:6067:5842":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:43075:8506":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:7425:8204":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"29:9276:4312":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:1473:8095":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"31:4528:4302":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"2:46067:8583":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:8631:6047":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:42393:3146":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"30:2989:5089":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"16:2696:7545":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:9431:2765":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:9933:6662":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:3441:6536":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:10073:10513":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"22:1422:1917":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"21:1081:26638":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"2:42354:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:4140:2944":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:4835:7602":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:149:4112":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:3278:2939":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:11389:10060":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:40592:8224":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"30:4667:39736":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"31:4713:4334":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"31:6585:9728":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"6:4436:5460":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12698:6999":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:1094:6082":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"29:5171:5517":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"31:6310:4830":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"33:311:2676":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"17:13422:7116":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:45960:8578":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"31:5843:4662":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"17:10227:6689":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"31:6950:4958":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"2:10473:8263":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:40267:8453":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:30550:35312":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:1921:10481":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:8987:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:837:3942":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:7182:3107":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:41839:3568":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"21:2489:26621":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"33:292:3173":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"2:44468:10052":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:3388:3079":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:45715:8568":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"16:2832:7551":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:46012:8580":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"7:79:21550":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"21:2385:6348":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"6:482:5229":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:7869:8746":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:1640:601":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"26:209:39243":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"29:5893:5666":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"29:4962:5473":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"18:574:5991":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"22:1023:6067":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"31:5729:4636":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"2:41060:3079":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"21:1402:4101":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"2:22195:35325":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:12040:1528":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:929:10457":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:22174:35310":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10112:6675":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:9660:38449":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:2607:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:4475:5476":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:2213:8700":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:2765:223":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:44024:8455":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"20:1398:6402":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"1:7862:8745":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:46114:8584":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:9035:8830":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"16:4462:7591":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:1757:9910":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"31:4742:4346":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"31:5666:4601":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"6:506:4604":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:494:4597":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"11:1838:6293":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:9488:38448":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:13739:7278":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:4814:815":{"crate_id":2,"path":["core","iter"],"kind":"module"},"11:1818:3942":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:12086:6886":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"29:7042:5755":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"29:486:5224":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"30:3293:5094":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"6:7552:5669":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"18:727:6031":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11074:6793":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"20:2459:3010":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"6:474:5224":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"20:713:6377":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"2:44314:8549":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:40583:8472":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:14156:7379":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:13723:7275":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:9057:29911":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:1892:8697":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:44289:8548":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"31:7106:5001":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"17:10685:6740":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"30:4745:39740":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"1:481:4201":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:11539:8704":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:1557:5276":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:2496:3064":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"29:658:4566":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"18:538:5997":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:4613:7596":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:22066:8290":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:2881:15895":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"31:4558:4312":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"17:0:2799":{"crate_id":17,"path":["object"],"kind":"module"},"2:40200:8215":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:11367:6825":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:9852:22648":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"31:5269:9673":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"31:7318:5062":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"21:2277:4101":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"17:13085:7072":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:6077:5831":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:3221:3072":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:7349:2986":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"22:1052:6076":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"21:1335:26617":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"16:7015:7833":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:12280:6927":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"29:8351:5936":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:6721:22572":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:6898:4217":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:48168:8680":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"31:5029:4434":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"16:3032:7577":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:10769:10058":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:10603:6727":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"29:5783:5646":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:2596:7541":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"31:6202:27844":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"2:2327:190":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:4317:8707":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:14401:7465":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:946:8101":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:5080:9774":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"18:614:38455":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"29:5974:5705":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:47050:8627":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"0:0:2170":{"crate_id":0,"path":["env_logger"],"kind":"module"},"1:502:3439":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"16:4986:7607":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"20:2202:3012":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"22:1167:4205":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"1:356:3456":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"5:4846:206":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"29:5594:5609":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:48089:8675":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"22:1568:39211":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"6:5882:5743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"29:505:5229":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"31:4771:4359":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"16:6189:7697":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:582:6522":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:11614:8736":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"21:1998:26641":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"1:12038:1414":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"31:4621:9629":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"16:4806:7601":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:4740:10542":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:7539:8860":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:10280:3016":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:42811:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"21:1156:26640":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"18:491:6507":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"26:102:2614":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"17:14001:7340":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:3986:10529":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:2827:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:45827:8573":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:5419:6631":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:43793:8529":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"31:5002:9648":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"6:4748:5601":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:5890:5748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:12053:1546":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:42795:6316":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:13188:7093":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"21:2294:4104":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"21:1871:4106":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"2:41823:3942":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"0:446:1943":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"5:5954:3091":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:6041:22569":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:4938:9887":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:9985:6667":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:11407:22637":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"11:1826:4144":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"33:76:3166":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"11:793:8109":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:11316:6820":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:9912:6657":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:4034:10532":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:5775:5712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"21:1467:26631":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"17:10447:6709":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:41038:8239":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:6589:4305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"21:2227:4110":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"18:624:38457":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4908:9866":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"23:655:5997":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:9490:4222":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:782:4130":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:40378:35327":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:1606:696":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"22:1201:3069":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"28:69:26669":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"26:157:3124":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"20:2432:3021":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"2:39505:204":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"22:1137:6087":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"21:2367:6181":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"31:6452:4873":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"17:9762:38453":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:44452:10048":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:11145:8819":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:20790:35145":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:434:6520":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10507:6720":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"18:531:5994":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:40531:8467":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"31:4599:4322":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"6:4723:5591":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:39461:200":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"20:1605:6373":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"33:89:3169":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"7:0:1593":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:12111:6891":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"29:5478:5589":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:12778:7010":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"29:8295:5920":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:14042:7349":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:10023:6645":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:7852:1865":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"29:8181:5879":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"29:4846:5455":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"29:2113:5080":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:10397:6701":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4535:5508":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:1681:5355":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:21023:15912":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"29:764:5248":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"1:5415:8717":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:1464:8094":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:9173:3459":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"1:8881:8721":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:4173:10552":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:12658:6994":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"31:6560:9719":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"0:576:2018":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"2:20818:35361":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"0:438:2077":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"15:0:2797":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:40279:8454":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:12621:6990":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:4770:5612":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:8118:3082":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"18:582:3522":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:44456:10049":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:11235:6812":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:11048:6788":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:1983:186":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:20805:35145":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"31:5658:4600":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"29:5256:5542":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"31:5580:4583":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"17:14420:7469":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:3669:4127":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:9427:2764":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:12830:7015":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"20:2255:3018":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"11:798:8096":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:10698:6742":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"31:5251:9664":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"6:7250:5969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:2787:2937":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"24:277:1866":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"2:2937:15903":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:46974:8625":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:6805:5936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"31:7214:5257":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"1:7764:3647":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:2365:10500":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"31:4843:27836":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"17:12945:7053":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"31:4782:4363":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"17:8978:22635":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:14033:7348":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:11074:8268":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:22082:9008":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"29:5668:5626":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6022:5824":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:2810:7550":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:1495:4408":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:3302:3071":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:11179:9013":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:41749:8252":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"21:1194:128":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"21:1748:26625":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"16:6346:7735":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"20:1622:6443":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"0:439:2134":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"1:11198:2611":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:7666:3450":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:860:3568":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:4323:2929":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:3263:35241":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"30:4195:5180":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"2:9382:212":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"6:4887:9851":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"31:7338:5063":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"17:12172:6895":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:6720:5883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"22:1495:6132":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"2:43057:6098":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:42755:9976":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:46526:8602":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:13802:7291":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:2659:8212":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:1631:4430":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"22:1292:6107":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"26:230:3129":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"2:44337:8557":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:5760:22567":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:10139:22666":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"11:285:10036":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:3013:2759":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:894:4144":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:12970:7056":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"28:132:26683":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"2:4407:2933":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"20:2363:3024":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"17:12531:6975":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"21:1706:6289":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"1:12015:29925":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:45759:8570":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:39603:8323":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"31:7148:5008":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"17:14090:7364":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:40621:8229":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"29:6961:5741":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"31:5851:4665":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"2:48074:8674":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:2406:1861":{"crate_id":1,"path":["std","io"],"kind":"module"},"22:1552:6143":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"20:1671:38513":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"1:4639:5044":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"29:1887:5285":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"22:1399:6128":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"17:14536:7496":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:12959:7055":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:13973:7332":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:541:4862":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:1814:3636":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:7449:227":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"29:1744:4416":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:11490:6837":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:11621:8736":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:13024:7063":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"11:2174:9837":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"31:5263:5591":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"2:3003:3178":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:3888:7586":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:2864:7552":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:42196:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"29:5955:5691":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:6705:5877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:14378:7464":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:21280:10645":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:9328:3057":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"29:4884:5460":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"23:853:26600":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"31:6399:4861":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"22:1630:6057":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"16:8050:7989":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:12846:7020":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:12225:6908":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:12724:7002":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:7609:5978":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:43067:8505":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:8837:8820":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:8571:8817":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"20:1833:6470":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"30:3778:5152":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"2:43979:3054":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11710:6818":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"11:1501:21636":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"29:9297:5978":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"33:409:3174":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"6:4616:5548":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:5058:5666":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:13868:7307":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:44303:15800":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:14056:7356":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:822:4133":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"22:1651:6160":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"2:9896:4194":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"31:6705:9737":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"17:13667:7264":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"31:6542:27846":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"2:32304:8314":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"22:1261:6103":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"2:44131:8537":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"30:356:9419":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"22:1378:6012":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"2:46260:8594":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"22:1690:6168":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"17:9350:6517":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:8686:22626":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:42820:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:22555:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"29:4749:5433":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"21:1623:26629":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"23:824:6024":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:41967:3568":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:41714:8705":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:13693:7269":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:40522:8466":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:547:4566":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:3800:4158":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"5:629:8179":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:5829:5073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:10400:8261":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:6607:5865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:10084:6673":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:47692:8663":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:554:4856":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:10430:6704":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:11549:2582":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:21294:6053":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"24:155:2956":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"2:30536:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:2487:10513":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:8523:3100":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:2928:15901":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:2406:7533":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:11216:9425":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"5:7337:2985":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"33:173:2507":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"2:42765:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"5:3594:3943":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:5500:8720":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:10714:6744":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:7859:15883":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:6844:7808":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:22211:35315":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:35:4123":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:1922:38510":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"21:1535:6270":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"1:11356:8733":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:6376:22570":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12576:6985":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"29:6986:5742":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:9921:6659":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:4237:8706":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:11477:8702":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:2176:15912":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"17:12810:7014":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:2260:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"21:1850:26621":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"1:4389:8708":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"11:0:2794":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:12044:660":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:41891:3665":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:9043:8832":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:43512:8510":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:12058:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"18:671:6018":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"31:6749:27847":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"16:7708:7574":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"20:2277:3013":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"13:110:38429":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:5673:7560":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:7586:9899":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:1554:3037":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:8485:8811":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"21:2140:26657":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"29:5015:5483":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:5974:4208":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:5633:4209":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:5362:4108":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"29:5094:5503":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:12033:428":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:7575:9790":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"21:2649:6186":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"5:6798:4169":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:23332:222":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"31:4949:4410":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"11:723:8094":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:32329:8316":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"16:2744:7547":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"31:5674:4604":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"17:8926:22633":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:7463:4852":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"21:1766:4103":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"5:207:4125":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:6864:15887":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:6648:5871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"21:2360:6351":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"31:6649:4900":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"31:4519:4301":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"31:5904:4672":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"16:2339:7525":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:6226:7713":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:8166:3052":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:24:625":{"crate_id":2,"path":["core","env"],"kind":"macro"},"28:183:4096":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"2:4387:2932":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:9195:34325":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:9000:29914":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:4056:10536":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"29:641:4862":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"22:1342:39210":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"30:4968:5216":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"17:8765:22628":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:7412:8202":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"29:809:16282":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"31:6632:4898":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"2:3062:10468":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"5:3178:6294":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:10672:6738":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:5565:10609":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:13949:7324":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"18:80:26590":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"27:5:2675":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"5:7221:4138":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:8982:8825":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:10514:3017":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:14434:7471":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:4000:10531":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:10383:6700":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:13244:7100":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:11171:29932":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:5574:7556":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:10787:8849":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:41881:3232":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:5767:4672":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"21:1284:6173":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"2:2819:3528":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:3526:3050":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:5128:193":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"6:6008:5822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:4428:5457":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"31:5872:9709":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"1:6360:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:5612:7561":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:6171:196":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:5712:7626":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:21378:10642":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:2472:7536":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"21:1654:26632":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"2:21274:10643":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:1138:36931":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:43552:8515":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"33:0:2172":{"crate_id":33,"path":["termcolor"],"kind":"module"},"21:1830:26620":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"17:11687:22640":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:11971:6877":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:4842:5646":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"14:160:8086":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:3936:10527":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:40612:8228":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:5068:9769":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:10265:6691":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:6600:22571":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"31:6965:4964":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"20:1780:6467":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"2:42235:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:13876:7310":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:11754:8275":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"20:1582:6438":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"29:7355:5831":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:500:4621":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"29:5225:5541":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:3510:30356":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"21:1144:26639":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"2:7396:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"4:0:2790":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:6261:7729":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"29:1709:4410":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:13215:7097":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:7884:22578":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"30:4724:39733":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"2:10323:8259":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"31:4762:4355":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"3:0:453":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"20:1417:6409":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"31:4660:9637":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"29:5875:5660":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:9752:6646":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:22013:8289":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:8867:8823":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:10916:6781":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:3065:6545":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:5830:7639":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"31:6998:27850":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"16:6742:7793":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:46190:8592":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"29:2052:5348":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"20:2524:3008":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"21:2125:6329":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"5:6637:4127":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:4862:7603":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:14335:7448":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:4182:2920":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:9886:6656":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:11291:4228":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"23:836:6028":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"29:8440:5959":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"22:971:6507":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"17:9896:22649":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"6:1520:5257":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:11661:6846":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:7284:3231":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:43531:8513":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:20835:35359":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4489:5483":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"20:1906:6402":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"30:5193:5220":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"2:46814:8623":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:4341:5408":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"29:6813:5725":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"28:127:26682":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"17:14499:7489":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"10:36:9843":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"20:2062:6498":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"22:1507:6134":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"2:21841:10513":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"6:5805:5729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:6183:2507":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"6:4895:9856":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"30:4144:5177":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"2:44008:8535":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:10478:6716":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:5939:7508":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:9485:8744":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:10410:6702":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:3929:3037":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:8309:8794":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:14448:7478":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:8246:10521":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:22157:8296":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:13451:7136":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:2979:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:11041:8267":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"}},"external_crates":{"31":{"name":"linux_raw_sys","html_root_url":null},"28":{"name":"io_lifetimes","html_root_url":null},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"aho_corasick","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"29":{"name":"libc","html_root_url":null},"26":{"name":"humantime","html_root_url":null},"23":{"name":"memchr","html_root_url":null},"20":{"name":"regex","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"termcolor","html_root_url":null},"30":{"name":"rustix","html_root_url":null},"27":{"name":"is_terminal","html_root_url":null},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"21":{"name":"regex_syntax","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}