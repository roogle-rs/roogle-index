{"root":"0:0:2095","crate_version":"0.10.0","includes_private":false,"index":{"b:2:3333-0:585:1810":{"id":"b:2:3333-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2544-0:585:1810":{"id":"b:2:2544-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:426:685":{"id":"0:426:685","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["filter_env",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:59":{"id":"0:237:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:571:1933":{"id":"b:2:2533-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:410:2049":{"id":"0:410:2049","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1044,4],"end":[1051,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[835,0],"end":[900,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:1867","0:384:1893","0:385:1792","0:386:2022"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:372:1884":{"id":"0:372:1884","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[716,4],"end":[719,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["filters",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11884:311":{"id":"2:11884:311","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11885:30527","`u8`":"1:11889:1478"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:9088:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:9088:2682","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:506:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2239-0:342:1827":{"id":"b:2:2239-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:584:659":{"id":"0:584:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:582:415":{"id":"0:582:415","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11877:38402":{"id":"2:11877:38402","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12000:26172":{"id":"2:12000:26172","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4519:26172"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:42964:8223","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61:659":{"id":"0:61:659","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[269,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:1932","0:96:2477","0:97:2478","0:98:2479","0:99:2480"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5633-0:100:2535":{"id":"b:5:5633-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9076:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11985:38422":{"id":"2:11985:38422","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:458:2599":{"id":"a:2:2688:225-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:438:2001":{"id":"0:438:2001","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1153,0],"end":[1155,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:374:1813":{"id":"0:374:1813","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[760,4],"end":[763,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write_style",{"kind":"resolved_path","inner":{"name":"fmt::WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2535:685":{"id":"2:2535:685","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2539-0:571:1933":{"id":"b:2:2539-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:546:2569":{"id":"0:546:2569","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2580:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5392:31728":{"id":"5:5392:31728","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11996:30450"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:508:2464":{"id":"b:2:2529-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2242-0:458:2599":{"id":"b:2:2242-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2688:225-0:543:1979":{"id":"a:2:2688:225-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:81:2523":{"id":"0:81:2523","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1596","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:100:2535"],"is_stripped":true}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2303:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:207-0:142:1793":{"id":"0:207-0:142:1793","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1793","glob":true}},"b:2:2544-0:458:2599":{"id":"b:2:2544-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:14:1792":{"id":"0:14:1792","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[868,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:33:1794","0:36:1841"],"is_stripped":false}},"5:5377:39072":{"id":"5:5377:39072","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8181:3009-0:342:1827":{"id":"a:2:8181:3009-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:8181:3009-0:269:130":{"id":"a:2:8181:3009-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:429:59":{"id":"0:429:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1097,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:571:1933":{"id":"a:2:2688:225-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:367:1944":{"id":"0:367:1944","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[642,4],"end":[644,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:599:1841":{"id":"b:2:2529-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2539-0:543:1979":{"id":"b:2:2539-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11953:38412":{"id":"2:11953:38412","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11575:6087","`DoubleEndedIterator`":"2:7169:119","prim@char":"1:11872:411","str::matches":"2:11950:2022"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:42869:8304","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11938:30563":{"id":"2:11938:30563","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087","str::rsplitn":"2:11941:30565"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:42751:2928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:530:1583":{"id":"0:530:1583","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:3333-0:36:1841":{"id":"b:2:3333-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:206:1793":{"id":"0:206:1793","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:659","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:207-0:142:1793","0:208-0:115:1795"],"is_stripped":true}},"5:5372":{"id":"5:5372","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5373:39071","5:5374:2289","5:5377:39072","5:5380:39073","5:5388:39074","5:5389:39075","5:5390:2987","5:5391:31727","5:5392:31728"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8180:3010-0:571:1933":{"id":"a:2:8180:3010-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:36:1841":{"id":"0:36:1841","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[110,0],"end":[114,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:45","a:2:8181:3009-0:36:1841","a:2:2738:3086-0:36:1841","a:2:8180:3010-0:36:1841","a:2:2688:225-0:36:1841","a:2:2674:217-0:36:1841","b:2:2544-0:36:1841","b:2:3333-0:36:1841","b:2:2533-0:36:1841","b:2:2529-0:36:1841","b:2:2539-0:36:1841","b:2:2239-0:36:1841","b:2:2242-0:36:1841","0:62","0:58"]}},"a:2:8180:3010-0:585:1810":{"id":"a:2:8180:3010-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11902:35998":{"id":"2:11902:35998","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11901:35986"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:42930:8307","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:536:659":{"id":"0:536:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8181:3009-0:543:1979":{"id":"a:2:8181:3009-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:215:2559":{"id":"0:215:2559","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:217:1583"]},"discriminant":null}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2544-0:543:1979":{"id":"b:2:2544-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2529-0:458:2599":{"id":"b:2:2529-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2532:1882":{"id":"2:2532:1882","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2506:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2463","0:176:2609","0:177:2466","0:178:2660","0:179:2664","0:180:2469"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2544-0:508:2464":{"id":"b:2:2544-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:145:2462":{"id":"0:145:2462","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:523:2699":{"id":"0:523:2699","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2688:225-0:508:2464":{"id":"a:2:2688:225-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11950:2022":{"id":"2:11950:2022","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11575:6087","`DoubleEndedIterator`":"2:7169:119","prim@char":"1:11872:411","str::matches":"2:11950:2022"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:42851:2923","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:179:2664":{"id":"0:179:2664","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376:1984":{"id":"0:376:1984","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[778,4],"end":[781,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["is_test",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5635:1434":{"id":"5:5635:1434","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2544-0:342:1827":{"id":"b:2:2544-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11988:38423":{"id":"2:11988:38423","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2242-0:210:227":{"id":"b:2:2242-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2674:217-0:342:1827":{"id":"a:2:2674:217-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11964:38415":{"id":"2:11964:38415","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2308:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:674-0:458:2599":{"id":"b:5:674-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:2671","5:677:2052","5:678:3519"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2239-0:36:1841":{"id":"b:2:2239-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2544-0:36:1841":{"id":"b:2:2544-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2539-0:585:1810":{"id":"b:2:2539-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11892:30526":{"id":"2:11892:30526","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2688:225-0:36:1841":{"id":"a:2:2688:225-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11923:2295":{"id":"2:11923:2295","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11575:6087","`DoubleEndedIterator`":"2:7169:119","prim@char":"1:11872:411","str::split_whitespace":"2:11901:35986","str::rsplit":"2:11929:30561"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:42647:2927","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41:1792":{"id":"0:41:1792","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[139,4],"end":[145,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11968:38417":{"id":"2:11968:38417","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11976:29873":{"id":"2:11976:29873","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2548:1456":{"id":"2:2548:1456","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40826:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11995:30449":{"id":"2:11995:30449","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:517:2604":{"id":"0:517:2604","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2544-0:571:1933":{"id":"b:2:2544-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11979:30568":{"id":"2:11979:30568","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3333-0:269:130":{"id":"b:2:3333-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:279:2034":{"id":"0:279:2034","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2868:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:50:1792":{"id":"0:50:1792","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[206,4],"end":[209,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2738:3086-0:585:1810":{"id":"a:2:2738:3086-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11890:30525":{"id":"2:11890:30525","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:36:1841":{"id":"b:2:2529-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:9080:2678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:9080:2678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:486:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2239-0:210:227":{"id":"b:2:2239-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11883:38404":{"id":"2:11883:38404","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11973:38420":{"id":"2:11973:38420","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:52:1966":{"id":"0:52:1966","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[216,4],"end":[225,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["filters",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8180:3010-0:543:1979":{"id":"a:2:8180:3010-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2533-0:585:1810":{"id":"b:2:2533-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2239-0:543:1979":{"id":"b:2:2239-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8181:3009-0:508:2464":{"id":"a:2:8181:3009-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:268:59":{"id":"0:268:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5391:31727":{"id":"5:5391:31727","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11995:30449"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2674:217-0:33:1794":{"id":"a:2:2674:217-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8181:3009-0:458:2599":{"id":"a:2:8181:3009-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"5:678:3519":{"id":"5:678:3519","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:574:1939":{"id":"0:574:1939","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:3333-0:599:1841":{"id":"b:2:3333-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11898:8168":{"id":"2:11898:8168","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11872:411"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:42617:8161","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3333-0:543:1979":{"id":"b:2:3333-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11886:2044":{"id":"2:11886:2044","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:40684:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:269:130":{"id":"a:2:2688:225-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:359:1920":{"id":"0:359:1920","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[596,4],"end":[599,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3333-0:571:1933":{"id":"b:2:3333-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2529-0:543:1979":{"id":"b:2:2529-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2244:2441":{"id":"2:2244:2441","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:46:929":{"id":"0:46:929","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[173,4],"end":[179,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:508:2464":{"id":"b:2:2533-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11875:2279":{"id":"2:11875:2279","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:377:1991":{"id":"0:377:1991","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[792,4],"end":[803,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40826:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1791","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:389:1786":{"id":"0:389:1786","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[907,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1790","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:548:2504":{"id":"0:548:2504","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2688:225-0:585:1810":{"id":"a:2:2688:225-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:44:2024":{"id":"0:44:2024","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[163,4],"end":[168,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["metadata",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Metadata","id":"24:296:1789","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11912:30090":{"id":"2:11912:30090","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2539-0:599:1841":{"id":"b:2:2539-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:531:1584":{"id":"0:531:1584","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[268,0],"end":[275,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2539-0:210:227":{"id":"b:2:2539-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2685:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:364:1935":{"id":"0:364:1935","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:2024":{"id":"0:388:2024","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["metadata",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Metadata","id":"24:296:1789","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5388:39074":{"id":"5:5388:39074","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:528:2701":{"id":"0:528:2701","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:530:1583","0:531:1584","0:532:1585"]},"discriminant":null}},"0:258-0:206:1793":{"id":"0:258-0:206:1793","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::writer::glob","name":"glob","id":"0:206:1793","glob":true}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:599:1841":{"id":"0:599:1841","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[377,0],"end":[382,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# #[macro_use] extern crate log;\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:8181:3009-0:599:1841","a:2:2738:3086-0:599:1841","a:2:8180:3010-0:599:1841","a:2:2688:225-0:599:1841","a:2:2674:217-0:599:1841","b:2:2544-0:599:1841","b:2:3333-0:599:1841","b:2:2533-0:599:1841","b:2:2529-0:599:1841","b:2:2539-0:599:1841","b:2:2239-0:599:1841","b:2:2242-0:599:1841","0:435","0:604"]}},"2:11941:30565":{"id":"2:11941:30565","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11872:411","str::splitn":"2:11938:30563","self::pattern":"2:11575:6087"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:42769:8154","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:396:929":{"id":"0:396:929","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[975,4],"end":[977,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9076:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2542:126":{"id":"2:2542:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:2239-0:599:1841":{"id":"b:2:2239-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:63:659":{"id":"0:63:659","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[278,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3333-0:210:227":{"id":"b:2:3333-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:439:2058":{"id":"0:439:2058","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1185,0],"end":[1192,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40826:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1791","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:43:2022":{"id":"0:43:2022","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[148,4],"end":[160,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1790","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8181:3009-0:36:1841":{"id":"a:2:8181:3009-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8180:3010-0:36:1841":{"id":"a:2:8180:3010-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2308:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:342:1827":{"id":"0:342:1827","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[347,0],"end":[351,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log/\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:8181:3009-0:342:1827","a:2:2738:3086-0:342:1827","a:2:8180:3010-0:342:1827","a:2:2688:225-0:342:1827","a:2:2674:217-0:342:1827","b:2:2544-0:342:1827","b:2:3333-0:342:1827","b:2:2533-0:342:1827","b:2:2529-0:342:1827","b:2:2539-0:342:1827","b:2:2239-0:342:1827","b:2:2242-0:342:1827","0:433","0:387"]}},"b:2:2529-0:169:2451":{"id":"b:2:2529-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2242-0:585:1810":{"id":"b:2:2242-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2674:217-0:599:1841":{"id":"a:2:2674:217-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2688:225-0:169:2451":{"id":"a:2:2688:225-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11896:30550":{"id":"2:11896:30550","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11897:30551"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2539-0:36:1841":{"id":"b:2:2539-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3333-0:458:2599":{"id":"b:2:3333-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2533-0:599:1841":{"id":"b:2:2533-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:466:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:9086:191","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:9086:191","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:476:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5373:39071":{"id":"5:5373:39071","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:1915","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:1915","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:369:1952":{"id":"0:369:1952","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[666,4],"end":[669,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:559:720":{"id":"0:559:720","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9299:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:104:659":{"id":"0:104:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:437:1991":{"id":"0:437:1991","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1140,0],"end":[1142,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40826:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1791","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5389:39075":{"id":"5:5389:39075","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:279:1915","`String`":"5:7239:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:1915","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6988:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340:1799":{"id":"0:340:1799","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[301,0],"end":[301,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}},"0:123:2523":{"id":"0:123:2523","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2097","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:458:2599","0:169:2451","0:508:2464"],"is_stripped":true}},"0:96:2477":{"id":"0:96:2477","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2535"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11932:38408":{"id":"2:11932:38408","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11575:6087","str::split":"2:11923:2295","prim@char":"1:11872:411","`DoubleEndedIterator`":"2:7169:119","str::rsplit_terminator":"2:11935:38409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:42697:8300","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48:1952":{"id":"0:48:1952","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:534:415":{"id":"0:534:415","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:543:1979":{"id":"b:2:2533-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:513:2606":{"id":"0:513:2606","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11982:38421":{"id":"2:11982:38421","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8181:3009-0:100:2535":{"id":"a:2:8181:3009-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:393:2034":{"id":"0:393:2034","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[970,4],"end":[970,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70:659":{"id":"0:70:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:571:1933","0:269:130","0:257-0:92:1793","0:258-0:206:1793"],"is_stripped":false}},"0:605:59":{"id":"0:605:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2547:126":{"id":"2:2547:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:31782:9600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:113:659":{"id":"0:113:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2674:217-0:169:2451":{"id":"a:2:2674:217-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11929:30561":{"id":"2:11929:30561","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11575:6087","`DoubleEndedIterator`":"2:7169:119","prim@char":"1:11872:411","str::split":"2:11923:2295"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:42665:8152","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11993:30448":{"id":"2:11993:30448","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:2479":{"id":"0:98:2479","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2535"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2674:217-0:585:1810":{"id":"a:2:2674:217-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2303:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:508:2464":{"id":"0:508:2464","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2465","0:511:2605","0:513:2606","0:515:2608","0:517:2604","0:519:2698","0:521:2607","0:523:2699","0:525:2700","0:528:2701"],"impls":["a:2:8181:3009-0:508:2464","a:2:2738:3086-0:508:2464","a:2:8180:3010-0:508:2464","a:2:2688:225-0:508:2464","a:2:2674:217-0:508:2464","b:2:2544-0:508:2464","b:2:3333-0:508:2464","b:2:2533-0:508:2464","b:2:2529-0:508:2464","b:2:2539-0:508:2464","b:2:2239-0:508:2464","b:2:2242-0:508:2464","b:5:674-0:508:2464","0:537","0:541","0:540","0:538","0:535","0:533"]}},"0:257-0:92:1793":{"id":"0:257-0:92:1793","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::humantime::glob","name":"glob","id":"0:92:1793","glob":true}},"a:2:8181:3009-0:599:1841":{"id":"a:2:8181:3009-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2242-0:169:2451":{"id":"b:2:2242-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2688:225-0:342:1827":{"id":"a:2:2688:225-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2242-0:33:1794":{"id":"b:2:2242-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2674:217-0:36:1841":{"id":"a:2:2674:217-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:210:227":{"id":"0:210:227","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2555","0:213:2557","0:215:2559"],"impls":["a:2:8181:3009-0:210:227","a:2:2738:3086-0:210:227","a:2:8180:3010-0:210:227","a:2:2688:225-0:210:227","a:2:2674:217-0:210:227","b:2:2544-0:210:227","b:2:3333-0:210:227","b:2:2533-0:210:227","b:2:2529-0:210:227","b:2:2539-0:210:227","b:2:2239-0:210:227","b:2:2242-0:210:227","0:218","0:220"]}},"0:496:659":{"id":"0:496:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:371:1792":{"id":"0:371:1792","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[707,4],"end":[710,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2738:3086-0:543:1979":{"id":"a:2:2738:3086-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:462:415":{"id":"0:462:415","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:356:670":{"id":"0:356:670","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[579,4],"end":[585,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["format",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:2940:1913","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1790","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2868:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:265-0:571:1933":{"id":"0:265-0:571:1933","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:1933","glob":false}},"0:501:659":{"id":"0:501:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208-0:115:1795":{"id":"0:208-0:115:1795","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:115:1795","glob":true}},"b:2:2242-0:571:1933":{"id":"b:2:2242-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11944:38410":{"id":"2:11944:38410","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:554:659":{"id":"0:554:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:278:1921":{"id":"0:278:1921","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2868:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8180:3010-0:269:130":{"id":"a:2:8180:3010-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2529-0:269:130":{"id":"b:2:2529-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:563:604":{"id":"0:563:604","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11909:2315":{"id":"2:11909:2315","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11935:38409":{"id":"2:11935:38409","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11575:6087","str::split":"2:11923:2295","prim@char":"1:11872:411","str::split_terminator":"2:11932:38408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:42715:8301","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175:2463":{"id":"0:175:2463","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:348:1867":{"id":"0:348:1867","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[443,4],"end":[450,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:506:659":{"id":"0:506:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:47:1867":{"id":"0:47:1867","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:511:2605":{"id":"0:511:2605","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:0:2095":{"id":"0:0:2095","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1311,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\nLog levels are controlled on a per-module basis, and **by default all\nlogging is disabled except for the `error` level**.\n\nLogging is controlled via the **`RUST_LOG`** environment variable. The\nvalue of this environment variable is a comma-separated list of *logging\ndirectives*. A logging directive is of the form:\n\n```text\nexample::log::target=level\n```\n\nThe log target is typically equal to the path of the module the message\nin question originated from, though it can be overridden.\n\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target. A value of, for example, `RUST_LOG=example`, would\nmatch all of the messages with targets:\n\n* `example`\n* `example::test`\n* `example::test::module::submodule`\n* `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\nThe names of the log levels that may be specified correspond to the\nvariations of the [`log::Level`][level-enum] enum from the `log`\ncrate. They are:\n\n* `error`\n* `warn`\n* `info`\n* `debug`\n* `trace`\n\nThere is also a pseudo logging level, `off`, which may be specified to\ndisable all logging for a given module or for the entire application. As\nwith the logging levels, the letter case is not significant[^fn-off].\n\n[^fn-off]: Similar to the universe of log level names, the `off` pseudo\n   log level feature is also provided by the underlying `log` crate.\n\nThe letter case is not significant for the logging level names; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nAs the log level for a module is optional, the module to enable logging for\nis also optional. **If only a level is provided, then the global log\nlevel for all modules is set to this value.**\n\nSome examples of valid values of `RUST_LOG` are:\n\n* `hello` turns on all logging for the 'hello' module\n* `trace` turns on all logging for the application, regardless of its name\n* `TRACE` turns on all logging for the application, regardless of its name (same as previous)\n* `info` turns on all info logging\n* `INFO` turns on all info logging (same as previous)\n* `hello=debug` turns on debug logging for 'hello'\n* `hello=DEBUG` turns on debug logging for 'hello' (same as previous)\n* `hello,std::option` turns on hello, and std's option logging\n* `error,hello=warn` turn on global error logging and also warn for hello\n* `error,hello=off`  turn on global error logging, but turn off logging for hello\n* `off` turns off all logging for the application\n* `OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n# #[macro_use] extern crate log;\n#[cfg(test)]\nmod tests {\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/env-logger-rs/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log/\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:130"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:14:1792","0:70:659","0:340:1799","0:341:1802","0:585:1810","0:342:1827","0:599:1841","0:437:1991","0:438:2001","0:439:2058","0:442:2073","0:445:1869","0:446:1867","0:332-0:262:1793"],"is_stripped":false}},"0:360:1923":{"id":"0:360:1923","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[602,4],"end":[605,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:53:1993":{"id":"0:53:1993","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[228,4],"end":[259,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:355:1899":{"id":"0:355:1899","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11897:30551":{"id":"2:11897:30551","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11896:30550"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:446:1867":{"id":"0:446:1867","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1242,0],"end":[1247,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:486:659":{"id":"0:486:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2462","0:146:2602","0:147:2474"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1096,0],"end":[1103,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2580:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2738:3086-0:342:1827":{"id":"a:2:2738:3086-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8181:3009-0:169:2451":{"id":"a:2:8181:3009-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:434:659":{"id":"0:434:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1110,8],"end":[1114,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:532:1585":{"id":"0:532:1585","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:2533-0:458:2599":{"id":"b:2:2533-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:351:1870":{"id":"0:351:1870","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[488,4],"end":[503,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2239-0:571:1933":{"id":"b:2:2239-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:515:2608":{"id":"0:515:2608","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:366:1941":{"id":"0:366:1941","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[637,4],"end":[639,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:213:2557":{"id":"0:213:2557","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:358:1918":{"id":"0:358:1918","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[590,4],"end":[593,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:332-0:262:1793":{"id":"0:332-0:262:1793","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[294,0],"end":[294,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fmt::glob","name":"glob","id":"0:262:1793","glob":true}},"0:576:1942":{"id":"0:576:1942","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2674:217-0:458:2599":{"id":"a:2:2674:217-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:211:2555":{"id":"0:211:2555","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2738:3086-0:571:1933":{"id":"a:2:2738:3086-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8180:3010-0:342:1827":{"id":"a:2:8180:3010-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2738:3086-0:599:1841":{"id":"a:2:2738:3086-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8180:3010-0:599:1841":{"id":"a:2:8180:3010-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:8181:3009-0:33:1794":{"id":"a:2:8181:3009-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:407:2047":{"id":"0:407:2047","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1031,4],"end":[1039,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["write_style_env",{"kind":"generic","inner":"E"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11966:38416":{"id":"2:11966:38416","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:93-0:81:2523":{"id":"0:93-0:81:2523","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:81:2523","glob":true}},"b:2:3333-0:33:1794":{"id":"b:2:3333-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9291:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:676:2671":{"id":"5:676:2671","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:347:929":{"id":"0:347:929","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[411,4],"end":[413,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2738:3086-0:169:2451":{"id":"a:2:2738:3086-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2738:3086-0:36:1841":{"id":"a:2:2738:3086-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1087,0],"end":[1094,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:551:415":{"id":"0:551:415","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:519:2698":{"id":"0:519:2698","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2685:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:115:1795":{"id":"0:115:1795","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:210:227","0:543:1979"],"is_stripped":true}},"a:2:8181:3009-0:210:227":{"id":"a:2:8181:3009-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11874:802":{"id":"2:11874:802","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11872:411"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[122,0],"end":[169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:1792","0:43:2022","0:44:2024"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:476:659":{"id":"0:476:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:219:59":{"id":"0:219:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2544-0:210:227":{"id":"b:2:2544-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:436:659":{"id":"0:436:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1118,8],"end":[1127,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11882:35611":{"id":"2:11882:35611","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11143:2496"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2686:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:147:2474":{"id":"0:147:2474","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2599"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_vectored","write_all_vectored","write_fmt","by_ref","is_write_vectored","write_all"],"trait":{"name":"Write","id":"1:3441:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:1921","0:279:2034"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2533-0:169:2451":{"id":"b:2:2533-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2239-0:269:130":{"id":"b:2:2239-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1117,4],"end":[1128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8180:3010-0:100:2535":{"id":"a:2:8180:3010-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:572:1936":{"id":"0:572:1936","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2242-0:269:130":{"id":"b:2:2242-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2529-0:210:227":{"id":"b:2:2529-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2684:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2539-0:342:1827":{"id":"b:2:2539-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:95:1932":{"id":"0:95:1932","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180:2469":{"id":"0:180:2469","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:368:1947":{"id":"0:368:1947","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[647,4],"end":[650,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:210:227":{"id":"b:2:2533-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:674-0:571:1933":{"id":"b:5:674-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:2671","5:677:2052","5:678:3519"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:97:2478":{"id":"0:97:2478","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2535"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11994:2866":{"id":"2:11994:2866","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11919:3462":{"id":"2:11919:3462","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:40684:176","prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:100:2535":{"id":"a:2:2688:225-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2539-0:169:2451":{"id":"b:2:2539-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2529-0:33:1794":{"id":"b:2:2529-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8181:3009-0:571:1933":{"id":"a:2:8181:3009-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8181:3009-0:585:1810":{"id":"a:2:8181:3009-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8181:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2242-0:508:2464":{"id":"b:2:2242-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11947:38411":{"id":"2:11947:38411","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":"default","docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2580:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:146:2602":{"id":"0:146:2602","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2599"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:9084:2679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:9084:2679","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:491:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2738:3086-0:33:1794":{"id":"a:2:2738:3086-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[902,0],"end":[971,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:2024","0:389:1786","0:393:2034"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11901:35986":{"id":"2:11901:35986","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11902:35998"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:42921:8306","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11959:38414":{"id":"2:11959:38414","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11575:6087","`DoubleEndedIterator`":"2:7169:119","prim@char":"1:11872:411","str::match_indices":"2:11956:38413"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:42815:8303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11595:15460","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2239-0:585:1810":{"id":"b:2:2239-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11895:38406":{"id":"2:11895:38406","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11878:1380","crate::ops::IndexMut":"2:2999:10189","str::slice_unchecked":"2:11894:38405"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11905:35977":{"id":"2:11905:35977","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:42939:8167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:33:1794":{"id":"b:2:2533-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:178:2660":{"id":"0:178:2660","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:509:2465":{"id":"0:509:2465","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:527:1583":{"id":"0:527:1583","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:585:1810":{"id":"0:585:1810","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[317,0],"end":[320,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:8181:3009-0:585:1810","a:2:2738:3086-0:585:1810","a:2:8180:3010-0:585:1810","a:2:2688:225-0:585:1810","a:2:2674:217-0:585:1810","b:2:2544-0:585:1810","b:2:3333-0:585:1810","b:2:2533-0:585:1810","b:2:2529-0:585:1810","b:2:2539-0:585:1810","b:2:2239-0:585:1810","b:2:2242-0:585:1810","0:427","0:589","0:423"]}},"0:381:1867":{"id":"0:381:1867","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[862,4],"end":[867,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3333-0:169:2451":{"id":"b:2:3333-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2543:1457":{"id":"2:2543:1457","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40826:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2580:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:262:1793":{"id":"0:262:1793","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:264-0:210:227","0:265-0:571:1933","0:266-0:543:1979"],"is_stripped":true}},"2:11888:30524":{"id":"2:11888:30524","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:40684:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9756:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:9090:2681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:9090:2681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:501:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2674:217-0:100:2535":{"id":"a:2:2674:217-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2544-0:33:1794":{"id":"b:2:2544-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11999:10167":{"id":"2:11999:10167","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4522:10167"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:42955:8106","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:525:2700":{"id":"0:525:2700","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:527:1583"]},"discriminant":null}},"a:2:2674:217-0:508:2464":{"id":"a:2:2674:217-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2529-0:342:1827":{"id":"b:2:2529-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11903:3800":{"id":"2:11903:3800","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:42901:2965","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:33:1794":{"id":"a:2:2688:225-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11970:38419":{"id":"2:11970:38419","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11600:15459","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3333-0:342:1827":{"id":"b:2:3333-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:677:2052":{"id":"5:677:2052","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2239-0:169:2451":{"id":"b:2:2239-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11991:1966":{"id":"2:11991:1966","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11537:125","`FromStr`":"2:11536:2880"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40826:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11536:2880","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11536:2880","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142:1793":{"id":"0:142:1793","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1795","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:143-0:123:2523"],"is_stripped":true}},"a:2:2674:217-0:269:130":{"id":"a:2:2674:217-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:221:659":{"id":"0:221:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2242-0:36:1841":{"id":"b:2:2242-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2544-0:100:2535":{"id":"b:2:2544-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:365:1938":{"id":"0:365:1938","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11997:38424":{"id":"2:11997:38424","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4521:38424"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:42946:8228","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2544-0:269:130":{"id":"b:2:2544-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2239-0:100:2535":{"id":"b:2:2239-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:397:1792":{"id":"0:397:1792","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[980,4],"end":[987,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["filter_env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:591:659":{"id":"0:591:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2239-0:33:1794":{"id":"b:2:2239-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8180:3010-0:458:2599":{"id":"a:2:8180:3010-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2738:3086-0:269:130":{"id":"a:2:2738:3086-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:385:1792":{"id":"0:385:1792","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[892,4],"end":[894,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:269:130":{"id":"b:2:2533-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11894:38405":{"id":"2:11894:38405","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11878:1380","str::slice_mut_unchecked":"2:11895:38406","crate::ops::Index":"2:2995:10188"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8180:3010-0:33:1794":{"id":"a:2:8180:3010-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:217:1583":{"id":"0:217:1583","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:279:1915","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"io::Write","id":"1:3441:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}},"0:373:1402":{"id":"0:373:1402","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[739,4],"end":[742,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"resolved_path","inner":{"name":"fmt::Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:571:1933":{"id":"b:2:2529-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11899:8316":{"id":"2:11899:8316","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11872:411"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:42623:8298","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2688:225-0:210:227":{"id":"a:2:2688:225-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2239-0:508:2464":{"id":"b:2:2239-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:370:1957":{"id":"0:370:1957","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[685,4],"end":[688,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8180:3010-0:508:2464":{"id":"a:2:8180:3010-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2738:3086-0:100:2535":{"id":"a:2:2738:3086-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:542:604":{"id":"0:542:604","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99:2480":{"id":"0:99:2480","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2535"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:362:1928":{"id":"0:362:1928","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[615,4],"end":[618,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["indent",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:379:1993":{"id":"0:379:1993","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[823,4],"end":[832,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2580:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2539-0:269:130":{"id":"b:2:2539-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:521:2607":{"id":"0:521:2607","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2674:217-0:571:1933":{"id":"a:2:2674:217-0:571:1933","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2684:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:176:2609":{"id":"0:176:2609","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2674:217-0:543:1979":{"id":"a:2:2674:217-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:384:1893":{"id":"0:384:1893","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9076:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9076:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:471:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:378:2001":{"id":"0:378:2001","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[814,4],"end":[817,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11926:30559":{"id":"2:11926:30559","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11399:8149","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5374:2289":{"id":"5:5374:2289","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2738:3086-0:508:2464":{"id":"a:2:2738:3086-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2539-0:508:2464":{"id":"b:2:2539-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192:659":{"id":"0:192:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:341:1802":{"id":"0:341:1802","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[304,0],"end":[304,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}},"5:5380:39073":{"id":"5:5380:39073","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92:1793":{"id":"0:92:1793","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:659","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:93-0:81:2523"],"is_stripped":true}},"b:2:2242-0:543:1979":{"id":"b:2:2242-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:264-0:210:227":{"id":"0:264-0:210:227","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::Target","name":"Target","id":"0:210:227","glob":false}},"b:2:2539-0:100:2535":{"id":"b:2:2539-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:405:1813":{"id":"0:405:1813","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1019,4],"end":[1026,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["write_style_env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:9082:2680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:9082:2680","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:496:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2529-0:585:1810":{"id":"b:2:2529-0:585:1810","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2533-0:342:1827":{"id":"b:2:2533-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2242-0:342:1827":{"id":"b:2:2242-0:342:1827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[833,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:929","0:348:1867","0:351:1870","0:354:1893","0:355:1899","0:356:670","0:358:1918","0:359:1920","0:360:1923","0:361:1925","0:362:1928","0:363:1931","0:364:1935","0:365:1938","0:366:1941","0:367:1944","0:368:1947","0:369:1952","0:370:1957","0:371:1792","0:372:1884","0:373:1402","0:374:1813","0:375:1886","0:376:1984","0:377:1991","0:378:2001","0:379:1993"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2738:3086-0:210:227":{"id":"a:2:2738:3086-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:674-0:508:2464":{"id":"b:5:674-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:2671","5:677:2052","5:678:3519"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1109,4],"end":[1115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1827","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2738:3086-0:458:2599":{"id":"a:2:2738:3086-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2738:3086","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:674-0:543:1979":{"id":"b:5:674-0:543:1979","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:670:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:676:2671","5:677:2052","5:678:3519"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:442:2073":{"id":"0:442:2073","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1217,0],"end":[1223,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2239-0:458:2599":{"id":"b:2:2239-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2233:96","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2241:1783"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8180:3010-0:169:2451":{"id":"a:2:8180:3010-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:33:1794":{"id":"0:33:1794","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[82,0],"end":[85,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:40","a:2:8181:3009-0:33:1794","a:2:2738:3086-0:33:1794","a:2:8180:3010-0:33:1794","a:2:2688:225-0:33:1794","a:2:2674:217-0:33:1794","b:2:2544-0:33:1794","b:2:3333-0:33:1794","b:2:2533-0:33:1794","b:2:2529-0:33:1794","b:2:2539-0:33:1794","b:2:2239-0:33:1794","b:2:2242-0:33:1794","0:60"]}},"0:143-0:123:2523":{"id":"0:143-0:123:2523","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:123:2523","glob":true}},"0:578:1945":{"id":"0:578:1945","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:3335:1470":{"id":"2:3335:1470","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:39010:8213","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:375:1886":{"id":"0:375:1886","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[769,4],"end":[772,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write_style",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11962:2304":{"id":"2:11962:2304","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11996:30450":{"id":"2:11996:30450","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[277,0],"end":[288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2529-0:100:2535":{"id":"b:2:2529-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2532:1882"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8180:3010-0:210:227":{"id":"a:2:8180:3010-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8180:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:269:130":{"id":"0:269:130","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:8181:3009-0:269:130","a:2:2738:3086-0:269:130","a:2:8180:3010-0:269:130","a:2:2688:225-0:269:130","a:2:2674:217-0:269:130","b:2:2544-0:269:130","b:2:3333-0:269:130","b:2:2533-0:269:130","b:2:2529-0:269:130","b:2:2539-0:269:130","b:2:2239-0:269:130","b:2:2242-0:269:130","0:277","0:280"]}},"0:571:1933":{"id":"0:571:1933","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:1936","0:574:1939","0:576:1942","0:578:1945"],"impls":["a:2:8181:3009-0:571:1933","a:2:2738:3086-0:571:1933","a:2:8180:3010-0:571:1933","a:2:2688:225-0:571:1933","a:2:2674:217-0:571:1933","b:2:2544-0:571:1933","b:2:3333-0:571:1933","b:2:2533-0:571:1933","b:2:2529-0:571:1933","b:2:2539-0:571:1933","b:2:2239-0:571:1933","b:2:2242-0:571:1933","b:5:674-0:571:1933","0:267","0:581","0:583","0:580"]}},"0:544:2567":{"id":"0:544:2567","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:3333-0:100:2535":{"id":"b:2:3333-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9071:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2688:225-0:599:1841":{"id":"a:2:2688:225-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2688:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3333-0:508:2464":{"id":"b:2:3333-0:508:2464","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3331:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3335:1470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2686:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11904:38407":{"id":"2:11904:38407","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:42911:8305","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11906:30567":{"id":"2:11906:30567","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11969:38418":{"id":"2:11969:38418","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[262,0],"end":[266,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2580:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2544-0:599:1841":{"id":"b:2:2544-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:491:659":{"id":"0:491:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:471:659":{"id":"0:471:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[973,0],"end":[1056,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:929","0:397:1792","0:399:2039","0:402:2043","0:405:1813","0:407:2047","0:410:2049"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:9078:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:9078:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:481:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2539-0:458:2599":{"id":"b:2:2539-0:458:2599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2533-0:36:1841":{"id":"b:2:2533-0:36:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:266-0:543:1979":{"id":"0:266-0:543:1979","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:1979","glob":false}},"0:402:2043":{"id":"0:402:2043","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[1005,4],"end":[1012,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11879:38403":{"id":"2:11879:38403","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11877:38402"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177:2466":{"id":"0:177:2466","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:466:659":{"id":"0:466:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363:1931":{"id":"0:363:1931","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[621,4],"end":[624,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["timestamp",{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"fmt::TimestampPrecision","id":"0:571:1933","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5633-0:169:2451":{"id":"b:5:5633-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9076:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5631:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5635:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:59:59":{"id":"0:59:59","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[263,4],"end":[265,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:100:2535":{"id":"0:100:2535","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8181:3009-0:100:2535","a:2:2738:3086-0:100:2535","a:2:8180:3010-0:100:2535","a:2:2688:225-0:100:2535","a:2:2674:217-0:100:2535","b:2:2544-0:100:2535","b:2:3333-0:100:2535","b:2:2533-0:100:2535","b:2:2529-0:100:2535","b:2:2539-0:100:2535","b:2:2239-0:100:2535","b:2:2242-0:100:2535","b:5:5633-0:100:2535","0:112","0:103"]}},"0:281:659":{"id":"0:281:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:49:1957":{"id":"0:49:1957","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:2451":{"id":"0:169:2451","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8181:3009-0:169:2451","a:2:2738:3086-0:169:2451","a:2:8180:3010-0:169:2451","a:2:2688:225-0:169:2451","a:2:2674:217-0:169:2451","b:2:2544-0:169:2451","b:2:3333-0:169:2451","b:2:2533-0:169:2451","b:2:2529-0:169:2451","b:2:2539-0:169:2451","b:2:2239-0:169:2451","b:2:2242-0:169:2451","b:5:5633-0:169:2451","0:498","0:468","0:503","0:493","0:463","0:483","0:478","0:488","0:473"]}},"b:2:2242-0:100:2535":{"id":"b:2:2242-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:543:1979":{"id":"0:543:1979","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2567","0:546:2569","0:548:2504"],"impls":["a:2:8181:3009-0:543:1979","a:2:2738:3086-0:543:1979","a:2:8180:3010-0:543:1979","a:2:2688:225-0:543:1979","a:2:2674:217-0:543:1979","b:2:2544-0:543:1979","b:2:3333-0:543:1979","b:2:2533-0:543:1979","b:2:2529-0:543:1979","b:2:2539-0:543:1979","b:2:2239-0:543:1979","b:2:2242-0:543:1979","b:5:674-0:543:1979","0:562","0:558","0:552","0:550","0:556","0:236","0:561","0:553","0:555"]}},"2:11915:3501":{"id":"2:11915:3501","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:40684:176","prim@char":"1:11872:411","self::pattern":"2:11575:6087"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40682:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:481:659":{"id":"0:481:659","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9046:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9035:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[171,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:46:929","0:47:1867","0:48:1952","0:49:1957","0:50:1792","0:52:1966","0:53:1993"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:354:1893":{"id":"0:354:1893","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11873":{"id":"2:11873","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11874:802","2:11875:2279","2:11876:38401","2:11877:38402","2:11879:38403","2:11882:35611","2:11883:38404","2:11884:311","2:11885:30527","2:11886:2044","2:11888:30524","2:11890:30525","2:11892:30526","2:11894:38405","2:11895:38406","2:11896:30550","2:11897:30551","2:11898:8168","2:11899:8316","2:11900:2497","2:11901:35986","2:11902:35998","2:11903:3800","2:11904:38407","2:11905:35977","2:11906:30567","2:11909:2315","2:11912:30090","2:11915:3501","2:11919:3462","2:11923:2295","2:11926:30559","2:11929:30561","2:11932:38408","2:11935:38409","2:11938:30563","2:11941:30565","2:11944:38410","2:11947:38411","2:11950:2022","2:11953:38412","2:11956:38413","2:11959:38414","2:11962:2304","2:11964:38415","2:11966:38416","2:11968:38417","2:11969:38418","2:11970:38419","2:11973:38420","2:11976:29873","2:11979:30568","2:11982:38421","2:11985:38422","2:11988:38423","2:11991:1966","2:11993:30448","2:11994:2866","2:11995:30449","2:11996:30450","2:11997:38424","2:11999:10167","2:12000:26172"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5390:2987":{"id":"5:5390:2987","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7239:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7239:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11900:2497":{"id":"2:11900:2497","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:42633:2968","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2544-0:169:2451":{"id":"b:2:2544-0:169:2451","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2451","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2547:126","2:2548:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2674:217-0:210:227":{"id":"a:2:2674:217-0:210:227","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2674:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:445:1869":{"id":"0:445:1869","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1231,0],"end":[1233,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2242-0:599:1841":{"id":"b:2:2242-0:599:1841","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2681:3085","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2236:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1841","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2244:2441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:386:2022":{"id":"0:386:2022","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[897,4],"end":[899,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1790","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:361:1925":{"id":"0:361:1925","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[608,4],"end":[611,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:458:2599":{"id":"0:458:2599","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:8181:3009-0:458:2599","a:2:2738:3086-0:458:2599","a:2:8180:3010-0:458:2599","a:2:2688:225-0:458:2599","a:2:2674:217-0:458:2599","b:2:2544-0:458:2599","b:2:3333-0:458:2599","b:2:2533-0:458:2599","b:2:2529-0:458:2599","b:2:2539-0:458:2599","b:2:2239-0:458:2599","b:2:2242-0:458:2599","b:5:674-0:458:2599","0:191","0:461"]}},"b:2:2539-0:33:1794":{"id":"b:2:2539-0:33:1794","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2513:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2509:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:126","2:2543:1457"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:399:2039":{"id":"0:399:2039","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[992,4],"end":[1000,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["filter_env",{"kind":"generic","inner":"E"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2503:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:679:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11956:38413":{"id":"2:11956:38413","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11575:6087","`DoubleEndedIterator`":"2:7169:119","prim@char":"1:11872:411","str::rmatch_indices":"2:11959:38414"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:42797:8302","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11580:5965","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2241:1783":{"id":"2:2241:1783","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2533-0:100:2535":{"id":"b:2:2533-0:100:2535","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2535:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11876:38401":{"id":"2:11876:38401","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11885:30527":{"id":"2:11885:30527","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11889:1478"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"17:10721:6716":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"26:164:120":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"17:11641:6817":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"22:1581:6064":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"31:4519:4220":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"29:6893:4991":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:853:4040":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:5249:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:10648:8520":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"6:6694:5802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:13376:7241":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"26:134:126":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"30:3778:5070":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"2:2685:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:4992:8489":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:1985:8072":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:3783:8478":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:9796:6600":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"22:1127:5997":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"20:1661:6367":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"6:6688:5801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:5048:9530":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:20837:10368":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"5:870:3830":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"29:5321:5476":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"11:646:3831":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:8474:8591":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:8155:8571":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:45314:8393":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:39010:8213":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:11843:10173":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"21:1817:6222":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"5:2159:39614":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"21:2348:6252":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"31:6677:4822":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"2:39761:8125":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"20:1492:6342":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"2:11113:15648":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:4722:659":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:3934:10247":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:41159:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"5:1394:7984":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:9028:6551":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:10709:8157":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:850:3830":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"21:1623:26151":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"2:4749:38167":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"23:97:26113":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:1567:3830":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"18:614:39996":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"28:42:26199":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"2:9339:3792":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"23:699:3428":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:41962:3793":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:8548:22270":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"23:761:5909":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"17:9973:6620":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:1677:5266":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:9087:3368":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"31:6597:4807":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"31:4942:4326":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"31:5748:5159":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"1:10826:8494":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:8858:6432":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:12259:6939":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:7579:1841":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:41737:70":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:11391:6770":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"0:36:1841":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"2:3995:8108":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:917:4024":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"21:1850:26143":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"2:41971:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:46222:8434":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:3537:3831":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:41954:8272":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:2500:73":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"20:2437:2933":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"31:4762:4274":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"17:11844:6860":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:6488:7639":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"31:7219:4937":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"2:1655:1075":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:541:4780":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"30:3872:41295":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"2:22831:8096":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:2788:15574":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"30:2624:5003":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"2:10210:8155":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:44265:8340":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"21:2469:26142":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"5:7087:3467":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:7017:34657":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:953:7989":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"11:0:2708":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"17:9822:6601":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:8827:10333":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:7263:5888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:4171:2834":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"23:691:5909":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:4510:5421":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:6788:5861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:6990:7725":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"22:1195:126":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"2:44836:8366":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"26:181:2535":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"31:4628:9391":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"1:8485:8592":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:6442:7638":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"20:1533:6351":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"6:4612:5467":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"20:1889:6394":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"5:1706:4024":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"22:1013:5983":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"6:5735:4590":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:6238:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:7711:7831":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"29:4627:5306":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"21:2385:6267":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"1:591:10166":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"8:0:2705":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:2212:8474":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:39612:8242":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:20390:3428":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:39712:5927":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:7498:7822":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"29:4998:5399":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:10142:22355":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"29:8017:5788":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2806:15576":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:4098:2854":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:7519:7823":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:4415:10273":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"29:5094:5421":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:6460:7450":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"5:3114:6213":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:2426:7426":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:7520:3833":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:39543:2966":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:12191:37969":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:42555:8293":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"33:74:3074":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"6:4734:5519":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:12563:6986":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"20:949:6315":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"22:1342:40757":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"1:11893:1474":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:2546:7431":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:13678:7341":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:42623:8298":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"20:1896:6351":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"5:4157:2948":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:8129:7889":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:2575:2969":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:12033:6887":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:42453:8285":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:5515:8114":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"5:3107:3830":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"18:766:26123":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46619:8446":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:8269:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:8859:10334":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"29:1987:4348":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"11:387:39968":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:7193:36110":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:39677:8247":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:2347:10218":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:11838:6321":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:12449:6965":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"20:1906:6321":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"22:961:5977":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"29:5893:5584":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"31:5983:9475":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"16:2786:7441":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:39334:15528":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"16:6890:7458":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:22264:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:45009:8372":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:3047:21347":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"29:4675:5326":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"31:6497:27373":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"29:7302:5747":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"31:5041:4357":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"2:29805:10241":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:10580:6700":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"5:4904:2948":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13024:7156":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:10316:6673":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11544:6788":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:8781:8598":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:8071:2991":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"23:726:5923":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"21:1779:26145":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"2:2794:7748":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:7478:7461":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"31:6431:4786":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"17:10270:6670":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"21:1654:26154":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"1:6103:4121":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:5976:5740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"20:0:1594":{"crate_id":20,"path":["regex"],"kind":"module"},"2:43666:3014":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:8795:8495":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:13488:7271":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"22:1611:6070":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"11:738:7985":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:7926:8526":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"29:6847:5647":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:4311:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"11:1138:7998":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"21:1081:26160":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"29:4962:5391":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"30:5209:5140":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"31:5704:4542":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"2:43637:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:8181:3009":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:537:3352":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:1774:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:8725:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:12218:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"23:807:5939":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"11:1120:7997":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:6909:4124":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"0:439:2058":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"2:44720:8363":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:4953:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10743:6721":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:13399:7249":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:6307:7447":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:39965:8129":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"23:624:5909":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:1571:3467":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:13015:7153":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"15:198:21301":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:561:3354":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:1978:6451":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:20435:38252":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"31:4733:4263":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"1:1578:4024":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"5:4127:2948":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"31:4635:9392":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"2:40959:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"16:5797:7530":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:3133:9816":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:30598:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:5868:5673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:1850:3540":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"21:2140:26179":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"17:9866:6605":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:9867:8261":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"5:1218:7993":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"28:127:26204":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"31:6373:4773":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"6:4482:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:42443:8284":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"11:1866:6214":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:39311:15527":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"29:9246:5587":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:49000:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:660:5930":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:8149:8569":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"31:5314:9440":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"6:4894:9626":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:8223:8569":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:10198:8493":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:4819:5558":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:5677:22202":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"31:4588:4240":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"21:2404:6219":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"16:6132:7582":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:5963:7553":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:45344:8394":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:12490:3015":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:13257:7211":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:46698:8451":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:2255:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:42697:8300":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:8310:22263":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"31:5226:9420":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"6:1652:5247":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:13821:7379":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"21:2436:26141":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"1:959:7991":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:6124:5765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"31:4615:9387":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"30:5305:5141":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"2:41946:3794":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:4239:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:8249:8576":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:8156:7468":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:9453:22285":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:11892:1477":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"20:2444:2934":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"2:1743:8099":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"20:1452:40060":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"17:13356:7234":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:2388:1785":{"crate_id":1,"path":["std","io"],"kind":"module"},"5:2906:39482":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:2738:3086":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"20:2202:2923":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"31:5221:5896":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"31:4949:4328":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"2:10783:15456":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:13426:7256":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:1808:2853":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:7479:5890":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:4197:3830":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:7058:8087":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:4290:5298":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:9038:39986":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"22:1495:6050":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"24:296:1789":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"5:623:8068":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:1048:39480":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"29:1869:5202":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"20:1213:2920":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"1:881:7984":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:7682:3545":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:7094:15566":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:7259:3140":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:5998:22204":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"29:7002:5661":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:1731:5282":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:7253:8094":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"20:1947:6300":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"6:5935:5716":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"31:5781:9458":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"17:11993:6880":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:5305:7505":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:10569:6696":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:1988:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"21:1640:6207":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"1:7584:3358":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"30:438:2842":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"6:4873:9611":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"31:5002:9409":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"11:1840:4054":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:1032:39638":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:39687:8248":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:11872:411":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:10856:8596":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:46630:8447":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:45764:8400":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"31:6452:4791":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"21:1188:1796":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"0:0:2095":{"crate_id":0,"path":["env_logger"],"kind":"module"},"6:4432:5383":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:9076:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"31:4536:4224":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"1:11026:8785":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"21:0:2827":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"6:506:4522":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:6035:5760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:7633:10171":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:6588:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:2967:21346":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:43398:9793":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:30064:36119":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:11063:9186":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:12433:6961":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:1604:5215":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"22:1399:6046":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"6:4492:5411":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:1617:5222":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"11:2184:9598":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:3899:7480":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"11:1518:21282":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:11069:22277":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:0:2713":{"crate_id":17,"path":["object"],"kind":"module"},"23:0:2714":{"crate_id":23,"path":["memchr"],"kind":"module"},"31:5666:4519":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"2:6514:3475":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"29:4846:5373":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:10478:6686":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:13453:7263":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:13211:7200":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:7567:10260":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:22198:3359":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"9:234:6016":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"29:8221:5802":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:9596:6582":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:10303:6672":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:3156:15586":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:39594:1794":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"29:5668:5544":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"9:481:21203":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:9138:6553":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:624:8463":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"22:1107:5978":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"6:7543:9551":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:38861:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:6298:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:12902:7111":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:2857:15582":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:7596:22212":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"31:6686:9491":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"16:6876:7457":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:9291:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"31:5307:9439":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"21:1416:26144":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"29:7993:5783":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:30034:3583":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:4915:9641":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"22:1677:6084":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"20:2552:2917":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"21:1748:26147":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"29:9240:5586":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"18:481:5908":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:4757:7493":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"11:2190:39970":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:6904:7708":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:11672:4140":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:2826:15578":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:12158:6903":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:39736:8249":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:4248:2836":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:48565:10404":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"29:5836:5569":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"23:681:5917":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:5819:15886":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:11364:8166":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"18:755:5954":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:42374:8280":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:39371:15529":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"22:1368:40760":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"1:11159:8630":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:6236:7619":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:10933:4132":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:11871:926":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"23:853:26122":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"28:132:26205":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"2:43454:15689":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:43563:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:20663:10260":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"20:2476:2923":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"2:44419:8346":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"31:5085:4380":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"0:572:1936":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"6:7514:5586":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:653:4519":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:7467:7818":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"11:1859:6213":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"29:5611:5530":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:10643:9797":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:8047:7882":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:13433:7257":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:4963:5588":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"11:751:4054":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:1716:4783":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:9523:6576":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:1304:93":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:21284:38073":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:9498:6574":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:3063:6463":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:3765:4032":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:10516:6689":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:6919:39979":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:10465:6685":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:12403:6958":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"21:1115:6112":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"6:6593:4946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"26:230:3038":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"29:5922:5596":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:9035:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"22:1690:6086":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"21:1905:6230":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"31:6640:4817":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"1:7505:4125":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:21645:36133":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:46584:8443":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:7803:7841":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:3394:8105":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"26:209:41169":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"1:11322:8476":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"29:8856:5887":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:6868:7706":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"20:1732:6384":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"2:1457:2240":{"crate_id":2,"path":["core","mem"],"kind":"module"},"31:5913:4591":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"2:40682:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:8667:6543":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:10068:8151":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"22:1560:6062":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"22:1102:6004":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"2:40733:3466":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:9917:6614":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:9443:6567":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:11532:6787":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"21:1706:6208":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"2:43211:8320":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"29:1802:5179":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"20:931:2920":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"11:853:7991":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:4400:7483":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:4075:34656":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:4399:5369":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:6520:7648":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:43082:8317":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:13842:7382":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:43616:8333":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"31:7138:4924":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"6:4930:9650":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:9148:39989":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:2572:7432":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"21:1733:6211":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"16:5920:7401":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:30228:36109":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"29:1744:4334":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:9275:39985":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:4381:5357":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:9469:6568":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"20:2220:2927":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"28:37:26198":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"17:13344:7233":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:42425:8281":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"24:326:2877":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"17:9350:39990":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:7042:3467":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:6981:7722":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:5041:9652":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"31:6473:4792":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"1:4565:10248":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:12113:6898":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:4442:5386":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11832:6859":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:5372:8492":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:2693:2848":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:7239:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:8992:8786":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"31:6923:4872":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"21:2048:130":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"11:659:3467":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:9488:6573":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"23:844:5949":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:4848:5569":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"31:6343:4763":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"20:1398:6321":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"30:466:26238":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"2:39224:8106":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4504:5418":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"29:5987:9532":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"31:176:4215":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"30:4338:41306":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"2:2674:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:7042:7731":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"29:4605:5298":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:45110:8375":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"21:2489:26143":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"29:4770:5356":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:3938:2948":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"20:2487:2918":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"33:161:2552":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"16:5418:7507":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:7520:5587":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:31822:8205":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"22:1086:5955":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"2:11575:6087":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:9082:2680":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:55:7872":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"14:7:7976":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"23:665:139":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:6146:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"30:4359:5103":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"1:508:3347":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"5:7162:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"22:1225:6016":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"31:4843:27364":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"16:6351:22206":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:4113:10270":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"20:1780:6386":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"20:1468:6339":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"6:7218:5887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:1589:5203":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:45190:8376":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:10402:6677":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:13763:7362":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:40818:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"29:7120:5711":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"29:5054:5411":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"20:213:40005":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"1:8080:2963":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"20:2255:2929":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"18:719:5946":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"14:187:21294":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:42964:8223":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:5558:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:46683:8450":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:649:10169":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:6334:8501":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"31:4621:9390":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"17:10527:22380":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:43573:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"31:4975:4336":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"1:8737:8594":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:45580:8398":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:554:4774":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:9322:39994":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:4374:2844":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:11163:6749":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"14:221:7980":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"21:2311:6201":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"2:31818:8204":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"21:1830:26142":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"29:7021:5666":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13324:7226":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:39267:8220":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"0:442:2073":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"17:10039:6629":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:9068:39991":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"29:8420:5873":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:8979:39993":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"29:7265:5742":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"29:5496:5509":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:587:5166":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"20:1671:40008":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"31:7369:4991":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"21:2109:6127":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"1:0:1372":{"crate_id":1,"path":["std"],"kind":"module"},"11:810:7999":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"31:4822:9402":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"5:2895:2671":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"0:269:130":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"31:6660:4819":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"2:21660:8184":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:1901:8471":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"22:1507:6052":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"1:3459:2959":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"30:4212:5099":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"17:12959:7147":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:3177:15511":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"30:2838:5001":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"31:6669:4821":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"1:10411:2557":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"21:1802:4008":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"1:4105:10269":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:12367:105":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:11384:8478":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:5847:7538":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:9907:6613":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:2681:3085":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:10693:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"29:658:4484":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"17:13309:7224":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"20:1965:6324":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"2:2345:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:1559:5185":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:6375:3061":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:2219:2957":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:2905:7446":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:38971:2890":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:43374:9787":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:975:6442":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:45426:8395":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"31:6632:4816":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"21:2569:6279":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"2:3382:15494":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:3169:2983":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"21:1335:26139":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"23:753:5929":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:2853:15581":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"31:6585:9489":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"2:40767:3140":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:242:6434":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:7526:9658":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"31:7204:4934":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"6:4750:5527":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"11:320:4020":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:8214:7791":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:29994:3581":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"29:522:4516":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"31:5282:4418":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"1:10683:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:8420:22266":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:9409:22284":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:11877:1350":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:39484:4084":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"30:2529:5002":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"16:5724:7523":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"20:1574:6268":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"21:1535:6189":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"31:5674:4522":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"16:4510:7486":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:5060:9535":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:7293:7771":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:2106:8778":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"31:5029:4352":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"18:736:26122":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"20:2174:2922":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"17:8443:22267":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"31:6081:27370":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"14:0:2710":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:12059:6890":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"11:669:7982":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"29:2005:5247":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"29:5433:5496":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:9027:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:44542:8351":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"22:1351:1841":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"30:4667:41297":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"2:20832:10260":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"20:1647:6365":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"2:42955:8106":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:6336:7628":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:5858:5666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:7697:7456":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:9734:6595":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:13639:7329":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"21:2423:4009":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"6:482:5147":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:6400:7635":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:20458:38247":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:20856:10260":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"20:2459:2921":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"31:7106:4919":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"16:7317:39983":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"31:5332:27366":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"5:7050:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:4773:5541":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:2870:15585":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"29:5993:9535":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:154:4015":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:13053:7163":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"28:0:3039":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"20:1754:2842":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"1:4177:8480":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:4422:5378":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:43225:15473":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"24:277:1790":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"29:5742:5556":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:487:6440":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:6554:3070":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"24:241:2875":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"2:4584:15521":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:8931:6436":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13777:7364":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:4445:7484":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"20:2351:2933":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"17:11813:6854":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"29:6813:5643":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:42605:8297":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:41279:91":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"11:1681:142":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:4529:5431":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:11894:780":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"5:1433:7983":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:8092:2964":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:13082:7171":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"23:655:5915":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:10670:6711":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:40006:8132":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:2836:15580":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:46362:8436":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:9017:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"31:6965:4882":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"23:632:5907":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:8632:22250":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:1789:3525":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:40531:8140":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"20:1790:6387":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"16:4845:7496":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"31:6614:4810":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"11:985:7734":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:41691:67":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:8949:8605":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:6232:4054":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:3130:32143":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:4320:2842":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:8360:22264":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:13499:7272":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"11:762:4024":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:6087:4106":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:10428:6682":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"23:769:5909":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:11882:633":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:2720:7438":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"21:2087:6093":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"18:515:5907":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:11037:22276":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"21:2125:6248":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"31:4723:4258":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"17:11446:6778":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"22:1281:5966":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"2:41746:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"31:5805:9461":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"17:12098:6895":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"21:1671:26140":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"17:9098:6552":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"29:5454:5500":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:38927:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:4037:7481":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"31:7076:27379":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"17:9478:6570":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"21:2560:126":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"1:10922:4131":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"29:9104:4770":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"29:604:5150":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"33:358:2464":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"17:11372:6769":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"18:521:26124":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"29:1687:4519":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:43654:8338":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:8907:3351":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:2896:39479":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"23:707:5918":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:8376:6016":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:923:7999":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"26:157:3033":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"17:13265:7213":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:4690:5500":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:5225:4011":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"18:699:5940":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"22:1406:5965":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"29:712:5159":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"1:932:7983":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:41319:3055":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:3174:6088":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:11646:15466":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"29:8329:5851":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:11477:8511":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:11459:6780":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"29:6911:4763":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:7029:7728":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:13367:7238":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"30:356:9180":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"16:5386:6542":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"29:621:5153":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"2:21685:36128":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:4664:4995":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"22:1501:6051":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"1:10127:9185":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:5572:4116":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:42665:8152":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:6988:3016":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"31:4501:4214":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"1:2345:2025":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:7240:9545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"22:1449:6033":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"22:1211:5956":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"4:0:2704":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:43442:3025":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:7859:22214":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:44245:8339":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"31:5094:4382":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"31:5896:4587":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:5947:5723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:7246:4543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:2373:10228":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:4738:4113":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:9371:8519":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"20:1405:40007":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"17:13667:7336":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:4596:7489":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:11136:6747":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:2460:10260":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:9088:2682":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:420:6439":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"29:7143:5716":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:965:7992":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:9455:4092":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:20706:10369":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"18:113:26114":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:5786:4986":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:6728:7686":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"31:4813:4292":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"17:13101:7172":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:11821:6856":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"22:1188:1841":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"5:5697:4054":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"29:5513:5512":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:42921:8306":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"31:5020:4348":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"31:4742:4265":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"1:11888:731":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"29:5633:5538":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"31:6298:9477":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"31:7157:9524":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"17:13812:7377":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:39350:8228":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:5005:5604":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"26:0:1596":{"crate_id":26,"path":["humantime"],"kind":"module"},"1:11887:735":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"22:1359:5942":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"21:2593:40721":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"16:7557:7824":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"29:5875:5578":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:42513:8289":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:2694:7437":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:2541:2976":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"31:6108:27371":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"17:13865:7386":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"29:6783:5630":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"31:5560:4486":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"17:11785:6848":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"30:3908:41319":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"17:11484:6782":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"28:69:26191":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"29:5117:5426":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"5:3524:3830":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"31:6569:9482":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"5:3140:6214":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"31:4833:4295":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"0:599:1841":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"30:3086:5010":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"2:7517:3832":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:9557:6555":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"14:160:7976":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:682:10170":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"29:7166:5723":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"29:2136:4783":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"29:8105:4979":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"20:987:2925":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"29:7345:5760":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:3293:2589":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:11153:8505":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:2688:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:42715:8301":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"11:353:4022":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"29:4731:5349":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"20:1582:6357":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"0:342:1827":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"29:1781:4352":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:13041:7158":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:11440:8631":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:4786:5547":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:39775:8126":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"29:480:15912":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"2:42001:8278":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:6773:5854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:3331:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"29:1762:5175":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"20:1922:40061":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"1:2361:10222":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:5804:4763":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:11879:1460":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:2777:7747":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:11536:2880":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"21:1184:6129":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"22:1489:6049":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"2:39664:8120":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"31:5251:9425":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"1:7770:1789":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"0:437:1991":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"1:5504:10328":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:41079:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:6867:9300":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"5:2397:9659":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:9748:6555":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:41786:72":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:13292:7217":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:39626:8245":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"31:5618:4513":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"22:1429:5966":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"17:12331:6947":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"7:32:21190":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:6673:5795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6164:7587":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:4684:10263":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:1527:4334":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"29:5136:5431":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:12435:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"24:198:2238":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"20:2012:6336":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"31:5594:4507":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"6:1663:5255":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"31:5104:27365":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"2:45614:8399":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"20:1289:2925":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"2:44335:8343":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"10:44:8003":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:11109:6746":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"30:3475:5014":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"3:0:435":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"21:1178:6127":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"20:1998:6408":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"22:1422:1841":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"16:7588:7827":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:10452:6684":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:10691:22381":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"11:725:7984":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:43394:9792":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:42633:2968":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"5:7079:3467":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:13316:7225":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"31:5650:4517":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"29:5685:5547":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:4542:5435":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"11:2080:7994":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"31:5888:9473":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"3:229:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:11653:6820":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:10967:6734":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:2668:7436":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"23:556:6426":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"17:13612:7317":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"21:1057:6105":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"2:21633:8183":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:11434:6775":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:11193:6753":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:41764:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:44866:8367":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:10030:8150":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:11902:6867":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:10939:4133":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:44357:8344":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:13443:7260":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:10994:8594":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"20:2229:2928":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"30:3000:5009":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"33:292:3082":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"16:2742:7439":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:45056:8373":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:4865:990":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:5693:7519":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"20:1561:6016":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"33:81:3077":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"17:10798:22274":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"18:574:5909":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"29:5015:5401":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"24:151:1788":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"1:5023:8489":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:10619:8618":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:13159:7185":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:10141:8153":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:9756:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:4475:5401":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"29:2167:5283":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:44912:8369":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"23:741:39998":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:2995:10188":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:39655:8119":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:8843:10332":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:4310:2841":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:9683:6592":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:4356:2948":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:4577:4960":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:42474:8287":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:3266:4024":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:4904:10305":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"21:1309:6163":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"1:11484:8511":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"11:2205:2896":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"29:2113:4998":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:4650:5488":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:7843:2977":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:11885:733":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"5:6749:4080":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:5741:22203":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"31:5754:9445":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"6:6566:4230":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:11884:736":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:13461:7264":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"0:446:1867":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"2:2798:2830":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"29:7282:5745":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"21:2323:6269":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"21:1107:6108":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"2:40800:3141":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:5976:7406":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"30:3610:41305":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"17:10936:6733":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"22:1304:6027":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"18:599:39997":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:42869:8304":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"5:5892:2948":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"29:2093:5273":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:30050:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"5:1372:3467":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"1:8814:8599":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"11:1836:3467":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"30:3821:26253":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"17:11891:6866":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:39987:2990":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"31:5739:4559":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"17:9876:6503":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:39696:8121":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:1232:7998":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"22:971:6426":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"29:7906:4554":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"22:1604:6069":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"2:39404:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:4365:2843":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:2339:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:12419:6959":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"29:806:15961":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"1:2551:4096":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"18:652:5909":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"31:6035:4646":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"5:264:4032":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"29:5277:5466":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"29:7425:5764":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"22:985:5930":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"2:44389:8345":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:24:601":{"crate_id":2,"path":["core","env"],"kind":"macro"},"2:1534:2948":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:532:5153":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:3782:7477":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:39726:8123":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"18:564:5917":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:10182:2928":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:39603:8112":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:9554:4096":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:2810:15575":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:8064:2989":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:7787:8521":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:8773:3830":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:6743:5838":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:2077:8073":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:42647:2927":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:43624:8335":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"9:325:9604":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"18:644:5909":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"29:5857:5574":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"31:6711:9500":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"13:110:39971":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"20:1528:6289":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"16:6671:7673":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:4509:10291":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"9:445:21204":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:12980:7152":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:11879:6864":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:5034:5623":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:12770:7005":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:9022:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"33:221:3081":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"6:1609:5217":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:22132:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"23:836:5946":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:6623:8501":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:5616:7509":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:5181:4032":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"31:6606:4809":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"16:5367:21317":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:43279:8171":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:10705:6714":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"11:834:7989":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:12170:15538":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:2943:3088":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:355:3365":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"11:274:9776":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"29:573:4522":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"31:4467:4216":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"17:13689:7342":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:12178:6904":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:20418:38069":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:641:8464":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"31:4567:4234":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"21:1885:26141":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"2:2772:3021":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:22099:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"11:1044:21281":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:7775:8519":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"20:1814:6295":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"6:4521:5426":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:547:4484":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12915:7117":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:8788:6430":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:487:4108":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"21:1296:6092":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"11:98:9775":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:2763:3438":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:10638:9795":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"21:1389:4011":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"31:5610:4512":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"16:8256:7901":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:386:6437":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:6557:4224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"31:4806:4291":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"2:2936:3087":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:43402:8785":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"0:585:1810":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"6:5831:5659":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12894:7108":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"33:0:2097":{"crate_id":33,"path":["termcolor"],"kind":"module"},"1:8036:2993":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"5:7179:8088":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"29:1913:5215":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:4726:4357":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:41448:2677":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"31:6399:4779":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"20:1545:207":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"2:21380:10370":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:12510:6980":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:40750:3831":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:46721:8452":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:7568:3367":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:4243:2835":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"21:1167:6125":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"2:2977:15444":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:10712:22382":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:6011:4117":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:3450:35072":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3612:4032":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"30:5180:5136":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"17:13385:7242":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:7209:8091":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:1645:4348":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"29:5298:5467":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"20:1512:6321":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"2:3093:10190":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"31:6785:27376":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"16:6390:7634":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:5181:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"29:5033:5404":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:40597:36118":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"16:6243:39981":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"29:4905:5383":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:3211:2985":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"5:5803:3002":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:3166:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:11854:29860":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:4671:5489":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:5356:8491":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"29:695:4937":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"20:2005:6411":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"6:4881:9616":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"22:1237:6019":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"21:2200:2980":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:41441:2678":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:44311:8342":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"26:99:2529":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"29:8458:5881":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:6484:3064":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"29:9252:9547":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"29:5725:5555":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:9046:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"22:1378:5930":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"20:1654:6366":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"29:7953:4224":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:7686:8204":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:12576:6987":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:11299:4136":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"29:1845:5194":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"20:1622:6362":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"17:13857:7383":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"20:1861:40004":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"1:1991:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5797:4991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:8275:8483":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"21:2665:6286":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"29:8896:4543":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:6575:5783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"31:6310:4748":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"2:39644:8246":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:3326:2990":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"29:7074:5689":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:39239:8217":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"22:1271:1841":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"6:5962:5729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:4030:15443":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:2503:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"31:5236:5179":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"6:1747:5283":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:8256:22249":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"31:4528:4221":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"21:2330:6098":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"22:1659:6081":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"2:50296:8462":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"29:6936:5648":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:39364:8230":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:10545:6456":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:4540:7487":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"21:1156:26162":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"2:41983:6016":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"31:5765:4563":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"17:9826:6602":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:5000:7501":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"20:2572:2918":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"2:2233:96":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"5:5631:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:20712:10371":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"26:101:2526":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"22:1167:4112":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"1:3171:2984":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:39981:8130":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"29:8377:5861":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"22:1247:6289":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"2:11143:2496":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:2879:7445":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:9839:6603":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"20:1473:6340":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"29:4865:5375":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:13121:7180":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:7258:31914":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"21:1131:6120":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"1:3250:2982":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:6431:7637":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:39303:8223":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:40877:3831":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"21:1588:6201":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"2:4007:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:45970:8432":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"29:5763:5558":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"31:7338:4981":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"29:7502:5776":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:5761:5643":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"31:6421:4783":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"1:8944:8604":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:11325:8164":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"29:676:4774":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"20:2358:2934":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"17:9218:6555":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:2615:2978":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"31:6998:27378":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"20:1938:4014":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"6:1550:5179":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:39534:8237":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"29:9276:4231":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:6351:3467":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:3926:10246":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:10857:22275":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"12:0:2709":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:7065:7733":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:44490:8349":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:7491:9657":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"23:648:5912":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"24:290:2876":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"1:11889:1478":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"21:254:40723":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"31:4996:9406":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"6:5054:9532":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:2682:2849":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:7757:7833":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"11:1872:6088":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:413:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:10377:6676":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:10405:2983":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:1930:10201":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:40014:8134":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:13506:7274":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"29:5594:5527":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"31:6737:9518":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"29:8402:5870":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:9512:6575":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:12592:6989":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:5779:7526":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:8651:6542":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:41239:84":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:42201:9784":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"29:8134:5790":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"31:7356:4986":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"6:123:15962":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"30:4541:5105":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"2:9036:2442":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:6854:7704":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:4327:7482":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"29:5706:5551":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:6544:7455":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:894:7985":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:1054:7734":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:10040:8610":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:3640:6467":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"22:1457:6363":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"6:4903:9632":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:13477:7267":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:41681:9732":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:40809:3562":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:39037:8214":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"28:137:26206":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"2:40919:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:10103:8152":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"29:6721:4591":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"23:731:39996":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"33:13:2592":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"6:6616:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:526:5150":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"11:2069:7993":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:7090:15567":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:13698:7344":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:42797:8302":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"18:531:5912":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:11090:6743":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"16:6819:7700":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"20:1707:40002":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"1:7456:6441":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:4437:10274":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:10068:6633":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:6582:4076":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10681:6712":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:9078:2677":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:9084:2679":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:2404:7425":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"21:1958:26146":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"1:3402:2958":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:2764:7440":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:6430:4032":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"29:783:5171":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"1:8209:10272":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:7532:9547":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:12293:6942":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:44560:8352":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:6104:4615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:20587:10375":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:9577:6581":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:4329:8482":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:1077:7994":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"29:486:5142":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"29:5903:5588":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:10080:6634":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:6376:7449":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"14:31:7976":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"29:5154:5433":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:13625:7323":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"29:2027:5255":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:5336:8490":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:45550:8397":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:11018:29871":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:4924:9647":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:9312:6557":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:2847:7754":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"9:174:8769":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"23:81:26112":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:4129:2855":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:3974:10249":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:6603:15569":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:1618:579":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"11:2053:7734":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"15:0:2711":{"crate_id":15,"path":["addr2line"],"kind":"module"},"31:7298:4979":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"1:3678:8476":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:6012:9539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"22:1052:5994":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"17:9424:6565":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11721:6822":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"13:0:2703":{"crate_id":13,"path":["std_detect"],"kind":"module"},"11:1534:8000":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:5594:7453":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"0:438:2001":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"2:21784:10242":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"33:76:3075":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"31:6717:9502":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"17:9641:6586":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:1947:6448":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"20:2449:2935":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"33:79:3076":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"6:6004:5747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:12358:6949":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"30:4809:41307":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"6:5990:5742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"18:707:5942":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"29:5478:5507":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"32:0:3042":{"crate_id":32,"path":["bitflags"],"kind":"module"},"0:14:1792":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"23:872:5954":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:4780:5544":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:4568:7488":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:9566:6556":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"20:2590:2926":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"2:42911:8305":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:10735:6719":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:1919:22314":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:21378:10260":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:3248:2557":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:41709:108":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:4702:5507":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:2933:6452":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"31:6043:4649":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"33:43:3072":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"5:3511:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"28:56:26197":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"6:4573:5459":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:9971:3534":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:5071:7503":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:5104:7504":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"29:8890:9545":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"31:7097:4917":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"6:568:5159":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9380:22283":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:6254:7621":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:48935:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"24:155:2867":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"31:5696:4539":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"31:5860:9467":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"2:2802:3022":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"18:0:2714":{"crate_id":18,"path":["memchr"],"kind":"module"},"31:6623:4812":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"2:12409:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:5766:3067":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"29:9234:5585":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"21:2119:1796":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"5:7146:2897":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:7264:8095":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"5:3148:6212":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"29:9263:9551":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"29:5555:5519":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:39390:8231":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:3041:1056":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"17:10491:6687":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"11:1085:7996":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"20:2268:2926":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"24:352:1791":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"2:21120:10395":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:4728:7492":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"20:2197:2399":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"5:2179:8779":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"30:4685:41299":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"2:21751:9782":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:6809:5873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"20:1417:6328":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"31:5964:4630":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"20:2248:2917":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"17:10923:6731":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"11:1852:6212":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:4775:786":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:2751:3435":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:1086:7998":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:10742:8158":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"9:388:21205":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:7431:4770":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"18:582:3428":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:6535:4017":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:7827:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"20:2047:6415":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"6:5888:5689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"21:1504:6185":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"2:42815:8303":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"28:19:3043":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"16:5886:7540":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"22:1147:6006":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"21:1484:4007":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"33:62:3073":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"31:4827:9404":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"1:6540:3069":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"22:1333:6029":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"5:6164:4069":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"22:1536:6056":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"30:3293:5012":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"1:936:7986":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:11580:5965":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:42434:8282":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:3984:10250":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:5850:5661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:8719:8593":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:13240:7208":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"31:4957:4331":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"1:6135:8500":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"31:5070:4372":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"29:4927:5386":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:2865:15584":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4740:5521":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6818:5877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:11220:6760":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:46645:8448":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"33:201:3080":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"17:11600:6806":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:8130:2968":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"22:1644:6076":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"21:1284:6091":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"2:44520:8350":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:42186:8279":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:5773:5647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:10125:6638":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:5695:3057":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:43382:9789":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:7797:8522":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:5817:5648":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"31:7318:4980":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"16:6558:7650":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"29:764:5166":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"31:4796:4289":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"6:4974:5594":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:7524:4127":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:3876:10244":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"29:5783:5564":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:40548:10239":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"29:5955:5609":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"21:1194:126":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"21:2360:6270":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"6:6836:5881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"14:215:7979":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:5983:5741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:42751:2928":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"29:4788:5357":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:44790:8365":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"29:1929:5217":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:4536:5433":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:8573:22271":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"14:165:21287":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:13135:7183":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:12372:6952":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:9746:10260":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:2861:15583":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"21:2160:6254":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"31:6749:27375":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"6:4715:5512":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"5:7336:4071":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"21:2614:26183":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"30:5193:5138":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"5:670:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"5:7222:8093":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:7467:8632":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:2616:7434":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:39421:36110":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:43378:9788":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:2478:2975":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"31:4660:9398":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"1:1827:3534":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:1439:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"21:2099:4004":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"2:11348:8165":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:11890:1475":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"29:7203:5729":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:1583:5202":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:25641:8097":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:42851:2923":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:7556:4231":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:11216:8510":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"20:2054:6416":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"16:6201:7603":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"22:1544:6057":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"1:8882:3059":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:1422:7982":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:40742:3830":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"11:60:39964":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:1341:3830":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"11:444:140":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:3940:10248":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:7335:39982":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:39281:8221":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:11897:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"20:1880:6397":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"2:8601:78":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:6533:4554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:2363:10223":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:12046:6888":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"9:352:21219":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:43366:9785":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"21:2240:26165":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"16:4904:7498":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:7529:7463":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"23:546:5908":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:10092:6635":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:7003:8086":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:43099:8318":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:10015:6626":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"22:1315:26186":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"16:3030:7469":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:39291:8222":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:39635:8115":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:12072:6891":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"29:7228:5740":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:5346:7506":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"29:8163:5795":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"20:2543:2928":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"0:340:1799":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"16:7366:22211":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:4554:5444":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:9696:6574":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"21:2510:6274":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"17:8683:6427":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:1034:6443":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"29:1948:5222":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"22:1668:6083":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"29:2130:4234":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:2925:2851":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"30:4144:5095":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"5:1356:3831":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:4808:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"29:5800:5566":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"29:6871:4986":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:8025:7881":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:11870:368":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"20:1693:40009":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"18:507:5909":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"29:1693:4326":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:30626:3428":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:3616:10240":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"5:3663:2979":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"31:5773:9453":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"2:30122:36106":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:12923:7118":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:1444:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:6662:7672":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:4097:10268":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"29:4581:5289":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13803:7373":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"20:1433:40059":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"1:6411:3068":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:38949:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"11:822:10176":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:5688:3056":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"22:1596:1841":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"5:4037:3831":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:11895:1531":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:9895:6609":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"31:6932:27377":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"23:788:5936":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"29:6830:5646":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"29:5077:5418":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"21:2186:126":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"5:210:4030":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:6935:7711":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:6061:21318":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"18:681:5937":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:3511:4054":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"6:4767:5538":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"7:0:1521":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:873:3467":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:20650:10377":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:9188:39987":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:40869:3830":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:6179:7589":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:9653:6588":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"29:7925:4966":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:2808:7442":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"11:2198:9601":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"30:3192:5011":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"31:5642:4516":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"31:6649:4818":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"17:8598:22272":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:20437:38249":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:46573:8442":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"29:5344:5477":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"11:1555:8001":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:5322:5054":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:8914:29855":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"21:2553:6112":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"2:1584:669":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"2:46668:8449":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:10196:8154":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:500:4539":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:644:8466":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:22033:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:11355:6768":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"31:5835:4577":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"5:6680:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:3466:2961":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:2870:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:1571:5194":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:4804:5555":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"18:80:26112":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:8180:3010":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:6371:3060":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"31:6413:4780":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"2:20624:10376":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"31:7167:9525":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"17:11471:6781":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:737:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"14:40:6763":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:8751:8595":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"11:632:3830":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:8389:22265":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"29:0:807":{"crate_id":29,"path":["libc"],"kind":"module"},"20:2599:2924":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"2:48948:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:4257:8481":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:4761:10258":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:2686:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"30:3845:21241":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"2:31831:3439":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"0:576:1942":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"17:10649:6707":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"20:2432:2932":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"17:10589:6701":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:573:4518":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"22:1552:6061":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"1:5565:4115":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:1534:5175":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"30:3379:5013":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"17:13516:7279":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"31:7387:4998":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"31:6202:27372":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"1:11875:1037":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:7743:7454":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:42939:8167":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:8215:8573":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"29:8924:5888":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"29:2074:5272":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:6487:3065":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:6218:7609":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:7127:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"31:4575:4236":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"29:641:4780":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"2:9899:3830":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"31:6054:27369":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"17:11319:6766":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"21:1549:26149":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"2:7131:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:4789:7494":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:9959:6619":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:494:4515":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:3872:7479":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:11045:2525":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"11:393:39965":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:2912:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:770:95":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:928:7982":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"11:1065:39969":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:7247:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"31:5634:4515":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"16:7572:39980":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:10505:6688":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:11886:734":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:12138:6900":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"29:7476:5765":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:45087:8374":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:3645:3467":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:12006:6883":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:2513:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"30:4023:5094":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"17:11800:6852":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:20456:38251":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:805:4038":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"29:7322:9539":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"24:0:1786":{"crate_id":24,"path":["log"],"kind":"module"},"31:7235:4946":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"2:39565:8239":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"23:716:39997":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"31:6743:9521":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"20:2062:6417":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"16:4932:7499":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"20:1518:6346":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"17:13249:7209":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13721:7357":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"31:5602:4510":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"31:4510:4218":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"31:4558:4231":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"1:1589:6213":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:9986:6621":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:7524:15565":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:11186:8507":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:45268:8392":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:5811:7531":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"28:152:26209":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"11:2178:4009":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:48974:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:7652:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"22:1080:2421":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"2:21668:8185":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:11060:6709":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:4387:5360":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:40656:8141":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"31:5009:9413":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:13033:7157":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:9545:6539":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:2841:7753":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:11615:6812":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"31:5275:5574":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"22:1514:6053":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"2:41039:87":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:10257:6669":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:43370:9786":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:5928:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:9569:4101":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"31:4645:4244":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"2:9086:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"20:2119:2931":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"29:9176:5890":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"23:114:26114":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"28:28:26193":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"16:3815:7478":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:2502:7429":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:12194:6909":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"31:5825:4574":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"21:1402:4004":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"17:12388:6954":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:12019:6642":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:11006:8595":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:42500:8235":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:1602:4032":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:6321:7626":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"20:178:6288":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"6:6639:4979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"29:4828:5369":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"22:1023:5985":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"20:2466:6423":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"6:4461:5394":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:9070:3020":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:5708:7522":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"22:1042:40758":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"29:5369:5488":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:39328:8106":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"20:2144:2930":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"22:0:2828":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"2:12243:8174":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:12634:6996":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:2594:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"20:2496:2922":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"16:6575:22207":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"31:5712:4543":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"16:7244:39984":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:3681:8477":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:2236:97":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:1412:7999":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:46424:8437":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"29:7973:4230":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:39996:4090":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"29:5572:5521":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:41455:2680":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:46604:8445":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:1971:2979":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:2210:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"30:2989:5007":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"2:6650:37325":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:5643:7518":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:42205:8147":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"15:180:21300":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:5557:7448":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:4469:5399":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:10224:8156":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:9109:33412":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:11556:6789":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"31:5729:4554":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"31:5872:9470":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"18:609:5923":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:1453:8071":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:4998:5601":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"23:883:26123":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:6278:4032":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"29:5171:5435":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:6361:7631":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:7028:39468":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"23:816:5940":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"21:1720:6209":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"29:4558:17275":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:39514:8235":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"31:5843:4580":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"21:2277:4004":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"31:4651:9395":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"6:4840:4258":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"5:35:4028":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:1628:126":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"2:43246:8325":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:9628:6585":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"22:923:10260":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"31:7126:4923":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"21:2579:26180":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"2:41119:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:46593:8444":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:7169:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:43259:8329":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"31:4753:4270":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"20:713:6296":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"1:4846:10298":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"20:2238:2919":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"1:3356:2948":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"30:3571:41302":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"2:42463:8286":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"27:0:2096":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"17:8971:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:38905:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:2684:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"29:6763:4590":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:10451:3357":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"21:1919:6232":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"2:9334:3791":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:40620:8264":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"20:2040:6414":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"2:21577:8179":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:10673:8521":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"6:6586:5788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:2830:7443":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:1403:7985":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"30:4846:41301":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"2:8182:3142":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"22:1528:6055":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"1:8123:2967":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:7605:3357":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:12483:6978":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"21:2649:6104":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"1:8136:2927":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:773:4035":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:6759:10365":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:9340:6558":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"20:1842:40063":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"14:202:15474":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:2470:7428":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"31:6542:27374":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"5:7319:4024":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"30:4161:5096":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"1:10813:3545":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:44597:8354":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:21593:8780":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:1509:4326":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"28:183:3999":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"6:4624:5476":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:4969:7500":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:21706:36107":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"31:5814:4570":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:4354:4517":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:4271:4542":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"26:100:2527":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"17:9670:6591":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:39003:8212":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:7012:4054":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:2833:4112":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:3078:94":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:2378:7424":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:38830:8208":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:2298:21319":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:8774:8783":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"20:1642:6363":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"17:8718:6428":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"28:189:4002":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"29:5536:4357":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:39972:3060":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"5:5475:4065":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:2337:7417":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:4640:10300":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:562:4937":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"24:219:1787":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"17:11299:6765":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:10761:22273":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"29:539:4515":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"0:571:1933":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"17:8753:6429":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:9946:6618":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:4592:5460":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:3988:10251":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"23:824:5942":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"13:226:8753":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:6563:4065":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"29:745:5161":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"1:4680:10259":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:2067:3347":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"11:1628:4026":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"31:4547:4230":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"17:12607:6993":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"31:6950:4876":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"17:10897:6730":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:562:6441":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"20:2363:2935":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"29:8351:5854":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:4394:2845":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:21115:10372":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:39556:8238":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:8909:2968":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:11082:3019":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:10840:6727":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"29:505:5147":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:12536:6982":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:4636:5477":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"28:142:26207":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"26:194:126":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"1:10838:29861":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:6793:7699":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:10303:8593":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:11924:6874":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:2594:7433":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"21:1467:26153":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"17:10026:6627":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"29:4979:5394":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:3585:7475":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:11422:6774":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:12085:6893":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:8204:9794":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:11896:1112":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:13332:7227":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:10283:6671":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"30:4745:41300":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"31:5269:9434":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"1:7810:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"29:809:15962":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:46300:8435":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:10817:8052":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:12622:6709":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"31:7378:4995":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"2:2725:3433":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:43068:8314":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:43390:9791":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"30:4706:41304":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"1:10713:29863":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:11502:6783":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:4326:4060":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"29:8035:4946":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"0:445:1869":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"2:48922:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3209:2555":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:21722:36122":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:12646:7003":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:11878:1380":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:42946:8228":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:13744:7358":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"29:8070:5789":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"31:4966:4334":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"30:3797:26252":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"31:7261:4965":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"2:2580:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:2308:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:20865:5971":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:6846:2989":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:7851:2979":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"18:727:5949":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:9990:1810":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:5387:8493":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:40668:8142":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:10334:6555":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"31:4988:4342":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"17:12224:6928":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"29:7246:5741":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"21:2544:6108":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"17:11258:6762":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:4:1002":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"30:498:9181":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"1:8896:8600":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:8953:6544":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:62:15912":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:21758:8197":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:20863:10373":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:46546:8440":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"29:4564:4542":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:39451:10203":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"17:11861:6863":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:13791:7371":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"31:4782:4282":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"21:2574:6280":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"6:5923:5711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:2137:580":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:7780:8520":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"11:1845:4024":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"5:279:1915":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:10555:6691":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:2215:3801":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:9991:8149":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:4982:5596":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"21:2367:6099":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"6:7497:5892":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:4327:5326":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:4935:5578":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"11:300:9779":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"31:5865:9468":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"21:1518:26148":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"18:690:5939":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:11288:8162":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"31:5799:9459":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"29:5981:9530":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"29:5945:5604":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"29:5412:5489":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:6045:5749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:41199:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:12461:6967":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:2497:74":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:20753:5971":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:22363:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"29:5194:5444":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:2626:9663":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:579:5161":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:46760:8453":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"29:7185:5728":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:0:807":{"crate_id":6,"path":["libc"],"kind":"module"},"1:8901:105":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"28:67:26192":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"31:7227:4940":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"1:4126:10271":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"5:7020:4043":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"31:6325:4754":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"16:8109:7888":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:9265:6556":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:39747:2967":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"31:6357:4770":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"22:1630:5975":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"2:43236:8321":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"9:502:8055":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4360:5349":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:9051:2525":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"18:671:5936":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"33:89:3078":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"31:5586:4504":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"31:6578:9487":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:7767:22213":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:39958:8128":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"31:0:3041":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"17:11234:6761":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:50275:8461":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"31:6389:4774":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"15:219:8750":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:11452:9740":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:3183:15510":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:7931:2980":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:4858:5574":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:6327:7627":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:6802:5870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"30:4195:5098":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"2:48987:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4796:5551":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:11011:6736":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:3441:2442":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"20:1914:6402":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"28:147:26208":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"2:9299:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:46470:8438":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"22:1292:6025":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"16:2524:7430":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"29:9212:5892":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"33:396:3084":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"17:12799:7025":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:1852:3541":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:22066:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"22:1521:6054":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"24:357:2878":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"1:9364:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:1541:4352":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:3983:8107":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:45504:8396":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"11:861:7992":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"21:1974:6235":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"21:1932:4003":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"2:21272:8460":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:8399:8586":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:3266:6455":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:3171:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"20:1833:6389":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"17:247:6435":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:5996:5745":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:4575:4958":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:4756:5530":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:2448:7427":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:9853:6604":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:10408:2555":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:2461:15533":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:5845:5660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:31782:9600":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"5:2902:39481":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"23:638:26124":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"0:574:1939":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"6:4810:5556":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:4579:4962":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:6712:5813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:11873:1494":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:39030:7791":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:5630:7513":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:9228:39988":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"22:1157:6007":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"30:457:105":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"30:4828:41294":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"2:38783:15445":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:43174:8170":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"31:5946:4615":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"22:1622:5974":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"17:13564:7316":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:43386:9790":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:1695:5273":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"26:102:2528":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"1:8458:8484":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:1710:4234":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:10703:2963":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"21:1376:4010":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"17:10000:6622":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"25:0:2705":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"22:1568:40759":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"27:5:2589":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"1:7921:8525":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:8823:6431":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:4682:10262":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:13879:7389":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"20:2524:2919":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"2:2506:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:11228:9798":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:44441:8347":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:1900:17275":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:7566:5896":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:7626:7828":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:953:4032":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:5402:6543":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"20:2277:2924":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"29:1887:5203":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"22:1261:6021":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"18:624:39998":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:48961:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5069:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:41721:6235":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:9534:6578":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"31:6980:4885":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"33:409:3083":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"2:21772:8198":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:6764:5851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:39437:8233":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"29:4651:5316":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7669:7465":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:2898:9662":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:3211:2850":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:6022:22205":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"9:0:2706":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:38744:3834":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"20:1380:6228":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"21:1602:26150":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"31:5880:5283":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"2:44690:8362":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:2940:1913":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:9090:2681":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:7508:5585":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"10:36:9603":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"16:6293:7624":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:7666:3544":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"31:4713:4253":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"31:6138:4668":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"5:1203:7994":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:11946:6875":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"9:52:8754":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"11:777:4025":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:4681:5496":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:1068:7993":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:3225:7472":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:9080:2678":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:4728:10174":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"29:2151:5282":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:12126:6899":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"31:5521:27367":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"11:815:7986":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:3678:8072":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:2931:21345":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:41993:8277":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:39051:8215":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:21524:8178":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:22330:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:8326:8583":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"10:0:2707":{"crate_id":10,"path":["adler"],"kind":"module"},"31:7278:4966":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"1:5721:3058":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"18:636:5929":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:12835:7056":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:5015:5609":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"29:5883:5583":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:20675:10367":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"21:1766:4006":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"1:11891:1476":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:11573:6797":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:12522:6981":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:1520:4331":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"31:7174:27380":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"16:6474:7467":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:7103:8607":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"21:2455:4008":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"2:9923:3831":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"0:70:659":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"31:5788:4566":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"30:3670:41308":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"16:2862:7444":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"22:998:5980":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"2:2303:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:8287:5965":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:6139:5776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:22165:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:40491:152":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"31:6705:9498":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"2:1902:8102":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:8283:22262":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"31:7148:4926":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"1:8468:3830":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:42591:8294":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:1625:3578":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:12236:6930":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:5441:8494":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:9617:6584":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"29:8295:5838":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"18:96:26113":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"30:4178:5097":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"31:7117:4922":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"17:12550:6985":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:40894:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"29:6986:5660":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"29:4749:5351":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"30:2712:5005":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"6:5705:4591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:4872:7497":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:10626:6705":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:10354:6675":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:12496:6979":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:9933:6616":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:9537:4095":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:22297:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"29:728:4518":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"16:535:7404":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"22:1060:26186":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"21:2294:4007":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"20:1231:6315":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"16:7488:7821":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:42769:8154":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"22:1586:5912":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"31:5551:4484":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"16:8090:7885":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:40885:3467":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:43581:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"31:5658:4518":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"31:5049:4361":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"11:1029:7994":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"31:4599:4241":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"31:5851:4583":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"6:4602:5466":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:22231:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:6906:2833":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"29:1822:5185":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:3965:4054":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:7485:5891":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"31:4771:4278":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"31:6590:4805":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"6:4366:5351":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13169:7186":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:6098:5764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:40633:8479":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"22:1683:6085":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"20:2211:2918":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"2:46508:8439":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"33:173:2421":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"20:2519:2399":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"16:2357:7423":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"21:2227:4013":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"29:4805:5360":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6943:22209":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:8765:8596":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:12378:4106":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"30:0:3040":{"crate_id":30,"path":["rustix"],"kind":"module"},"30:534:3830":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"31:5904:4590":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"2:20704:10260":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:4314:5316":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:1791:3526":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:9224:8146":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:4406:5373":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:3995:4032":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:7411:7557":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:6717:7685":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:38885:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"20:2534:2927":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"17:13419:7255":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:12157:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:1600:6088":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:39584:8241":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:10598:6734":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:13233:7206":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:3446:7474":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:1574:4054":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:4834:5566":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:40999:80":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:11876:309":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:3142:6454":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:7543:7464":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:595:5171":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:8937:6092":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"28:181:26210":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"2:11595:15460":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13219:7203":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:21471:8177":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"21:2115:6129":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"31:5263:5509":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"20:307:6291":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"17:11585:6800":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:0:2712":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:9071:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"29:8181:5797":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8957:8607":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:7659:8516":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:39494:8234":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"29:4714:4517":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:5944:7546":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:8606:85":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"29:7042:5673":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4375:5356":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"21:268:40722":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"2:5916:8116":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:39251:36108":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"30:4968:5134":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"1:3882:10243":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"33:311:2590":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"2:3248:2852":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:14:1921":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:9032:3019":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:42526:8290":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:3119:39477":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"30:4867:5133":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"5:6997:3467":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:11821:8635":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"29:6961:5659":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:42930:8307":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:22396:8201":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"7:79:21197":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:42545:8292":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:4277:5289":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10440:6683":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:8231:8575":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:1734:9666":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:2767:2829":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:8490:22268":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"20:1605:6292":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"6:6541:4966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11520:6784":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:8769:36359":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:21609:6385":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:1723:5279":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:13145:7184":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:11600:15459":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:5501:5762":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:44742:8364":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:12282:6940":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:11136:4134":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:9948:2927":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:108:283":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"29:4945:5389":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10660:6709":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:46564:8441":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:13411:7252":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:10823:6522":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:7473:5889":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:10989:6456":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13181:7189":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:8195:22251":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:2819:7749":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:488:4516":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"22:1698:2922":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"16:5655:7452":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:43147:8319":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:11129:8159":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:6696:22208":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"20:1802:6388":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"29:9158:5889":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:6697:15561":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"29:5974:5623":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:2509:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"21:1871:4009":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"1:8789:3467":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:1187:7734":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"22:1137:6005":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"16:7449:7812":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:11234:9799":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"20:2096:2931":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"6:4455:5391":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:6081:10406":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"22:1651:6078":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"16:8180:22215":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:43031:15472":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:11883:634":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:13194:7195":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:11770:6844":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:7437:7811":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:3196:35965":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"31:5626:4514":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"17:11339:6767":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:39230:8216":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"11:697:7983":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:11282:6763":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:4414:5375":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:13066:7168":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"20:1725:6383":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"1:863:3831":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:2642:7435":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"22:1388:6041":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"1:942:10176":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"29:4884:5378":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"20:2559:2929":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"11:1832:3830":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:5783:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:361:3366":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:44958:8371":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"22:1437:5971":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"31:6560:9480":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"6:4301:5306":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:4389:4060":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:4702:7491":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"29:2143:5279":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:13469:7266":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:39357:8229":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"29:9297:5896":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"30:4450:5104":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"2:30028:3582":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:11801:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:8197:8479":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:10635:6706":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"21:1945:6233":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"31:5580:4501":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"1:1595:6214":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:1704:4998":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"22:1637:6075":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"31:5300:9437":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"2:2946:2673":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:5025:3002":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"20:2581:2923":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"16:4624:7490":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:42617:8161":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:3153:39467":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:3061:2992":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"31:5990:27368":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"18:491:6426":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:5743:5630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:8416:10323":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:38845:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"22:1201:2980":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"30:4724:41296":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"21:2132:6250":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"17:9772:6599":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:11201:8508":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:41462:2679":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:7683:7466":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"22:929:26187":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"5:6724:4069":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"21:1322:6165":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"1:7654:3839":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"6:4828:5564":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:2319:7415":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"21:1442:26152":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"17:10104:6636":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:13659:7335":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"30:479:9183":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"1:907:4054":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:3136:9817":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:2814:15577":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:8971:29851":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:8142:7892":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:4818:7495":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"11:119:4018":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:7837:7845":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"18:590:5918":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:11969:6879":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:8253:4946":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"30:4114:41298":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"16:4480:7485":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"21:2173:4003":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"2:44579:8353":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:2782:7744":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:6767:7698":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:4943:5583":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:5571:7451":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:6506:7646":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:5457:8113":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:7648:10172":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:40758:3467":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:44888:8368":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:10885:6729":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:9108:39992":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:679:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:474:5142":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:7561:36360":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"31:7214:5175":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"29:5650:5541":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:6190:4115":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"22:1310:6028":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"28:47:26196":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"2:4420:2846":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:3300:7473":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:8521:22269":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"22:1413:6034":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"17:1787:6444":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:4643:10273":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:9376:4128":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:10615:6704":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:11589:5942":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:4709:5509":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"0:341:1802":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"21:1144:26161":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"29:5394:4995":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:10416:6681":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:10215:32821":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"5:1068:39639":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:7140:3090":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"30:4790:5126":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"16:8170:7894":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:44934:8370":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:2831:15579":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"29:5256:5460":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:3743:4024":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:42535:8291":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"19:0:1019":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"9:421:21206":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:11628:6816":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:4855:10299":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:9721:6594":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:8143:2965":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:20403:38069":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"20:1422:4040":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"20:2609:6317":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"29:1726:4331":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:12345:6948":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:3912:10245":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"21:2059:6245":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"16:5032:7502":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:11363:8477":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"29:8203:5801":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:39574:8240":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"0:33:1794":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"21:1998:26163":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"0:578:1945":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"6:5955:5728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:3996:10253":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:43421:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:40826:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:7192:3089":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:10747:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:10661:8623":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:7077:22210":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"31:5079:4378":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"18:538:5915":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"11:1003:7993":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"28:182:26211":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"16:7635:7829":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:12307:6944":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"29:5225:5459":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:40577:6091":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"20:1991:6406":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"1:1583:6212":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"31:4674:27363":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"2:44289:8341":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:12318:6945":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:10346:4129":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:8072:7884":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"29:9194:5891":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:11399:8149":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"29:5914:5594":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:8160:10238":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"21:1208:2980":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"31:5292:4420":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"6:1687:5272":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:2868:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:7835:8524":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:1720:15606":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13651:7332":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:8113:2966":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"23:777:5930":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"31:5245:5150":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"6:6656:5790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"33:339:2591":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"30:2853:5006":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"29:8253:5813":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"29:2052:5266":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"29:5817:4258":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:46112:8433":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"20:2346:2932":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"5:6592:4077":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:9886:6607":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:9178:6554":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:7016:7726":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"20:2169:2930":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"29:8440:5877":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:4449:5389":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"30:3932:5093":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"6:6679:5797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:7509:7462":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:44459:8348":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:1514:4328":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"29:7355:5749":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:11410:6771":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:3749:7476":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:119:15961":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:9174:3540":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:43053:8309":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:2999:10189":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"23:798:5937":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"21:2029:126":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"29:1709:4328":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:8308:10309":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:44644:8355":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"29:7443:4615":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:40514:8138":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"30:5074:5135":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"},"1:3384:2956":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:5767:5646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:39044:2842":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"30:549:26240":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"29:5938:5601":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"22:1094:6000":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"29:556:4539":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"2:42901:2965":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:5912:4115":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:7134:2896":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:5229:15448":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:10052:6631":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:39409:8232":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"21:2078:6247":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"}},"external_crates":{"31":{"name":"linux_raw_sys","html_root_url":null},"28":{"name":"io_lifetimes","html_root_url":null},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"aho_corasick","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"29":{"name":"libc","html_root_url":null},"26":{"name":"humantime","html_root_url":null},"23":{"name":"memchr","html_root_url":null},"20":{"name":"regex","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"termcolor","html_root_url":null},"30":{"name":"rustix","html_root_url":null},"27":{"name":"is_terminal","html_root_url":null},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"21":{"name":"regex_syntax","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}