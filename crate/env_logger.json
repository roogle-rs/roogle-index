{"root":"0:0:2174","crate_version":"0.10.0","includes_private":false,"index":{"0:521:2696":{"id":"0:521:2696","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[835,0],"end":[900,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:1947","0:384:1973","0:385:1872","0:386:2102"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12379:35493":{"id":"2:12379:35493","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12378:35501"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43681:8541","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:9498:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:9498:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:506:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:123:2612":{"id":"0:123:2612","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2176","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:458:2688","0:169:2540","0:508:2553"],"is_stripped":true}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2829:3180-0:585:1890":{"id":"a:2:2829:3180-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2573-0:585:1890":{"id":"b:2:2573-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:269:132":{"id":"b:2:2260-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12446:36915":{"id":"2:12446:36915","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12381:36904":{"id":"2:12381:36904","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43662:8539","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:2104":{"id":"0:44:2104","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[163,4],"end":[168,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1869","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:2114":{"id":"0:279:2114","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:92:1873":{"id":"0:257-0:92:1873","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::humantime::glob","name":"glob","id":"0:92:1873","glob":true}}},"0:446:1947":{"id":"0:446:1947","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1242,0],"end":[1247,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12386:2405":{"id":"2:12386:2405","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:2012","0:96:2566","0:97:2567","0:98:2568","0:99:2569"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12424:36908":{"id":"2:12424:36908","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12409:36905":{"id":"2:12409:36905","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12052:6175","str::split":"2:12400:2385","prim@char":"1:12049:428","`DoubleEndedIterator`":"2:7473:121","str::rsplit_terminator":"2:12412:36906"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43448:8534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2073":{"id":"0:53:2073","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[228,4],"end":[259,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:571:2013":{"id":"b:2:2563-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5516":{"id":"5:5516","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5517:37576","5:5518:2379","5:5521:37577","5:5524:37578","5:5532:37579","5:5533:37580","5:5534:3079","5:5535:31082","5:5536:31083"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2573-0:100:2624":{"id":"b:2:2573-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2321:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2563-0:585:1890":{"id":"b:2:2563-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:375:1966":{"id":"0:375:1966","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[769,4],"end":[772,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:682:2760":{"id":"5:682:2760","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2257-0:458:2688":{"id":"b:2:2257-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2576:128":{"id":"2:2576:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:206:1873":{"id":"0:206:1873","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:689","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:207-0:142:1873","0:208-0:115:1875"],"is_stripped":true}}},"b:2:2573-0:210:233":{"id":"b:2:2573-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268:60":{"id":"0:268:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2789:231-0:210:233":{"id":"a:2:2789:231-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2789:231-0:508:2553":{"id":"a:2:2789:231-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:215:2648":{"id":"0:215:2648","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:217:1663"]},"discriminant":null}}},"b:2:2563-0:269:132":{"id":"b:2:2563-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12473:29835":{"id":"2:12473:29835","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12418:29962":{"id":"2:12418:29962","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12049:428","str::splitn":"2:12415:29960","self::pattern":"2:12052:6175"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43520:8391","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:332-0:262:1873":{"id":"0:332-0:262:1873","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[294,0],"end":[294,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::fmt::glob","name":"glob","id":"0:262:1873","glob":true}}},"a:2:8558:3103-0:571:2013":{"id":"a:2:8558:3103-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:36:1921":{"id":"0:36:1921","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[110,0],"end":[114,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:45","a:2:8557:3104-0:36:1921","a:2:8558:3103-0:36:1921","a:2:2789:231-0:36:1921","a:2:2772:223-0:36:1921","a:2:2829:3180-0:36:1921","b:2:2257-0:36:1921","b:2:2260-0:36:1921","b:2:2563-0:36:1921","b:2:3408-0:36:1921","b:2:2573-0:36:1921","b:2:2567-0:36:1921","b:2:2578-0:36:1921","0:62","0:58"]}}},"0:376:2064":{"id":"0:376:2064","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[778,4],"end":[781,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["is_test",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:689":{"id":"0:61:689","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[269,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:471:689":{"id":"0:471:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:368:2027":{"id":"0:368:2027","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[647,4],"end":[650,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["suffix",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12380:3913":{"id":"2:12380:3913","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43652:3057","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2789:231-0:33:1874":{"id":"a:2:2789:231-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2567-0:100:2624":{"id":"b:2:2567-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2552","0:176:2698","0:177:2555","0:178:2749","0:179:2753","0:180:2558"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374:1893":{"id":"0:374:1893","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[760,4],"end":[763,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"resolved_path":{"name":"fmt::WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:60":{"id":"0:219:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:599:1921":{"id":"b:2:2567-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2578-0:342:1907":{"id":"b:2:2578-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:683:2132":{"id":"5:683:2132","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:2102":{"id":"0:386:2102","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[897,4],"end":[899,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1870","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:1893":{"id":"0:405:1893","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1019,4],"end":[1026,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3408-0:342:1907":{"id":"b:2:3408-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3408-0:36:1921":{"id":"b:2:3408-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8558:3103-0:458:2688":{"id":"a:2:8558:3103-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:2262:2530":{"id":"2:2262:2530","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:689":{"id":"0:466:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2257-0:585:1890":{"id":"b:2:2257-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476:689":{"id":"0:476:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2646":{"id":"0:213:2646","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2326:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:342:1907":{"id":"b:2:2260-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2573-0:508:2553":{"id":"b:2:2573-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211:2644":{"id":"0:211:2644","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3408-0:599:1921":{"id":"b:2:3408-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:385:1872":{"id":"0:385:1872","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[892,4],"end":[894,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:355:1979":{"id":"0:355:1979","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:410:2129":{"id":"0:410:2129","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1044,4],"end":[1051,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5532:37579":{"id":"5:5532:37579","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7475:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:342:1907":{"id":"a:2:8557:3104-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:143-0:123:2612":{"id":"0:143-0:123:2612","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:123:2612","glob":true}}},"b:2:2578-0:543:2059":{"id":"b:2:2578-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12456:29967":{"id":"2:12456:29967","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:358:1998":{"id":"0:358:1998","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[590,4],"end":[593,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12396:3570":{"id":"2:12396:3570","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41438:181","prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2577:1529":{"id":"2:2577:1529","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41581:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12383:29964":{"id":"2:12383:29964","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2573-0:269:132":{"id":"b:2:2573-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12373:29947":{"id":"2:12373:29947","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12374:29948"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:9490:2767","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:9490:2767","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:361:2005":{"id":"0:361:2005","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[608,4],"end":[611,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388:2104":{"id":"0:388:2104","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1869","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:393:2114":{"id":"0:393:2114","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[970,4],"end":[970,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:458:2688":{"id":"b:2:2567-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:684:3628":{"id":"5:684:3628","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12421:36907":{"id":"2:12421:36907","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:359:2000":{"id":"0:359:2000","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[596,4],"end":[599,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2789:231-0:585:1890":{"id":"a:2:2789:231-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5780:1506":{"id":"5:5780:1506","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2573-0:36:1921":{"id":"b:2:2573-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2257-0:100:2624":{"id":"b:2:2257-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8557:3104-0:269:132":{"id":"a:2:8557:3104-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5535:31082":{"id":"5:5535:31082","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12473:29835"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12371:36902":{"id":"2:12371:36902","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12055:1448","str::slice_mut_unchecked":"2:12372:36903","crate::ops::Index":"2:3069:10481"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2829:3180-0:100:2624":{"id":"a:2:2829:3180-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2789:231-0:169:2540":{"id":"a:2:2789:231-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:115:1875":{"id":"0:115:1875","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:210:233","0:543:2059"],"is_stripped":true}}},"2:12415:29960":{"id":"2:12415:29960","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175","str::rsplitn":"2:12418:29962"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43502:3020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:508:2553":{"id":"b:2:2567-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5517:37576":{"id":"5:5517:37576","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1995","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7208:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1995","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7208:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342:1907":{"id":"0:342:1907","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[347,0],"end":[351,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log/\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:8557:3104-0:342:1907","a:2:8558:3103-0:342:1907","a:2:2789:231-0:342:1907","a:2:2772:223-0:342:1907","a:2:2829:3180-0:342:1907","b:2:2257-0:342:1907","b:2:2260-0:342:1907","b:2:2563-0:342:1907","b:2:3408-0:342:1907","b:2:2573-0:342:1907","b:2:2567-0:342:1907","b:2:2578-0:342:1907","0:387","0:433"]}}},"0:506:689":{"id":"0:506:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:33:1874":{"id":"a:2:8557:3104-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2260-0:543:2059":{"id":"b:2:2260-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2578-0:585:1890":{"id":"b:2:2578-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2789:231-0:599:1921":{"id":"a:2:2789:231-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2257-0:210:233":{"id":"b:2:2257-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12478:26672":{"id":"2:12478:26672","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4554:26672"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43715:8460","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[268,0],"end":[275,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:605:60":{"id":"0:605:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:52:2046":{"id":"0:52:2046","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[216,4],"end":[225,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:517:2693":{"id":"0:517:2693","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2783:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:100:2624":{"id":"b:2:2260-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12441:36912":{"id":"2:12441:36912","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:210:233":{"id":"b:2:2563-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3408-0:169:2540":{"id":"b:2:3408-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:367:2024":{"id":"0:367:2024","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[642,4],"end":[644,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:462:432":{"id":"0:462:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:2037":{"id":"0:370:2037","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[685,4],"end":[688,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12382:35495":{"id":"2:12382:35495","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43690:8404","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9486:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12372:36903":{"id":"2:12372:36903","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12055:1448","crate::ops::IndexMut":"2:3073:10482","str::slice_unchecked":"2:12371:36902"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:221:689":{"id":"0:221:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33:1874":{"id":"0:33:1874","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[82,0],"end":[85,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:40","a:2:8557:3104-0:33:1874","a:2:8558:3103-0:33:1874","a:2:2789:231-0:33:1874","a:2:2772:223-0:33:1874","a:2:2829:3180-0:33:1874","b:2:2257-0:33:1874","b:2:2260-0:33:1874","b:2:2563-0:33:1874","b:2:3408-0:33:1874","b:2:2573-0:33:1874","b:2:2567-0:33:1874","b:2:2578-0:33:1874","0:60"]}}},"0:519:2787":{"id":"0:519:2787","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:364:2015":{"id":"0:364:2015","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:458:2688":{"id":"0:458:2688","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:8557:3104-0:458:2688","a:2:8558:3103-0:458:2688","a:2:2789:231-0:458:2688","a:2:2772:223-0:458:2688","a:2:2829:3180-0:458:2688","b:2:2257-0:458:2688","b:2:2260-0:458:2688","b:2:2563-0:458:2688","b:2:3408-0:458:2688","b:2:2573-0:458:2688","b:2:2567-0:458:2688","b:2:2578-0:458:2688","b:5:680-0:458:2688","0:191","0:461"]}}},"b:2:2578-0:33:1874":{"id":"b:2:2578-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207-0:142:1873":{"id":"0:207-0:142:1873","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1873","glob":true}}},"b:2:2260-0:571:2013":{"id":"b:2:2260-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12436:36911":{"id":"2:12436:36911","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12052:6175","`DoubleEndedIterator`":"2:7473:121","prim@char":"1:12049:428","str::match_indices":"2:12433:36910"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43566:8537","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2829:3180-0:543:2059":{"id":"a:2:2829:3180-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12361:320":{"id":"2:12361:320","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12362:319","`u8`":"1:12066:1551"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5536:31083":{"id":"5:5536:31083","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12474:29836"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:576:2022":{"id":"0:576:2022","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:438:2081":{"id":"0:438:2081","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1153,0],"end":[1155,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12359:29902":{"id":"2:12359:29902","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11612:2585"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:458:2688":{"id":"b:2:2260-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:534:432":{"id":"0:534:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2326:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2257-0:543:2059":{"id":"b:2:2257-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:585:1890":{"id":"b:2:2260-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:680-0:508:2553":{"id":"b:5:680-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2760","5:683:2132","5:684:3628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:97:2567":{"id":"0:97:2567","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2624"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2578-0:599:1921":{"id":"b:2:2578-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12400:2385":{"id":"2:12400:2385","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12052:6175","`DoubleEndedIterator`":"2:7473:121","prim@char":"1:12049:428","str::split_whitespace":"2:12378:35501","str::rsplit":"2:12406:29958"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43398:3019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:223-0:571:2013":{"id":"a:2:2772:223-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:466:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397:1872":{"id":"0:397:1872","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[980,4],"end":[987,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:9496:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:9496:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:476:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:210:233":{"id":"0:210:233","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2644","0:213:2646","0:215:2648"],"impls":["a:2:8557:3104-0:210:233","a:2:8558:3103-0:210:233","a:2:2789:231-0:210:233","a:2:2772:223-0:210:233","a:2:2829:3180-0:210:233","b:2:2257-0:210:233","b:2:2260-0:210:233","b:2:2563-0:210:233","b:2:3408-0:210:233","b:2:2573-0:210:233","b:2:2567-0:210:233","b:2:2578-0:210:233","0:220","0:218"]}}},"a:2:8558:3103-0:210:233":{"id":"a:2:8558:3103-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:360:2003":{"id":"0:360:2003","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[602,4],"end":[605,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12392:3610":{"id":"2:12392:3610","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41438:181","prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:1873":{"id":"0:142:1873","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1875","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:143-0:123:2612"],"is_stripped":true}}},"a:2:2789:231-0:458:2688":{"id":"a:2:2789:231-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:8557:3104-0:543:2059":{"id":"a:2:8557:3104-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2563-0:342:1907":{"id":"b:2:2563-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:372:1964":{"id":"0:372:1964","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[716,4],"end":[719,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:36:1921":{"id":"b:2:2260-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12445:36914":{"id":"2:12445:36914","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:2011":{"id":"0:363:2011","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[621,4],"end":[624,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["timestamp",{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"fmt::TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48:2032":{"id":"0:48:2032","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12374:29948":{"id":"2:12374:29948","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12373:29947"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:689":{"id":"0:192:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12378:35501":{"id":"2:12378:35501","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12379:35493"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43672:8540","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:964":{"id":"0:396:964","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[975,4],"end":[977,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12356:36900":{"id":"2:12356:36900","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12354:36899"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:210:233":{"id":"a:2:8557:3104-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:531:1664":{"id":"0:531:1664","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:481:689":{"id":"0:481:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12474:29836":{"id":"2:12474:29836","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:2553":{"id":"0:508:2553","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2554","0:511:2694","0:513:2695","0:515:2697","0:517:2693","0:519:2787","0:521:2696","0:523:2788","0:525:2789","0:528:2790"],"impls":["a:2:8557:3104-0:508:2553","a:2:8558:3103-0:508:2553","a:2:2789:231-0:508:2553","a:2:2772:223-0:508:2553","a:2:2829:3180-0:508:2553","b:2:2257-0:508:2553","b:2:2260-0:508:2553","b:2:2563-0:508:2553","b:2:3408-0:508:2553","b:2:2573-0:508:2553","b:2:2567-0:508:2553","b:2:2578-0:508:2553","b:5:680-0:508:2553","0:538","0:535","0:537","0:540","0:533","0:541"]}}},"0:389:1866":{"id":"0:389:1866","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[907,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1870","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12369:29924":{"id":"2:12369:29924","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12406:29958":{"id":"2:12406:29958","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12052:6175","`DoubleEndedIterator`":"2:7473:121","prim@char":"1:12049:428","str::split":"2:12400:2385"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43416:8389","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12477:10461":{"id":"2:12477:10461","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4557:10461"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43706:8342","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:599:1921":{"id":"b:2:2260-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3408-0:585:1890":{"id":"b:2:3408-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:169:2540":{"id":"b:2:2567-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:81:2612":{"id":"0:81:2612","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1676","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:100:2624"],"is_stripped":true}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2321:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12362:319":{"id":"2:12362:319","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12066:1551"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:599:1921":{"id":"0:599:1921","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[377,0],"end":[382,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# #[macro_use] extern crate log;\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:8557:3104-0:599:1921","a:2:8558:3103-0:599:1921","a:2:2789:231-0:599:1921","a:2:2772:223-0:599:1921","a:2:2829:3180-0:599:1921","b:2:2257-0:599:1921","b:2:2260-0:599:1921","b:2:2563-0:599:1921","b:2:3408-0:599:1921","b:2:2573-0:599:1921","b:2:2567-0:599:1921","b:2:2578-0:599:1921","0:435","0:604"]}}},"b:2:2567-0:269:132":{"id":"b:2:2567-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:523:2788":{"id":"0:523:2788","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8558:3103-0:36:1921":{"id":"a:2:8558:3103-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:46:964":{"id":"0:46:964","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[173,4],"end":[179,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:1872":{"id":"0:371:1872","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[707,4],"end":[710,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:33:1874":{"id":"b:2:2563-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12403:29956":{"id":"2:12403:29956","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11868:8386","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2257-0:508:2553":{"id":"b:2:2257-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2772:223-0:100:2624":{"id":"a:2:2772:223-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12443:36913":{"id":"2:12443:36913","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:2790":{"id":"0:528:2790","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:530:1663","0:531:1664","0:532:1665"]},"discriminant":null}}},"0:571:2013":{"id":"0:571:2013","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:2016","0:574:2019","0:576:2022","0:578:2025"],"impls":["a:2:8557:3104-0:571:2013","a:2:8558:3103-0:571:2013","a:2:2789:231-0:571:2013","a:2:2772:223-0:571:2013","a:2:2829:3180-0:571:2013","b:2:2257-0:571:2013","b:2:2260-0:571:2013","b:2:2563-0:571:2013","b:2:3408-0:571:2013","b:2:2573-0:571:2013","b:2:2567-0:571:2013","b:2:2578-0:571:2013","b:5:680-0:571:2013","0:580","0:583","0:267","0:581"]}}},"b:2:2578-0:100:2624":{"id":"b:2:2578-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:264-0:210:233":{"id":"0:264-0:210:233","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::Target","name":"Target","id":"0:210:233","glob":false}}},"2:12365:29922":{"id":"2:12365:29922","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41438:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12453:29966":{"id":"2:12453:29966","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:571:2013":{"id":"a:2:8557:3104-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:377:2071":{"id":"0:377:2071","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[792,4],"end":[803,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41581:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SetLoggerError","id":"24:352:1871","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3408-0:508:2553":{"id":"b:2:3408-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2563-0:36:1921":{"id":"b:2:2563-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:491:689":{"id":"0:491:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341:1882":{"id":"0:341:1882","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[304,0],"end":[304,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}}},"0:70:689":{"id":"0:70:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:571:2013","0:269:132","0:257-0:92:1873","0:258-0:206:1873"],"is_stripped":false}}},"0:542:631":{"id":"0:542:631","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2174":{"id":"0:0:2174","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1311,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\nLog levels are controlled on a per-module basis, and **by default all\nlogging is disabled except for the `error` level**.\n\nLogging is controlled via the **`RUST_LOG`** environment variable. The\nvalue of this environment variable is a comma-separated list of *logging\ndirectives*. A logging directive is of the form:\n\n```text\nexample::log::target=level\n```\n\nThe log target is typically equal to the path of the module the message\nin question originated from, though it can be overridden.\n\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target. A value of, for example, `RUST_LOG=example`, would\nmatch all of the messages with targets:\n\n* `example`\n* `example::test`\n* `example::test::module::submodule`\n* `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\nThe names of the log levels that may be specified correspond to the\nvariations of the [`log::Level`][level-enum] enum from the `log`\ncrate. They are:\n\n* `error`\n* `warn`\n* `info`\n* `debug`\n* `trace`\n\nThere is also a pseudo logging level, `off`, which may be specified to\ndisable all logging for a given module or for the entire application. As\nwith the logging levels, the letter case is not significant[^fn-off].\n\n[^fn-off]: Similar to the universe of log level names, the `off` pseudo\n   log level feature is also provided by the underlying `log` crate.\n\nThe letter case is not significant for the logging level names; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nAs the log level for a module is optional, the module to enable logging for\nis also optional. **If only a level is provided, then the global log\nlevel for all modules is set to this value.**\n\nSome examples of valid values of `RUST_LOG` are:\n\n* `hello` turns on all logging for the 'hello' module\n* `trace` turns on all logging for the application, regardless of its name\n* `TRACE` turns on all logging for the application, regardless of its name (same as previous)\n* `info` turns on all info logging\n* `INFO` turns on all info logging (same as previous)\n* `hello=debug` turns on debug logging for 'hello'\n* `hello=DEBUG` turns on debug logging for 'hello' (same as previous)\n* `hello,std::option` turns on hello, and std's option logging\n* `error,hello=warn` turn on global error logging and also warn for hello\n* `error,hello=off`  turn on global error logging, but turn off logging for hello\n* `off` turns off all logging for the application\n* `OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n# #[macro_use] extern crate log;\n#[cfg(test)]\nmod tests {\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/env-logger-rs/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log/\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:132"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:14:1872","0:70:689","0:340:1879","0:341:1882","0:585:1890","0:342:1907","0:599:1921","0:437:2071","0:438:2081","0:439:2138","0:442:2153","0:445:1949","0:446:1947","0:332-0:262:1873"],"is_stripped":false}}},"a:2:8558:3103-0:508:2553":{"id":"a:2:8558:3103-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:407:2127":{"id":"0:407:2127","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1031,4],"end":[1039,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93-0:81:2612":{"id":"0:93-0:81:2612","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:81:2612","glob":true}}},"0:175:2552":{"id":"0:175:2552","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:574:2019":{"id":"0:574:2019","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:384:1973":{"id":"0:384:1973","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:223-0:210:233":{"id":"a:2:2772:223-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2578-0:169:2540":{"id":"b:2:2578-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12354:36899":{"id":"2:12354:36899","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:689":{"id":"0:281:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2829:3180-0:508:2553":{"id":"a:2:2829:3180-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:511:2694":{"id":"0:511:2694","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:356:700":{"id":"0:356:700","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[579,4],"end":[585,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["format",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3014:1993","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1870","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:458:2688":{"id":"b:5:680-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2760","5:683:2132","5:684:3628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:351:1950":{"id":"0:351:1950","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[488,4],"end":[503,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["env",{"generic":"E"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:508:2553":{"id":"b:2:2260-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2551","0:146:2691","0:147:2563"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2789:231-0:100:2624":{"id":"a:2:2789:231-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:536:689":{"id":"0:536:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145:2551":{"id":"0:145:2551","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2257-0:269:132":{"id":"b:2:2257-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1096,0],"end":[1103,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:426:715":{"id":"0:426:715","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["filter_env",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2829:3180-0:36:1921":{"id":"a:2:2829:3180-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12447:36916":{"id":"2:12447:36916","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12077:15799","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2540":{"id":"0:169:2540","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8557:3104-0:169:2540","a:2:8558:3103-0:169:2540","a:2:2789:231-0:169:2540","a:2:2772:223-0:169:2540","a:2:2829:3180-0:169:2540","b:2:2257-0:169:2540","b:2:2260-0:169:2540","b:2:2563-0:169:2540","b:2:3408-0:169:2540","b:2:2573-0:169:2540","b:2:2567-0:169:2540","b:2:2578-0:169:2540","b:5:5778-0:169:2540","0:483","0:503","0:488","0:463","0:493","0:468","0:478","0:498","0:473"]}}},"0:237:60":{"id":"0:237:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8558:3103-0:543:2059":{"id":"a:2:8558:3103-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2829:3180-0:458:2688":{"id":"a:2:2829:3180-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:551:432":{"id":"0:551:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2573-0:458:2688":{"id":"b:2:2573-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104:689":{"id":"0:104:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12367:29923":{"id":"2:12367:29923","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:347:964":{"id":"0:347:964","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[411,4],"end":[413,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:169:2540":{"id":"a:2:8557:3104-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:8557:3104-0:100:2624":{"id":"a:2:8557:3104-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12376:8550":{"id":"2:12376:8550","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12049:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43374:8532","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:47:1947":{"id":"0:47:1947","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:223-0:508:2553":{"id":"a:2:2772:223-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:92:1873":{"id":"0:92:1873","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:689","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:93-0:81:2612"],"is_stripped":true}}},"a:2:2829:3180-0:342:1907":{"id":"a:2:2829:3180-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:437:2071":{"id":"0:437:2071","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1140,0],"end":[1142,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:41581:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1871","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2573-0:169:2540":{"id":"b:2:2573-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:571:2013":{"id":"b:2:2567-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:486:689":{"id":"0:486:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14:1872":{"id":"0:14:1872","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[868,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33:1874","0:36:1921"],"is_stripped":false}}},"0:584:689":{"id":"0:584:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12459:36918":{"id":"2:12459:36918","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9697:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:750"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:49:2037":{"id":"0:49:2037","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2829:3180-0:269:132":{"id":"a:2:2829:3180-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:399:2119":{"id":"0:399:2119","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[992,4],"end":[1000,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530:1663":{"id":"0:530:1663","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:434:689":{"id":"0:434:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1110,8],"end":[1114,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3408-0:33:1874":{"id":"b:2:3408-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1087,0],"end":[1094,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::borrow::Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:113:689":{"id":"0:113:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2578-0:508:2553":{"id":"b:2:2578-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2783:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2789:231-0:543:2059":{"id":"a:2:2789:231-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2772:223-0:585:1890":{"id":"a:2:2772:223-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2567-0:36:1921":{"id":"b:2:2567-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[122,0],"end":[169,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:1872","0:43:2102","0:44:2104"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2691":{"id":"0:146:2691","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2688"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2328","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12450:36917":{"id":"2:12450:36917","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:223-0:543:2059":{"id":"a:2:2772:223-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2784:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:571:2013":{"id":"b:5:680-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2760","5:683:2132","5:684:3628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_vectored","by_ref","write_all","write_all_vectored","write_fmt","is_write_vectored"],"trait":{"name":"Write","id":"1:3504:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:2001","0:279:2114"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:348:1947":{"id":"0:348:1947","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[443,4],"end":[450,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:169:2540":{"id":"b:2:2563-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3408-0:269:132":{"id":"b:2:3408-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2573-0:571:2013":{"id":"b:2:2573-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1117,4],"end":[1128,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2772:223-0:169:2540":{"id":"a:2:2772:223-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5534:3079":{"id":"5:5534:3079","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7475:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2782:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3408-0:100:2624":{"id":"b:2:3408-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2772:223-0:36:1921":{"id":"a:2:2772:223-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12427:2102":{"id":"2:12427:2102","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12052:6175","`DoubleEndedIterator`":"2:7473:121","prim@char":"1:12049:428","str::rmatches":"2:12430:36909"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43602:3015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2566:1962":{"id":"2:2566:1962","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2540:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12389:29965":{"id":"2:12389:29965","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3408-0:210:233":{"id":"b:2:3408-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2829:3180-0:210:233":{"id":"a:2:2829:3180-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12352:2369":{"id":"2:12352:2369","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:599:1921":{"id":"b:2:2563-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2578-0:458:2688":{"id":"b:2:2578-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12412:36906":{"id":"2:12412:36906","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12052:6175","str::split":"2:12400:2385","prim@char":"1:12049:428","str::split_terminator":"2:12409:36905"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43466:8535","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":"default","docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12475:36921":{"id":"2:12475:36921","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4556:36921"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43697:8461","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:1872":{"id":"0:50:1872","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[206,4],"end":[209,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2573-0:33:1874":{"id":"b:2:2573-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:9494:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:9494:2768","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:491:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2772:223-0:33:1874":{"id":"a:2:2772:223-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:178:2749":{"id":"0:178:2749","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12471:29833":{"id":"2:12471:29833","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39470:29842","Self::is_ascii":"2:12470:29832"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39470:29842","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[902,0],"end":[971,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:2104","0:389:1866","0:393:2114"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5778-0:100:2624":{"id":"b:5:5778-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9486:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5776:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5780:1506"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:366:2021":{"id":"0:366:2021","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[637,4],"end":[639,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12472:2958":{"id":"2:12472:2958","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3408-0:458:2688":{"id":"b:2:3408-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2829:3180-0:599:1921":{"id":"a:2:2829:3180-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:354:1973":{"id":"0:354:1973","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:206:1873":{"id":"0:258-0:206:1873","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::writer::glob","name":"glob","id":"0:206:1873","glob":true}}},"0:100:2624":{"id":"0:100:2624","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8557:3104-0:100:2624","a:2:8558:3103-0:100:2624","a:2:2789:231-0:100:2624","a:2:2772:223-0:100:2624","a:2:2829:3180-0:100:2624","b:2:2257-0:100:2624","b:2:2260-0:100:2624","b:2:2563-0:100:2624","b:2:3408-0:100:2624","b:2:2573-0:100:2624","b:2:2567-0:100:2624","b:2:2578-0:100:2624","b:5:5778-0:100:2624","0:103","0:112"]}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:9500:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:9500:2770","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:501:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2257-0:342:1907":{"id":"b:2:2257-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12350":{"id":"2:12350","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12351:836","2:12352:2369","2:12353:36898","2:12354:36899","2:12356:36900","2:12359:29902","2:12360:36901","2:12361:320","2:12362:319","2:12363:2124","2:12365:29922","2:12367:29923","2:12369:29924","2:12371:36902","2:12372:36903","2:12373:29947","2:12374:29948","2:12375:8405","2:12376:8550","2:12377:2586","2:12378:35501","2:12379:35493","2:12380:3913","2:12381:36904","2:12382:35495","2:12383:29964","2:12386:2405","2:12389:29965","2:12392:3610","2:12396:3570","2:12400:2385","2:12403:29956","2:12406:29958","2:12409:36905","2:12412:36906","2:12415:29960","2:12418:29962","2:12421:36907","2:12424:36908","2:12427:2102","2:12430:36909","2:12433:36910","2:12436:36911","2:12439:2394","2:12441:36912","2:12443:36913","2:12445:36914","2:12446:36915","2:12447:36916","2:12450:36917","2:12453:29966","2:12456:29967","2:12459:36918","2:12462:36919","2:12465:36920","2:12468:2046","2:12470:29832","2:12471:29833","2:12472:2958","2:12473:29835","2:12474:29836","2:12475:36921","2:12477:10461","2:12478:26672"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:96:2566":{"id":"0:96:2566","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2624"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:2753":{"id":"0:179:2753","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2257-0:599:1921":{"id":"b:2:2257-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63:689":{"id":"0:63:689","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[278,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:169:2540":{"id":"b:2:2260-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:362:2008":{"id":"0:362:2008","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[615,4],"end":[618,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["indent",{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8558:3103-0:100:2624":{"id":"a:2:8558:3103-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:379:2073":{"id":"0:379:2073","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[823,4],"end":[832,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365:2018":{"id":"0:365:2018","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:1879":{"id":"0:340:1879","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[301,0],"end":[301,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}}},"0:147:2563":{"id":"0:147:2563","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2688"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2328","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"resolved_path":{"name":"Level","id":"24:198:2328","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2573-0:599:1921":{"id":"b:2:2573-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8557:3104-0:585:1890":{"id":"a:2:8557:3104-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:548:2593":{"id":"0:548:2593","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2573-0:543:2059":{"id":"b:2:2573-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2829:3180-0:169:2540":{"id":"a:2:2829:3180-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12363:2124":{"id":"2:12363:2124","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41438:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41436:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10146:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2563-0:458:2688":{"id":"b:2:2563-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12462:36919":{"id":"2:12462:36919","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12439:2394":{"id":"2:12439:2394","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:458:2688":{"id":"a:2:8557:3104-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2829:3180-0:571:2013":{"id":"a:2:2829:3180-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:369:2032":{"id":"0:369:2032","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[666,4],"end":[669,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2257-0:36:1921":{"id":"b:2:2257-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2563-0:100:2624":{"id":"b:2:2563-0:100:2624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:563:631":{"id":"0:563:631","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12351:836":{"id":"2:12351:836","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12049:428"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436:689":{"id":"0:436:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1118,8],"end":[1127,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:1474":{"id":"0:373:1474","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[739,4],"end":[742,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["target",{"resolved_path":{"name":"fmt::Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8558:3103-0:342:1907":{"id":"a:2:8558:3103-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5524:37578":{"id":"5:5524:37578","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7475:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:223-0:599:1921":{"id":"a:2:2772:223-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2789:231-0:342:1907":{"id":"a:2:2789:231-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12375:8405":{"id":"2:12375:8405","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12049:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43368:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5778-0:169:2540":{"id":"b:5:5778-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9486:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5776:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5780:1506"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381:1947":{"id":"0:381:1947","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[862,4],"end":[867,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2102":{"id":"0:43:2102","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[148,4],"end":[160,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1870","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2782:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2563-0:508:2553":{"id":"b:2:2563-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:525:2789":{"id":"0:525:2789","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:527:1663"]},"discriminant":null}}},"b:2:2567-0:342:1907":{"id":"b:2:2567-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8558:3103-0:169:2540":{"id":"a:2:8558:3103-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9486:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9486:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:471:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:266-0:543:2059":{"id":"0:266-0:543:2059","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:2059","glob":false}}},"a:2:8557:3104-0:599:1921":{"id":"a:2:8557:3104-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2578-0:269:132":{"id":"b:2:2578-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:402:2123":{"id":"0:402:2123","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[1005,4],"end":[1012,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:685:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5533:37580":{"id":"5:5533:37580","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1995","`String`":"5:7475:227"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1995","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7208:3110","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265-0:571:2013":{"id":"0:265-0:571:2013","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:2013","glob":false}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:9492:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:9492:2769","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:496:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2772:223-0:269:132":{"id":"a:2:2772:223-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[833,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:964","0:348:1947","0:351:1950","0:354:1973","0:355:1979","0:356:700","0:358:1998","0:359:2000","0:360:2003","0:361:2005","0:362:2008","0:363:2011","0:364:2015","0:365:2018","0:366:2021","0:367:2024","0:368:2027","0:369:2032","0:370:2037","0:371:1872","0:372:1964","0:373:1474","0:374:1893","0:375:1966","0:376:2064","0:377:2071","0:378:2081","0:379:2073"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2569:715":{"id":"2:2569:715","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3410:1542":{"id":"2:3410:1542","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39283:8451","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:223-0:458:2688":{"id":"a:2:2772:223-0:458:2688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:2582:1528":{"id":"2:2582:1528","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41581:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99:2569":{"id":"0:99:2569","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2624"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1109,4],"end":[1115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180:2558":{"id":"0:180:2558","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12377:2586":{"id":"2:12377:2586","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43384:3060","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2573-0:342:1907":{"id":"b:2:2573-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2543:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2576:128","2:2577:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:532:1665":{"id":"0:532:1665","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:262:1873":{"id":"0:262:1873","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:264-0:210:233","0:265-0:571:2013","0:266-0:543:2059"],"is_stripped":true}}},"a:2:8558:3103-0:585:1890":{"id":"a:2:8558:3103-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:582:432":{"id":"0:582:432","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2772:223-0:342:1907":{"id":"a:2:2772:223-0:342:1907","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2789:231-0:36:1921":{"id":"a:2:2789:231-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12470:29832":{"id":"2:12470:29832","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2789:231-0:571:2013":{"id":"a:2:2789:231-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8558:3103-0:269:132":{"id":"a:2:8558:3103-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12433:36910":{"id":"2:12433:36910","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12052:6175","`DoubleEndedIterator`":"2:7473:121","prim@char":"1:12049:428","str::rmatch_indices":"2:12436:36911"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43548:8536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:2554":{"id":"0:509:2554","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[277,0],"end":[288,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:278:2001":{"id":"0:278:2001","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2921:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:36:1921":{"id":"a:2:8557:3104-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2257-0:571:2013":{"id":"b:2:2257-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8558:3103-0:33:1874":{"id":"a:2:8558:3103-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2829:3180-0:33:1874":{"id":"a:2:2829:3180-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2829:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:546:2658":{"id":"0:546:2658","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:680-0:543:2059":{"id":"b:5:680-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2273:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:2760","5:683:2132","5:684:3628"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:544:2656":{"id":"0:544:2656","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:496:689":{"id":"0:496:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:33:1874":{"id":"b:2:2260-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:515:2697":{"id":"0:515:2697","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2563-0:543:2059":{"id":"b:2:2563-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2566:1962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2578-0:36:1921":{"id":"b:2:2578-0:36:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:513:2695":{"id":"0:513:2695","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:59:60":{"id":"0:59:60","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[263,4],"end":[265,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:3104-0:508:2553":{"id":"a:2:8557:3104-0:508:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8557:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9481:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:543:2059":{"id":"b:2:2567-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2784:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:585:1890":{"id":"b:2:2567-0:585:1890","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2259:1863":{"id":"2:2259:1863","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3408-0:543:2059":{"id":"b:2:3408-0:543:2059","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2059","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[262,0],"end":[266,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2614:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:378:2081":{"id":"0:378:2081","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[814,4],"end":[817,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439:2138":{"id":"0:439:2138","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1185,0],"end":[1192,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Result","id":"2:41581:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1871","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:132":{"id":"0:269:132","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:8557:3104-0:269:132","a:2:8558:3103-0:269:132","a:2:2789:231-0:269:132","a:2:2772:223-0:269:132","a:2:2829:3180-0:269:132","b:2:2257-0:269:132","b:2:2260-0:269:132","b:2:2563-0:269:132","b:2:3408-0:269:132","b:2:2573-0:269:132","b:2:2567-0:269:132","b:2:2578-0:269:132","0:277","0:280"]}}},"0:445:1949":{"id":"0:445:1949","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1231,0],"end":[1233,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:1872":{"id":"0:41:1872","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[139,4],"end":[145,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:33:1874":{"id":"b:2:2567-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:527:1663":{"id":"0:527:1663","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[973,0],"end":[1056,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:964","0:397:1872","0:399:2119","0:402:2123","0:405:1893","0:407:2127","0:410:2129"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:9488:2766","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:9488:2766","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:481:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:95:2012":{"id":"0:95:2012","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177:2555":{"id":"0:177:2555","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:572:2016":{"id":"0:572:2016","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:578:2025":{"id":"0:578:2025","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2578-0:571:2013":{"id":"b:2:2578-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5521:37577":{"id":"5:5521:37577","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7475:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2578-0:210:233":{"id":"b:2:2578-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2547:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2581:128","2:2582:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:210:233":{"id":"b:2:2567-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2540:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:543:2059":{"id":"0:543:2059","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2656","0:546:2658","0:548:2593"],"impls":["a:2:8557:3104-0:543:2059","a:2:8558:3103-0:543:2059","a:2:2789:231-0:543:2059","a:2:2772:223-0:543:2059","a:2:2829:3180-0:543:2059","b:2:2257-0:543:2059","b:2:2260-0:543:2059","b:2:2563-0:543:2059","b:2:3408-0:543:2059","b:2:2573-0:543:2059","b:2:2567-0:543:2059","b:2:2578-0:543:2059","b:5:680-0:543:2059","0:236","0:550","0:561","0:556","0:562","0:553","0:558","0:552","0:555"]}}},"0:429:60":{"id":"0:429:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1097,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:2698":{"id":"0:176:2698","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442:2153":{"id":"0:442:2153","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1217,0],"end":[1223,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2537:149","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2257-0:169:2540":{"id":"b:2:2257-0:169:2540","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2540","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:591:689":{"id":"0:591:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12468:2046":{"id":"2:12468:2046","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12013:127","`FromStr`":"2:12012:2972"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41581:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12012:2972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12012:2972","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208-0:115:1875":{"id":"0:208-0:115:1875","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:115:1875","glob":true}}},"0:98:2568":{"id":"0:98:2568","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2624"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2624","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3408-0:571:2013":{"id":"b:2:3408-0:571:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3406:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3410:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2257-0:33:1874":{"id":"b:2:2257-0:33:1874","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2251:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:33:1874","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2259:1863"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[171,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:36:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:46:964","0:47:1947","0:48:2032","0:49:2037","0:50:1872","0:52:2046","0:53:2073"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:559:750":{"id":"0:559:750","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9705:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12353:36898":{"id":"2:12353:36898","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:585:1890":{"id":"0:585:1890","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[317,0],"end":[320,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:8557:3104-0:585:1890","a:2:8558:3103-0:585:1890","a:2:2789:231-0:585:1890","a:2:2772:223-0:585:1890","a:2:2829:3180-0:585:1890","b:2:2257-0:585:1890","b:2:2260-0:585:1890","b:2:2563-0:585:1890","b:2:3408-0:585:1890","b:2:2573-0:585:1890","b:2:2567-0:585:1890","b:2:2578-0:585:1890","0:589","0:427","0:423"]}}},"b:2:2260-0:210:233":{"id":"b:2:2260-0:210:233","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2779:3179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2254:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2530"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217:1663":{"id":"0:217:1663","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:276:1995","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"io::Write","id":"1:3504:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2772:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}},"a:2:2789:231-0:269:132":{"id":"a:2:2789:231-0:269:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2789:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:8558:3103-0:599:1921":{"id":"a:2:8558:3103-0:599:1921","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8558:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:1921","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12430:36909":{"id":"2:12430:36909","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12052:6175","`DoubleEndedIterator`":"2:7473:121","prim@char":"1:12049:428","str::matches":"2:12427:2102"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43620:8538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12465:36920":{"id":"2:12465:36920","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12049:428","self::pattern":"2:12052:6175"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12072:15800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5518:2379":{"id":"5:5518:2379","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7475:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7475:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12057:6053","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12360:36901":{"id":"2:12360:36901","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:554:689":{"id":"0:554:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501:689":{"id":"0:501:689","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9456:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9437:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2581:128":{"id":"2:2581:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31941:9848","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"paths":{"2:41554:3235":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:4725:5597":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:11582:15982":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"20:1880:6484":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"2:9705:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:7664:1921":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"20:1947:6387":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"2:43398:3019":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:2223:3049":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:4772:5618":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"29:5454:5588":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"30:3000:5097":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"2:45500:8579":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:8364:8715":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:40184:8471":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"1:12062:764":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"31:4567:4321":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"1:12069:1550":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:6783:4163":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"29:5256:5548":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:42730:6104":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11062:6798":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"29:5893:5672":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:1058:8109":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:5612:7567":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"22:1644:6164":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"29:5536:4445":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"31:5300:9684":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"22:1507:6140":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"29:9194:5979":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:8293:10063":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"29:7302:5835":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"31:5560:4574":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"17:11351:6829":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"9:507:8172":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:40079:10498":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"11:365:4126":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:45584:8582":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:2494:10526":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:5816:7644":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:4032:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:8686:22648":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:2531:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:13101:7082":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"21:2048:132":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"17:10980:6650":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:5363:7619":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"20:2524:3011":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"2:11178:15796":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:2625:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:1590:5303":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"30:4161:5184":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"23:844:6037":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"22:1086:6043":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"16:6531:7760":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:44121:10055":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:1733:5371":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:7015:7839":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:1634:604":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:6473:3162":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:12888:7047":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"31:5236:5267":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"1:3447:3048":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:47736:8679":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"26:181:2624":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"22:1501:6139":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"29:7973:4317":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:9003:31843":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:7677:200":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"29:7355:5837":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"31:7378:5083":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"29:5225:5547":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"20:1922:38523":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"17:11886:6878":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"31:4822:9649":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"1:4189:10566":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:31995:2933":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"21:2348:6339":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"29:1709:4416":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"22:1422:1921":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"18:521:26624":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:12070:1547":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"31:6998:27872":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"23:798:6025":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"20:1518:6433":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"16:5727:7635":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:10197:6691":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:5646:8727":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"20:2519:2488":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"2:42952:8383":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:6499:7581":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:12576:6991":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:9531:38503":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:4478:10568":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"23:665:141":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"33:221:3175":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"16:6742:7799":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:1709:5367":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"11:285:10044":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:4862:7609":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"29:4714:4605":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"23:97:26613":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:9574:38506":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:25:628":{"crate_id":2,"path":["core","env"],"kind":"macro"},"1:3185:32972":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:40254:8478":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:12737:7010":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:4806:7607":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"20:2599:3016":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"29:8351:5942":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"29:5706:5639":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"21:1830:26642":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"30:534:3949":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"6:5808:5734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"22:1060:26686":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"6:1569:5290":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"31:6357:4858":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"17:12452:6969":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"18:609:6011":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:43466:8535":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"30:5193:5226":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"1:4807:4213":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:9617:38508":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:4348:248":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"31:6677:4910":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"17:10059:6677":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:22258:35429":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:7767:3654":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:10812:8753":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:7150:3081":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:2251:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"31:6413:4868":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"31:5872:9717":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"31:5650:4605":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"20:1545:212":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"23:638:26624":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:5135:3094":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:39973:15859":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:9493:4228":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"6:123:16295":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"18:113:26614":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:7318:7885":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:629:8185":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"29:539:4603":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"31:4723:4345":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"17:11048:6794":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:11261:6819":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:13546:7225":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:39898:35422":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:13228:7104":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:41573:195":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:21685:10661":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:11573:6847":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:9867:6660":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"20:178:6375":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"31:5594:4595":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"17:13148:7096":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:14378:7470":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"18:80:26612":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:44332:197":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:4426:4158":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"16:6753:7800":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:7473:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:12111:6897":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:2959:2760":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13906:7322":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"29:8017:5876":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"26:194:128":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"11:1822:3575":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"15:306:21683":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:1631:4436":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:7041:7840":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"31:4536:4311":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"30:5180:5224":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"0:342:1907":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"10:44:8119":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:3997:10543":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"31:5799:9706":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"31:4833:4383":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:21258:10659":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:3391:3082":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:4194:3040":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:45633:8584":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:8916:10627":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:2380:7538":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:11598:8396":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:40494:3059":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:46031:8603":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:40231:8348":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"31:4621:9637":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"6:1545:5273":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:6156:7698":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"22:0:2917":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"20:2238:3011":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"29:4564:4630":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:4881:1027":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:4718:5595":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11137:6804":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:9277:6519":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:41374:8497":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:4403:5448":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"31:5009:9660":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:13135:7095":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"21:2574:6367":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"6:6850:5961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:40283:8355":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:6817:10652":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:6843:5958":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:10726:6751":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"11:2194:9849":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"9:330:9852":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:10964:8169":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:10456:6717":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"18:0:2803":{"crate_id":18,"path":["memchr"],"kind":"module"},"20:2119:3023":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"29:4998:5487":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"21:1178:6215":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"22:961:6064":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"29:9276:4318":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:10782:10066":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:7541:8868":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:8505:10617":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:4397:5445":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"31:5825:4662":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"22:1622:6062":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"2:46152:8607":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"22:1013:6070":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"5:6969:4180":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:44117:10054":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"1:9116:221":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:1600:699":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"29:7993:5871":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:14173:7392":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:3238:6176":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:39056:15785":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:2363:191":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"22:1399:6134":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"31:7174:27874":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"2:9490:2767":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:12123:15806":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:6180:5864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"29:5194:5532":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"31:4547:4317":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"31:4806:4378":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"31:4975:4424":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:44137:10059":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:5661:7631":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:782:4137":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:11137:8395":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"24:296:1869":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"17:13274:6824":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:6944:38494":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:2780:2941":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"21:1376:4114":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"29:1987:4436":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:13575:7235":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:13868:7313":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:2810:7556":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"29:4962:5479":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"20:1492:6429":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"2:9456:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:4784:397":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"31:5729:4642":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"5:7287:8204":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"20:2476:3015":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"17:11639:6544":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"21:2059:6332":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"1:8903:8831":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"21:1309:6251":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"29:783:5259":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"5:1776:4165":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:22212:8422":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"31:6035:4734":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"30:4195:5186":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"23:716:38509":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:10520:6727":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"22:1690:6174":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"5:7438:8208":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"33:311:2679":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"17:12970:7062":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:41632:3950":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:8320:8807":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:10351:34597":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"31:5913:4679":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"2:1641:3688":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"11:1838:6299":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:47689:8675":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8971:3153":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:10386:8386":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:42748:8512":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:14076:7368":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:1585:6301":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:14316:7448":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:6011:8352":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"20:1965:6411":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"21:1671:26640":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"16:2969:21729":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:4578:10586":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"20:1861:38529":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"2:44141:10060":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"31:5704:4630":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"24:155:2959":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"2:12057:6053":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:40037:8465":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"21:2109:6215":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"2:40733:3082":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:15:2001":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:2783:228":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"24:198:2328":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"20:2268:3018":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"2:11833:8403":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"29:6961:5747":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12959:7061":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:8121:3085":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:9486:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:11490:6843":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:25797:250":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"33:292:3176":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"2:44145:10061":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"33:13:2681":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"20:2248:3009":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"21:2544:6196":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"2:3167:10483":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"24:357:2970":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"17:13826:7299":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:256:6521":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:8870:8830":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:12437:6965":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"31:5226:9667":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"28:189:4106":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"16:2864:7558":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"29:8856:5975":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"31:5029:4440":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"16:3032:7583":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"20:713:6383":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"6:1702:4871":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:0:2801":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:8990:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"22:1102:6092":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"17:10547:6729":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"33:62:3167":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"29:4884:5466":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:12052:1078":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:6987:9547":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:32089:3540":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:10575:6731":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:6243:7725":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:7475:227":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"20:0:1674":{"crate_id":20,"path":["regex"],"kind":"module"},"11:97:10043":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:4623:15853":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:6467:7752":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:2461:9911":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"20:1647:6452":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"1:1817:3643":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:11381:6834":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"5:3568:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"20:1528:6376":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"2:21357:6059":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:6165:5853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:2495:15864":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:5369:4115":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:4613:7602":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:4391:5444":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"21:1602:26650":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"29:5394:5083":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"31:6660:4907":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"29:1887:5291":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:4666:5576":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:21906:10657":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"20:1433:38522":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"2:2884:15906":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"20:1896:6438":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"2:7394:15898":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"29:1744:4422":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:8985:8832":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"30:4541:5193":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"5:7217:3575":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:3020:2762":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:11507:22661":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"29:8440:5965":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:40171:3058":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"30:3932:5181":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"17:13922:7326":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"31:6421:4871":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"33:89:3172":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"1:7644:10526":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"21:2330:6186":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"1:7865:8752":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"21:1640:6294":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"16:2907:7560":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:42709:3906":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:5373:15788":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:22717:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"20:1814:6382":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"20:1642:6450":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"14:165:21663":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"29:2143:5367":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11547:6846":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:10851:31834":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"6:4526:5509":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:11023:6793":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:10619:8393":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:7544:7937":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:13188:7099":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"21:2227:4117":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"2:40272:8479":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:6256:4220":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"14:7:8092":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:4844:5652":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"29:7074:5777":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:7029:4224":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"21:0:2916":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"23:761:5997":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"6:7555:5674":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:895:3949":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:39017:3953":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"29:4770:5444":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:6268:38496":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"11:1818:3949":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:8158:3083":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:7751:3653":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:6696:7787":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:46693:8632":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:9933:6668":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:7912:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"11:986:8109":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"27:5:2678":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"2:4402:2935":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:43448:8534":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"29:9263:9798":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:42195:2766":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"31:5765:4651":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"16:4835:7608":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"20:1654:6453":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"29:2167:5371":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:4889:7610":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:7259:5975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:3465:3050":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"21:2423:4113":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"2:41302:10535":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"31:5049:4449":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"11:736:8101":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4957:5666":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:7513:7935":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:8808:8825":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:11161:8826":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:46055:8604":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"20:1605:6379":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"5:3669:4134":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:47113:8667":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:41581:212":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:41908:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"29:5478:5595":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"20:2358:3026":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"1:8547:8716":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:43264:8523":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:573:4606":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:10903:6786":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"26:134:128":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"17:10738:6752":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:41947:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:2837:3539":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:5978:4220":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"31:6325:4842":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"24:151:1868":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"29:764:5254":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"1:589:10460":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:6859:5965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:21205:10663":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:10758:8851":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"22:1333:6117":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"21:1484:4111":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"17:12778:7016":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:4910:9874":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:22618:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:6226:7719":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:21086:15925":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:3441:6542":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:4382:5439":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:1595:5305":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:8195:8008":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:42428:9984":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"20:1833:6476":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"9:486:21578":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:10397:6707":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:922:8099":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:39886:8454":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"31:6389:4862":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"17:13693:7275":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:1779:3634":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:9660:38507":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:2722:7552":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"20:1213:3012":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"17:13676:7273":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:2772:223":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:21172:10668":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"31:6669:4909":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"21:2593:38578":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"17:9762:38505":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:4462:7597":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"30:3610:39796":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"6:4835:5646":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"10:36:9851":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"29:8181:5885":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:6792:7812":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:2366:2105":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"31:4796:4376":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"1:1931:674":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:13739:7284":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:42948:10053":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"22:929:26687":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"21:2119:1876":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"17:11306:6824":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"29:7021:5754":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:4820:5643":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:7690:3453":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:10616:6734":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"21:2579:26680":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"20:2174:3014":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"31:6578:9734":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:12945:7059":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:2450:7541":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"10:0:2796":{"crate_id":10,"path":["adler"],"kind":"module"},"16:6346:7741":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:7621:22598":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"20:1622:6449":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"31:4957:4419":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"26:102:2617":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"6:6735:5890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6017:22590":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:13040:7071":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"29:728:4606":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"17:8848:22653":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:1924:10494":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"22:1247:6376":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"29:5836:5657":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"31:6640:4905":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"2:12648:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:3285:2942":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"31:6202:27866":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"22:1544:6145":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"17:8825:22652":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:4234:3949":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:3581:3949":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:1471:2330":{"crate_id":2,"path":["core","mem"],"kind":"module"},"6:6720:5885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:434:6526":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10507:6726":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"29:7042:5761":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:14083:7369":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:11817:8402":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:12635:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:11661:6852":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"28:19:3137":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"1:12053:317":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:2012:6532":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:8563:8823":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:47651:8674":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1527:4440":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"18:507:5997":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:10139:22688":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:39992:8463":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"31:5788:4654":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"1:4973:10600":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:40518:8363":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:11337:22782":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:20898:36736":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:6513:7753":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:29961:10537":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:3230:15917":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:5753:3150":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:12074:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:7208:3110":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"29:4905:5471":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:5575:5850":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:6600:22593":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:11389:6836":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"33:74:3168":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"21:1442:26652":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"16:7651:7942":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:30193:3692":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:7360:38499":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:40305:8480":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:6053:9786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:41387:8711":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"22:1281:6054":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"2:43804:8543":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:13024:7069":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:1751:9918":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:12077:15799":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:43204:8519":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"29:5974:5711":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:2834:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:8878:3575":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"31:7126:5011":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"28:182:26711":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"2:9488:2766":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"31:5634:4603":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"2:4422:2936":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"31:6923:4960":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"2:9500:2770":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:7503:7575":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"22:1167:4212":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"20:2552:3009":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"21:2173:4107":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"2:41496:3949":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"29:6813:5731":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:14163:7387":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"31:5521:27861":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"29:4558:17615":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:14448:7484":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:6929:7822":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"18:515:5995":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:43833:8551":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"29:5742:5644":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:40364:8482":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"21:2614:26683":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"0:445:1949":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"16:3915:7593":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:7054:7842":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12598:6992":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:11064:4232":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:4750:5607":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:1011:4134":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:6805:5939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:4008:8343":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:2888:4212":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:45833:8597":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:7581:4225":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"21:2404:6306":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"29:4749:5439":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:8765:22650":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"0:269:132":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"16:5088:7616":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:8397:10604":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:10771:6755":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"23:632:5995":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"11:399:38483":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:13422:7122":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"23:853:26622":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"28:132:26705":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"2:41869:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:2923:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:554:4862":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:43782:15812":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"33:81:3171":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"17:11086:6800":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"29:9297:5984":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"20:1231:6402":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"17:9711:38500":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:2868:7862":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:62:16245":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:7887:3951":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:400:6524":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"31:5275:5662":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"17:10292:6650":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:10628:6737":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:1671:1116":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"30:0:3134":{"crate_id":30,"path":["rustix"],"kind":"module"},"0:442:2153":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"5:3330:4165":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:3565:6543":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:5743:7636":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"29:5298:5555":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:6802:4175":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"14:0:2799":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:10973:8726":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:45478:8578":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:2526:7544":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:40193:8472":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"7:0:1597":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:3989:10542":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:12765:7015":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:41351:35448":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:21275:10526":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:30223:35433":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"5:1288:8109":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"21:2140:26679":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"17:9945:6669":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:30387:35444":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:12012:2972":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:4003:10544":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:7526:5979":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"29:6986:5748":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"22:1292:6113":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"29:7925:5054":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:46230:8609":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:46647:8631":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:9026:6180":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"29:5817:4345":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"30:3192:5099":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"6:6045:5835":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"0:585:1890":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"1:11623:34701":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:12048:961":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4889:9859":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:4053:7594":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:43356:8531":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:42533:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:4348:2933":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:9607:6649":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"30:3872:39798":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"11:644:3950":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:8926:22655":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"21:1748:26647":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"6:4965:5671":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:44324:213":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:4417:7596":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:3257:15842":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:11281:6821":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:7828:7955":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:7872:8753":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:12252:6923":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:22948:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"6:1603:5310":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:13778:7293":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:4422:5461":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"29:5015:5489":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:14269:7430":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:12846:7026":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:853:3950":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:1429:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"5:2970:38410":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:2273:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:10468:6721":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"11:1103:8113":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:6616:5871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"20:2062:6504":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"22:1042:39265":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"31:176:4302":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"6:6031:5830":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:6598:4311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:8488:8818":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"11:0:2797":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"17:14469:7490":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"11:657:3575":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"30:549:26740":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"2:43185:8516":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:11251:3113":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:46457:8628":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:7381:34399":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"29:4846:5461":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:9437:212":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:11845:6870":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"29:7143:5804":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:6017:5828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:7936:3071":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"29:2136:4871":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:6729:5889":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:4265:209":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:12790:7017":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"29:8035:5034":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"11:798:8102":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:10494:6724":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:43384:3060":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:3744:8709":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:2905:15910":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:1986:186":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:5384:22587":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"11:1831:4165":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:4344:7595":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:1911:17615":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:13113:7084":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"31:6632:4904":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"31:5551:4572":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"1:9159:3114":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"20:2590:3018":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"2:21794:36563":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:7884:22600":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:6893:7820":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:21469:6059":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"31:5070:4460":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"21:1945:6320":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"6:4975:5676":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"4:0:2793":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"11:1027:21657":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:474:5230":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"31:6705:9745":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"2:8559:3236":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"29:641:4868":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"12:0:2798":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:41624:3949":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"21:1284:6179":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"2:44375:8569":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:506:4610":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:22237:35437":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:9106:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:10023:6651":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"11:1845:6300":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:3764:7589":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:7526:3183":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:9959:4201":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:12685:7004":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:14100:7373":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:40760:8371":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:1560:6150":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"20:2047:6502":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"6:6680:5067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"14:202:15814":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:562:5025":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:2846:3115":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:11534:8709":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"31:4813:4379":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"2:20881:36734":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:5814:5735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:42202:2769":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:4951:4630":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"28:0:3133":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"29:5513:5600":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:7862:7959":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"31:5805:9708":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"17:12098:6895":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"14:40:6880":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:14420:7475":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:20883:36738":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"20:1802:6475":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"2:39950:8460":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:5455:8725":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:2170:15925":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"22:1596:1921":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"16:4921:7611":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:1983:187":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"29:1781:4440":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"31:4645:4331":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"1:1561:3575":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:2562:3068":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:12073:1163":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"20:1422:4142":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"31:7138:5012":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"31:6590:4893":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"17:14324:7449":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:12876:7045":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"31:5602:4598":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"31:6569:9729":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"2:21904:10526":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:43819:8548":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"21:1766:4110":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"20:2220:3019":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"5:2690:9915":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"29:2052:5354":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:11372:8740":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"29:658:4572":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12225:6914":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"29:8253:5901":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:12671:6759":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"29:5955:5697":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:7342:38497":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"11:1538:8117":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"29:4581:5377":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"11:836:8107":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"30:3845:21616":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"11:844:8108":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:31988:8442":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:13981:7339":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:10646:6739":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"20:1906:6408":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"2:43225:8521":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:43662:8539":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:9033:8836":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:1690:5086":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"22:1568:39264":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"5:3720:3071":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"29:7443:4703":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:12293:6934":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:8181:3056":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:6145:4703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"31:5221:5984":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"17:12810:7020":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:21690:10669":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:10036:6676":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:3600:7588":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:5858:5736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:6433:3154":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:8238:8801":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"20:2437:3025":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"1:8932:10626":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:31977:8441":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"21:2029:128":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"18:564:6005":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:1575:5291":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"22:1388:6129":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"17:11991:6884":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"11:1501:21658":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"31:4651:9642":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"30:4667:39800":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"1:4176:10565":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:8294:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10410:6708":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:44314:207":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:13838:7302":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:3741:8708":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:10370:6705":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:11998:8871":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"29:5321:5564":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:10988:31836":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:22310:8435":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:21072:10662":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"6:500:4627":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:40315:8481":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:14522:7499":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:44172:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:7608:4318":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:40122:8467":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:2933:21728":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:7444:3184":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:2872:2919":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:12050:1567":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:822:4140":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:11757:8399":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"31:5896:4675":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:0:841":{"crate_id":6,"path":["libc"],"kind":"module"},"5:3212:6299":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:4527:7599":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7768:7568":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:8205:22601":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:22651:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:9350:6523":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"28:47:26696":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"2:41487:3574":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:41791:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:7860:8751":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"6:5899:5754":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"29:7002:5749":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"31:4733:4350":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"0:33:1874":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"1:10551:2646":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:7287:4631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:4059:10549":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:5509:8726":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:12280:6933":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:4002:4151":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:13989:7340":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:5017:5692":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:2960:38412":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:10227:6695":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:2832:7557":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8312:8801":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"29:4927:5474":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"31:4843:27858":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"28:127:26704":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"23:648:6000":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:3188:10100":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:2141:8190":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"20:1754:2933":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"31:5094:4470":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"31:5964:4718":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"29:1726:4419":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"31:4966:4422":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"2:9697:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:13710:7276":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"29:1687:4607":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:2986:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"23:691:5997":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"20:2444:3026":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"6:4919:9880":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:12853:4206":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"29:5650:5629":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:11742:6860":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"11:119:4122":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:1473:8101":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:39928:8458":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"26:164:122":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"31:7204:5022":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"23:81:26612":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"31:5754:9692":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"21:1885:26641":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"1:11493:8708":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:11586:6849":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:42066:3149":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:21335:10526":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"31:4467:4303":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"2:3322:2944":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:7284:3234":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"21:2553:6200":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"6:4940:9895":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"33:79:3170":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"2:42933:8513":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"21:2323:6356":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"16:4949:7612":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:11630:8743":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"31:4615:9634":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"20:2277:3016":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"29:4675:5414":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6485:7564":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:1568:4165":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"31:5983:9722":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"6:5776:4678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"31:5990:27862":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"17:10430:6710":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"5:5619:4163":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:11330:8864":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:6877:5969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:39958:8342":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:6195:10050":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:44417:3108":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:6687:7786":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:40018:8464":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:14478:7492":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:2548:7545":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"21:1184:6217":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"2:2935:15914":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:4558:5523":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:21467:10664":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"31:6081:27864":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"2:3406:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:8181:7582":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:22750:180":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"29:7345:5848":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:13758:7285":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:4589:5547":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"33:43:3166":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"17:10112:6681":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:4430:5463":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:2540:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"29:8420:5961":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:4641:7603":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"6:5076:9779":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:10605:8392":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:6153:4206":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:2305:21727":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"29:809:16295":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:41674:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"29:5633:5626":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:10088:3643":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:2614:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:3939:10540":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:22220:8423":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"29:4731:5437":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:6024:5829":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:41640:3575":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"22:1651:6166":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"1:3679:10536":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:11000:6792":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:6900:247":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:1138:38032":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"29:5875:5666":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"22:1668:6171":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"0:0:2174":{"crate_id":0,"path":["env_logger"],"kind":"module"},"0:70:689":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"6:1513:4422":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"33:161:2641":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"2:45740:8589":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:8574:8824":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:22684:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"5:2170:9014":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"21:1535:6276":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"17:14335:7454":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:5746:4679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12543:6983":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"21:1057:6193":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"6:6627:5876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"11:723:8100":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:2359:7537":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:6401:7563":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"31:4628:9638":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"1:3348:2678":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:23395:222":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:6651:4134":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:7895:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:6582:5054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"20:1693:38520":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"6:6829:5949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"20:1289:3017":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"2:2921:7868":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:7514:5977":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"20:2005:6498":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"29:6847:5735":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:11637:8743":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:2618:7548":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:534:3448":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:22324:8436":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:5435:7620":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:5082:9782":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"20:1380:6315":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"2:12722:8411":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:6714:5883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"20:1991:6493":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"11:1611:4128":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:9752:6652":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:45532:8580":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:505:3443":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:11307:4234":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:39134:200":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"5:5982:16219":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"29:9246:5675":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:41331:6179":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:7573:9794":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:1411:3949":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10340:6703":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12698:7005":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:1094:6088":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"6:4994:5684":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"23:699:3529":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"18:531:6000":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"21:2360:6357":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"30:3571:39804":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"20:1914:6489":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"2:2841:2918":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:7462:7925":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"29:5433:5584":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:1426:3950":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"0:437:2071":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"16:2504:7543":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"23:0:2803":{"crate_id":23,"path":["memchr"],"kind":"module"},"1:2368:10513":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:9886:6662":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"31:5079:4466":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"0:14:1872":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"17:10447:6715":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"31:6980:4973":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"2:43502:3020":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"31:4635:9639":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"20:2169:3022":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"1:897:4151":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"28:137:26706":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"17:9172:6516":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"21:1107:6196":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"29:1913:5303":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:7928:3069":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"31:4753:4357":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"1:4392:8714":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:3178:6300":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:11393:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:12060:663":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"32:0:3136":{"crate_id":32,"path":["bitflags"],"kind":"module"},"2:45602:8583":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:6929:35268":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:8281:8015":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:12043:6887":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:4343:5414":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:6086:3040":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:2779:3179":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"21:1919:6319":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"2:47864:8687":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:6304:208":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"5:4393:3040":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:3171:3949":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:6037:5833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:12830:7021":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:43652:3057":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:9912:6663":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:364:3461":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"9:237:6104":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:3224:3075":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"13:0:2792":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:3315:7586":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"21:2186:128":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"29:712:5247":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"2:3069:10481":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"20:1889:6481":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"1:4646:5048":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:12061:767":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:39914:8457":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:4338:2932":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:46101:8606":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"31:7157:9771":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"14:160:8092":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:4508:5499":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:7281:9792":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:2696:7551":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:11555:8710":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:1673:5360":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"21:1416:26644":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"31:6711:9747":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"26:209:39298":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"23:114:26614":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"20:1998:6495":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"2:12052:6175":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:8465:6104":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:1273:8110":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:5976:5804":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:10534:6728":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:9207:6517":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"30:4724:39794":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"18:660:6018":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:40742:4190":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:3419:3040":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:9102:6514":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:416:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:9650:6650":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"11:749:4151":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:2644:7549":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11710:6824":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"30:4809:39801":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"1:2921:212":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"29:5945:5692":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:5988:5811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:541:4868":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:11535:6845":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:3529:3053":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"31:7097:5005":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"6:4826:5644":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:14056:7362":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:8996:3447":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:11327:6827":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:11173:22781":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:1681:5361":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"15:394:21692":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:6721:22594":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:14090:7370":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"18:636:6017":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:12513:6980":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:532:5241":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"21:1958:26646":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"2:46907:8635":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:43566:8537":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:13914:7324":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:12074:6891":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:6602:3163":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"31:6373:4861":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"2:2900:15909":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:12278:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"5:7571:4169":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:4759:689":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:10588:6732":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"20:2040:6501":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"31:5041:4445":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"20:2096:3023":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"1:3095:1097":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"31:5307:9686":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"1:4712:10568":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:3251:15843":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"23:769:5997":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:2939:15915":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:22023:8415":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"29:9240:5674":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:45388:8574":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"20:1398:6408":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"17:12422:6961":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:11070:4233":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:4618:5554":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:44367:8567":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:10136:10526":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"29:7203:5817":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:10420:6593":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:41285:8377":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"31:4742:4352":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"17:10097:6680":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"20:2211:3010":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"2:40222:1874":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:47903:8688":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:13215:7103":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:42438:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:21460:10526":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:6200:2510":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:22076:8416":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"29:5668:5632":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:5905:7654":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:40292:8356":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:2832:3537":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"21:2367:6187":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"6:6003:5817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:8557:3949":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:4924:10594":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"11:630:3949":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"21:1167:6213":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"1:646:10463":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"21:1402:4108":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"20:2543:3020":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"6:7584:9798":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"20:2466:6510":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"31:6749:27869":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"16:4774:7606":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"11:2180:9846":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:39276:8450":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:5121:7617":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:4805:36819":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:1649:5343":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"29:5993:9782":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:2598:3061":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:3975:10541":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"30:466:26738":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"24:326:2969":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"24:241:2967":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"22:1127:6085":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"2:39222:205":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:9070:6636":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"18:671:6024":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:31981:7905":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:8202:3058":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:4608:5548":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:7920:8756":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:5838:5079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:5648:7626":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"29:5987:9779":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:10463:8388":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"31:7298:5067":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"6:4465:5477":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:40065:8466":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:39244:2982":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"21:2560:128":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"2:45787:8590":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:2966:38409":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"31:4528:4308":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"22:1514:6141":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"1:943:8105":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46411:8627":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"11:817:8105":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"9:0:2795":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:2284:21701":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:5798:7639":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:47762:8681":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:22161:6472":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:2543:241":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"18:614:38510":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:14033:7354":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:41422:8379":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:10822:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"30:4685:39795":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"5:3183:38436":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:4051:10547":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:12086:6892":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:2254:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"21:254:38577":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"17:9455:38504":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"31:5314:9687":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"17:12024:6886":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:10536:8390":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:13202:7102":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"30:4828:39803":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"2:22303:10051":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:14013:7347":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"31:4588:4327":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"29:5922:5684":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"31:4771:4365":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"1:10800:8856":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:9242:6518":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:43368:8398":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"31:5843:4668":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"2:3649:3575":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"30:3908:39790":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"30:457:107":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"1:8286:8711":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"20:949:6402":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"2:2880:15907":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"20:2054:6503":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"2:43997:8559":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:1464:8100":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:30785:3529":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"5:7422:35420":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"29:8458:5969":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:2326:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:8244:8803":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"31:4827:9651":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"17:9998:6629":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:2931:15913":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:4320:8713":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:42718:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:6915:7572":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:8225:3019":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"21:1871:4113":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"5:1102:38031":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"29:1762:5263":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"23:731:38510":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"29:556:4627":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"1:4047:10546":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:9745:3905":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"22:971:6513":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"31:6717:9749":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"17:12750:7012":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:11448:22660":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"16:5049:7615":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:9111:220":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"31:5282:4506":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"2:21441:10655":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"31:5626:4602":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"18:719:6034":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:5137:193":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"18:624:38512":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:45685:8586":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"31:5104:27859":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"16:7534:7576":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:9208:9991":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"6:5845:4851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:39871:8342":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:10685:6746":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:10109:8842":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"6:4306:5386":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:43987:8555":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:4370:4605":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:4168:10564":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"22:1604:6157":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"2:1825:2945":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:3204:6301":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:2888:15908":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"29:9234:5673":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"28:183:4103":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"1:9198:32079":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"21:2489:26643":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"16:7523:7936":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"20:2459:3013":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"29:5685:5635":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:30187:3691":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"11:760:4165":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:13162:7097":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"29:806:16294":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"16:2766:7554":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"20:2559:3021":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"16:5673:7566":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:8304:8805":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:2893:7863":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:14042:7355":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"21:1779:26645":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"1:11357:8739":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:14536:7502":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:579:5249":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"31:7318:5068":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"1:3513:31771":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:12068:1549":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:4124:2946":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:11367:6831":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:43125:8514":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:4856:4345":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:43962:8554":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"29:8134:5878":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:3264:2644":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:47443:8670":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:10214:6694":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:5249:192":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:9921:6665":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"21:1504:6272":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"30:2712:5093":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"1:3115:3084":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"6:4438:5466":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"20:213:38533":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"16:7102:22596":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"20:1725:6470":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"17:11971:6883":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:12697:194":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"29:6936:5736":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"22:1147:6094":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"6:1638:5335":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:2999:2943":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"31:6932:27871":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"22:1536:6144":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"6:6784:5926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:12047:379":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"29:7265:5830":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:4458:5474":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:6169:4219":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:7520:5978":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:14145:7384":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"0:446:1947":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"17:10962:6790":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:12890:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:11162:6806":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"20:1452:38524":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"17:14401:7471":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"21:1850:26643":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"16:7582:7938":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:45432:8576":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:22274:35431":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:14156:7385":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:13723:7281":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:8884:8728":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:676:234":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:10318:3950":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"29:8377:5949":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:0:508":{"crate_id":2,"path":["core"],"kind":"module"},"20:1512:6408":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"31:6310:4836":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"31:5269:9681":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"17:12496:6977":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:43286:8525":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:45663:8585":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:22197:35441":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:11719:22663":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"31:7214:5263":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"1:12020:10468":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:1520:5263":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:10146:225":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:41713:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:3017:3182":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:1503:8099":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:1302:8114":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:9438:2531":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:9328:3060":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"29:6721:4679":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"29:4788:5445":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:11316:6826":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"5:2962:9914":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"31:6473:4880":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"6:5891:5749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"30:4968:5222":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"0:36:1921":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"17:10672:6744":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"31:5880:5371":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"2:44405:8572":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"30:4867:5221":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"17:9564:6648":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:0:1440":{"crate_id":1,"path":["std"],"kind":"module"},"2:3014:1993":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:7568:7578":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"23:741:38512":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:46569:8630":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:727:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"31:6343:4851":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"11:695:8099":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"29:8402:5958":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"22:998:6067":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"17:12645:6997":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"30:4212:5187":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"2:3010:3181":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"29:5903:5676":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:7308:3575":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:47811:8684":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:6318:7739":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:261:4134":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"20:1732:6471":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"22:1457:6450":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"22:1107:6065":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"17:13851:7308":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:12066:6030":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:0:291":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:5632:208":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:46077:8605":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:7931:35415":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"16:5017:7614":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:42468:6322":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:20900:36739":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:11124:6803":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"31:6452:4879":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"31:5586:4592":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"1:7645:3462":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:21034:10526":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"5:4363:4158":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"11:1121:8114":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"20:2449:3027":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"2:45562:8581":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"31:4599:4328":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"31:5851:4671":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"5:1492:8098":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"33:396:3178":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"17:9372:6638":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"28:67:26692":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"2:46757:8634":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:41504:3950":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:21782:8413":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"21:1115:6200":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"20:2609:6404":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"2:2160:605":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:43176:8515":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"23:816:6028":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12267:6929":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:45703:8587":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"31:5946:4703":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"20:1628:128":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"14:215:8095":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:3888:7592":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12621:6996":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:47567:8672":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:4931:9889":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"22:1201:3072":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"29:573:4610":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"17:14221:7429":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"21:2311:6288":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"29:2005:5335":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:12983:7064":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:8050:7995":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:4500:10569":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:1075:6529":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:7739:3959":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"20:2229:3020":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"30:438:2933":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"29:1802:5267":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:44133:10058":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"21:2160:6341":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"29:5136:5519":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:5027:5697":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:3655:6556":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"20:2202:3015":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"29:8890:9792":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"20:987:3017":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"17:12724:7008":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"31:6614:4898":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"16:2788:7555":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"31:5580:4589":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"5:276:1995":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:622:8695":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"23:807:6027":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"21:1467:26653":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"23:681:6005":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:47716:8677":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:12945:3109":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:47788:8683":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:9852:22670":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"11:1852:6301":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"9:450:21579":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:2384:10518":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"31:6623:4900":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"6:4706:5588":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:3830:7591":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"22:1310:6116":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"2:10577:3020":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:2881:7559":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:8557:3104":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:43925:8407":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"28:42:26699":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"13:226:8989":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"33:339:2680":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"16:4745:7605":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:30153:3102":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:9823:22669":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"21:1932:4107":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"17:9959:6670":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:46487:8629":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"31:5020:4436":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"18:582:3529":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"20:1468:6426":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"2:45863:8598":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"30:4450:5192":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"2:39985:8462":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:13259:7110":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:6814:5942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:6279:7737":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:6879:7818":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"29:6830:5734":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:11868:8386":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:13802:7297":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:43602:3015":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"21:2240:26665":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"1:12066:1551":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:7597:38493":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:536:7517":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"21:2510:6361":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"17:14068:7365":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5827:5074":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"23:753:6017":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:45933:8600":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:43898:8553":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"31:7338:5069":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"2:9481:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:10440:6712":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"29:8105:5067":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:595:5259":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:40202:8473":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:878:4142":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:7782:7947":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"5:105:291":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"6:526:5238":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"31:7387:5086":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"31:7167:9772":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"31:4575:4323":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"1:9081:9022":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:31941:9848":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"5:2223:37937":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"29:4945:5477":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:4783:5626":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:8558:3103":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"29:4605:5386":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"29:6911:4851":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:8169:3055":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:11473:6612":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"20:2144:3022":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"1:955:8108":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:42701:8506":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"20:2432:3024":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"1:10545:3075":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:43672:8540":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:39877:8453":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"20:2363:3027":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"21:2436:26641":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"6:1506:4419":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13685:7274":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:13487:7173":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:10591:3453":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"29:5555:5607":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"21:2455:4112":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"16:7708:7580":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"20:1661:6454":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"30:4790:5214":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"2:22185:8421":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:3305:3074":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:7492:7932":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:8854:8828":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:8713:22649":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"29:7120:5799":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:5639:4220":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"29:5054:5499":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"29:5094:5509":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"29:7322:9786":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"29:8896:4631":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:8072:7996":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:4652:5565":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:11195:9021":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:2382:10517":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"33:358:2553":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"22:1157:6095":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"17:10561:6730":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"16:2744:7553":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"18:727:6037":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:3240:237":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"31:5888:9720":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"31:5674:4610":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"31:4510:4305":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"2:11612:2585":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:7398:15897":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:9060:31837":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:7279:200":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:2428:7540":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:4545:5519":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:7718:10466":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:6812:4176":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:43296:8526":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"22:1315:26686":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"16:6041:22591":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:4634:10544":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:22:702":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:3945:10539":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"22:1630:6063":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"17:2178:6536":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:45979:8601":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"29:9158:5977":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:2339:7531":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"5:6499:4134":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"21:1188:1876":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"6:4491:5489":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:11226:6817":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:5390:5142":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:42209:2768":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"29:7476:5853":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:5574:7562":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:8167:8006":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:8814:188":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:9137:6515":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:22849:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"31:5860:9714":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"0:571:2013":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"14:187:21670":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:8115:7999":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:6572:3575":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:7090:7847":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:6332:7561":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:4628:5555":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:2472:7542":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"7:79:21572":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:1067:8110":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:42484:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"21:1549:26649":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"2:30209:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"24:219:1867":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"29:7166:5811":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"22:1581:6152":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"17:11098:6801":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"0:341:1882":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"1:11405:10068":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:9488:8751":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:21436:10526":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"16:5982:7667":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:4498:5492":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"21:1322:6253":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"2:47773:8682":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:39118:202":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"29:695:5025":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"17:9390:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:4812:5639":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"30:4745:39799":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"1:12063:765":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:7733:10467":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:1500:4416":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:41649:185":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:4985:3040":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"16:4719:7604":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:44149:10062":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:6261:7735":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:7736:7945":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:47365:8669":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"22:1489:6137":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"16:5866:7652":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:39938:8459":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:11074:6799":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"29:745:5249":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"30:5074:5223":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"},"30:4338:39792":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"16:5830:7645":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"20:1574:6355":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"29:5117:5514":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4485:5487":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"21:1802:4112":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"24:277:1870":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"5:7391:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:6607:4317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:42456:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:12054:1418":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:2243:9015":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:3191:10101":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:488:4604":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:4330:5404":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:9121:3113":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"29:522:4604":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"6:1557:5282":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:7489:8211":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"30:2853:5094":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"22:1211:6044":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"5:3217:38437":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:2150:22716":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:7882:8754":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"25:0:2794":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"2:40711:8366":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:30281:35449":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:6968:22595":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:21036:10660":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:4751:10557":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:4986:7613":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:40504:8362":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"16:7391:22597":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:7451:8210":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:7722:7570":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:9790:38501":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:7694:7579":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:5939:7514":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:1737:15936":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:4648:5050":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:41436:183":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:11111:6802":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"31:5263:5597":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"1:12031:31823":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:21291:10654":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"16:3461:7587":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"22:1359:6030":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"1:5578:10622":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:10929:6788":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"16:4497:7598":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:11244:6850":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:6753:5901":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"31:5904:4678":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"17:13966:7337":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:7595:9907":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:6352:7742":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"9:393:21580":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:12670:36879":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"30:356:9427":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"17:10383:6706":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:13244:7106":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:11934:6880":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:10316:6702":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:14134:7380":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"26:157:3127":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"1:8212:3059":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:43620:8538":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:1696:4321":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:1495:4414":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"18:681:6025":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:41988:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:8978:22657":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:504:6527":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:12071:812":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"22:1304:6115":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"2:49709:10671":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"29:9104:4858":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"29:5077:5506":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:7237:4151":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"30:3475:5102":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"16:6456:7751":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:14001:7346":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:7530:6528":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:6901:7571":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4796:5632":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:2851:7861":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:13085:7078":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"20:1405:38526":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"6:5046:5711":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:40718:3154":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:10265:6697":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:43416:8389":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"31:4558:4318":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"22:1528:6143":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"5:1514:200":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:42693:3907":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"5:1118:38408":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"21:1720:6296":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"17:13876:7316":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13949:7330":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"20:2581:3015":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"20:1473:6427":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"31:7356:5074":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"3:234:212":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:12911:7056":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:13010:7066":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:5322:7618":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:7890:3952":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:40240:8475":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:6083:21700":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:2876:3116":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"29:7282:5833":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:5424:8723":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"8:0:2794":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:1517:8116":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:47841:8686":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:41521:3234":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:1579:6300":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:41245:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:5060:5672":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:5994:208":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"15:0:2800":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:7474:7926":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:20840:3529":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:12072:15800":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"31:4660:9645":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"26:0:1676":{"crate_id":26,"path":["humantime"],"kind":"module"},"16:7660:7943":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"29:8924:5976":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:2574:7546":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:12842:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:4644:5046":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"30:2624:5091":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"5:5961:3094":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:13890:7319":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:4552:5521":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:43681:8541":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"29:486:5230":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"1:10960:3654":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:9498:2771":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"22:1368:39267":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"5:4032:4134":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:7532:9905":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:40162:8470":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:8011:8758":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"29:8329:5939":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"31:5773:9700":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"2:9492:2769":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:46723:8633":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"29:7425:5852":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:21337:10656":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:44125:10056":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:913:8115":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:8953:22656":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:10107:1890":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:9521:6647":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:3594:3950":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"29:5763:5646":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:43306:8527":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:8594:22637":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"20:307:6378":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"6:4376:5437":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:4831:818":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:14024:7351":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"11:2201:2988":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:7618:5984":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"29:4627:5394":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"11:403:38480":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"22:1586:6000":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"5:4074:3950":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"31:6054:27863":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"22:1552:6149":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"30:3797:26752":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"29:2093:5361":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"30:5209:5228":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"1:5787:3152":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:3051:15784":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"31:0:3135":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"1:8415:8815":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:3303:2646":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"29:7906:4642":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"30:2838:5089":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"31:4949:4416":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"1:2499:3067":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:14499:7495":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"29:4979:5482":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"29:8203:5889":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"15:288:21682":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"11:1858:6176":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"21:1389:4115":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"17:11235:6818":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:42027:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:12465:6971":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"11:1068:8112":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"29:5277:5554":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13792:7296":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"24:290:2968":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"9:357:21594":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"11:2060:8110":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:6425:7749":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:44030:8408":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:11611:8865":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:2321:190":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"28:147:26708":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"16:5696:22588":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"31:5666:4607":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"28:28:26693":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"11:2033:7848":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:261:6522":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:7316:3575":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:13286:7113":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"31:7369:5079":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"2:40704:8365":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"11:311:10047":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:2576:4196":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:6583:7764":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:4680:5083":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"18:599:38509":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:9003:22658":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:10478:6722":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"29:5857:5662":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:22915:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"31:7106:5007":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"29:9176:5978":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13632:7269":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"26:230:3132":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"17:14460:7486":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"23:836:6034":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:5492:3040":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"29:5611:5618":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"29:6783:5718":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:2216:8706":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:8895:22654":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"31:5865:9715":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"11:2174:9845":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:7137:34280":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:6960:7825":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"22:1698:3014":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"29:4828:5457":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:1564:4151":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"18:755:6042":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:3073:10482":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:5760:3151":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:45454:8577":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:8232:3057":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:12658:7000":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:22783:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"18:481:5996":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"29:1929:5305":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:6881:15900":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:4274:2925":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:44153:9021":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"31:5712:4631":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"17:13897:7321":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:12072:1607":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:6792:3583":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"31:5781:9705":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"6:7549:5673":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:4155:2947":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:8342:5034":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"21:2385:6354":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"17:10949:6789":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:2547:240":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:40752:8369":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"30:5305:5229":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"20:2012:6423":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"2:2357:184":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:20868:36565":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:4864:5657":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"27:0:2175":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"1:8006:8757":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:5403:6636":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:4293:5377":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"22:1637:6163":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"16:3797:7590":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"29:505:5235":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:11833:4240":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"22:1195:128":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"1:7600:4227":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"0:439:2138":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"1:871:8100":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"29:676:4862":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"29:5938:5689":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:1536:5267":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:2789:231":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"23:872:6042":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:1840:3649":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:40032:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"31:6431:4874":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"17:10126:6683":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"33:409:3177":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"17:12554:6984":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:5995:7519":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"21:1156:26662":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"31:6597:4895":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"17:13973:7338":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"31:4942:4414":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"5:7257:37935":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:6944:4177":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"31:4782:4369":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"1:10334:8725":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"29:5572:5609":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"31:6298:9724":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"20:1671:38528":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"29:480:16245":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"1:7744:8748":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:4986:5682":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"11:1012:8110":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:6545:7762":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"29:621:5241":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"21:1518:26648":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"23:546:5996":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:6376:22592":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:2214:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:10787:8752":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:5588:7565":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:8986:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"31:4996:9653":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"2:45885:8599":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:2172:15926":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"16:7613:7941":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:11191:6544":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:43251:8468":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"31:7278:5054":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"21:1335:26639":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"31:6737:9765":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"28:152:26709":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"29:5033:5492":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"29:0:841":{"crate_id":29,"path":["libc"],"kind":"module"},"1:9481:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:2666:8218":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:9288:3649":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"5:7247:4145":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:11617:6850":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"31:4674:27857":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"29:6871:5074":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"20:1938:4118":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"20:1582:6444":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"18:96:26613":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:3735:8189":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"22:1521:6142":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"6:5070:9777":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:6549:3159":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:39103:8446":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"29:5725:5643":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:1557:3949":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:918:8098":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:9972:6671":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:7210:2922":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:4537:5514":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:12711:7007":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:11187:31832":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"29:1845:5282":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:47613:8673":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:2784:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:39283:8451":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:6189:8357":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"16:7792:22599":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:1044:7848":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"31:7117:5010":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"30:4114:39793":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"1:7771:8441":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:6980:15892":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:2927:15912":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:4138:34283":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:3515:4151":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:47826:8685":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"29:1869:5290":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"29:4865:5463":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:12196:6905":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13055:7075":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:4874:5662":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"31:6950:4964":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"2:4:1040":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:3846:8710":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:932:10470":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"26:99:2618":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"2:22145:9016":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"31:5748:5247":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"1:10443:8825":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"18:491:6513":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:44010:8563":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:45722:8588":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"29:7502:5864":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10240:6669":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:6546:3158":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"29:5496:5597":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:12136:6899":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:4830:10554":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:4753:10558":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:47505:8671":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:11815:6866":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:4557:7600":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:587:5254":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"29:8070:5877":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"22:1429:6054":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"31:5292:4508":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"31:5658:4606":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"5:2049:8189":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:21128:10667":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"29:5981:9777":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"31:5610:4600":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"33:0:2176":{"crate_id":33,"path":["termcolor"],"kind":"module"},"2:22336:10538":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:1076:8114":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:3232:7528":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"9:177:9005":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:43214:8520":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:5963:7660":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:653:4607":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:4020:8344":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:5053:9900":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:40354:8360":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:4897:9864":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:547:4572":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:1184:6531":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:43976:15813":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:1548:3040":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:7436:7671":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"29:4651:5404":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"22:1611:6158":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"2:40112:4184":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"29:8221:5890":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:10084:6679":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:8666:6053":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:1672:4134":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:13667:7270":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:4269:2924":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:3504:2531":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:9168:35414":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"21:1144:26661":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"31:5739:4647":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"2:44193:3119":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:5872:5747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:7555:4165":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:7567:9906":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:1717:5370":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:7431:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:43520:8391":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:10167:8843":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:12305:6937":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:43342:8528":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"11:805:10470":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"29:2074:5360":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:4471:5479":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"29:5594:5615":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"31:6785:27870":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"16:149:4119":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"5:2035:3071":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"29:2151:5370":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:14355:7457":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"29:7246:5829":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:32002:8443":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:10591:8391":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:6569:7569":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"22:1271:1921":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"2:46253:8610":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:8659:22635":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"21:2469:26642":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"1:884:8101":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"29:5883:5671":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:12055:1448":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:11295:6822":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:9086:6637":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:840:3949":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:7006:7836":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:482:5235":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"18:538:6003":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"31:6686:9738":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"29:7953:4311":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:1760:8214":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:11761:6863":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:6616:3164":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:40727:8367":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:22585:179":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:8249:10534":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:10714:6750":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"22:1023:6073":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"6:4448:5471":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:2394:10523":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:5060:8721":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:2862:15905":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:9927:4195":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"23:824:6030":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:12208:6906":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:9780:6653":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"18:644:5997":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"9:426:21581":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"31:4988:4430":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"29:5412:5577":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:3936:3040":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:6189:7703":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"21:2277:4108":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"16:8097:7998":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"22:1683:6173":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"30:3670:39797":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"21:1905:6317":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"22:1342:39268":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"29:7185:5816":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"28:56:26697":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"2:41564:3672":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:3245:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"21:1588:6288":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"29:2027:5343":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"29:5154:5521":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:3049:21730":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:10750:6753":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:4731:5600":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:5760:22589":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:10916:6787":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:7269:38498":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:47707:8676":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:2209:6539":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:45408:8575":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:7500:8212":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"31:6399:4867":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"2:21219:15925":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:6650:219":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"28:142:26707":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"1:8840:8827":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"21:2294:4111":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"22:1225:6104":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"2:47727:8678":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:11232:9433":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:5610:8350":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:3522:3051":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:4756:5609":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:11687:22662":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"23:707:6006":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:7375:2989":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:4846:206":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"33:173:2510":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"17:11272:6820":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:3232:6540":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"31:6542:27868":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"17:13071:7076":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:5964:5799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"29:1822:5273":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:2856:7858":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"20:2351:3025":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"2:42188:2767":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:2829:3180":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:43548:8536":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:46333:8611":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"20:2534:3019":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"21:2087:6181":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"31:5814:4658":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:2826:3535":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"20:2572:3010":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"0:576:2022":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"0:438:2081":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"17:582:6528":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"31:7076:27873":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"21:1706:6295":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"17:13611:7264":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:0:2802":{"crate_id":17,"path":["object"],"kind":"module"},"1:8298:10567":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:949:8107":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:4915:10593":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"33:201:3174":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"22:1437:6059":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"2:21084:36406":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:9494:2768":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:5930:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:907:4165":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"23:788:6024":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"22:1495:6138":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"17:11151:6805":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:7464:3100":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:5776:235":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:12015:6408":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:1922:8217":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:4640:5564":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:9038:8837":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"22:1052:6082":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"21:1623:26651":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"17:11201:6808":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:1663:5354":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:5802:5731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:5846:4151":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:4317:5394":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:39158:201":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:20853:36565":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:6415:7748":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:11407:22659":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:41752:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:8981:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:14118:7377":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:2794:2940":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:10259:9432":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:11175:8827":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"30:4359:5191":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"1:558:3450":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:13298:7120":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:13451:7142":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:10832:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:638:8696":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:10637:6738":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:12007:6885":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"20:1790:6474":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"31:6585:9736":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"18:652:5997":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:4164:3040":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"6:4687:5577":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:10366:6704":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"31:7235:5034":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"2:42493:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:10661:6743":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"21:2099:4108":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"2:11104:8394":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"21:1131:6208":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"21:1733:6298":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"0:599:1921":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"2:9740:3904":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:12059:661":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:11215:6813":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:1257:7848":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"5:207:4132":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"29:6893:5079":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:2596:7547":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:10012:6650":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:5832:3161":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"31:6649:4906":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"31:4519:4307":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"1:10486:4229":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"11:793:8115":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:10860:31845":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:1764:628":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:44388:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"31:5618:4601":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"17:10698:6748":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:10777:10064":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"30:479:9430":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"30:3821:26753":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"17:12373:6939":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:4449:2937":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"30:3293:5100":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"22:1137:6093":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"21:2569:6366":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"2:44205:16022":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:12184:6904":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"21:1817:6309":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"1:4240:8712":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"31:7261:5053":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"6:4789:5629":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"20:2197:2488":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"22:1261:6109":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"17:11872:6877":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"0:574:2019":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"1:5091:8721":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:7304:5976":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:8134:8002":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"22:1378:6018":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"20:1842:38521":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"2:7582:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"28:69:26691":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"1:1842:3650":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:6453:4151":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12473:6973":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"23:777:6018":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:11387:8742":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"29:5783:5652":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:9140:2614":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"29:5369:5576":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"31:6108:27865":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"16:5419:6637":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4742:4445":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:12484:6976":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:12123:6898":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:2534:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:7067:7845":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:8239:7905":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:43690:8404":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:22816:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:3270:35412":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"21:1194:128":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"11:1048:38478":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:7894:15896":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"31:7148:5014":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"11:2186:38479":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:3226:3076":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:4585:7601":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"21:1208:3072":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"2:39999:15860":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:4697:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:42511:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:5325:4134":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"29:8163:5883":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:358:3460":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:4570:5532":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"21:2649:6192":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"6:4802:5635":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:5404:3040":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"6:5010:5689":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"30:2529:5090":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"19:0:1058":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"7:32:21565":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"11:332:4124":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:4709:10595":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"29:1693:4414":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4850:5654":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:44430:8573":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"5:7225:8203":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:667:8098":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:9984:8494":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"14:31:8092":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"22:1237:6107":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"2:40212:8474":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:9944:4196":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"5:2131:3443":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"11:2168:4113":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"31:7227:5028":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"1:2219:3914":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"22:923:10526":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"6:5996:5816":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:5929:5777":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:41830:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"31:4501:4301":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"16:7128:8839":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"13:110:38484":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:9985:6673":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:1781:3635":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"33:76:3169":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"1:8826:8826":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:9176:3463":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:4197:2923":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:40340:6015":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"21:1081:26660":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"29:5800:5654":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:4415:5457":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:9445:6646":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:568:5247":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"23:624:5997":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"20:2255:3021":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"17:11951:6882":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"29:1948:5310":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:40324:8358":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"14:221:8096":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"22:985:6018":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"17:14296:7442":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:10548:2644":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"30:4144:5183":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"29:8295:5926":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"21:2115:6217":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"20:2487:3010":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"29:6763:4678":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:10165:22689":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:13567:7234":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:2915:7867":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"29:4805:5448":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6204:7705":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:10498:8389":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:11214:2614":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"29:2113:5086":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:4749:10555":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:13174:7098":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:6201:8733":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"21:2132:6337":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"22:1413:6122":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"5:3800:4165":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"22:1406:6053":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"17:9051:22636":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:10842:3055":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"21:1654:26654":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"2:39966:8461":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"31:5002:9656":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"17:14308:7445":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:11910:6879":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:5784:5718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"30:4706:39802":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"2:43277:8524":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:14346:7455":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"20:1780:6473":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"1:11053:4231":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"31:4713:4340":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"31:6138:4756":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"20:1561:6104":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"1:12065:762":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"26:100:2616":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"22:1449:6121":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"1:1590:6176":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:5886:5748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:12997:7065":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:4160:10563":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"22:1677:6172":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"15:327:8986":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"20:1417:6415":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"2:39178:204":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"21:1998:26663":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"1:8338:8808":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:6844:7814":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:12067:1548":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:40142:8468":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:9896:22671":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:43715:8460":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"31:7219:5025":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"23:556:6513":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"1:6902:4223":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"16:7554:7577":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:9496:196":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"11:2130:21652":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:46009:8602":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:11788:6864":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"21:2125:6335":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"5:1523:8188":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:6364:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:44129:10057":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:13554:7228":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"21:1974:6322":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"23:726:6011":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"29:5344:5565":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"11:2049:8109":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:4946:9898":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"22:1351:1921":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"20:2346:3024":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"1:5317:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:4393:2934":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:11324:8737":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:40263:8351":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"30:498:9428":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"2:10425:8387":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:9488:38502":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:2782:229":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:9861:4192":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"21:2665:6373":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"5:7408:8205":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"31:5696:4627":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"17:14126:7379":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"0:340:1879":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"17:11358:22783":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:2321:7529":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:7669:3454":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:9701:6651":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"23:883:26623":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"31:5245:5238":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"2:40049:35420":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:11794:8401":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"29:9212:5980":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:7363:2988":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:46199:8608":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:43194:8518":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:2910:15911":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:8794:22651":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:12237:6917":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:35:4130":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:1533:6438":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"1:11470:4236":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:7561:5675":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"31:6560:9727":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"31:6043:4737":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"31:5085:4468":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"17:12062:6888":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:43374:8532":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:12531:6981":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:8149:3081":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:12056:1532":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"11:1826:4151":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"24:352:1871":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"17:14110:7376":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:14514:7496":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:6139:5852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:6076:5848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"30:3379:5101":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"17:10186:6689":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:8219:3060":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:22882:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"29:5914:5682":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:5909:5761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:41410:8378":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:6086:5837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"29:2130:4321":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:1482:8115":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:5712:7632":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"26:101:2615":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"1:11006:8828":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:9173:9019":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"31:5251:9672":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"2:43697:8461":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:10294:3949":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:4520:5506":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:12064:766":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:641:8698":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"30:3086:5098":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"1:483:4208":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:42740:8511":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:6818:7813":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:2944:15916":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:43850:8552":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"18:699:6028":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:14434:7477":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"18:574:5997":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:39200:203":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:11399:10067":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"30:3778:5158":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"1:5440:8724":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:7855:1869":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:2537:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"29:604:5238":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"18:766:26623":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:22129:8417":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"31:6965:4970":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"2:7435:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:6574:4642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"18:707:6030":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"23:655:6003":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"29:7228:5828":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"20:2496:3014":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"2:5552:8349":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"31:4762:4361":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"17:12154:6900":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"30:4023:5182":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"5:6320:10745":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"28:181:26710":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"31:6497:27867":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"21:1296:6180":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"6:7538:5980":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:3065:6551":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:8862:3949":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:6171:196":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:2638:3070":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:13816:7298":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:3266:3077":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:6697:5878":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"20:1707:38527":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"16:6361:7743":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:41512:3575":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:21343:10658":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:30757:185":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"31:5642:4604":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"2:10343:3019":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12172:6901":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:39470:29842":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:5404:8722":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"5:1442:3575":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"31:5835:4665":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"24:0:1866":{"crate_id":24,"path":["log"],"kind":"module"},"29:9252:9794":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:6634:5034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:2406:7539":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:863:3575":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:6437:3155":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"3:0:453":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:39297:8452":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"31:6743:9768":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"16:2670:7550":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"18:690:6027":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:2409:1865":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:926:8102":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"0:578:2025":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"0:572:2016":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"17:12934:7057":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:1895:8703":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"18:736:26622":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"31:5332:27860":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"6:4766:5615":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"31:6606:4897":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"6:4477:5482":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"9:52:8990":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"22:1188:1921":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"6:119:16294":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"22:1080:2510":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"6:494:4603":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:7271:3575":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:10603:6733":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:10278:6698":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"28:37:26698":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"22:1659:6169":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"30:2989:5095":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"1:6077:4215":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"11:968:7848":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:8948:10628":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:8016:3072":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:6560:4121":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:12049:428":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:10788:22757":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"21:268:38579":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"30:4846:39791":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"2:43706:8342":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"20:931:3012":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"21:2200:3072":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:47747:8680":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:47255:8668":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"18:590:6006":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:6657:5877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:7472:4858":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:4055:15783":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:5634:7622":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:6386:7745":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"30:4178:5185":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"17:14282:7436":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:41268:8375":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:4037:10545":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"29:5171:5523":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:8154:8003":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"21:2078:6334":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"1:1573:6299":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:9046:8839":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"}},"external_crates":{"31":{"name":"linux_raw_sys","html_root_url":null},"28":{"name":"io_lifetimes","html_root_url":null},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"aho_corasick","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"29":{"name":"libc","html_root_url":null},"26":{"name":"humantime","html_root_url":null},"23":{"name":"memchr","html_root_url":null},"20":{"name":"regex","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"termcolor","html_root_url":null},"30":{"name":"rustix","html_root_url":null},"27":{"name":"is_terminal","html_root_url":null},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"21":{"name":"regex_syntax","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}