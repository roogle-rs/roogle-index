{"root":"0:0:2256","crate_version":"0.10.1","includes_private":false,"index":{"0:525:2871":{"id":"0:525:2871","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:527:1751"]},"discriminant":null}}},"0:366:2103":{"id":"0:366:2103","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:2872":{"id":"0:528:2872","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:530:1751","0:531:1752","0:532:1753"]},"discriminant":null}}},"0:100:2707":{"id":"0:100:2707","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32518:3263-0:100:2707","a:2:42146:3184-0:100:2707","a:2:32436:243-0:100:2707","a:2:42147:3183-0:100:2707","a:2:2949:253-0:100:2707","b:2:2737-0:100:2707","b:2:3496-0:100:2707","b:2:2427-0:100:2707","b:2:2424-0:100:2707","b:2:2742-0:100:2707","b:2:2727-0:100:2707","b:2:2731-0:100:2707","b:5:5809-0:100:2707","0:112","0:103"]}}},"0:572:2098":{"id":"0:572:2098","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2731-0:585:1972":{"id":"b:2:2731-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:35:2003":{"id":"b:2:2737-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:511:2778":{"id":"0:511:2778","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:9884:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:9884:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:506:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2949:253-0:169:2622":{"id":"a:2:2949:253-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:51:1954":{"id":"0:51:1954","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[218,4],"end":[224,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:546:2742":{"id":"0:546:2742","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:543:2141":{"id":"0:543:2141","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2740","0:546:2742","0:548:2676"],"impls":["a:2:32518:3263-0:543:2141","a:2:42146:3184-0:543:2141","a:2:32436:243-0:543:2141","a:2:42147:3183-0:543:2141","a:2:2949:253-0:543:2141","b:2:2737-0:543:2141","b:2:3496-0:543:2141","b:2:2427-0:543:2141","b:2:2424-0:543:2141","b:2:2742-0:543:2141","b:2:2727-0:543:2141","b:2:2731-0:543:2141","b:5:687-0:543:2141","0:562","0:550","0:558","0:553","0:555","0:236","0:552","0:556","0:561"]}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[825,0],"end":[890,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:2030","0:384:2056","0:385:1954","0:386:2184"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32436:243-0:599:2003":{"id":"a:2:32436:243-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2727-0:458:2772":{"id":"b:2:2727-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:35:2003":{"id":"b:2:3496-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:599:2003":{"id":"b:2:2731-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:2094","0:96:2648","0:97:2649","0:98:2650","0:99:2651"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2949:253-0:342:1989":{"id":"a:2:2949:253-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:208-0:115:1957":{"id":"0:208-0:115:1957","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:115:1957","glob":true}}},"b:2:2427-0:571:2095":{"id":"b:2:2427-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:458:2772":{"id":"b:2:2427-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:210:255":{"id":"b:2:2727-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12863:38162":{"id":"2:12863:38162","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4670:38162"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44217:8667","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:169:2622":{"id":"b:2:2742-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:210:255":{"id":"b:2:3496-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[366,9],"end":[366,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:508:2635":{"id":"b:2:3496-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12862:32209":{"id":"2:12862:32209","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:41602"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3184-0:599:2003":{"id":"a:2:42146:3184-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2737-0:543:2141":{"id":"b:2:2737-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3184-0:210:255":{"id":"a:2:42146:3184-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:42146:3184-0:269:140":{"id":"a:2:42146:3184-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:265-0:571:2095":{"id":"0:265-0:571:2095","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:2095","glob":false}}},"0:221:717":{"id":"0:221:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:571:2095":{"id":"b:2:3496-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5555:30803":{"id":"5:5555:30803","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12859:30801"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:268:60":{"id":"0:268:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49:2114":{"id":"0:49:2114","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12832:38157":{"id":"2:12832:38157","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12457:16648","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3263-0:169:2622":{"id":"a:2:32518:3263-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:442:2235":{"id":"0:442:2235","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1207,0],"end":[1213,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:269:140":{"id":"b:2:2731-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[307,9],"end":[307,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12818:38151":{"id":"2:12818:38151","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12432:6268","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::rmatch_indices":"2:12821:38152"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44068:8744","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462:455":{"id":"0:462:455","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2634","0:176:2782","0:177:2637","0:178:2833","0:179:2837","0:180:2640"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:517:2777":{"id":"0:517:2777","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12748:2206":{"id":"2:12748:2206","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42020:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3183-0:571:2095":{"id":"a:2:42147:3183-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:219:60":{"id":"0:219:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:1975":{"id":"0:405:1975","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1009,4],"end":[1016,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3183-0:32:1956":{"id":"a:2:42147:3183-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2742-0:100:2707":{"id":"b:2:2742-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12844:38159":{"id":"2:12844:38159","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:508:2635":{"id":"b:5:687-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:2844","5:690:2214","5:691:3716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:434:717":{"id":"0:434:717","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1100,8],"end":[1104,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:599:2003":{"id":"b:2:2727-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12815:38150":{"id":"2:12815:38150","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12432:6268","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::matches":"2:12812:2184"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44140:8746","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42146:3184-0:571:2095":{"id":"a:2:42146:3184-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3496-0:458:2772":{"id":"b:2:3496-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:35:2003":{"id":"b:2:2427-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:378:2163":{"id":"0:378:2163","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[804,4],"end":[807,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:458:2772":{"id":"b:2:2742-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:2775":{"id":"0:146:2775","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2772"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12859:30801":{"id":"2:12859:30801","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:717":{"id":"0:491:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3184-0:508:2635":{"id":"a:2:42146:3184-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:599:2003":{"id":"b:2:2427-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12853:2128":{"id":"2:12853:2128","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12393:133","`FromStr`":"2:12392:3058"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12392:3058","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12392:3058","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:104:717":{"id":"0:104:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:169:2622":{"id":"b:2:2731-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:506:717":{"id":"0:506:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377:2153":{"id":"0:377:2153","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[782,4],"end":[793,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"SetLoggerError","id":"24:352:1953","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5809-0:169:2622":{"id":"b:5:5809-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12759:31002":{"id":"2:12759:31002","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12758:31001"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44":{"id":"0:44","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[170,0],"end":[271,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:45:1037","0:46:2030","0:49:2114","0:50:2119","0:51:1954","0:53:2128","0:54:2155"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63:717":{"id":"0:63:717","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[289,4],"end":[298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:458:2772":{"id":"a:2:2949:253-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:42146:3184-0:342:1989":{"id":"a:2:42146:3184-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12860:32207":{"id":"2:12860:32207","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:41602"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:1037":{"id":"0:45:1037","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[172,4],"end":[178,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:53:2128":{"id":"0:53:2128","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[231,4],"end":[240,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:1957":{"id":"0:115:1957","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:210:255","0:543:2141"],"is_stripped":true}}},"5:5551:38836":{"id":"5:5551:38836","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:476:717":{"id":"0:476:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:9876:2849","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:9876:2849","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42147:3183-0:585:1972":{"id":"a:2:42147:3183-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:54:2155":{"id":"0:54:2155","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[243,4],"end":[270,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:210:255":{"id":"b:2:2427-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42147:3183-0:508:2635":{"id":"a:2:42147:3183-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:508:2635":{"id":"b:2:2731-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:3263-0:458:2772":{"id":"a:2:32518:3263-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:690:2214":{"id":"5:690:2214","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:599:2003":{"id":"b:2:2424-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12861:32208":{"id":"2:12861:32208","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:41602"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12828:38154":{"id":"2:12828:38154","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:342:1989":{"id":"b:2:2742-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:100:2707":{"id":"b:2:2737-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:332-0:262:1955":{"id":"0:332-0:262:1955","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[285,0],"end":[285,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::fmt::glob","name":"glob","id":"0:262:1955","glob":true}}},"b:2:2731-0:100:2707":{"id":"b:2:2731-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:342:1989":{"id":"b:2:2737-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:372:2047":{"id":"0:372:2047","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[706,4],"end":[709,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["filters",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3263-0:599:2003":{"id":"a:2:32518:3263-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:35:2003":{"id":"0:35:2003","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[109,0],"end":[113,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:44","a:2:32518:3263-0:35:2003","a:2:42146:3184-0:35:2003","a:2:32436:243-0:35:2003","a:2:42147:3183-0:35:2003","a:2:2949:253-0:35:2003","b:2:2737-0:35:2003","b:2:3496-0:35:2003","b:2:2427-0:35:2003","b:2:2424-0:35:2003","b:2:2742-0:35:2003","b:2:2727-0:35:2003","b:2:2731-0:35:2003","0:58","0:62"]}}},"0:347:1037":{"id":"0:347:1037","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[401,4],"end":[403,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:543:2141":{"id":"b:2:3496-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5540:38834":{"id":"5:5540:38834","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:582:455":{"id":"0:582:455","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2732":{"id":"0:215:2732","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:217:1751"]},"discriminant":null}}},"b:2:2727-0:269:140":{"id":"b:2:2727-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:426:744":{"id":"0:426:744","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1081,4],"end":[1083,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["filter_env",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:2650":{"id":"0:98:2650","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2707"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12754:30977":{"id":"2:12754:30977","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[279,0],"end":[286,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:571:2095":{"id":"b:2:2742-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:584:717":{"id":"0:584:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3183-0:269:140":{"id":"a:2:42147:3183-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:70:717":{"id":"0:70:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:571:2095","0:269:140","0:257-0:92:1955","0:258-0:206:1955"],"is_stripped":false}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32518:3263-0:342:1989":{"id":"a:2:32518:3263-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:605:60":{"id":"0:605:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[366,9],"end":[366,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12763:36334":{"id":"2:12763:36334","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12764:36339"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44192:8748","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:508:2635":{"id":"a:2:32436:243-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32518:3263-0:32:1956":{"id":"a:2:32518:3263-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2742-0:32:1956":{"id":"b:2:2742-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:253-0:100:2707":{"id":"a:2:2949:253-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:543:2141":{"id":"b:2:2427-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12791:31012":{"id":"2:12791:31012","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12432:6268","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::split":"2:12785:2467"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43936:8596","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:369:2114":{"id":"0:369:2114","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[656,4],"end":[659,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12777:3698":{"id":"2:12777:3698","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42020:197","prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5552:38837":{"id":"5:5552:38837","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:2077","`String`":"5:7534:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2077","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:35:2003":{"id":"b:2:2731-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12797:38149":{"id":"2:12797:38149","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12432:6268","str::split":"2:12785:2467","prim@char":"1:12032:451","str::split_terminator":"2:12794:38148"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43986:8743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:527:1751":{"id":"0:527:1751","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:206:1955":{"id":"0:206:1955","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:717","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:207-0:142:1955","0:208-0:115:1957"],"is_stripped":true}}},"a:2:32436:243-0:210:255":{"id":"a:2:32436:243-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2737-0:599:2003":{"id":"b:2:2737-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:571:2095":{"id":"b:2:2727-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12761:8758":{"id":"2:12761:8758","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12032:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43894:8740","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:2205":{"id":"0:402:2205","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[995,4],"end":[1002,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3498:1632":{"id":"2:3498:1632","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39780:8657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:599:2003":{"id":"b:2:2742-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:585:1972":{"id":"b:2:2427-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42147:3183-0:100:2707":{"id":"a:2:42147:3183-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:355:2062":{"id":"0:355:2062","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[539,4],"end":[541,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12809:31019":{"id":"2:12809:31019","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2492:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:175:2634":{"id":"0:175:2634","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12737:2454":{"id":"2:12737:2454","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:513:2779":{"id":"0:513:2779","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:32518:3263-0:585:1972":{"id":"a:2:32518:3263-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2737-0:571:2095":{"id":"b:2:2737-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:508:2635":{"id":"0:508:2635","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2636","0:511:2778","0:513:2779","0:515:2781","0:517:2777","0:519:2869","0:521:2780","0:523:2870","0:525:2871","0:528:2872"],"impls":["a:2:32518:3263-0:508:2635","a:2:42146:3184-0:508:2635","a:2:32436:243-0:508:2635","a:2:42147:3183-0:508:2635","a:2:2949:253-0:508:2635","b:2:2737-0:508:2635","b:2:3496-0:508:2635","b:2:2427-0:508:2635","b:2:2424-0:508:2635","b:2:2742-0:508:2635","b:2:2727-0:508:2635","b:2:2731-0:508:2635","b:5:687-0:508:2635","0:538","0:540","0:535","0:533","0:537","0:541"]}}},"2:2429:2612":{"id":"2:2429:2612","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:466:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:210:255":{"id":"b:2:2742-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:9882:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:9882:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:476:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5537:2461":{"id":"5:5537:2461","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:1037":{"id":"0:396:1037","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[965,4],"end":[967,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:1955":{"id":"0:142:1955","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1957","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:143-0:123:2695"],"is_stripped":true}}},"a:2:32436:243-0:100:2707":{"id":"a:2:32436:243-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:269:140":{"id":"b:2:2427-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:50:2119":{"id":"0:50:2119","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[210,4],"end":[212,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:458:2772":{"id":"b:2:2731-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:379:2155":{"id":"0:379:2155","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[813,4],"end":[822,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:364:2097":{"id":"0:364:2097","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[617,4],"end":[619,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:210:255":{"id":"b:2:2424-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12758:31001":{"id":"2:12758:31001","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12759:31002"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12855:30805":{"id":"2:12855:30805","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:458:2772":{"id":"b:2:2737-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:269:140":{"id":"b:2:2742-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:508:2635":{"id":"b:2:2424-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[121,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:40:1954","0:42:2184","0:43:2186"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178:2833":{"id":"0:178:2833","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:508:2635":{"id":"b:2:2727-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:585:1972":{"id":"b:2:2737-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12838:31022":{"id":"2:12838:31022","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3263-0:508:2635":{"id":"a:2:32518:3263-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32436:243-0:543:2141":{"id":"a:2:32436:243-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12826:38153":{"id":"2:12826:38153","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535":{"id":"5:5535","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5536:38833","5:5537:2461","5:5540:38834","5:5543:38835","5:5551:38836","5:5552:38837","5:5553:3159","5:5554:30804","5:5555:30803"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:534:455":{"id":"0:534:455","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:548:2676":{"id":"0:548:2676","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:123:2695":{"id":"0:123:2695","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2258","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:458:2772","0:169:2622","0:508:2635"],"is_stripped":true}}},"a:2:2949:253-0:571:2095":{"id":"a:2:2949:253-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:531:1752":{"id":"0:531:1752","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2487:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:661"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:281:717":{"id":"0:281:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:342:1989":{"id":"b:2:2424-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:46:2030":{"id":"0:46:2030","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[181,4],"end":[189,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12762:2669":{"id":"2:12762:2669","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43904:3140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:32:1956":{"id":"b:2:3496-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5809-0:100:2707":{"id":"b:5:5809-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12841:31023":{"id":"2:12841:31023","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:32:1956":{"id":"a:2:32436:243-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12788:31010":{"id":"2:12788:31010","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12248:8593","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:92:1955":{"id":"0:257-0:92:1955","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::humantime::glob","name":"glob","id":"0:92:1955","glob":true}}},"a:2:42146:3184-0:458:2772":{"id":"a:2:42146:3184-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:14:1954":{"id":"0:14:1954","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[879,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:32:1956","0:35:2003"],"is_stripped":false}}},"0:445:2032":{"id":"0:445:2032","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1221,0],"end":[1223,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12850:38161":{"id":"2:12850:38161","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:585:1972":{"id":"b:2:2424-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5554:30804":{"id":"5:5554:30804","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12858:30802"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:35:2003":{"id":"a:2:2949:253-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2424-0:543:2141":{"id":"b:2:2424-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180:2640":{"id":"0:180:2640","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3263-0:269:140":{"id":"a:2:32518:3263-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:99:2651":{"id":"0:99:2651","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2707"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2426:1945":{"id":"2:2426:1945","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5811:1594":{"id":"5:5811:1594","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388:2186":{"id":"0:388:2186","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[893,4],"end":[895,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1951","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:599:2003":{"id":"a:2:2949:253-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:571:2095":{"id":"b:2:2731-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:385:1954":{"id":"0:385:1954","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[882,4],"end":[884,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12745:38144":{"id":"2:12745:38144","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:2030":{"id":"0:381:2030","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[852,4],"end":[857,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:717":{"id":"0:536:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:169:2622":{"id":"b:2:2737-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:342:1989":{"id":"b:2:2427-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12744:32165":{"id":"2:12744:32165","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11987:2668"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12771:2487":{"id":"2:12771:2487","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2622":{"id":"0:169:2622","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32518:3263-0:169:2622","a:2:42146:3184-0:169:2622","a:2:32436:243-0:169:2622","a:2:42147:3183-0:169:2622","a:2:2949:253-0:169:2622","b:2:2737-0:169:2622","b:2:3496-0:169:2622","b:2:2427-0:169:2622","b:2:2424-0:169:2622","b:2:2742-0:169:2622","b:2:2727-0:169:2622","b:2:2731-0:169:2622","b:5:5809-0:169:2622","0:463","0:503","0:473","0:498","0:468","0:478","0:488","0:493","0:483"]}}},"2:12821:38152":{"id":"2:12821:38152","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12432:6268","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::match_indices":"2:12818:38151"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44086:8745","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3184-0:32:1956":{"id":"a:2:42146:3184-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:210:255":{"id":"0:210:255","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2728","0:213:2730","0:215:2732"],"impls":["a:2:32518:3263-0:210:255","a:2:42146:3184-0:210:255","a:2:32436:243-0:210:255","a:2:42147:3183-0:210:255","a:2:2949:253-0:210:255","b:2:2737-0:210:255","b:2:3496-0:210:255","b:2:2427-0:210:255","b:2:2424-0:210:255","b:2:2742-0:210:255","b:2:2727-0:210:255","b:2:2731-0:210:255","0:218","0:220"]}}},"2:12858:30802":{"id":"2:12858:30802","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::fmt::Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2633","0:146:2775","0:147:2645"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1086,0],"end":[1093,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12767:36338":{"id":"2:12767:36338","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44210:8611","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:2083":{"id":"0:278:2083","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:717":{"id":"0:496:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42:2184":{"id":"0:42:2184","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[147,4],"end":[159,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1952","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:35:2003":{"id":"b:2:2424-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:563:661":{"id":"0:563:661","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:32:1956":{"id":"b:2:2727-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3184-0:543:2141":{"id":"a:2:42146:3184-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:237:60":{"id":"0:237:60","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:2648":{"id":"0:96:2648","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2707"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12738:38141":{"id":"2:12738:38141","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:559:781":{"id":"0:559:781","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10091:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:2184":{"id":"0:386:2184","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[887,4],"end":[889,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1952","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:717":{"id":"0:486:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3184-0:100:2707":{"id":"a:2:42146:3184-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:436:717":{"id":"0:436:717","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1108,8],"end":[1117,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12857:3044":{"id":"2:12857:3044","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:100:2707":{"id":"b:2:2727-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:61:717":{"id":"0:61:717","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[280,4],"end":[285,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530:1751":{"id":"0:530:1751","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:2:42147:3183-0:210:255":{"id":"a:2:42147:3183-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:42146:3184-0:585:1972":{"id":"a:2:42146:3184-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:32:1956":{"id":"b:2:2731-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:578:2107":{"id":"0:578:2107","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:177:2637":{"id":"0:177:2637","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:571:2095":{"id":"b:5:687-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:2844","5:690:2214","5:691:3716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:376:2146":{"id":"0:376:2146","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[768,4],"end":[771,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["is_test",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12768:31020":{"id":"2:12768:31020","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:717":{"id":"0:113:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10083:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:781"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:585:1972":{"id":"0:585:1972","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[308,0],"end":[311,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:32518:3263-0:585:1972","a:2:42146:3184-0:585:1972","a:2:32436:243-0:585:1972","a:2:42147:3183-0:585:1972","a:2:2949:253-0:585:1972","b:2:2737-0:585:1972","b:2:3496-0:585:1972","b:2:2427-0:585:1972","b:2:2424-0:585:1972","b:2:2742-0:585:1972","b:2:2727-0:585:1972","b:2:2731-0:585:1972","0:427","0:589","0:423"]}}},"a:2:32436:243-0:269:140":{"id":"a:2:32436:243-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:340:1961":{"id":"0:340:1961","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[292,0],"end":[292,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1077,0],"end":[1084,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::borrow::Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:744"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:368:2109":{"id":"0:368:2109","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[637,4],"end":[640,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["suffix",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:591:717":{"id":"0:591:717","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[307,9],"end":[307,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:35:2003":{"id":"a:2:32436:243-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12750:30975":{"id":"2:12750:30975","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42020:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:32463:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2949:253-0:508:2635":{"id":"a:2:2949:253-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2737-0:32:1956":{"id":"b:2:2737-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5536:38833":{"id":"5:5536:38833","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2077","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:2077","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:691:3716":{"id":"5:691:3716","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:1955":{"id":"0:92:1955","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:717","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:93-0:81:2695"],"is_stripped":true}}},"b:2:2742-0:508:2635":{"id":"b:2:2742-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:207-0:142:1955":{"id":"0:207-0:142:1955","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1955","glob":true}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2733:744":{"id":"2:2733:744","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_fmt","is_write_vectored","write_all","by_ref","write_vectored","write_all_vectored"],"trait":{"name":"Write","id":"1:3482:2613","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:2083","0:279:2196"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2949:253-0:32:1956":{"id":"a:2:2949:253-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32518:3263-0:571:2095":{"id":"a:2:32518:3263-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1107,4],"end":[1118,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2424-0:100:2707":{"id":"b:2:2424-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12812:2184":{"id":"2:12812:2184","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12432:6268","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::rmatches":"2:12815:38150"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44122:3090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12736:873":{"id":"2:12736:873","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12032:451"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32436:243-0:458:2772":{"id":"a:2:32436:243-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:370:2119":{"id":"0:370:2119","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[675,4],"end":[678,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:532:1753":{"id":"0:532:1753","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:2:2949:253-0:585:1972":{"id":"a:2:2949:253-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:508:2635":{"id":"b:2:2427-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:359:2082":{"id":"0:359:2082","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[586,4],"end":[589,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12765:4006":{"id":"2:12765:4006","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44172:3137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97:2649":{"id":"0:97:2649","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2707"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439:2220":{"id":"0:439:2220","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1175,0],"end":[1182,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1953","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:585:1972":{"id":"b:2:3496-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12831:38156":{"id":"2:12831:38156","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481:717":{"id":"0:481:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:1954":{"id":"0:371:1954","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[697,4],"end":[700,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["module",{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}],["level",{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143-0:123:2695":{"id":"0:143-0:123:2695","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:123:2695","glob":true}}},"2:12794:38148":{"id":"2:12794:38148","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12432:6268","str::split":"2:12785:2467","prim@char":"1:12032:451","`DoubleEndedIterator`":"2:7826:127","str::rsplit_terminator":"2:12797:38149"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43968:8742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471:717":{"id":"0:471:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2746:1617":{"id":"2:2746:1617","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:2196":{"id":"0:279:2196","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12766:38147":{"id":"2:12766:38147","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44182:8747","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3263-0:35:2003":{"id":"a:2:32518:3263-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12803:31016":{"id":"2:12803:31016","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12032:451","str::splitn":"2:12800:31014","self::pattern":"2:12432:6268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44040:8598","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":"default","docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:351:2033":{"id":"0:351:2033","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[478,4],"end":[493,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["env",{"generic":"E"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12741:38143":{"id":"2:12741:38143","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12739:38142"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348:2030":{"id":"0:348:2030","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[433,4],"end":[440,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:3263-0:100:2707":{"id":"a:2:32518:3263-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:9880:2850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:9880:2850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:491:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2737-0:210:255":{"id":"b:2:2737-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374:1975":{"id":"0:374:1975","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[750,4],"end":[753,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"resolved_path":{"name":"fmt::WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:717":{"id":"0:466:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:458:2772":{"id":"b:5:687-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:2844","5:690:2214","5:691:3716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[892,0],"end":[961,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:2186","0:389:1948","0:393:2196"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12760:8612":{"id":"2:12760:8612","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12032:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43888:8605","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:140":{"id":"0:269:140","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:32518:3263-0:269:140","a:2:42146:3184-0:269:140","a:2:32436:243-0:269:140","a:2:42147:3183-0:269:140","a:2:2949:253-0:269:140","b:2:2737-0:269:140","b:2:3496-0:269:140","b:2:2427-0:269:140","b:2:2424-0:269:140","b:2:2742-0:269:140","b:2:2727-0:269:140","b:2:2731-0:269:140","0:280","0:277"]}}},"b:2:2737-0:269:140":{"id":"b:2:2737-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12800:31014":{"id":"2:12800:31014","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268","str::rsplitn":"2:12803:31016"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44022:3095","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:342:1989":{"id":"b:2:2727-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42147:3183-0:599:2003":{"id":"a:2:42147:3183-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:192:717":{"id":"0:192:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:554:717":{"id":"0:554:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12806:31018":{"id":"2:12806:31018","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:9886:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:9886:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:501:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:210:255":{"id":"b:2:2731-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12774:31021":{"id":"2:12774:31021","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:543:2141":{"id":"b:2:2742-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262:1955":{"id":"0:262:1955","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:264-0:210:255","0:265-0:571:2095","0:266-0:543:2141"],"is_stripped":true}}},"0:95:2094":{"id":"0:95:2094","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12752:30976":{"id":"2:12752:30976","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12764:36339":{"id":"2:12764:36339","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12763:36334"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44201:8749","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:515:2781":{"id":"0:515:2781","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:571:2095":{"id":"0:571:2095","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:2098","0:574:2101","0:576:2104","0:578:2107"],"impls":["a:2:32518:3263-0:571:2095","a:2:42146:3184-0:571:2095","a:2:32436:243-0:571:2095","a:2:42147:3183-0:571:2095","a:2:2949:253-0:571:2095","b:2:2737-0:571:2095","b:2:3496-0:571:2095","b:2:2427-0:571:2095","b:2:2424-0:571:2095","b:2:2742-0:571:2095","b:2:2727-0:571:2095","b:2:2731-0:571:2095","b:5:687-0:571:2095","0:583","0:267","0:581","0:580"]}}},"a:2:32436:243-0:585:1972":{"id":"a:2:32436:243-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42146:3184-0:35:2003":{"id":"a:2:42146:3184-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2745:134":{"id":"2:2745:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32366:10586","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32436:243-0:169:2622":{"id":"a:2:32436:243-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:258-0:206:1955":{"id":"0:258-0:206:1955","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::writer::glob","name":"glob","id":"0:206:1955","glob":true}}},"2:12747:30978":{"id":"2:12747:30978","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12049:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2741:1619":{"id":"2:2741:1619","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3183-0:458:2772":{"id":"a:2:42147:3183-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2949:253-0:269:140":{"id":"a:2:2949:253-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:217:1751":{"id":"0:217:1751","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:281:2077","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"io::Write","id":"1:3482:2613","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}}},"b:2:2742-0:35:2003":{"id":"b:2:2742-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2740:134":{"id":"2:2740:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:360:2085":{"id":"0:360:2085","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[592,4],"end":[595,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:2728":{"id":"0:211:2728","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:687-0:543:2141":{"id":"b:5:687-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:2844","5:690:2214","5:691:3716"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:519:2869":{"id":"0:519:2869","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2427-0:32:1956":{"id":"b:2:2427-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147:2645":{"id":"0:147:2645","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2772"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["level",{"resolved_path":{"name":"Level","id":"24:198:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"resolved_path":{"name":"Level","id":"24:198:2408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:2093":{"id":"0:363:2093","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[611,4],"end":[614,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["timestamp",{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"fmt::TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:358:2080":{"id":"0:358:2080","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[580,4],"end":[583,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:2211":{"id":"0:410:2211","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1034,4],"end":[1041,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:571:2095":{"id":"b:2:2424-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12746:339":{"id":"2:12746:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12747:30978","`u8`":"1:12049:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:542:661":{"id":"0:542:661","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:585:1972":{"id":"b:2:2742-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:253-0:210:255":{"id":"a:2:2949:253-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:145:2633":{"id":"0:145:2633","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93-0:81:2695":{"id":"0:93-0:81:2695","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super","name":"super","id":"0:81:2695","glob":true}}},"b:2:2727-0:169:2622":{"id":"b:2:2727-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12847:38160":{"id":"2:12847:38160","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:544:2740":{"id":"0:544:2740","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:438:2163":{"id":"0:438:2163","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1143,0],"end":[1145,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12865:11297":{"id":"2:12865:11297","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4671:11297"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44226:8549","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5543:38835":{"id":"5:5543:38835","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32438:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:341:1964":{"id":"0:341:1964","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[295,0],"end":[295,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:471:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:599:2003":{"id":"b:2:3496-0:599:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:40:1954":{"id":"0:40:1954","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[138,4],"end":[144,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LevelFilter","id":"24:219:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:2636":{"id":"0:509:2636","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:384:2056":{"id":"0:384:2056","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[876,4],"end":[878,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365:2100":{"id":"0:365:2100","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[622,4],"end":[624,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:393:2196":{"id":"0:393:2196","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[960,4],"end":[960,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:1561":{"id":"0:373:1561","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[729,4],"end":[732,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["target",{"resolved_path":{"name":"fmt::Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3183-0:342:1989":{"id":"a:2:42147:3183-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:9878:2851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:9878:2851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:496:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2731-0:342:1989":{"id":"b:2:2731-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:264-0:210:255":{"id":"0:264-0:210:255","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::Target","name":"Target","id":"0:210:255","glob":false}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[374,0],"end":[823,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:1037","0:348:2030","0:351:2033","0:354:2056","0:355:2062","0:356:729","0:358:2080","0:359:2082","0:360:2085","0:361:2087","0:362:2090","0:363:2093","0:364:2097","0:365:2100","0:366:2103","0:367:2106","0:368:2109","0:369:2114","0:370:2119","0:371:1954","0:372:2047","0:373:1561","0:374:1975","0:375:2049","0:376:2146","0:377:2153","0:378:2163","0:379:2155"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12739:38142":{"id":"2:12739:38142","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:508:2635":{"id":"b:2:2737-0:508:2635","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:362:2090":{"id":"0:362:2090","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[605,4],"end":[608,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["indent",{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1099,4],"end":[1105,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2427-0:169:2622":{"id":"b:2:2427-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:32:1956":{"id":"0:32:1956","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[81,0],"end":[84,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:39","a:2:32518:3263-0:32:1956","a:2:42146:3184-0:32:1956","a:2:32436:243-0:32:1956","a:2:42147:3183-0:32:1956","a:2:2949:253-0:32:1956","b:2:2737-0:32:1956","b:2:3496-0:32:1956","b:2:2427-0:32:1956","b:2:2424-0:32:1956","b:2:2742-0:32:1956","b:2:2727-0:32:1956","b:2:2731-0:32:1956","0:60"]}}},"0:521:2780":{"id":"0:521:2780","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:389:1948":{"id":"0:389:1948","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[897,4],"end":[958,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["record",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1952","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12866:27775":{"id":"2:12866:27775","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4668:27775"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44235:8666","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:543:2141":{"id":"b:2:2731-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:43:2186":{"id":"0:43:2186","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[162,4],"end":[167,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["metadata",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Metadata","id":"24:296:1951","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:2782":{"id":"0:176:2782","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:169:2622":{"id":"b:2:3496-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:551:455":{"id":"0:551:455","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:585:1972":{"id":"b:2:2727-0:585:1972","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2730:2045":{"id":"2:2730:2045","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2704:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:2106":{"id":"0:367:2106","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[288,0],"end":[299,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:407:2209":{"id":"0:407:2209","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1021,4],"end":[1029,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["write_style_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:571:2095":{"id":"a:2:32436:243-0:571:2095","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32518:3263-0:210:255":{"id":"a:2:32518:3263-0:210:255","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Target","id":"0:210:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:576:2104":{"id":"0:576:2104","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:437:2153":{"id":"0:437:2153","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1130,0],"end":[1132,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"log::SetLoggerError","id":"24:352:1953","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:342:1989":{"id":"a:2:32436:243-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12756:38145":{"id":"2:12756:38145","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12038:1536","str::slice_mut_unchecked":"2:12757:38146","crate::ops::Index":"2:39598:11328"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:59:60":{"id":"0:59:60","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[274,4],"end":[276,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:2030":{"id":"0:446:2030","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1232,0],"end":[1237,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"inner":{"function":{"decl":{"inputs":[["env",{"generic":"E"}]],"output":{"resolved_path":{"name":"Builder","id":"0:599:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2944:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"TimestampPrecision","id":"0:571:2095","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42147:3183-0:169:2622":{"id":"a:2:42147:3183-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:32518:3263-0:543:2141":{"id":"a:2:32518:3263-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:3263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12781:3659":{"id":"2:12781:3659","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42020:197","prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:16649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:269:140":{"id":"b:2:2424-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[273,0],"end":[277,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2778:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:100:2707":{"id":"b:2:3496-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42147:3183-0:35:2003":{"id":"a:2:42147:3183-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:179:2837":{"id":"0:179:2837","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["color",{"resolved_path":{"name":"Color","id":"0:508:2635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:689:2844":{"id":"5:689:2844","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2727-0:35:2003":{"id":"b:2:2727-0:35:2003","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:35:2003","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:81:2695":{"id":"0:81:2695","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1764","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:100:2707"],"is_stripped":true}}},"0:523:2870":{"id":"0:523:2870","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:397:1954":{"id":"0:397:1954","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[970,4],"end":[977,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:9874:2848","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:9874:2848","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:481:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[963,0],"end":[1046,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Env","id":"0:585:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:1037","0:397:1954","0:399:2201","0:402:2205","0:405:1975","0:407:2209","0:410:2211"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:361:2087":{"id":"0:361:2087","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[598,4],"end":[601,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3184-0:169:2622":{"id":"a:2:42146:3184-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2949:253-0:543:2141":{"id":"a:2:2949:253-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:399:2201":{"id":"0:399:2201","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[982,4],"end":[990,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["filter_env",{"generic":"E"}],["default",{"generic":"V"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:692:116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354:2056":{"id":"0:354:2056","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[513,4],"end":[515,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:342:1989":{"id":"b:2:3496-0:342:1989","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Logger","id":"0:342:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:100:2707":{"id":"b:2:2427-0:100:2707","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:100:2707","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:2612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:375:2049":{"id":"0:375:2049","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[759,4],"end":[762,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["write_style",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:60":{"id":"0:429:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1087,4],"end":[1092,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:458:2772":{"id":"0:458:2772","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:32518:3263-0:458:2772","a:2:42146:3184-0:458:2772","a:2:32436:243-0:458:2772","a:2:42147:3183-0:458:2772","a:2:2949:253-0:458:2772","b:2:2737-0:458:2772","b:2:3496-0:458:2772","b:2:2427-0:458:2772","b:2:2424-0:458:2772","b:2:2742-0:458:2772","b:2:2727-0:458:2772","b:2:2731-0:458:2772","b:5:687-0:458:2772","0:461","0:191"]}}},"a:2:42147:3183-0:543:2141":{"id":"a:2:42147:3183-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3496-0:269:140":{"id":"b:2:3496-0:269:140","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2256":{"id":"0:0:2256","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1301,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\n**By default all logging is disabled except for the `error` level**\n\nThe **`RUST_LOG`** environment variable controls logging with the syntax:\n```text\nRUST_LOG=[target][=][level][,...]\n```\nOr in other words, its a comma-separated list of directives.\nDirectives can filter by **target**, by **level**, or both (using `=`).\n\nFor example,\n```text\nRUST_LOG=data=debug,hardware=debug\n```\n\n**target** is typically the path of the module the message\nin question originated from, though it can be overridden.\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target.\n\nFor example, `RUST_LOG=example` would match the following targets:\n- `example`\n- `example::test`\n- `example::test::module::submodule`\n- `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\n**level** is the maximum [`log::Level`][level-enum] to be shown and includes:\n- `error`\n- `warn`\n- `info`\n- `debug`\n- `trace`\n- `off` (pseudo level to disable all logging for the target)\n\nLogging level names are case-insensitive; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nSome examples of valid values of `RUST_LOG` are:\n\n- `RUST_LOG=hello` turns on all logging for the `hello` module\n- `RUST_LOG=trace` turns on all logging for the application, regardless of its name\n- `RUST_LOG=TRACE` turns on all logging for the application, regardless of its name (same as previous)\n- `RUST_LOG=info` turns on all info logging\n- `RUST_LOG=INFO` turns on all info logging (same as previous)\n- `RUST_LOG=hello=debug` turns on debug logging for `hello`\n- `RUST_LOG=hello=DEBUG` turns on debug logging for `hello` (same as previous)\n- `RUST_LOG=hello,std::option` turns on `hello`, and std's option logging\n- `RUST_LOG=error,hello=warn` turn on global error logging and also warn for `hello`\n- `RUST_LOG=error,hello=off`  turn on global error logging, but turn off logging for `hello`\n- `RUST_LOG=off` turns off all logging for the application\n- `RUST_LOG=OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n#[cfg(test)]\nmod tests {\n    use log::info;\n\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/rust-cli/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:140"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:14:1954","0:70:717","0:340:1961","0:341:1964","0:585:1972","0:342:1989","0:599:2003","0:437:2153","0:438:2163","0:439:2220","0:442:2235","0:445:2032","0:446:2030","0:332-0:262:1955"],"is_stripped":false}}},"2:12785:2467":{"id":"2:12785:2467","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12432:6268","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::split_whitespace":"2:12763:36334","str::rsplit":"2:12791:31012"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43918:3094","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12824:2476":{"id":"2:12824:2476","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:356:729":{"id":"0:356:729","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[569,4],"end":[575,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["format",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3127:137","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"0:269:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Record","id":"24:277:1952","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:169:2622":{"id":"b:2:2424-0:169:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"StyledValue","id":"0:169:2622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:32:1956":{"id":"b:2:2424-0:32:1956","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Filter","id":"0:32:1956","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:543:2141":{"id":"b:2:2727-0:543:2141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteStyle","id":"0:543:2141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2045"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:458:2772":{"id":"b:2:2424-0:458:2772","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:3262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Style","id":"0:458:2772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:1945"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:342:1989":{"id":"0:342:1989","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[338,0],"end":[342,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:32518:3263-0:342:1989","a:2:42146:3184-0:342:1989","a:2:32436:243-0:342:1989","a:2:42147:3183-0:342:1989","a:2:2949:253-0:342:1989","b:2:2737-0:342:1989","b:2:3496-0:342:1989","b:2:2427-0:342:1989","b:2:2424-0:342:1989","b:2:2742-0:342:1989","b:2:2727-0:342:1989","b:2:2731-0:342:1989","0:433","0:387"]}}},"2:12830:38155":{"id":"2:12830:38155","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5553:3159":{"id":"5:5553:3159","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12757:38146":{"id":"2:12757:38146","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12038:1536","crate::ops::IndexMut":"2:3162:11329","str::slice_unchecked":"2:12756:38145"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2730":{"id":"0:213:2730","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:599:2003":{"id":"0:599:2003","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[367,0],"end":[372,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::{LevelFilter, error, info};\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:32518:3263-0:599:2003","a:2:42146:3184-0:599:2003","a:2:32436:243-0:599:2003","a:2:42147:3183-0:599:2003","a:2:2949:253-0:599:2003","b:2:2737-0:599:2003","b:2:3496-0:599:2003","b:2:2427-0:599:2003","b:2:2424-0:599:2003","b:2:2742-0:599:2003","b:2:2727-0:599:2003","b:2:2731-0:599:2003","0:604","0:435"]}}},"0:501:717":{"id":"0:501:717","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266-0:543:2141":{"id":"0:266-0:543:2141","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:2141","glob":false}}},"2:12856:32204":{"id":"2:12856:32204","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39967:32164","Self::is_ascii":"2:12855:30805"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39967:32164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:574:2101":{"id":"0:574:2101","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12735":{"id":"2:12735","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12736:873","2:12737:2454","2:12738:38141","2:12739:38142","2:12741:38143","2:12744:32165","2:12745:38144","2:12746:339","2:12747:30978","2:12748:2206","2:12750:30975","2:12752:30976","2:12754:30977","2:12756:38145","2:12757:38146","2:12758:31001","2:12759:31002","2:12760:8612","2:12761:8758","2:12762:2669","2:12763:36334","2:12764:36339","2:12765:4006","2:12766:38147","2:12767:36338","2:12768:31020","2:12771:2487","2:12774:31021","2:12777:3698","2:12781:3659","2:12785:2467","2:12788:31010","2:12791:31012","2:12794:38148","2:12797:38149","2:12800:31014","2:12803:31016","2:12806:31018","2:12809:31019","2:12812:2184","2:12815:38150","2:12818:38151","2:12821:38152","2:12824:2476","2:12826:38153","2:12828:38154","2:12830:38155","2:12831:38156","2:12832:38157","2:12835:38158","2:12838:31022","2:12841:31023","2:12844:38159","2:12847:38160","2:12850:38161","2:12853:2128","2:12855:30805","2:12856:32204","2:12857:3044","2:12858:30802","2:12859:30801","2:12860:32207","2:12861:32208","2:12862:32209","2:12863:38162","2:12865:11297","2:12866:27775"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12835:38158":{"id":"2:12835:38158","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:6268"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:6146","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:1558:5374":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:6466:3242":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"29:5955:5789":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"29:7074:5869":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"0:572:2098":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"16:6352:7945":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"21:2240:27768":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"2:10869:8596":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"29:1929:5397":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:43832:8734":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:13056:6978":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:7510:8417":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:9872:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:11168:23620":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:46001:8786":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:34264:16773":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"29:695:5117":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"17:12335:6921":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:10726:39531":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"33:201:3254":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"30:4667:40755":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"2:22346:11583":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:4898:419":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"22:1304:6208":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"26:99:2701":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"16:6456:7954":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"31:0:3215":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"5:3155:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:6901:7774":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"11:1883:4043":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:22732:8642":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"29:5742:5736":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:7548:8418":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:951:8311":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"31:4966:4514":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"2:44665:10806":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"31:6413:4960":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"17:11666:6835":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:42157:3185":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:33781:16770":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:15689:7601":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"23:665:149":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"21:1442:27755":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"29:556:4719":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"21:2649:6285":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"31:6749:28961":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"6:1521:5355":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:6781:5970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"30:498:10199":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"29:9252:10532":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:11690:6840":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:43740:8727":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:15535:7558":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:624:39536":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"29:7002:5841":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:10986:9033":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"11:351:39504":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"9:507:8378":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:44633:10798":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:39512:4047":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:13961:7120":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"29:9212:6072":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"5:7534:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:43261:8712":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:12244:6910":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:7732:11303":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:4740:11401":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:12663:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:1760:3721":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:15184:7447":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:32402:8647":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:6268:39519":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:12310:6918":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:15680:7599":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:22215:36614":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"29:9104:4950":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:596:5351":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:8292:9010":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:39773:8656":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:1072:8317":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"31:4762:4453":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"23:883:27726":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:2574:7749":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"18:719:6126":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"22:1644:6257":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"2:10236:4284":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"21:2059:6425":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"17:10657:6747":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:4455:5537":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:4800:4537":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:5859:4770":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"21:2140:27782":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"1:12057:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:7006:8039":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"30:549:27843":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"6:4977:10618":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"21:1309:6344":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"29:5945:5784":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:6351:11594":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:9874:2848":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:11155:6780":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"29:6911:4943":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:9467:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:13254:6995":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:32437:3262":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"20:1473:6520":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"17:10510:6744":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:10852:23601":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"33:173:2592":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"1:11215:10205":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:10521:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:1501:4508":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"30:4790:5306":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"16:7523:8139":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"16:7360:39520":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"8:0:2876":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:10137:6609":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:32939:8064":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:40828:8566":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:41222:3234":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:5829:4771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:119:17153":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:5403:6731":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"26:209:40310":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"6:6228:4795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:23179:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:5154:3174":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:5384:23518":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:10035:6731":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:3425:3124":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"28:37:27801":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"17:14426:7211":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:7848:8956":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:15337:7488":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"12:0:2880":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:15943:6990":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:5240:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:3837:8916":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:1743:658":{"crate_id":1,"path":["std","env"],"kind":"module"},"9:426:22512":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:12510:6938":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:40395:36414":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"24:219:1949":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"20:1914:6582":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"31:7356:5166":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"2:4:1113":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:4488:5555":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:47092:8838":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:7497:8415":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12366:23714":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:6927:6050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"6:4932:5754":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:2421:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:6128:5927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:6583:7967":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:22537:8623":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:11987:2668":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"29:539:4695":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"16:2305:22658":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:2830:8425":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"11:1903:6392":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:6721:23525":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:880:8304":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:0:878":{"crate_id":6,"path":["libc"],"kind":"module"},"17:14296:7186":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"20:2459:3088":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"28:189:4197":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"26:0:1764":{"crate_id":26,"path":["humantime"],"kind":"module"},"6:563:5117":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:5500:8931":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"30:4724:40760":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"1:11998:6501":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"0:35:2003":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"11:2403:4044":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:7563:3009":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:44441:8614":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:7788:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"29:6783:5810":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:1913:18476":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"13:226:9692":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"20:1518:6526":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"17:11476:6812":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:5121:7820":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:1527:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"6:5910:5166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:9531:9722":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"11:883:8311":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:13322:7005":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:13419:7014":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"21:2078:6427":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"17:13935:7116":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:2954:3027":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:11034:4323":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"31:5946:4795":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"17:13182:6991":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:10976:8599":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11932:6883":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"30:3932:5273":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"31:5079:4558":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"5:6530:4225":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"20:2599:3091":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"17:11113:6776":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:4381:4250":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:7380:33433":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"29:4651:5496":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:1819:3735":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"31:176:4394":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"31:4567:4413":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"16:6560:4212":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:12046:796":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:7931:3151":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:5798:7842":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"21:2348:6432":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"2:7784:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:16160:7712":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"24:151:1950":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"6:5992:5853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:7598:6069":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8866:3663":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:3797:7793":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:11657:6834":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:8146:3163":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"18:660:6110":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:1538:3663":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:46386:8806":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"21:254:39602":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"17:14662:7250":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:13633:7069":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"22:1698:3089":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"1:6543:3239":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"31:7167:10510":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"1:11197:2697":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"29:1887:5383":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:914:8301":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:1495:8318":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:43508:10797":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:15013:7405":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:12035:1150":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:7318:8088":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:33311:16767":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"23:81:27715":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:7702:6076":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:1131:39423":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"21:2330:6279":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"6:4738:5175":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:489:4696":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:11439:6805":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:9147:3194":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:47280:8842":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:2228:6632":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:6545:7965":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:8137:3161":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:6968:23526":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"21:2455:4203":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"1:10097:9047":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"29:1762:5355":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:43761:8729":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:7365:10530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:42572:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"22:1622:6155":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"17:9968:23591":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:11714:6843":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:7895:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"29:5938:5781":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:5867:5810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:8858:9035":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"31:5843:4760":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"16:6083:22631":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:2324:635":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"18:590:6098":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"28:67:27795":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"16:7597:39518":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:7003:4269":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:6357:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:7333:16754":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:574:4698":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11321:6747":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:12459:6766":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"29:4770:5536":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:33918:16771":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:38933:16778":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:12052:1640":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4666:5640":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"29:7322:10524":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"31:5594:4687":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"2:22993:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:15037:7407":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:38244:16775":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"33:339:2764":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"26:230:3212":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"1:8920:11472":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:44122:3090":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:11453:4328":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:21171:3618":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"20:1231:6495":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"2:43253:4000":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"29:5685:5727":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:4835:7811":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"21:1654:27757":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"17:12999:6972":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:11675:6836":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"31:5729:4734":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"2:3012:8065":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:5891:5826":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:21193:36645":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"31:5650:4697":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"17:10422:6743":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"31:7126:5103":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"6:4860:5727":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:15725:7605":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"29:7120:5891":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"10:36:10589":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:8330:5126":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:43894:8740":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:42216:4044":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:3251:6269":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3112:3030":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"22:1157:6188":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"20:1405:39553":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"5:5004:3116":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:8872:8933":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:110:313":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"24:296:1951":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"31:6597:4987":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"31:4942:4506":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"5:3217:6394":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:41264:8578":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"30:2712:5185":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"16:2284:22632":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:10812:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:2428:7743":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"29:7282:5925":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"21:2323:6449":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"29:4627:5486":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"22:929:27790":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"29:7021:5846":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"18:515:6087":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"31:5860:10452":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"29:7265:5922":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"29:2093:5453":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"20:1642:6543":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"17:13202:6992":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:8195:8211":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:44657:10804":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:6297:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"20:2476:3090":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"31:4536:4403":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"2:8242:4045":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"22:1429:6147":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"2:32518:3263":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:4557:7803":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"31:5049:4541":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"1:1796:3729":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"33:396:3258":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"29:4979:5574":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:32366:10586":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:44653:10803":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:4180:11412":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:44688:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:8493:11463":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"11:1051:8313":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:1674:5452":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:8167:8209":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"31:6035:4826":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"31:7318:5160":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"16:5963:7863":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:10757:8593":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"29:7425:5944":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:15160:7438":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:6332:7764":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:3049:22661":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:10907:8597":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:7343:6067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:9069:9725":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"31:4822:10387":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"2:4115:8551":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11991:6887":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:7422:8411":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:4514:3022":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:13765:7092":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:33663:16769":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:15279:7474":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:6162:4311":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:5928:4943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:836:4043":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:7436:7874":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:1815:1187":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:46532:8810":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:11014:6770":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"21:2119:1958":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"6:4939:1100":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:14001:7125":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:11345:6799":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:32549:3627":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:46023:8787":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:14145:7165":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:23117:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:9094:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:12345:6923":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"30:4867:5313":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"2:42078:4043":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:11563:6825":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:10319:4288":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"16:7568:7781":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"29:7906:4734":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:14156:7167":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:9014:6273":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:1406:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"16:4613:7805":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:859:3663":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:42094:3663":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"24:0:1948":{"crate_id":24,"path":["log"],"kind":"module"},"17:16109:7702":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:4450:3019":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"22:1094:6181":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"17:9891:23570":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:47966:8878":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:5009:4722":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"0:340:1961":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"5:2973:39484":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:32519:3628":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:6318:7942":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:44040:8598":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:5866:7855":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:13347:7007":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:13448:7025":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:39675:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:22217:16785":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:11144:9031":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:44834:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"18:609:6103":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"23:691:6089":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:5885:5823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:41919:36426":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:39631:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"21:2048:140":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"2:32406:8108":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"29:2005:5427":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"31:6399:4959":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"21:1484:4202":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"18:599:39533":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"29:5857:5754":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:10247:10204":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:495:4695":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:12290:6916":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"22:1023:6166":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"16:4986:7816":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:40858:8568":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:16146:7711":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:46753:8817":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:7722:7773":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:15329:7486":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:7610:6071":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:6818:8016":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:43016:36438":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:4031:3116":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:6189:7906":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"7:0:1686":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:10757:10808":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:8385:11450":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:3126:1168":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"29:4905:5563":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"22:1683:6266":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"23:97:27716":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:256:6614":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"28:137:27809":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"6:4764:5680":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:44847:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:11170:33876":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:4578:5598":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"11:1142:8316":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"22:1586:6092":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"1:11476:8914":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:3318:16779":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:4744:11404":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8011:3152":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:3201:3156":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"14:31:8295":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:13922:7115":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"23:0:2885":{"crate_id":23,"path":["memchr"],"kind":"module"},"31:6452:4971":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"1:3980:11388":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:42069:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"29:8420:6053":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:4854:5724":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11958:6885":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:14786:7343":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"31:5009:10398":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:7884:23531":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:621:8901":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:6742:8002":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"11:123:4213":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:15108:7429":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"30:4706:40764":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"17:11469:6809":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:15287:7477":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:48028:8879":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"21:2227:4208":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"9:393:22511":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:3199:3155":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"22:1052:6175":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"21:2115:6310":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"1:8959:3233":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:13033:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:13309:7003":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:34437:8070":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:5044:5774":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:5995:7722":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:3594:4043":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"31:5029:4532":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"1:939:8308":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:4535:5574":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:8814:9031":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:15356:7493":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:43493:8721":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:8232:9008":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:9021:9041":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"20:1654:6546":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"22:1342:40281":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"1:6811:11498":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:13383:7009":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:3581:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:13832:7104":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:12255:6914":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:7668:3542":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:16098:7701":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"6:6819:5982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"29:5298:5647":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"11:2548:10584":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:595:6621":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"21:2404:6399":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"1:7689:3541":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:40744:8681":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:8308:9012":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"22:998:6160":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"31:4796:4468":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"31:6717:10487":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"31:7214:5355":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"1:3482:2613":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:46310:8798":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:30812:36442":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"31:6785:28962":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"17:11536:6823":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:23779:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:5632:4312":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"29:6936:5828":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:10834:8595":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:47246:8841":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:40796:8564":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:14208:7173":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:40776:8685":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:16049:7686":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"22:1536:6237":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"2:42224:3663":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:47888:8877":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"20:1833:6569":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"31:5586:4684":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"1:8545:4043":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:6430:3235":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:40868:8688":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"0:438:2163":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"2:4534:3023":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"22:971:6606":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"0:341:1964":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"1:3732:8914":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4914:4437":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:903:4257":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:2205:4007":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:44911:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"29:8896:4723":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:9671:3104":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"20:2609:6497":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"2:40716:8680":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"31:7338:5161":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"16:2969:22660":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"22:1489:6230":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"2:4386:3012":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:2370:11363":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"29:8134:5970":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:15493:7545":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:3002:3195":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:13707:7085":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"11:2562:10587":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:4989:10627":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:41749:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:6913:6041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:13218:6993":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:43044:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:12718:23593":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"29:7502:5956":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"31:5221:6076":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"6:5075:5784":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"20:987:3092":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"5:3196:39076":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:40425:8664":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:8551:9028":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"0:32:1956":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"2:40576:11343":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"15:306:22614":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:483:5327":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:8190:3138":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:8978:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:4428:4697":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"22:1137:6186":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"5:4092:4044":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:5696:23519":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"21:1208:3152":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"6:1650:5435":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:6871:4268":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"31:5094:4562":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"0:437:2153":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"16:8134:8205":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:12850:6637":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:15659:7593":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"29:8377:6041":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:12038:1536":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"28:69:27794":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"17:12445:6936":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"29:8203:5981":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"28:127:27807":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"17:11978:6886":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"29:4558:18476":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:11973:8603":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:8237:11380":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"29:6893:5171":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"32:0:3216":{"crate_id":32,"path":["bitflags"],"kind":"module"},"29:7166:5903":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:5395:8928":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:13083:6985":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"29:7345:5940":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"22:1388:6222":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"11:1582:8319":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:2944:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"29:6721:4771":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:47170:8839":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:15384:7501":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:790:4228":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:2972:2844":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12191:6903":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:44637:10799":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:1966:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"29:5633:5718":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"29:4731:5529":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"31:5634:4695":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"17:11395:6801":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:2975:10658":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"11:1025:8312":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:7604:6070":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:12898:23594":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:4549:5581":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"29:9194:6071":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"20:1991:6586":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"6:4870:5731":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"29:1781:4532":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:14843:7377":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:14312:7190":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:40688:8677":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:5023:5763":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:15612:7580":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"29:5875:5758":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13145:6988":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:30580:3182":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"29:5903:5768":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"31:4660:10383":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"1:12051:1639":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"22:1378:6110":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"17:14921:7384":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"14:7:8295":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:12432:6268":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"29:5117:5606":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"31:7387:5178":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"30:3908:40767":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"11:1923:6269":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"21:268:39603":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"29:2027:5435":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:44068:8744":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:4569:11432":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"29:8253:5993":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"10:44:8325":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:46624:8814":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:3738:3151":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"0:599:2003":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"29:764:5346":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"21:1549:27752":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"2:10302:4287":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:7782:8150":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"29:8402:6050":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:10334:4293":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"5:3343:4257":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"3:0:478":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"30:3778:5250":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"31:5020:4528":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"18:736:27725":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"20:2229:3095":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"2:48250:8886":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:41942:8703":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:435:6619":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:12248:8593":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"20:2552:3084":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:4388:5496":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:44201:8749":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:48239:8885":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"31:6677:5002":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"17:11294:6794":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"11:2151:8313":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12273:6958":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:40706:8679":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:44210:8611":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:7694:7782":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:43661:8722":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"29:7443:4795":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:2526:7747":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:13478:7037":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:5588:7768":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:6079:5908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:7540:9073":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"20:2487:3085":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"2:15:2083":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:14904:7383":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:10172:6610":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:11194:23621":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:9971:8700":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"21:2579:27783":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"16:3600:7791":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"30:4114:40749":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"16:6204:7908":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"21:2087:6274":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"1:2380:11368":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"5:4050:4225":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"30:438:3020":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"21:1623:27754":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"1:7136:36025":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:15244:7463":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"22:1406:6146":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"17:11727:6845":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:6842:4255":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:39967:32164":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:43512:8590":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:2031:6625":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"20:1452:39563":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"18:690:6119":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"18:0:2885":{"crate_id":18,"path":["memchr"],"kind":"module"},"21:1706:6388":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"1:5446:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:12213:8610":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"21:2553:6293":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"29:5136:5611":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"31:5551:4664":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"31:7148:5106":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"1:4964:11446":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:12056:1246":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:922:8305":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:41789:8584":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:5130:5764":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:3160:34733":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:6299:8560":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:46456:8808":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"22:1552:6242":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"1:8157:3135":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:12828:6958":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:5111:10638":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"29:6763:4770":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"23:824:6122":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"11:1087:39507":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"20:2144:3097":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"6:7556:4950":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:13162:6990":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"0:442:2235":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"16:7768:7771":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"20:2519:2570":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"5:1477:8303":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:15519:7554":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:11313:9069":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:5987:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:40639:3165":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:12784:6955":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"6:6691:4409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"20:713:6476":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"17:11449:6688":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"31:5904:4770":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"1:7026:4316":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"29:0:878":{"crate_id":29,"path":["libc"],"kind":"module"},"1:4469:11414":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:7492:8135":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:14087:7153":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:5322:7821":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:266:4225":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:1534:4043":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:12560:6941":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:7529:6621":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:15546:7563":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:6944:39517":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:8050:8198":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"31:6743:10506":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"20:2197:2570":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"1:8476:9023":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:6804:5977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:10067:6607":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"31:7157:10509":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"1:5971:4312":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"23:716:39533":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"29:8105:5159":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"11:1066:22588":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:40844:6107":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"29:4945:5569":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:9474:8955":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:12921:6921":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"29:783:5351":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"17:12596:6944":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"18:699:6120":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:9344:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"21:1467:27756":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"23:807:6119":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"31:6054:28955":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"6:6169:5929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:15062:7416":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"30:3610:40763":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"16:7284:3315":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"31:7298:5159":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"33:0:2258":{"crate_id":33,"path":["termcolor"],"kind":"module"},"1:12049:1641":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:6071:5903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:15631:7584":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:10988:6767":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:1536:8394":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:3127:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:12054:848":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:7754:3740":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"30:4212:5279":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"16:5712:7835":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:11369:6800":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:10338:34133":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"28:183:4194":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"16:3065:6647":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"29:522:4696":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"1:12031:1033":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:4703:11414":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"20:2543:3095":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"23:753:6109":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:40470:16708":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:2426:1947":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:16170:7000":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"21:1057:6286":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"17:14399:7207":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:1541:4243":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:10131:3998":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"21:2311:6381":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"21:2360:6450":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"2:23055:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:11243:6791":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"20:1802:6568":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"1:11593:9070":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"26:134:134":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"2:41835:6272":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"21:1144:27764":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"17:9790:23587":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:4957:3164":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"5:1024:4225":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:40529:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:8251:16758":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:2202:8912":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:0:1528":{"crate_id":1,"path":["std"],"kind":"module"},"1:3239:2728":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"18:531:6092":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:8169:3136":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"9:177:9708":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:357:3549":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"20:2496:3089":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"29:8163:5975":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"31:4674:28949":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"17:14509:7228":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"29:9297:6076":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"30:5209:5320":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"11:396:4217":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"18:582:3618":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:40675:3138":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:261:6615":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:9824:2613":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:5104:5803":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:14698:7281":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"22:1195:134":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"30:2838:5181":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"17:13896:7112":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:42762:2851":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"31:5674:4702":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"1:945:8310":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"16:6361:7946":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:44478:8762":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:10948:3095":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:1778:634":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:10242:6612":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:4506:5563":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"22:1086:6135":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"17:14251:7179":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"31:4843:28950":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"23:556:6606":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"6:7616:10649":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"31:6632:4996":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"2:43918:3094":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:12042:691":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:10831:33878":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"5:7346:8410":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"15:288:22613":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"21:1156:27765":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"1:9026:9042":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:42414:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"31:7369:5171":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"2:2492:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"29:7228:5920":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:2236:39407":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:14896:7382":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:580:5341":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:1486:8304":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:4461:5540":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:1387:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"29:1948:5402":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"21:1284:6272":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"2:7281:36182":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:6117:3116":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"21:2200:3152":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:48259:8887":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"20:2096:3098":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"29:728:4698":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"1:7663:2003":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"5:7338:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"31:5799:10444":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"22:1042:40280":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"6:4841:5718":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:43028:6415":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"30:4144:5275":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"17:11604:6828":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:2670:7753":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:8842:9033":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"31:6686:10476":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"30:3845:22547":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"17:11226:6788":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"11:1603:8320":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"21:2125:6428":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"2:23334:8645":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:15961:6991":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:46980:8836":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"29:9263:10536":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"23:638:27727":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:3670:11382":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:3394:3116":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:32463:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:9034:9044":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:45955:8784":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:14633:7230":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"21:1518:27751":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"5:1315:8317":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:12486:6937":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:9274:3735":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:44022:3095":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"30:5305:5321":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"1:1545:4257":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"21:1335:27742":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"6:6700:5963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:41772:8582":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"31:4645:4423":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"14:215:8298":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"29:6830:5826":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:2701:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:4050:11395":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"27:5:2762":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"14:187:22601":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"31:5754:10430":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"22:1060:27789":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"17:14282:7184":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"29:5800:5746":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"29:1845:5374":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:12048:793":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"20:2559:3096":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"2:44086:8745":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:16062:7692":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"31:4827:10389":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"16:5634:7825":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:6386:7948":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:9860:23589":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"30:3571:40754":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"22:1528:6236":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"6:7692:4410":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:6600:23524":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"5:5877:4243":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:4351:5469":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:4561:3024":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:8154:8206":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:11051:4325":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:12180:6902":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:786:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:15589:7579":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:10520:39525":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:4616:5615":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:13856:7105":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"31:5300:10422":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"1:10840:33874":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:6156:7901":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:11269:6766":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:44928:8780":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"31:4467:4395":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"20:1947:6480":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"26:181:2707":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"20:2534:3094":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"5:4020:4243":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"29:6871:5166":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:8245:4046":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"31:6108:28957":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"6:569:5339":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:4686:5647":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"31:6614:4990":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"9:486:22509":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"29:5725:5735":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:21210:36649":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"11:2231:6812":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"20:1422:4233":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"28:132:27808":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"2:33545:3005":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:45977:8785":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"31:4949:4508":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"2:43936:8596":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:5816:7847":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"18:707:6122":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:1902:11339":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:5992:3174":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:2644:7752":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"20:1693:39555":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"2:44526:8771":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:22666:36435":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"11:673:4043":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:6017:23521":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:7554:7780":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:43904:3140":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:7923:3149":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:15507:7551":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"29:4865:5555":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:4235:3032":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:44492:16662":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:13055:37297":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"29:5344:5657":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:6531:7963":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"5:1286:8313":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:4641:7806":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:8226:9006":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"29:5454:5680":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"29:7973:4409":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10293:3140":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"21:0:3001":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"21:1640:6387":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"22:1651:6259":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"17:15267:7471":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:12387:23715":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:5015:5758":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:14757:7333":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:9730:23585":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:44320:8751":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:41997:8586":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"29:1687:4699":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:11307:8942":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"31:6497:28959":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"30:356:10198":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"29:2074:5452":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:5753:3231":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4610:5613":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:5727:7838":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"21:2469:27745":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"17:15480:7539":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6499:7784":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:26181:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:6879:8021":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:1969:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"29:7143:5896":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:6889:6031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"31:6298:10462":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"17:11590:6827":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"22:1315:27789":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"23:699:3618":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"24:198:2408":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"31:4806:4470":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"2:25:658":{"crate_id":2,"path":["core","env"],"kind":"macro"},"31:6585:10474":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"21:1322:6346":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"1:3988:11389":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:4968:10612":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:7643:11371":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"29:5763:5738":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:4637:5140":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:11755:6848":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"11:844:11316":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"9:52:9693":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:11065:6773":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:8274:8917":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"33:43:3246":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"23:777:6110":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"28:28:27796":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"29:8221:5982":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:42233:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"20:1545:232":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"2:1906:8421":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"21:1748:27750":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"2:9878:2851":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:40368:8549":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:15133:7434":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:21840:11371":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:9196:10735":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:2474:10655":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:11516:8915":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"30:4846:40762":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"20:1380:6408":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"29:7953:4403":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:14181:7170":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"23:632:6087":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"23:741:39536":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"28:19:3217":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"16:3764:7792":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:7862:8162":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:4893:5738":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:13285:6999":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:15345:7489":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"29:604:5330":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:7067:8048":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:15321:7485":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"24:290:3054":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"1:7915:8961":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"11:2140:8312":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:40619:8673":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"21:2544:6289":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"11:1566:22589":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"30:3670:40761":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"30:4541:5285":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"17:10785:39530":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"20:1289:3092":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"29:5706:5731":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:5961:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:9918:23590":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:1873:8909":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:893:4243":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"22:1596:2003":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"2:21225:36652":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"22:1659:6262":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"31:4753:4449":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"6:1570:5382":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"22:1604:6250":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"26:157:3207":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"17:13648:7073":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:13676:7079":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"0:439:2220":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"1:12053:1637":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:48174:8882":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:32551:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"6:548:4664":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"33:409:3257":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"2:40666:8676":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"11:1676:4219":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"20:1492:6522":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"1:7843:8955":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"11:434:39501":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:903:4043":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:7128:9044":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:32436:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"29:5611:5710":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"18:481:6088":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:44298:16661":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"29:4828:5549":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"30:3086:5190":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"30:2853:5186":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"17:12077:6891":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:5051:8927":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"19:0:1130":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:5117:10641":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:21553:11371":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"31:4813:4471":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"6:6943:6057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"31:6640:4997":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"0:269:140":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"17:9943:23573":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:8802:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:5140:10515":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"29:5154:5613":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"29:9276:4410":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:3603:4243":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:6194:8938":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"21:2593:39601":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"29:806:17153":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"30:4828:40759":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"2:22620:8628":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:11126:6777":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:3081:16633":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:867:8303":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:43300:8719":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"20:1628:134":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"29:745:5341":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"29:1802:5359":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"18:507:6089":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:41022:8571":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:40758:8684":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"20:2268:3093":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"20:2466:6603":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"22:1013:6163":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"30:4338:40765":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"0:571:2095":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"31:5851:4763":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"6:6086:5909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:3936:11385":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"22:1677:6265":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"2:10990:8600":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"22:1399:6227":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"1:1562:6394":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:13809:7100":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"31:4547:4409":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"2:8919:3317":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"30:457:113":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"21:1131:6301":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"16:5661:7834":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"22:985:6110":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"20:1889:6574":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"31:5712:4723":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"2:4266:3033":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:12418:6933":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:48311:8891":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:6753:8003":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"29:5572:5701":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:1455:3663":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:42336:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"29:9234:5765":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:40463:8667":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"20:2432:3099":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"16:2810:7759":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"29:8890:10530":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"21:1932:4198":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"2:41955:8917":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"30:3475:5194":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"2:40809:8686":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:3162:11329":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:43730:8726":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:2704:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:42208:4043":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"20:1998:6588":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"22:1521:6235":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"1:3278:2730":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:10618:39527":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"21:1919:6412":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"2:5687:3116":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:13989:7124":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:47010:8837":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:40767:8559":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:5592:3116":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"28:182:27814":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"6:1682:5453":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:8796:9030":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:40787:8563":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:4159:11410":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"14:202:16663":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"23:769:6089":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:0:533":{"crate_id":2,"path":["core"],"kind":"module"},"1:6896:4315":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:33722:16768":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"20:1896:6531":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"17:14021:7128":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"33:62:3247":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"22:1690:6267":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"22:1261:6202":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"31:4742:4444":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"1:5415:8929":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4529:5571":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:2334:16785":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:9099:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:511:6620":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10896:6757":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:23086:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:4028:11391":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"11:2423:3663":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:16180:7005":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"5:5650:4255":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"11:299:10788":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:11001:6768":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:21994:11502":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:4566:5591":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:11957:16843":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:11619:8948":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"21:2294:4202":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"2:42650:3229":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:4311:8919":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:2048:3151":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"31:5865:10453":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"6:1546:5365":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"30:2624:5183":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"2:1618:2409":{"crate_id":2,"path":["core","mem"],"kind":"module"},"21:1402:4199":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"2:11475:8601":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:4440:5531":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:4774:7809":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:7828:8158":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:7367:3663":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"31:7278:5146":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"1:9048:33446":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"29:8295:6018":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:42492:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:637:8902":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"21:1115:6293":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"2:46856:8819":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"20:1605:6472":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"17:15367:7494":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:44503:8763":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"29:5054:5591":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:10950:6762":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:9104:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:2949:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:22080:11586":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"31:4975:4516":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:22605:36459":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"28:152:27812":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"16:4462:7800":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:909:8318":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:8453:6197":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:21181:36645":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:42148:3784":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:3032:7786":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"24:241:3053":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"2:42769:2850":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:6658:4734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"31:6923:5052":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"1:4635:5138":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"14:160:8295":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:44366:8760":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"22:1102:6185":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"17:13235:6994":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:0:2883":{"crate_id":16,"path":["gimli"],"kind":"module"},"29:4788:5537":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:6741:5969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"23:731:39535":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:3687:4225":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:4381:3011":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:7111:3671":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:12039:1622":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:12584:6943":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"29:5496:5689":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:21434:11371":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:10767:8956":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:6467:7955":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:44226:8549":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:16076:7695":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:2707:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"20:307:6471":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"16:7102:23527":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:15294:7478":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:11549:6824":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"29:8070:5969":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:44649:10802":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"24:326:3055":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"1:4129:36028":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:2986:3624":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:6813:5981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:15527:7557":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"31:5104:28951":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"11:430:39499":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:12091:6895":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:1301:8312":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:14439:7212":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"20:1671:39554":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"17:12972:6971":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:3255:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"31:4588:4419":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"28:181:27813":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"31:6660:4999":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"20:2248:3084":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"31:6081:28956":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"17:11497:6818":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"29:5277:5646":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:7668:10536":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:44182:8747":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:6243:7928":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"29:7203:5909":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"33:13:2765":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"11:2569:8411":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:13395:7012":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:7935:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:7634:4261":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"20:1725:6563":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"1:8006:8963":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:22593:8627":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10925:23603":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:2907:7763":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:4377:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"23:726:6103":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"11:811:4257":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"5:7618:4257":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"18:755:6134":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:123:17154":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"28:0:3213":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"22:1422:2003":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"2:1897:10662":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:8300:9006":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:8072:8199":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:3655:6652":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:5049:7818":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:7481:36455":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"21:2510:6454":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"31:5282:4598":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"2:22553:9719":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:8850:4043":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:13297:7000":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:40496:16709":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"31:5626:4694":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"0:574:2101":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"29:8458:6061":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"30:2529:5182":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"31:6560:10465":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"5:6484:4243":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:6222:5944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:44890:8775":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:10665:4043":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"29:1693:4506":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:22125:11587":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"16:7513:8138":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:39615:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:3930:11386":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:13082:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"22:1225:6197":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"21:1871:4204":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"16:8205:23532":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:2354:11358":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:4889:7813":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:7644:3551":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:12033:1657":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:11052:6748":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"31:6737:10503":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"2:3737:3663":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"29:9158:6069":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:11816:4332":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:4724:5668":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"29:5412:5669":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:12166:6901":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"21:2665:6466":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"6:1697:4413":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:10813:39526":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:2380:7741":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:212:4223":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"31:4621:10375":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"10:0:2878":{"crate_id":10,"path":["adler"],"kind":"module"},"11:742:8302":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"20:2351:3100":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"29:7185:5908":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"31:6950:5056":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"17:14194:7172":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:7855:8957":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:14413:7210":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:12474:6747":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"16:2881:7762":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:10016:23568":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:12047:797":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"31:6325:4934":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"31:4651:10380":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"2:23272:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"6:4473:5549":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:43721:8724":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"20:2572:3085":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"23:761:6089":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"31:7227:5120":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"21:1998:27766":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"6:4676:5646":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:40735:8556":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"5:7306:4235":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:3099:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:13463:7031":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:39741:11309":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:31182:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:10940:3740":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:6279:7940":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"22:1167:4304":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"2:43071:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:4647:5639":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"21:1416:27747":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"29:8329:6031":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:12797:6957":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:46208:8794":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:10355:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:40726:1956":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"22:1247:6469":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"17:13882:6856":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"31:4771:4457":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"31:6578:10472":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"1:2600:4288":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:22628:8629":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"16:2722:7755":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:43053:3103":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:557:3538":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:10822:3135":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:3443:3126":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:12174:8608":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:6666:5146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:15079:7421":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"21:1194:134":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"2:21564:6152":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"9:330:10590":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:7906:8960":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:12055:1696":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"31:5642:4696":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"1:9164:3552":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:48136:8881":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"21:1974:6415":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"5:3184:4043":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:46408:8807":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:6100:5920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:6686:4225":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:6644:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"20:2174:3089":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"21:2109:6308":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"31:5765:4743":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"1:640:8904":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:2450:7744":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:6346:7944":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"31:7261:5145":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"17:15087:7424":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"33:74:3248":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"1:7599:4319":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:849:4044":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:11612:8948":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:12009:6747":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"22:1668:6264":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"29:5914:5774":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:15192:7448":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"18:644:6089":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"11:832:8318":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:14221:7174":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:44837:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"22:1107:6158":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"22:1201:3152":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"2:22744:11384":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:10207:6611":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:6146:4298":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:4884:5736":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:10430:9030":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:10155:9048":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:15003:7404":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"11:2369:8323":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:13436:7022":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:9867:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:1639:5427":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:42988:10728":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:9886:2852":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:12014:33842":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:723:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"21:1188:1958":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"6:5921:5171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:6136:10524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"21:2367:6280":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"17:15980:7672":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:43813:8732":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:6898:6034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:2197:6629":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"14:165:22594":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:43290:6197":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"31:4996:10391":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"30:3797:27855":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"33:79:3250":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"17:15671:7595":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:44335:8756":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"29:7476:5945":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"31:6138:4848":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"1:5308:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:13948:7118":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:6513:7956":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"29:5394:5175":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:3163:9730":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"23:681:6097":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"29:2151:5462":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:22718:8641":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:4830:5710":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:1528:4532":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"18:574:6089":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:46554:8811":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"27:0:2257":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"30:479:10202":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"2:48296:8890":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:4639:5142":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:14887:7381":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:3166:9929":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:31210:3618":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:30706:36443":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:13976:7123":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"31:5245:5330":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"2:43750:8728":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:2864:7761":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"20:1732:6564":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"1:8828:9032":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"31:5913:4771":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"2:3339:16691":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:15566:7566":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"11:800:4243":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:6159:5940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"21:1850:27746":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"16:5982:7870":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:10337:6733":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"22:1281:6147":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"2:40515:8670":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:2778:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:4151:11409":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"29:5513:5692":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"31:6473:4972":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"22:1188:2003":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"31:5085:4560":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"33:358:2635":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"1:4625:11390":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"11:774:8303":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:3133:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"20:1661:6547":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"2:3328:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:40534:8671":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:47778:8876":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:3241:3157":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:7388:6068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:7503:7778":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"23:872:6134":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"31:5275:5754":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"2:46675:8815":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:4169:16693":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:5085:5789":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"22:0:3002":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"1:5746:3230":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"20:1561:6197":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"5:3191:6393":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"23:707:6098":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:6120:5925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:1271:2003":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"20:1861:39557":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"16:7041:8043":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:15212:7455":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"20:2590:3093":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"30:466:27841":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"6:4434:5529":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:39697:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:3915:7796":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:886:4233":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:6569:7772":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:12037:1503":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:149:4210":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"26:194:134":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"2:42748:2849":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"31:5602:4690":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"23:798:6117":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:5941:5828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:13097:6986":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:2418:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"23:816:6120":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:5088:7819":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:12032:451":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:281:2077":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"29:5883:5763":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:9030:6146":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"11:2304:8051":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"29:5369:5668":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:7622:6072":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:507:4702":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"22:1333:6210":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"2:45911:8782":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"11:0:2879":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"33:221:3255":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"2:12446:6122":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:7342:39522":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:12701:6951":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:4375:5486":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"31:5880:5463":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"6:555:4954":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:44172:3137":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:4737:16702":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:41208:8573":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"31:5788:4746":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"2:23210:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"20:2202:3090":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"22:1437:6152":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"2:10083:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:21381:11371":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"21:2173:4198":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"2:2698:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:14765:7336":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:5743:7839":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:588:5346":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:4865:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:7269:39521":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:4584:5601":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:5128:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"31:4575:4415":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"17:11617:6829":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:4755:5676":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:22682:36413":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"29:6986:5840":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"22:1292:6206":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"2:4127:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:10953:8931":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:6929:8025":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:40609:4276":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:4053:7797":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:7751:16759":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"11:2536:4204":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:2993:3626":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:39794:8658":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"20:1533:6531":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"7:78:22503":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:7503:3161":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:4808:5699":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:7708:7783":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:4212:3116":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:43269:3999":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"20:1780:6566":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"2:46245:8796":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:3735:8915":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:4417:7799":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:12036:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"6:6107:5921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:918:8302":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"29:641:4960":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"6:5955:5839":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"23:648:6092":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:1789:4257":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"16:7054:8045":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"11:2498:22584":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"6:6114:5922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:10559:6745":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:7217:16762":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:2440:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:40546:36455":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"31:5696:4719":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"31:5964:4810":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"2:13328:3190":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:11256:6792":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:4527:7802":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:15101:7427":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:8115:8202":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:42755:2848":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:3460:6635":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"29:621:5333":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"6:4776:5687":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:12452:16649":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"29:8181:5977":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:33125:8061":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:10915:6759":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"31:6431:4966":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"31:4723:4437":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"22:1630:6156":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"23:836:6126":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:9624:23567":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:2093:8424":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:34091:16772":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:4344:7798":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:12457:16648":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"30:4809:40756":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"17:14778:7342":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:501:4719":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"30:3000:5189":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"5:1516:8302":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:11234:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"1:4042:11393":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:4309:3010":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"21:2029:134":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"29:5015:5581":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:41246:4282":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"16:5574:7765":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:1596:5397":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:10578:3541":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"29:5536:4537":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:14170:7169":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"31:5269:10419":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"22:961:6157":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"1:504:3531":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:10944:8375":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"21:1184:6310":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"2:32413:8648":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"31:6623:4992":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"17:12230:6905":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"11:364:4215":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10803:6750":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:10968:33462":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:4902:5744":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:47430:8843":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:5363:7822":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:42531:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:1718:5462":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"18:491:6606":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:1734:5463":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"31:6669:5001":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"1:2518:3147":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:6718:5126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:2368:11362":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:48212:8883":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:7582:8141":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:12115:6897":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:2911:4304":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:4847:5721":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:2933:22659":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"21:1885:27744":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"1:8904:11473":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:10974:6766":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"21:2160:6434":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"31:4628:10376":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"16:4921:7814":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"20:931:3087":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"1:1063:8313":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:44645:10801":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:46125:8791":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:12197:8609":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"4:0:2875":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"14:221:8299":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"5:7267:3191":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:5146:10517":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13754:7091":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:4366:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"11:1887:3663":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"26:101:2698":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"2:23148:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:6893:8023":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:21442:11503":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"0:585:1972":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"16:8097:8201":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"20:1574:6448":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"6:4523:5569":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"31:7219:5117":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"31:5263:5689":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"31:7117:5102":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"17:3584:6636":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"11:1896:4257":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:11817:23689":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:21436:11500":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:9884:2853":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:4773:6642":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:46226:8795":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:6425:7952":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:401:6617":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:13742:7089":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:5152:10520":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10051:6732":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:6540:3238":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"31:5307:10424":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"17:12140:6899":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:4824:5707":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:1692:3116":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"31:5070:4552":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"30:5193:5318":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"2:39780:8657":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:44217:8667":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:11800:6852":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:5625:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"30:534:4043":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"11:2124:8051":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:6059:5896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:3500:3127":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"31:5041:4537":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"17:14324:7192":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:12614:23592":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:5033:5768":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:4955:10602":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"21:1535:6369":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"6:1664:5446":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:9128:2697":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"20:2437:3100":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"31:4510:4397":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"1:8535:8922":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:14497:7221":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"20:2220:3094":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"1:10780:9061":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:6263:5956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:43968:8742":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:3225:6392":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"29:7246:5921":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"31:6606:4989":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"1:6596:3243":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:5431:8930":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"30:4685:40757":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"2:44661:10805":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"21:1671:27743":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"2:21562:11501":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:527:5330":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:6489:10794":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:14099:7155":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:2711:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:1744:728":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"2:46156:8792":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:2487:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"31:6357:4950":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"17:10775:6749":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"21:1945:6413":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"2:42453:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:2618:7751":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:6764:5159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:22431:8621":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:2659:16713":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"21:1178:6308":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"2:42146:3184":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:12050:1638":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:6868:6018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13695:7084":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:5825:3241":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:1785:3762":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"30:5180:5316":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"17:11645:6831":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"6:4789:5692":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:10802:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:3410:3031":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:2997:3004":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:47636:8875":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"21:1389:4206":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"1:10535:2728":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:1203:6624":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:9882:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"29:5817:4437":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:4556:5584":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:22484:8622":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"31:7204:5114":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"20:1433:39564":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"29:4564:4722":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:7276:3663":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:5:1707":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:4700:11441":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:5763:8557":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"30:4450:5284":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"2:2695:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:13869:7108":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"21:1107:6289":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"29:1913:5395":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13684:7081":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"31:7378:5175":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"11:1910:6393":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:44940:3189":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:4777:717":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"31:5872:10455":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:10102:6608":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:15125:7432":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:42165:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:22317:11582":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"16:7736:8148":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"23:853:27725":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:22271:16785":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"5:6604:3663":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:44140:8746":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"20:2444:3101":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"6:6837:5993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"29:7993:5963":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:10941:6760":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:16032:7684":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:30636:3103":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:9678:23574":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11632:6830":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:5381:5234":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"31:4988:4522":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"2:40383:8660":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"11:2469:4257":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"20:2581:3090":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"2:46107:8790":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"29:5194:5624":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"29:5033:5584":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:536:7720":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:22:731":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:10738:9056":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:10796:8594":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:43862:8736":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:30620:3766":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:22711:10795":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:4603:5611":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:3510:3130":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:15557:7564":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:1496:4506":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4516:5566":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11088:6774":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:33604:3196":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"31:5236:5359":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"22:1611:6251":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"16:4949:7815":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"20:2005:6591":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"28:42:27802":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"24:352:1953":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"2:7747:16760":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:12153:6900":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:6485:7767":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:10321:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:14455:7214":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"11:2443:4243":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:4928:6644":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"11:1007:8051":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:4460:3020":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"29:1726:4511":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"22:1507:6233":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"16:6687:7989":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"22:1368:40278":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"21:1296:6273":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"17:15842:6986":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"21:1602:27753":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"16:2548:7748":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"31:6542:28960":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"17:2169:23648":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:692:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:7651:10650":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:5969:5840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:12684:6707":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:14822:7372":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"21:1958:27749":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"6:7645:5767":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:4922:5749":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:8181:7785":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:14989:7401":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"29:1869:5382":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:10762:10810":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:12127:6898":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13491:7041":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:15747:7611":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"21:2186:134":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:43986:8743":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"31:5666:4699":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"2:48426:8896":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"31:5805:10446":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"17:15710:7604":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:41215:8574":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:4491:11415":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:4821:11400":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:1507:4511":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:1821:3736":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"31:7106:5099":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"17:11027:6724":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:6426:3234":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"31:5983:10460":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"29:2130:4413":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"21:2489:27746":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"2:3123:3259":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:41008:8570":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:44855:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"18:564:6097":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"31:5292:4600":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"31:5888:10458":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"16:2321:7732":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"31:5560:4666":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"6:4908:5746":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"0:576:2104":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"2:13273:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:2062:8395":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:12572:6942":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:4947:10597":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:12003:11304":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:14385:7206":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:6376:23523":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"31:5251:10410":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:7371:4723":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"31:7076:28965":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"30:3821:27856":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"17:12600:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:6401:7766":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"31:4733:4442":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"16:3232:7731":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"18:538:6095":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:2336:16786":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"6:6934:6053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:21455:6152":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:13224:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:12872:6960":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:2523:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"21:1588:6381":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"5:7559:8419":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"23:655:6095":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:5123:10644":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"20:1582:6537":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"29:7355:5929":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"29:5225:5639":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:3022:8066":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:14878:7378":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:14041:7129":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:5435:7823":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11426:6804":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:23241:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"26:102:2700":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"29:1709:4508":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:7284:8409":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:9339:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"30:4023:5274":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"17:3251:6633":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"0:0:2256":{"crate_id":0,"path":["env_logger"],"kind":"module"},"16:7474:8129":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"11:1107:8315":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:7660:8146":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"23:844:6129":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:4783:5689":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:40489:8669":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"31:5990:28954":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"1:8001:8962":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"30:5074:5315":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"},"5:7434:11315":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:22645:36427":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:44725:16882":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"31:4833:4475":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"29:5594:5707":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"21:1830:27745":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"6:4449:5536":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:9876:2849":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"31:7235:5126":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"0:342:1989":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"2:23303:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:5571:11468":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:8239:8108":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:6012:5869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:2504:7746":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"20:2169:3097":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"1:3994:11390":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"5:2154:8396":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:4444:4250":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:2662:3150":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:16016:7679":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"21:2560:134":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"2:21870:8620":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"20:2012:6516":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"23:788:6116":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"33:76:3249":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"1:4383:8920":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"11:856:8308":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"15:394:22623":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:8281:8218":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:6682:4403":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"18:727:6129":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10569:39529":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"29:2167:5463":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:475:5322":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:11141:6778":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"31:5825:4754":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"29:5981:10515":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:5876:8558":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:10095:1972":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:13235:4298":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:48364:8894":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:8213:3094":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"20:1754:3020":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"20:2255:3096":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"1:6070:4307":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:3315:7789":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"20:1398:6501":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"2:46186:8793":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:22188:11371":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"2:40447:8666":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"22:1495:6231":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"21:1081:27763":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"2:48334:8892":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:15990:7673":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"29:8924:6068":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"20:2238:3086":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"1:3366:3162":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:32427:8649":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:1424:4043":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:10962:8598":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"29:2113:5178":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"31:4528:4400":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"2:42375:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"21:1779:27748":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"1:3280:3154":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"21:1376:4205":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"2:3130:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"29:5321:5656":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:6248:5945":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:43800:8731":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"31:6980:5065":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"17:11507:6819":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:1439:4044":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:2696:7754":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:7462:8128":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:6711:5968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"29:8856:6067":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:7633:5765":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"29:8017:5968":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:11549:16645":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"29:486:5322":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"29:4998:5579":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:21992:11371":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:12044:798":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"29:4749:5531":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"20:1468:6519":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"5:7450:3543":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:40998:3139":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"30:0:3214":{"crate_id":30,"path":["rustix"],"kind":"module"},"1:11045:4324":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:42611:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:9479:4320":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"29:1822:5365":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:43712:8723":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"18:671:6116":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:12503:16655":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:12202:23713":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"26:100:2699":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"2:42258:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"29:5987:10517":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"31:6711:10485":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"29:5478:5687":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13026:6974":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"21:1733:6391":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"17:12029:6889":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:40482:8668":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"29:4805:5540":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:2658:11371":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"31:5748:5339":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"5:1505:8301":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:41237:3162":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:15027:7406":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:39598:11328":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"33:161:2725":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"16:2832:7760":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:40455:8549":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:1556:6393":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:1550:6392":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:1054:8312":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"21:2385:6447":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"23:624:6089":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"31:5773:10438":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"1:11382:10811":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4878:5735":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:48270:8888":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"30:2989:5187":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"6:4814:5701":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:5760:23520":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"20:2346:3099":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"29:809:17154":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"29:712:5339":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"2:38299:16776":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:4231:8918":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:6249:4312":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:32438:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:12548:6940":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:4480:5553":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:44349:8759":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:4150:16632":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"31:5658:4698":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"6:6961:6061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:2946:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"29:5171:5615":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:11576:6826":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:11779:6850":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:8891:9036":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:4103:8550":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"22:1127:6178":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"2:21208:36642":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:12437:6146":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"24:277:1952":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"6:4543:5579":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:45931:8783":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:2944:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:5082:8927":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:9109:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:1758:3720":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:4710:5657":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4745:5669":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:7901:8913":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:14235:7177":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"21:1504:6365":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"31:5814:4750":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"22:1560:6243":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"17:16004:7677":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"29:1987:4528":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"20:2211:3085":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"16:6415:7951":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:7613:8144":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:7679:10651":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"29:7042:5853":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"20:1965:6504":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"21:1766:4201":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"11:687:4044":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:13504:7042":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:5905:7857":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:2703:10659":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"29:658:4664":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"29:5893:5764":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:8286:11413":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:9880:2850":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:40646:8674":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:4998:10633":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"11:837:8305":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"31:5739:4739":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"5:2256:9718":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"13:110:39508":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"20:1528:6469":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"29:4962:5571":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:12392:3058":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"29:5555:5699":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"29:6961:5839":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:21882:36650":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:3966:11387":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:15868:7629":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:46502:8809":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:2622:3141":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"31:4558:4410":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"2:46055:8788":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:1591:5395":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:4595:5606":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:11767:6849":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:9823:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:32420:3020":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"16:5648:7829":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:4167:11411":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:3818:4257":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:15253:7464":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13365:7008":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"20:2047:6595":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"2:12137:8606":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:5639:8932":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:2596:7750":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:38354:16777":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"29:505:5327":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:8936:11474":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"20:1922:39562":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"22:1514:6234":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"11:1891:4243":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"22:1237:6200":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"17:10471:39532":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"30:3293:5192":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"1:12043:693":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:5807:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"11:700:3663":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:44669:9724":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:9813:23588":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"20:2119:3098":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"20:1814:6475":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"29:5974:5803":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"20:1647:6545":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"2:22164:11588":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:12052:6890":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"0:70:717":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"33:311:2763":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"17:11701:6841":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"31:4713:4432":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"17:15855:6987":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"31:4957:4511":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"2:30648:36441":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:16123:7706":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:0:2884":{"crate_id":17,"path":["object"],"kind":"module"},"1:10538:2730":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:5392:16637":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:1632:4528":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"11:2326:8312":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"25:0:2876":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"5:3607:4044":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:39655:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:2359:7740":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"5:7316:39082":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"26:164:128":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"21:2277:4199":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"2:44235:8666":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:4998:854":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:8352:8921":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:5780:3232":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:40:4221":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:4806:7810":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:10667:39528":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:10714:3094":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:43842:8735":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"29:5783:5744":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11307:6795":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"21:2574:6460":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"2:30351:11383":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:3753:8395":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"20:1938:4209":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"29:4884:5558":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"20:1842:39560":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"2:46776:8818":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"9:0:2877":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:41806:11381":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:7657:10532":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"11:2542:10583":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"30:3872:40750":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"16:6915:7775":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"29:2143:5459":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:62:17104":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:4364:5478":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"31:6965:5062":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"17:14934:7389":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:7296:4243":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:23024:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:15177:7446":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:1094:6622":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"33:89:3252":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"17:11743:6847":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:46600:8813":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"29:676:4954":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"20:1790:6567":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"2:7879:3260":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:2352:2187":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"11:1917:6394":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:22203:11591":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:9559:23569":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:11158:9032":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:12659:23571":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"20:1512:6501":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"6:5974:5841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:1151:39486":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"31:4615:10372":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"1:8991:33474":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:7015:8042":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:7534:7779":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"18:521:27727":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"20:2054:6596":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"1:4906:11439":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:42103:3315":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:7865:8958":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:12356:6924":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:10532:3155":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:3491:32783":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"5:3230:39077":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:48349:8893":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:2942:3028":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:12758:6954":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:15903:7659":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"11:2554:39506":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"20:0:1765":{"crate_id":20,"path":["regex"],"kind":"module"},"22:923:11371":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"6:542:4960":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:482:4300":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"6:1703:4963":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:2766:7757":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:5673:7769":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"21:2423:4204":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"31:6389:4954":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"31:4599:4420":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"20:1622:6542":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"1:11388:10812":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"14:0:2881":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"31:5580:4681":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"1:11370:8947":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:46578:8812":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:13107:8618":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:2144:3531":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:5052:5776":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"31:6310:4928":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"31:4635:10377":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"18:652:6089":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:7878:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"20:2358:3101":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"7:31:22496":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:44546:8615":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:8973:9037":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"31:5226:10405":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"29:8351:6034":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"15:0:2882":{"crate_id":15,"path":["addr2line"],"kind":"module"},"29:7925:5146":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"31:6421:4963":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"17:10608:6746":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:15224:7456":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"18:636:6109":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:8200:3139":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:14373:7205":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:5419:6732":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:48387:8895":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:11508:8602":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"22:1147:6187":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"0:14:1954":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"17:12953:6968":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:5068:5781":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"0:445:2032":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"16:7792:23530":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:11459:6807":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:44898:8777":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"18:113:27717":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"11:710:8301":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:4182:3116":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:6610:3244":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"29:5077:5598":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"31:5835:4757":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"2:3333:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:44192:8748":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:15645:7586":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"30:4195:5278":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"2:48285:8889":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:1710:5459":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"31:5002:10394":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"31:5896:4767":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:10432:39524":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"21:2099:4199":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"17:12432:6935":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:40697:8678":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"20:1213:3087":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"17:15301:7479":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:1883:16795":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"23:114:27717":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:14470:7218":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"29:5650:5721":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:533:5333":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:7639:5766":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"29:4846:5553":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:44513:8767":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"31:4782:4461":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"20:2524:3086":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"30:3192:5191":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"31:6649:4998":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"29:2136:4963":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:6792:8015":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:14485:6921":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:44713:3199":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"29:8035:5126":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:8326:9013":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"31:4519:4399":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"2:6494:2592":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"28:147:27811":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"1:2586:3148":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"28:47:27799":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"6:4628:5624":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"21:1167:6306":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"2:42998:3103":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"20:2277:3091":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"6:5897:5827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"22:1351:2003":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"2:40435:8665":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:39551:16634":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"29:5256:5640":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:1040:8051":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:43308:8720":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:14122:7164":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:1576:5383":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"29:9240:5766":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:48230:8884":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:41231:8575":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:7826:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:6798:5975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:11605:33480":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:43888:8605":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:6041:23522":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:10511:11371":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:2183:9717":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:13121:6987":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:4496:5558":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:42147:3183":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:43787:8674":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10315:6616":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"22:1457:6543":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"6:6047:5891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"22:1544:6238":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"24:155:3045":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"31:5332:28952":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"29:2052:5446":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"0:578:2107":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"33:292:3256":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"23:546:6088":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:11355:8945":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"29:480:17104":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"29:5668:5724":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:13663:7077":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"5:6959:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:5017:7817":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:47216:8840":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:12396:6928":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:11523:6821":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:40819:8687":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:41978:8585":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"20:2449:3102":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"2:39602:8652":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:3323:2762":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:4585:7804":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:7797:3261":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:11981:9076":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"17:14346:7203":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"30:3379:5193":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"28:142:27810":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"6:1514:4514":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"31:5314:10425":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"1:11290:4326":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:13516:7045":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"22:1637:6256":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"29:5922:5776":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:7838:1951":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:10881:23602":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:10091:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:40411:8663":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"29:5836:5749":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"21:1905:6410":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"17:10962:6765":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:43876:8739":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:15432:7538":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:3888:7795":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:6861:4267":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:2200:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:5004:10636":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"29:9176:6070":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"20:1707:39556":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"16:7651:8145":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:15049:7410":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:13909:7113":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:3358:36741":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:13787:7099":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"13:0:2874":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:8289:37614":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"14:40:6988":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"33:81:3251":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"21:1817:6402":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"16:2788:7758":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:6960:8028":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"31:6343:4943":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"1:7738:3739":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"18:766:27726":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:2983:38912":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"20:2062:6597":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"29:5993:10520":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:4411:3116":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"29:1744:4514":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:12324:6919":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:10126:3997":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:3830:7794":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"22:1310:6209":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"2:2789:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"29:4605:5478":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:11399:6802":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"20:949:6495":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"22:1413:6215":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"11:875:8310":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:40562:8672":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:44953:8781":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"16:4745:7808":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"11:2352:8313":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:46263:8797":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:5344:4225":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:1537:5359":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:4915:11440":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:588:11296":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"22:1080:2592":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"31:5618:4693":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"31:6043:4829":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"1:363:3550":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"31:6569:10467":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"1:12045:795":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:4919:37152":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:11412:6803":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"21:2614:27786":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"2:43822:8733":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"11:2383:4043":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:22257:11592":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:22351:11581":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"5:6013:17078":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:2209:3125":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"22:1449:6214":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"15:327:9689":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:8562:9029":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"18:80:27715":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:2406:7742":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:634:8391":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"20:178:6468":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"1:12030:401":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:9759:23586":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:10473:4321":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:44414:8761":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:38189:16774":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"11:787:8304":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"11:1160:8317":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:12930:23595":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"30:4178:5277":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"18:681:6117":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"9:450:22510":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:8281:10807":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:4698:5656":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:3461:7790":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"22:1211:6136":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"16:4497:7801":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:10716:6748":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:6696:7990":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:7090:8050":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:654:4699":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:30614:3765":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:43093:3105":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"20:2363:3102":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"17:14057:7134":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:14359:7204":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"31:5781:10443":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"17:14266:7183":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"22:1501:6232":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"1:4742:11403":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:4038:11392":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:8403:9020":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"31:6932:28963":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"16:7544:8140":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"11:102:10787":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:10792:8957":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:15117:7430":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"29:4927:5566":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:22302:11371":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:11340:8944":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:12746:6953":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"9:237:6197":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:928:11316":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:142:2969":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"29:573:4702":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"20:1417:6508":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"31:7174:28966":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"5:7467:8412":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:15235:7460":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:2744:7756":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:2529:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"29:8440:6057":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:22569:6565":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"18:614:39535":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:11537:8916":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"31:6998:28964":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"21:1720:6389":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"22:1359:6122":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"6:1604:5402":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:7028:4272":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:6226:7922":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:2339:7734":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"30:4161:5276":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"6:1691:5178":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:16134:7708":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"17:14969:7393":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"30:4359:5283":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"31:6202:28958":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"2:10689:4044":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:12301:6917":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:11041:6747":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"31:4501:4393":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"2:39719:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:43278:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"20:1906:6501":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"29:4675:5506":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:48090:8880":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:7330:3663":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:42018:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:3373:3029":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:5612:7770":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"29:5094:5601":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:15311:7482":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:13407:7013":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"31:6590:4985":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"1:645:11299":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:13273:6996":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:13584:7047":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"20:2040:6594":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"2:9842:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"29:7302:5927":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:533:3536":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11215:6786":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:46085:8789":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"5:683:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:6483:8565":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"24:357:3056":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"5:1685:4225":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"21:1802:4203":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"16:7391:23528":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:7523:3180":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"31:7138:5104":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"20:213:39558":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"16:2472:7745":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"22:1581:6245":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"17:9651:23584":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:21383:11504":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:7375:3663":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:9186:33858":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"17:12220:6637":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:4798:4305":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:36313:8071":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:7580:4317":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:42086:4044":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"30:4968:5314":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"2:46722:8816":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"9:357:22525":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"21:2569:6459":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"0:446:2030":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"29:6847:5827":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:830:4231":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:11945:6884":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:15733:7608":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"21:2436:27744":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"2:44641:10800":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:4719:7807":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:16087:7700":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"6:4401:5506":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:41256:8576":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:21845:11506":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:3494:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:6261:7938":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"22:1568:40279":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"1:8984:3535":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:12380:6926":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"31:6373:4953":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"1:1567:6269":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:5388:4206":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:5830:7848":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"5:2979:38911":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:40374:8659":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:6844:8017":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:5982:5846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12264:6915":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:3345:16690":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:1909:704":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:4862:7812":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"18:96:27716":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"29:4714:4697":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:12103:6896":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:46356:8805":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"31:7097:5097":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"17:12536:6939":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"29:5433:5676":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"20:1880:6577":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"2:46934:8835":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:6983:10285":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"29:4581:5469":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13334:7006":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:11485:6814":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:7621:23529":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:12410:6931":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:13724:7088":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:8207:3140":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"31:5521:28953":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"1:7717:11302":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:1270:8051":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:15374:7496":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:1973:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"29:6813:5823":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:21227:36657":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:5568:5942":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"31:6705:10483":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"31:5704:4722":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"17:14950:7392":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:4505:3021":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:5939:7717":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:8220:3137":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:42136:3316":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"11:328:10791":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:15200:7449":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"29:9246:5767":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:42297:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:10076:3729":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:11178:9724":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"31:5610:4692":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"2:21239:36654":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"30:4745:40758":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"5:4252:4043":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:9526:37611":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"28:56:27800":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"21:2132:6430":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"5:1115:39485":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"}},"external_crates":{"31":{"name":"linux_raw_sys","html_root_url":null},"28":{"name":"io_lifetimes","html_root_url":null},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"22":{"name":"aho_corasick","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"29":{"name":"libc","html_root_url":null},"26":{"name":"humantime","html_root_url":null},"23":{"name":"memchr","html_root_url":null},"20":{"name":"regex","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"termcolor","html_root_url":null},"30":{"name":"rustix","html_root_url":null},"27":{"name":"is_terminal","html_root_url":null},"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"21":{"name":"regex_syntax","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}