{"root":"0:0:2065","crate_version":"0.10.0","includes_private":false,"index":{"0:278:1891":{"id":"0:278:1891","crate_id":0,"name":"write","span":{"filename":"src/fmt/mod.rs","begin":[124,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:5372-0:169:2416":{"id":"b:5:5372-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[9,4],"end":[9,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::termcolor::glob","name":"glob","id":"0:142:1763","glob":true}},"0:145:2427":{"id":"0:145:2427","crate_id":0,"name":"style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Begin a new [`Style`].\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\n[`Style`]: struct.Style.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[107,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:81:2488","path":"::fmt::humantime::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:113:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:100:2500":{"id":"b:2:2517-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:49:1927":{"id":"0:49:1927","crate_id":0,"name":"filter_level","span":{"filename":"src/filter/mod.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:217:1552":{"id":"0:217:1552","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,9],"end":[23,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1885","args":{"angle_bracketed":{"args":[{"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"io::Write","id":"1:3461:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}],"bindings":[]}}}}},"b:2:2523-0:33:1764":{"id":"b:2:2523-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[26,0],"end":[30,1]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:269:130":{"id":"b:2:2513-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2519:672":{"id":"2:2519:672","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:389:1756":{"id":"0:389:1756","crate_id":0,"name":"log","span":{"filename":"src/lib.rs","begin":[907,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1760","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:3006-0:508:2429":{"id":"a:2:2726:3006-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:210:226":{"id":"b:2:2238-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:3006-0:585:1780":{"id":"a:2:2726:3006-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:224-0:210:226":{"id":"a:2:2676:224-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:36:1811":{"id":"b:2:2238-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:175:2428":{"id":"0:175:2428","crate_id":0,"name":"set_color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[278,4],"end":[281,5]},"visibility":"public","docs":"Set the text color.\n\n# Examples\n\nCreate a style with red text:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Binary","id":"2:8605:2643","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:8605:2643","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:486:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:3010-0:269:130":{"id":"a:2:7735:3010-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:96:2442":{"id":"0:96:2442","crate_id":0,"name":"timestamp_seconds","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[43,4],"end":[48,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with full\nsecond precision.","links":{"`Timestamp`":"0:100:2500"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:269:130":{"id":"a:2:2676:224-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2517-0:599:1811":{"id":"b:2:2517-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:360:1893":{"id":"0:360:1893","crate_id":0,"name":"format_module_path","span":{"filename":"src/lib.rs","begin":[602,4],"end":[605,5]},"visibility":"public","docs":"Whether or not to write the module path in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:342:1797":{"id":"a:2:2676:224-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2662:216-0:342:1797":{"id":"a:2:2662:216-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2726:3006-0:36:1811":{"id":"a:2:2726:3006-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11404:63313":{"id":"2:11404:63313","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:4316","str::rsplitn":"2:11407:63315"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50127:2902","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:269:130":{"id":"b:2:2238-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:571:1903":{"id":"b:2:2528-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:3006-0:571:1903":{"id":"a:2:2726:3006-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:386:1992":{"id":"0:386:1992","crate_id":0,"name":"matches","span":{"filename":"src/lib.rs","begin":[897,4],"end":[899,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1760","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5123:60350":{"id":"5:5123:60350","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11462:60352"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:342:1797":{"id":"b:2:2523-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:445:1839":{"id":"0:445:1839","crate_id":0,"name":"builder","span":{"filename":"src/lib.rs","begin":[1231,0],"end":[1233,1]},"visibility":"public","docs":"Create a new builder with the default environment variables.\n\nThe builder can be configured before being initialized.\nThis is a convenient way of calling [`Builder::from_default_env`].\n\n[`Builder::from_default_env`]: struct.Builder.html#method.from_default_env","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11378:62937":{"id":"2:11378:62937","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:342:1797":{"id":"b:2:2517-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2243:2406":{"id":"2:2243:2406","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11442:60770":{"id":"2:11442:60770","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:4316"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115:1765":{"id":"0:115:1765","crate_id":0,"name":"writer","span":{"filename":"src/fmt/writer/mod.rs","begin":[1,0],"end":[253,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:210:226","0:543:1949"],"is_stripped":true}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1109,4],"end":[1115,5]},"visibility":{"restricted":{"parent":"0:430:2025","path":"::std_fmt_impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:434:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:531:1553":{"id":"0:531:1553","crate_id":0,"name":"1","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,12],"end":[514,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:104:654":{"id":"0:104:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[91,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11401:67219":{"id":"2:11401:67219","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11041:4316","prim@char":"1:12300:407","str::split":"2:11389:2260","str::split_terminator":"2:11398:67218"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50091:4567","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2516:1852":{"id":"2:2516:1852","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2490:131"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11368:65179":{"id":"2:11368:65179","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11367:65185"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50306:4576","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:342:1797":{"id":"b:2:3321-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5374:1405":{"id":"5:5374:1405","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:508:2429":{"id":"0:508:2429","crate_id":0,"name":"Color","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[504,0],"end":[515,1]},"visibility":"public","docs":"The set of available colors for the terminal foreground/background.\n\nThe `Ansi256` and `Rgb` colors will only output the correct codes when\npaired with the `Ansi` `WriteColor` implementation.\n\nThe `Ansi256` and `Rgb` color types are not supported when writing colors\non Windows using the console. If they are used on Windows, then they are\nsilently ignored and no colors will be emitted.\n\nThis set may expand over time.\n\nThis type has a `FromStr` impl that can parse colors from their human\nreadable form. The format is as follows:\n\n1. Any of the explicitly listed colors in English. They are matched\n   case insensitively.\n2. A single 8-bit integer, in either decimal or hexadecimal format.\n3. A triple of 8-bit integers separated by a comma, where each integer is\n   in decimal or hexadecimal format.\n\nHexadecimal numbers are written with a `0x` prefix.","links":{},"attrs":["#[allow(missing_docs)]","#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:509:2430","0:511:2570","0:513:2571","0:515:2573","0:517:2569","0:519:2663","0:521:2572","0:523:2664","0:525:2665","0:528:2666"],"impls":["a:2:7736:3009-0:508:2429","a:2:2676:224-0:508:2429","a:2:2726:3006-0:508:2429","a:2:7735:3010-0:508:2429","a:2:2662:216-0:508:2429","b:2:2238-0:508:2429","b:2:2517-0:508:2429","b:2:2523-0:508:2429","b:2:2513-0:508:2429","b:2:3321-0:508:2429","b:2:2241-0:508:2429","b:2:2528-0:508:2429","b:5:681-0:508:2429","0:533","0:535","0:537","0:538","0:540","0:541"]}},"2:11371:65189":{"id":"2:11371:65189","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50315:4577","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:1994":{"id":"0:388:1994","crate_id":0,"name":"enabled","span":{"filename":"src/lib.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["metadata",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Metadata","id":"24:296:1759","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:591:654":{"id":"0:591:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:100:2500":{"id":"b:2:2528-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:369:1922":{"id":"0:369:1922","crate_id":0,"name":"filter_module","span":{"filename":"src/lib.rs","begin":[666,4],"end":[669,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_module(\"path::to::module\", LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:585:1780":{"id":"b:2:2523-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:458:2564":{"id":"0:458:2564","crate_id":0,"name":"Style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[242,0],"end":[245,1]},"visibility":"public","docs":"A set of styles to apply to the terminal output.\n\nCall [`Formatter::style`] to get a `Style` and use the builder methods to\nset styling properties, like [color] and [weight].\nTo print a value using the style, wrap it in a call to [`value`] when the log\nrecord is formatted.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut level_style = buf.style();\n\n    level_style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        level_style.value(record.level()),\n        record.args())\n});\n```\n\nStyles can be re-used to output multiple values:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut bold = buf.style();\n\n    bold.set_bold(true);\n\n    writeln!(buf, \"{}: {} {}\",\n        bold.value(record.level()),\n        bold.value(\"some bold text\"),\n        record.args())\n});\n```\n\n[`Formatter::style`]: struct.Formatter.html#method.style\n[color]: #method.set_color\n[weight]: #method.set_bold\n[`value`]: #method.value","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:174","a:2:7736:3009-0:458:2564","a:2:2676:224-0:458:2564","a:2:2726:3006-0:458:2564","a:2:7735:3010-0:458:2564","a:2:2662:216-0:458:2564","b:2:2238-0:458:2564","b:2:2517-0:458:2564","b:2:2523-0:458:2564","b:2:2513-0:458:2564","b:2:3321-0:458:2564","b:2:2241-0:458:2564","b:2:2528-0:458:2564","b:5:681-0:458:2564","0:461","0:191"]}},"b:2:2238-0:599:1811":{"id":"b:2:2238-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:36:1811":{"id":"a:2:2676:224-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:521:2572":{"id":"0:521:2572","crate_id":0,"name":"Yellow","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[511,4],"end":[511,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2726:3006-0:342:1797":{"id":"a:2:2726:3006-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:348:1837":{"id":"0:348:1837","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[443,4],"end":[450,5]},"visibility":"public","docs":"Initializes the log builder from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nInitialise a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::from_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:585:1780":{"id":"a:2:2662:216-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7736:3009-0:508:2429":{"id":"a:2:7736:3009-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:46:914":{"id":"0:46:914","crate_id":0,"name":"new","span":{"filename":"src/filter/mod.rs","begin":[173,4],"end":[179,5]},"visibility":"public","docs":"Initializes the filter builder with defaults.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[133,0],"end":[137,1]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:281:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:36:1811":{"id":"0:36:1811","crate_id":0,"name":"Builder","span":{"filename":"src/filter/mod.rs","begin":[110,0],"end":[114,1]},"visibility":"public","docs":"A builder for a log filter.\n\nIt can be used to parse a set of directives from a string before building\na [`Filter`] instance.\n\n## Example\n\n```\n# #[macro_use] extern crate log;\n# use std::env;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\n\n// Parse a logging filter from an environment variable.\nif let Ok(rust_log) = env::var(\"RUST_LOG\") {\n    builder.parse(&rust_log);\n}\n\nlet filter = builder.build();\n```\n\n[`Filter`]: struct.Filter.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:45","a:2:7736:3009-0:36:1811","a:2:2676:224-0:36:1811","a:2:2726:3006-0:36:1811","a:2:7735:3010-0:36:1811","a:2:2662:216-0:36:1811","b:2:2238-0:36:1811","b:2:2517-0:36:1811","b:2:2523-0:36:1811","b:2:2513-0:36:1811","b:2:3321-0:36:1811","b:2:2241-0:36:1811","b:2:2528-0:36:1811","0:58","0:62"]}},"0:363:1901":{"id":"0:363:1901","crate_id":0,"name":"format_timestamp","span":{"filename":"src/lib.rs","begin":[621,4],"end":[624,5]},"visibility":"public","docs":"Configures if timestamp should be included and in what precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["timestamp",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"fmt::TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:2009":{"id":"0:399:2009","crate_id":0,"name":"filter_or","span":{"filename":"src/lib.rs","begin":[992,4],"end":[1000,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["filter_env",{"kind":"generic","inner":"E"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:544:2532":{"id":"0:544:2532","crate_id":0,"name":"Auto","span":{"filename":"src/fmt/writer/mod.rs","begin":[91,4],"end":[91,8]},"visibility":"default","docs":"Try to print styles, but don't force the issue.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11436:67229":{"id":"2:11436:67229","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:4316"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11066:4320","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:100:2500":{"id":"b:2:2241-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:355:1869":{"id":"0:355:1869","crate_id":0,"name":"parse_default_env","span":{"filename":"src/lib.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Applies the configuration from the environment using default variable names.\n\nThis method is a convenient way to call `parse_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger with filter level `Off`, then configure it using the\ndefault environment variables:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11364:4597":{"id":"2:11364:4597","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49993:4561","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:543:1949":{"id":"b:2:2517-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:542:599":{"id":"0:542:599","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:36:1811":{"id":"a:2:2662:216-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:146:2567":{"id":"0:146:2567","crate_id":0,"name":"default_level_style","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[52,4],"end":[62,5]},"visibility":"public","docs":"Get the default [`Style`] for the given level.\n\nThe style can be used to print other values besides the level.","links":{"`Style`":"0:458:2564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:342:1797":{"id":"b:2:2528-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:517:2569":{"id":"0:517:2569","crate_id":0,"name":"Cyan","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[509,4],"end":[509,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11372:63317":{"id":"2:11372:63317","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:571:1903":{"id":"a:2:2662:216-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11351:63279":{"id":"2:11351:63279","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12317:1447"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3009-0:543:1949":{"id":"a:2:7736:3009-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:33:1764":{"id":"b:2:2513-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11369:3791":{"id":"2:11369:3791","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50277:2959","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:599:1811":{"id":"b:2:2513-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11454:67233":{"id":"2:11454:67233","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:4316"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5119:67870":{"id":"5:5119:67870","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:599:1811":{"id":"b:2:2241-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:405:1783":{"id":"0:405:1783","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[1019,4],"end":[1026,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["write_style_env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:571:1903":{"id":"b:2:3321-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2240:1753":{"id":"2:2240:1753","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:210:226":{"id":"b:2:2528-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:508:2429":{"id":"b:2:2513-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:169:2416":{"id":"a:2:2676:224-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,28],"end":[49,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::TimestampPrecision","name":"TimestampPrecision","id":"0:571:1903","glob":false}},"0:92:1763":{"id":"0:92:1763","crate_id":0,"name":"glob","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[10,0],"end":[10,27]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:93"],"is_stripped":true}},"0:50:1762":{"id":"0:50:1762","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[206,4],"end":[209,5]},"visibility":"public","docs":"Adds a directive to the filter.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[17,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:2427","0:146:2567","0:147:2439"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2662:216-0:269:130":{"id":"a:2:2662:216-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:0:2065":{"id":"0:0:2065","crate_id":0,"name":"env_logger","span":{"filename":"src/lib.rs","begin":[7,0],"end":[1311,1]},"visibility":"public","docs":"A simple logger that can be configured via environment variables, for use\nwith the logging facade exposed by the [`log` crate][log-crate-url].\n\nDespite having \"env\" in its name, **`env_logger`** can also be configured by\nother means besides environment variables. See [the examples][gh-repo-examples]\nin the source repository for more approaches.\n\nBy default, `env_logger` writes logs to `stderr`, but can be configured to\ninstead write them to `stdout`.\n\n## Example\n\n```\nuse log::{debug, error, log_enabled, info, Level};\n\nenv_logger::init();\n\ndebug!(\"this is a debug {}\", \"message\");\nerror!(\"this is printed by default\");\n\nif log_enabled!(Level::Info) {\n    let x = 3 * 4; // expensive computation\n    info!(\"the answer was: {}\", x);\n}\n```\n\nAssumes the binary is `main`:\n\n```{.bash}\n$ RUST_LOG=error ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n```\n\n```{.bash}\n$ RUST_LOG=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\n```{.bash}\n$ RUST_LOG=debug ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nYou can also set the log level on a per module basis:\n\n```{.bash}\n$ RUST_LOG=main=info ./main\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nAnd enable all logging:\n\n```{.bash}\n$ RUST_LOG=main ./main\n[2017-11-09T02:12:24Z DEBUG main] this is a debug message\n[2017-11-09T02:12:24Z ERROR main] this is printed by default\n[2017-11-09T02:12:24Z INFO main] the answer was: 12\n```\n\nIf the binary name contains hyphens, you will need to replace\nthem with underscores:\n\n```{.bash}\n$ RUST_LOG=my_app ./my-app\n[2017-11-09T02:12:24Z DEBUG my_app] this is a debug message\n[2017-11-09T02:12:24Z ERROR my_app] this is printed by default\n[2017-11-09T02:12:24Z INFO my_app] the answer was: 12\n```\n\nThis is because Rust modules and crates cannot contain hyphens\nin their name, although `cargo` continues to accept them.\n\nSee the documentation for the [`log` crate][log-crate-url] for more\ninformation about its API.\n\n## Enabling logging\n\nLog levels are controlled on a per-module basis, and **by default all\nlogging is disabled except for the `error` level**.\n\nLogging is controlled via the **`RUST_LOG`** environment variable. The\nvalue of this environment variable is a comma-separated list of *logging\ndirectives*. A logging directive is of the form:\n\n```text\nexample::log::target=level\n```\n\nThe log target is typically equal to the path of the module the message\nin question originated from, though it can be overridden.\n\nThe path is rooted in the name of the crate it was compiled for, so if\nyour program is in a file called, for example, `hello.rs`, the path would\nsimply be be `hello`.\n\nFurthermore, the log can be filtered using prefix-search based on the\nspecified log target. A value of, for example, `RUST_LOG=example`, would\nmatch all of the messages with targets:\n\n* `example`\n* `example::test`\n* `example::test::module::submodule`\n* `examples::and_more_examples`\n\nWhen providing the crate name or a module path, explicitly specifying the\nlog level is optional. If omitted, all logging for the item will be\nenabled.\n\nThe names of the log levels that may be specified correspond to the\nvariations of the [`log::Level`][level-enum] enum from the `log`\ncrate. They are:\n\n* `error`\n* `warn`\n* `info`\n* `debug`\n* `trace`\n\nThere is also a pseudo logging level, `off`, which may be specified to\ndisable all logging for a given module or for the entire application. As\nwith the logging levels, the letter case is not significant[^fn-off].\n\n[^fn-off]: Similar to the universe of log level names, the `off` pseudo\n   log level feature is also provided by the underlying `log` crate.\n\nThe letter case is not significant for the logging level names; e.g.,\n`debug`, `DEBUG`, and `dEbuG` all represent the same logging level. For\nconsistency, our convention is to use the lower case names. Where our docs\ndo use other forms, they do so in the context of specific examples, so you\nwon't be surprised if you see similar usage in the wild.\n\nAs the log level for a module is optional, the module to enable logging for\nis also optional. **If only a level is provided, then the global log\nlevel for all modules is set to this value.**\n\nSome examples of valid values of `RUST_LOG` are:\n\n* `hello` turns on all logging for the 'hello' module\n* `trace` turns on all logging for the application, regardless of its name\n* `TRACE` turns on all logging for the application, regardless of its name (same as previous)\n* `info` turns on all info logging\n* `INFO` turns on all info logging (same as previous)\n* `hello=debug` turns on debug logging for 'hello'\n* `hello=DEBUG` turns on debug logging for 'hello' (same as previous)\n* `hello,std::option` turns on hello, and std's option logging\n* `error,hello=warn` turn on global error logging and also warn for hello\n* `error,hello=off`  turn on global error logging, but turn off logging for hello\n* `off` turns off all logging for the application\n* `OFF` turns off all logging for the application (same as previous)\n\n## Filtering results\n\nA `RUST_LOG` directive may include a regex filter. The syntax is to append `/`\nfollowed by a regex. Each message is checked against the regex, and is only\nlogged if it matches. Note that the matching is done after formatting the\nlog string but before adding any logging meta-data. There is a single filter\nfor all modules.\n\nSome examples:\n\n* `hello/foo` turns on all logging for the 'hello' module where the log\n  message includes 'foo'.\n* `info/f.o` turns on all info logging where the log message includes 'foo',\n  'f1o', 'fao', etc.\n* `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n  message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n* `error,hello=warn/[0-9]scopes` turn on global error logging and also\n  warn for hello. In both cases the log message must include a single digit\n  number followed by 'scopes'.\n\n## Capturing logs in tests\n\nRecords logged during `cargo test` will not be captured by the test harness by default.\nThe [`Builder::is_test`] method can be used in unit tests to ensure logs will be captured:\n\n```\n# #[macro_use] extern crate log;\n#[cfg(test)]\nmod tests {\n    fn init() {\n        let _ = env_logger::builder().is_test(true).try_init();\n    }\n\n    #[test]\n    fn it_works() {\n        init();\n\n        info!(\"This record will be captured by `cargo test`\");\n\n        assert_eq!(2, 1 + 1);\n    }\n}\n```\n\nEnabling test capturing comes at the expense of color and other style support\nand may have performance implications.\n\n## Disabling colors\n\nColors and other styles can be configured with the `RUST_LOG_STYLE`\nenvironment variable. It accepts the following values:\n\n* `auto` (default) will attempt to print style characters, but don't force the issue.\nIf the console isn't available on Windows, or if TERM=dumb, for example, then don't print colors.\n* `always` will always print style characters even if they aren't supported by the terminal.\nThis includes emitting ANSI colors on Windows if the console API is unavailable.\n* `never` will never print style characters.\n\n## Tweaking the default format\n\nParts of the default format can be excluded from the log output using the [`Builder`].\nThe following example excludes the timestamp from the log output:\n\n```\nenv_logger::builder()\n    .format_timestamp(None)\n    .init();\n```\n\n### Stability of the default format\n\nThe default format won't optimise for long-term stability, and explicitly makes no\nguarantees about the stability of its output across major, minor or patch version\nbumps during `0.x`.\n\nIf you want to capture or interpret the output of `env_logger` programmatically\nthen you should use a custom format.\n\n### Using a custom format\n\nCustom formats can be provided as closures to the [`Builder`].\nThese closures take a [`Formatter`] and `log::Record` as arguments:\n\n```\nuse std::io::Write;\n\nenv_logger::builder()\n    .format(|buf, record| {\n        writeln!(buf, \"{}: {}\", record.level(), record.args())\n    })\n    .init();\n```\n\nSee the [`fmt`] module for more details about custom formats.\n\n## Specifying defaults for environment variables\n\n`env_logger` can read configuration from environment variables.\nIf these variables aren't present, the default value to use can be tweaked with the [`Env`] type.\nThe following example defaults to log `warn` and above if the `RUST_LOG` environment variable\nisn't set:\n\n```\nuse env_logger::Env;\n\nenv_logger::Builder::from_env(Env::default().default_filter_or(\"warn\")).init();\n```\n\n[gh-repo-examples]: https://github.com/env-logger-rs/env_logger/tree/main/examples\n[level-enum]: https://docs.rs/log/latest/log/enum.Level.html\n[log-crate-url]: https://docs.rs/log/\n[`Builder`]: struct.Builder.html\n[`Builder::is_test`]: struct.Builder.html#method.is_test\n[`Env`]: struct.Env.html\n[`fmt`]: fmt/index.html","links":{"`Formatter`":"0:269:130"},"attrs":["#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/static/images/favicon.ico\")]","#![deny(missing_debug_implementations, missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:14:1762","0:70:654","0:340:1769","0:341:1772","0:585:1780","0:342:1797","0:599:1811","0:437:1961","0:438:1971","0:439:2028","0:442:2043","0:445:1839","0:446:1837","0:332"],"is_stripped":false}},"a:2:7735:3010-0:169:2416":{"id":"a:2:7735:3010-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:7736:3009-0:100:2500":{"id":"a:2:7736:3009-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:476:654":{"id":"0:476:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:379:1963":{"id":"0:379:1963","crate_id":0,"name":"build","span":{"filename":"src/lib.rs","begin":[823,4],"end":[832,5]},"visibility":"public","docs":"Build an env logger.\n\nThe returned logger implements the `Log` trait and can be installed manually\nor nested within another logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11381:3497":{"id":"2:11381:3497","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48057:175","self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177:2431":{"id":"0:177:2431","crate_id":0,"name":"set_intense","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[332,4],"end":[335,5]},"visibility":"public","docs":"Set the text intensity.\n\nIf `yes` is true then text will be written in a brighter color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with intense text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_intense(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:2444":{"id":"0:98:2444","crate_id":0,"name":"timestamp_micros","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[61,4],"end":[66,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmicrosecond precision.","links":{"`Timestamp`":"0:100:2500"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3010-0:599:1811":{"id":"a:2:7735:3010-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11349:67214":{"id":"2:11349:67214","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3010-0:508:2429":{"id":"a:2:7735:3010-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2523-0:36:1811":{"id":"b:2:2523-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[294,0],"end":[294,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fmt::glob","name":"glob","id":"0:262:1763","glob":true}},"0:442:2043":{"id":"0:442:2043","crate_id":0,"name":"init_from_env","span":{"filename":"src/lib.rs","begin":[1217,0],"end":[1223,1]},"visibility":"public","docs":"Initializes the global logger with an env logger from the given environment\nvariables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::init_from_env(env);\n```\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11430:67225":{"id":"2:11430:67225","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:585:1780":{"id":"b:2:2517-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:3009-0:169:2416":{"id":"a:2:7736:3009-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"5:685:3515":{"id":"5:685:3515","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:269:130":{"id":"b:2:2517-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:279:2004":{"id":"0:279:2004","crate_id":0,"name":"flush","span":{"filename":"src/fmt/mod.rs","begin":[128,4],"end":[130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:599:1811":{"id":"0:599:1811","crate_id":0,"name":"Builder","span":{"filename":"src/lib.rs","begin":[377,0],"end":[382,1]},"visibility":"public","docs":"`Builder` acts as builder for initializing a `Logger`.\n\nIt can be used to customize the log format, change the environment variable used\nto provide the logging directives and also set the default log level filter.\n\n# Examples\n\n```\n# #[macro_use] extern crate log;\n# use std::io::Write;\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::from_default_env();\n\nbuilder\n    .format(|buf, record| writeln!(buf, \"{} - {}\", record.level(), record.args()))\n    .filter(None, LevelFilter::Info)\n    .init();\n\nerror!(\"error message\");\ninfo!(\"info message\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:346","a:2:7736:3009-0:599:1811","a:2:2676:224-0:599:1811","a:2:2726:3006-0:599:1811","a:2:7735:3010-0:599:1811","a:2:2662:216-0:599:1811","b:2:2238-0:599:1811","b:2:2517-0:599:1811","b:2:2523-0:599:1811","b:2:2513-0:599:1811","b:2:3321-0:599:1811","b:2:2241-0:599:1811","b:2:2528-0:599:1811","0:604","0:435"]}},"2:11375:2280":{"id":"2:11375:2280","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:341:1772":{"id":"0:341:1772","crate_id":0,"name":"DEFAULT_WRITE_STYLE_ENV","span":{"filename":"src/lib.rs","begin":[304,0],"end":[304,59]},"visibility":"public","docs":"The default name for the environment variable to read style preferences from.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"RUST_LOG_STYLE\"","value":null,"is_literal":true}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,16],"end":[88,20]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:210:226":{"id":"b:2:2513-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11389:2260":{"id":"2:11389:2260","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"2:11395:63311","`DoubleEndedIterator`":"2:7079:119","str::split_whitespace":"2:11367:65185","self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50023:2901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerExp","id":"2:8613:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerExp","id":"2:8613:2647","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:506:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:3006-0:33:1764":{"id":"a:2:2726:3006-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:528:2666":{"id":"0:528:2666","crate_id":0,"name":"Rgb","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,4],"end":[514,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:530:1552","0:531:1553","0:532:1554"]},"discriminant":null}},"0:511:2570":{"id":"0:511:2570","crate_id":0,"name":"Blue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[506,4],"end":[506,8]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:2726:3006-0:458:2564":{"id":"a:2:2726:3006-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5122:60349":{"id":"5:5122:60349","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11461:60351"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3009-0:571:1903":{"id":"a:2:7736:3009-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11462:60352":{"id":"2:11462:60352","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1117,4],"end":[1128,5]},"visibility":{"restricted":{"parent":"0:430:2025","path":"::std_fmt_impls"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:169:2416":{"id":"0:169:2416","crate_id":0,"name":"StyledValue","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[252,0],"end":[255,1]},"visibility":"public","docs":"A value that can be printed using the given styles.\n\nIt is the result of calling [`Style::value`].\n\n[`Style::value`]: struct.Style.html#method.value","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7736:3009-0:169:2416","a:2:2676:224-0:169:2416","a:2:2726:3006-0:169:2416","a:2:7735:3010-0:169:2416","a:2:2662:216-0:169:2416","b:2:2238-0:169:2416","b:2:2517-0:169:2416","b:2:2523-0:169:2416","b:2:2513-0:169:2416","b:2:3321-0:169:2416","b:2:2241-0:169:2416","b:2:2528-0:169:2416","b:5:5372-0:169:2416","0:463","0:468","0:473","0:478","0:483","0:488","0:493","0:498","0:503"]}},"0:53:1963":{"id":"0:53:1963","crate_id":0,"name":"build","span":{"filename":"src/filter/mod.rs","begin":[228,4],"end":[259,5]},"visibility":"public","docs":"Build a log filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:123:2488","glob":true}},"0:63:654":{"id":"0:63:654","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[278,4],"end":[287,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:3006-0:210:226":{"id":"a:2:2726:3006-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:358:1888":{"id":"0:358:1888","crate_id":0,"name":"default_format","span":{"filename":"src/lib.rs","begin":[590,4],"end":[593,5]},"visibility":"public","docs":"Use the default format.\n\nThis method will clear any custom format set on the builder.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:365:1908":{"id":"0:365:1908","crate_id":0,"name":"format_timestamp_millis","span":{"filename":"src/lib.rs","begin":[632,4],"end":[634,5]},"visibility":"public","docs":"Configures the timestamp to use millisecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:381:1837":{"id":"0:381:1837","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[862,4],"end":[867,5]},"visibility":"public","docs":"Creates the logger from the environment.\n\nThe variables used to read configuration from can be tweaked before\npassing in.\n\n# Examples\n\nCreate a logger reading the log filter from an environment variable\ncalled `MY_LOG`:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_env(\"MY_LOG\");\n```\n\nCreate a logger using the `MY_LOG` variable for filtering and\n`MY_LOG_STYLE` for whether or not to write styles:\n\n```\nuse env_logger::{Logger, Env};\n\nlet env = Env::new().filter_or(\"MY_LOG\", \"info\").write_style_or(\"MY_LOG_STYLE\", \"always\");\n\nlet logger = Logger::from_env(env);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:385:1762":{"id":"0:385:1762","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[892,4],"end":[894,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this env logger instance is\nconfigured to output.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:525:2665":{"id":"0:525:2665","crate_id":0,"name":"Ansi256","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,4],"end":[513,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:527:1552"]},"discriminant":null}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,20],"end":[49,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::Target","name":"Target","id":"0:210:226","glob":false}},"2:11370:67217":{"id":"2:11370:67217","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50287:4574","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1096,0],"end":[1103,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:429:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:582:411":{"id":"0:582:411","crate_id":0,"name":"clone","span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:471:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:169:2416":{"id":"b:2:2513-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:585:1780":{"id":"b:2:3321-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[835,0],"end":[900,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:1837","0:384:1863","0:385:1762","0:386:1992"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[973,0],"end":[1056,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:396:914","0:397:1762","0:399:2009","0:402:2013","0:405:1783","0:407:2017","0:410:2019"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:180:2434":{"id":"0:180:2434","crate_id":0,"name":"value","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Wrap a value in the style.\n\nThe same `Style` can be used to print multiple different values.\n\n# Examples\n\nCreate a bold, red colored style and use it to print the log level:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_color(Color::Red).set_bold(true);\n\n    writeln!(buf, \"{}: {}\",\n        style.value(record.level()),\n        record.args())\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:210:226":{"id":"b:2:2523-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:681-0:458:2564":{"id":"b:5:681-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2636","5:684:2022","5:685:3515"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:599"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:142:1763":{"id":"0:142:1763","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[13,0],"end":[13,35]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:143"],"is_stripped":true}},"2:11432:67226":{"id":"2:11432:67226","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:269:130":{"id":"b:2:2528-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:599:1811":{"id":"a:2:2676:224-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:43:1992":{"id":"0:43:1992","crate_id":0,"name":"matches","span":{"filename":"src/filter/mod.rs","begin":[148,4],"end":[160,5]},"visibility":"public","docs":"Checks if this record matches the configured filter.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["record",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1760","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:543:1949":{"id":"a:2:2676:224-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:508:2429":{"id":"b:2:2238-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:33:1764":{"id":"b:2:2238-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11465:3864":{"id":"2:11465:3864","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4468:3864"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50331:3865","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:584:654":{"id":"0:584:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[57,22],"end":[57,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:374:1783":{"id":"0:374:1783","crate_id":0,"name":"write_style","span":{"filename":"src/lib.rs","begin":[760,4],"end":[763,5]},"visibility":"public","docs":"Sets whether or not styles will be written.\n\nThis can be useful in environments that don't support control characters\nfor setting colors.\n\n# Examples\n\nNever attempt to write styles:\n\n```\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder.write_style(WriteStyle::Never);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write_style",{"kind":"resolved_path","inner":{"name":"fmt::WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11460:2831":{"id":"2:11460:2831","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[49,48],"end":[49,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super::WriteStyle","name":"WriteStyle","id":"0:543:1949","glob":false}},"0:515:2573":{"id":"0:515:2573","crate_id":0,"name":"Red","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[508,4],"end":[508,7]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:257":{"id":"0:257","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[43,0],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::humantime::glob","name":"glob","id":"0:92:1763","glob":true}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:466:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:340:1769":{"id":"0:340:1769","crate_id":0,"name":"DEFAULT_FILTER_ENV","span":{"filename":"src/lib.rs","begin":[301,0],"end":[301,48]},"visibility":"public","docs":"The default name for the environment variable to read filters from.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"expr":"\"RUST_LOG\"","value":null,"is_literal":true}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperExp","id":"2:8615:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperExp","id":"2:8615:2646","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:501:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11363:63301":{"id":"2:11363:63301","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11362:63300"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:543:1949":{"id":"b:2:2523-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:211:2520":{"id":"0:211:2520","crate_id":0,"name":"Stdout","span":{"filename":"src/fmt/writer/mod.rs","begin":[19,4],"end":[19,10]},"visibility":"default","docs":"Logs will be sent to standard output.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:599"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:224-0:571:1903":{"id":"a:2:2676:224-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:210:226":{"id":"b:2:2241-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:446:1837":{"id":"0:446:1837","crate_id":0,"name":"from_env","span":{"filename":"src/lib.rs","begin":[1242,0],"end":[1247,1]},"visibility":"public","docs":"Create a builder from the given environment variables.\n\nThe builder can be configured before being initialized.","links":{},"attrs":["#[deprecated(since = \"0.8.0\", note =\n\"Prefer `env_logger::Builder::from_env()` instead.\")]"],"deprecation":{"since":"0.8.0","note":"Prefer `env_logger::Builder::from_env()` instead."},"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:100:2500":{"id":"b:2:2523-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:3009-0:210:226":{"id":"a:2:7736:3009-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:513:2571":{"id":"0:513:2571","crate_id":0,"name":"Green","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[507,4],"end":[507,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:47:1837":{"id":"0:47:1837","crate_id":0,"name":"from_env","span":{"filename":"src/filter/mod.rs","begin":[182,4],"end":[190,5]},"visibility":"public","docs":"Initializes the filter builder from an environment.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:530:1552":{"id":"0:530:1552","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,8],"end":[514,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:2513-0:342:1797":{"id":"b:2:2513-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:36:1811":{"id":"b:2:2513-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:536:654":{"id":"0:536:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:94":{"id":"0:94","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[14,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:81:2488","path":"::fmt::humantime::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:95:1902","0:96:2442","0:97:2443","0:98:2444","0:99:2445"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2532:1425":{"id":"2:2532:1425","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11457:1936":{"id":"2:11457:1936","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11003:125","`FromStr`":"2:11002:2845"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11002:2845","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11002:2845","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:100:2500":{"id":"b:2:3321-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:268:59":{"id":"0:268:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/mod.rs","begin":[71,4],"end":[73,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:574:1909":{"id":"0:574:1909","crate_id":0,"name":"Millis","span":{"filename":"src/fmt/mod.rs","begin":[62,4],"end":[62,10]},"visibility":"default","docs":"Millisecond precision (3 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:506:654":{"id":"0:506:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3010-0:210:226":{"id":"a:2:7735:3010-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:548:2469":{"id":"0:548:2469","crate_id":0,"name":"Never","span":{"filename":"src/fmt/writer/mod.rs","begin":[95,4],"end":[95,9]},"visibility":"default","docs":"Never print styles.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Pointer","id":"2:8611:190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Pointer","id":"2:8611:190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:476:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:534:411":{"id":"0:534:411","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,9],"end":[503,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11352:2014":{"id":"2:11352:2014","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48057:175"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:393:2004":{"id":"0:393:2004","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[970,4],"end":[970,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:371:1762":{"id":"0:371:1762","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[707,4],"end":[710,5]},"visibility":"public","docs":"Adds filters to the logger.\n\nThe given module (if any) will log at most the specified level provided.\nIf no module is provided then the filter will apply to all log messages.\n\n# Examples\n\nOnly include messages for info and above for logs in `path::to::module`:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter(Some(\"path::to::module\"), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[70,0],"end":[74,1]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":"The default timestamp precision is seconds.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:268:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11448:67231":{"id":"2:11448:67231","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:4316"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:219:59":{"id":"0:219:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[27,4],"end":[29,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[123,0],"end":[131,1]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_all","write_fmt","is_write_vectored","write_vectored","by_ref","write_all_vectored"],"trait":{"name":"Write","id":"1:3461:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:278:1891","0:279:2004"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:681-0:508:2429":{"id":"b:5:681-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2636","5:684:2022","5:685:3515"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192:654":{"id":"0:192:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[449,4],"end":[451,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:354:1863":{"id":"0:354:1863","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[523,4],"end":[525,5]},"visibility":"public","docs":"Initializes the log builder from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The builder will use the\n[default environment variables].\n\n# Examples\n\nInitialise a logger using the default environment variables:\n\n```\nuse env_logger::Builder;\n\nlet mut builder = Builder::from_default_env();\nbuilder.init();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:213:2522":{"id":"0:213:2522","crate_id":0,"name":"Stderr","span":{"filename":"src/fmt/writer/mod.rs","begin":[21,4],"end":[21,10]},"visibility":"default","docs":"Logs will be sent to standard error.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2528-0:543:1949":{"id":"b:2:2528-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:372:1854":{"id":"0:372:1854","crate_id":0,"name":"parse_filters","span":{"filename":"src/lib.rs","begin":[716,4],"end":[719,5]},"visibility":"public","docs":"Parses the directives string in the same form as the `RUST_LOG`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["filters",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:14:1762":{"id":"0:14:1762","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[1,0],"end":[868,1]},"visibility":"public","docs":"Filtering for log records.\n\nThis module contains the log filtering used by `env_logger` to match records.\nYou can use the `Filter` type in your own logger implementation to use the same\nfilter parsing and matching as `env_logger`. For more details about the format\nfor directive strings see [Enabling Logging].\n\n## Using `env_logger` in your own logger\n\nYou can use `env_logger`'s filtering functionality with your own logger.\nCall [`Builder::parse`] to parse directives from a string when constructing\nyour logger. Call [`Filter::matches`] to check whether a record should be\nlogged based on the parsed filters when log records are received.\n\n```\nextern crate log;\nextern crate env_logger;\nuse env_logger::filter::Filter;\nuse log::{Log, Metadata, Record};\n\nstruct MyLogger {\n    filter: Filter\n}\n\nimpl MyLogger {\n    fn new() -> MyLogger {\n        use env_logger::filter::Builder;\n        let mut builder = Builder::new();\n\n        // Parse a directives string from an environment variable\n        if let Ok(ref filter) = std::env::var(\"MY_LOG_LEVEL\") {\n           builder.parse(filter);\n        }\n\n        MyLogger {\n            filter: builder.build()\n        }\n    }\n}\n\nimpl Log for MyLogger {\n    fn enabled(&self, metadata: &Metadata) -> bool {\n        self.filter.enabled(metadata)\n    }\n\n    fn log(&self, record: &Record) {\n        // Check if the record is matched by the filter\n        if self.filter.matches(record) {\n            println!(\"{:?}\", record);\n        }\n    }\n\n    fn flush(&self) {}\n}\n```\n\n[Enabling Logging]: ../index.html#enabling-logging\n[`Builder::parse`]: struct.Builder.html#method.parse\n[`Filter::matches`]: struct.Filter.html#method.matches","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:33:1764","0:36:1811"],"is_stripped":false}},"0:572:1906":{"id":"0:572:1906","crate_id":0,"name":"Seconds","span":{"filename":"src/fmt/mod.rs","begin":[60,4],"end":[60,11]},"visibility":"default","docs":"Full second precision (0 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2528-0:599:1811":{"id":"b:2:2528-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:434:654":{"id":"0:434:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1110,8],"end":[1114,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:373:1373":{"id":"0:373:1373","crate_id":0,"name":"target","span":{"filename":"src/lib.rs","begin":[739,4],"end":[742,5]},"visibility":"public","docs":"Sets the target for the log output.\n\nEnv logger can log to either stdout, stderr or a custom pipe. The default is stderr.\n\nThe custom pipe can be used to send the log messages to a custom sink (for example a file).\nDo note that direct writes to a file can become a bottleneck due to IO operation times.\n\n# Examples\n\nWrite log message to `stdout`:\n\n```\nuse env_logger::{Builder, Target};\n\nlet mut builder = Builder::new();\n\nbuilder.target(Target::Stdout);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"resolved_path","inner":{"name":"fmt::Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:361:1895":{"id":"0:361:1895","crate_id":0,"name":"format_target","span":{"filename":"src/lib.rs","begin":[608,4],"end":[611,5]},"visibility":"public","docs":"Whether or not to write the target in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:347:914":{"id":"0:347:914","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[411,4],"end":[413,5]},"visibility":"public","docs":"Initializes the log builder with defaults.\n\n**NOTE:** This method won't read from any environment variables.\nUse the [`filter`] and [`write_style`] methods to configure the builder\nor use [`from_env`] or [`from_default_env`] instead.\n\n# Examples\n\nCreate a new builder and configure filters and style:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, WriteStyle};\n\nlet mut builder = Builder::new();\n\nbuilder\n    .filter(None, LevelFilter::Info)\n    .write_style(WriteStyle::Always)\n    .init();\n```\n\n[`filter`]: #method.filter\n[`write_style`]: #method.write_style\n[`from_env`]: #method.from_env\n[`from_default_env`]: #method.from_default_env","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[32,0],"end":[44,1]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11341:2244":{"id":"2:11341:2244","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5104:67867":{"id":"5:5104:67867","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1885","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1885","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:224-0:585:1780":{"id":"a:2:2676:224-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:458:2564":{"id":"b:2:2513-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:532:1554":{"id":"0:532:1554","crate_id":0,"name":"2","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[514,16],"end":[514,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:576:1912":{"id":"0:576:1912","crate_id":0,"name":"Micros","span":{"filename":"src/fmt/mod.rs","begin":[64,4],"end":[64,10]},"visibility":"default","docs":"Microsecond precision (6 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2523-0:508:2429":{"id":"b:2:2523-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:384:1863":{"id":"0:384:1863","crate_id":0,"name":"from_default_env","span":{"filename":"src/lib.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Creates the logger from the environment using default variable names.\n\nThis method is a convenient way to call `from_env(Env::default())` without\nhaving to use the `Env` type explicitly. The logger will use the\n[default environment variables].\n\n# Examples\n\nCreates a logger using the default environment variables:\n\n```\nuse env_logger::Logger;\n\nlet logger = Logger::from_default_env();\n```\n\n[default environment variables]: struct.Env.html#default-environment-variables","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[122,0],"end":[169,1]},"visibility":{"restricted":{"parent":"0:14:1762","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:41:1762","0:43:1992","0:44:1994"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:236":{"id":"0:236","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[98,0],"end":[102,1]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:237:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[262,0],"end":[266,1]},"visibility":{"restricted":{"parent":"0:14:1762","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:41:1762":{"id":"0:41:1762","crate_id":0,"name":"filter","span":{"filename":"src/filter/mod.rs","begin":[139,4],"end":[145,5]},"visibility":"public","docs":"Returns the maximum `LevelFilter` that this filter instance is\nconfigured to output.\n\n# Example\n\n```rust\nuse log::LevelFilter;\nuse env_logger::filter::Builder;\n\nlet mut builder = Builder::new();\nbuilder.filter(Some(\"module1\"), LevelFilter::Info);\nbuilder.filter(Some(\"module2\"), LevelFilter::Error);\n\nlet filter = builder.build();\nassert_eq!(filter.filter(), LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11416:1992":{"id":"2:11416:1992","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:7079:119","prim@char":"1:12300:407","self::pattern":"2:11041:4316","str::matches":"2:11416:1992"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50227:2897","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:206:1763":{"id":"0:206:1763","crate_id":0,"name":"glob","span":{"filename":"src/fmt/writer/mod.rs","begin":[8,0],"end":[8,19]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:207","0:208"],"is_stripped":true}},"0:423":{"id":"0:423","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1087,0],"end":[1094,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:426:672"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:3006-0:269:130":{"id":"a:2:2726:3006-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2528-0:36:1811":{"id":"b:2:2528-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[11,4],"end":[11,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:81:2488","glob":true}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,9],"end":[57,13]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:585:1780":{"id":"b:2:2238-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:3010-0:342:1797":{"id":"a:2:7735:3010-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2676:224-0:508:2429":{"id":"a:2:2676:224-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11435:67228":{"id":"2:11435:67228","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:169:2416":{"id":"b:2:2238-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:438:1971":{"id":"0:438:1971","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[1153,0],"end":[1155,1]},"visibility":"public","docs":"Initializes the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:123:2488":{"id":"0:123:2488","crate_id":0,"name":"imp","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[1,0],"end":[532,1]},"visibility":{"restricted":{"parent":"0:122:2067","path":"::fmt::writer::termcolor"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:458:2564","0:169:2416","0:508:2429"],"is_stripped":true}},"0:375:1856":{"id":"0:375:1856","crate_id":0,"name":"parse_write_style","span":{"filename":"src/lib.rs","begin":[769,4],"end":[772,5]},"visibility":"public","docs":"Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\nenvironment variable.\n\nSee the module documentation for more details.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write_style",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99:2445":{"id":"0:99:2445","crate_id":0,"name":"timestamp_nanos","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[70,4],"end":[75,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nnanosecond precision.","links":{"`Timestamp`":"0:100:2500"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::UpperHex","id":"2:8609:2644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:8609:2644","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:491:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11340:788":{"id":"2:11340:788","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12300:407"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:59":{"id":"0:237:59","crate_id":0,"name":"default","span":{"filename":"src/fmt/writer/mod.rs","begin":[99,4],"end":[101,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:3006-0:599:1811":{"id":"a:2:2726:3006-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11425:67224":{"id":"2:11425:67224","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:4316","prim@char":"1:12300:407","str::match_indices":"2:11422:67223"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50191:4571","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3009-0:585:1780":{"id":"a:2:7736:3009-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:437:1961":{"id":"0:437:1961","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[1140,0],"end":[1142,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3010-0:36:1811":{"id":"a:2:7735:3010-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:48:1922":{"id":"0:48:1922","crate_id":0,"name":"filter_module","span":{"filename":"src/filter/mod.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Adds a directive to the filter for a specific module.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["module",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:654":{"id":"0:113:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[108,4],"end":[117,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59:59":{"id":"0:59:59","crate_id":0,"name":"default","span":{"filename":"src/filter/mod.rs","begin":[263,4],"end":[265,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3010-0:33:1764":{"id":"a:2:7735:3010-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:70:654":{"id":"0:70:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[1,0],"end":[652,1]},"visibility":"public","docs":"Formatting for log records.\n\nThis module contains a [`Formatter`] that can be used to format log records\ninto without needing temporary allocations. Usually you won't need to worry\nabout the contents of this module and can use the `Formatter` like an ordinary\n[`Write`].\n\n# Formatting log records\n\nThe format used to print log records can be customised using the [`Builder::format`]\nmethod.\nCustom formats can apply different color and weight to printed values using\n[`Style`] builders.\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    writeln!(buf, \"{}: {}\",\n        record.level(),\n        record.args())\n});\n```\n\n[`Formatter`]: struct.Formatter.html\n[`Style`]: struct.Style.html\n[`Builder::format`]: ../struct.Builder.html#method.format\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:571:1903","0:269:130","0:257","0:258"],"is_stripped":false}},"0:52:1936":{"id":"0:52:1936","crate_id":0,"name":"parse","span":{"filename":"src/filter/mod.rs","begin":[216,4],"end":[225,5]},"visibility":"public","docs":"Parses the directives string.\n\nSee the [Enabling Logging] section for more details.\n\n[Enabling Logging]: ../index.html#enabling-logging","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["filters",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11343:67212":{"id":"2:11343:67212","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,27],"end":[503,36]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11466:55939":{"id":"2:11466:55939","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4465:55939"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50340:4579","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3009-0:458:2564":{"id":"a:2:7736:3009-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:7735:3010-0:458:2564":{"id":"a:2:7735:3010-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:543:1949":{"id":"b:2:2241-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:367:1914":{"id":"0:367:1914","crate_id":0,"name":"format_timestamp_nanos","span":{"filename":"src/lib.rs","begin":[642,4],"end":[644,5]},"visibility":"public","docs":"Configures the timestamp to use nanosecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11362:63300":{"id":"2:11362:63300","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11363:63301"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:351:1840":{"id":"0:351:1840","crate_id":0,"name":"parse_env","span":{"filename":"src/lib.rs","begin":[488,4],"end":[503,5]},"visibility":"public","docs":"Applies the configuration from the environment.\n\nThis function allows a builder to be configured with default parameters,\nto be then overridden by the environment.\n\n# Examples\n\nInitialise a logger with filter level `Off`, then override the log\nfilter from an environment variable called `MY_LOG`:\n\n```\nuse log::LevelFilter;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(\"MY_LOG\");\nbuilder.init();\n```\n\nInitialise a logger with filter level `Off`, then use the `MY_LOG`\nvariable to override filtering and `MY_LOG_STYLE` to override  whether\nor not to write styles:\n\n```\nuse log::LevelFilter;\nuse env_logger::{Builder, Env};\n\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nlet mut builder = Builder::new();\nbuilder.filter_level(LevelFilter::Off);\nbuilder.parse_env(env);\nbuilder.init();\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11434:67227":{"id":"2:11434:67227","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:3006-0:100:2500":{"id":"a:2:2726:3006-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:269:130":{"id":"b:2:2241-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:471:654":{"id":"0:471:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2527:1426":{"id":"2:2527:1426","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:36:1811":{"id":"b:2:3321-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11398:67218":{"id":"2:11398:67218","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:4316","str::split":"2:11389:2260","str::rsplit_terminator":"2:11401:67219"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50073:4566","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:571:1903":{"id":"0:571:1903","crate_id":0,"name":"TimestampPrecision","span":{"filename":"src/fmt/mod.rs","begin":[58,0],"end":[67,1]},"visibility":"public","docs":"Formatting precision of timestamps.\n\nSeconds give precision of full seconds, milliseconds give thousands of a\nsecond (3 decimal digits), microseconds are millionth of a second (6 decimal\ndigits) and nanoseconds are billionth of a second (9 decimal digits).","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:572:1906","0:574:1909","0:576:1912","0:578:1915"],"impls":["a:2:7736:3009-0:571:1903","a:2:2676:224-0:571:1903","a:2:2726:3006-0:571:1903","a:2:7735:3010-0:571:1903","a:2:2662:216-0:571:1903","b:2:2238-0:571:1903","b:2:2517-0:571:1903","b:2:2523-0:571:1903","b:2:2513-0:571:1903","b:2:3321-0:571:1903","b:2:2241-0:571:1903","b:2:2528-0:571:1903","b:5:681-0:571:1903","0:580","0:581","0:583","0:267"]}},"b:2:2241-0:36:1811":{"id":"b:2:2241-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:462:411":{"id":"0:462:411","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[241,9],"end":[241,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:396:914":{"id":"0:396:914","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[975,4],"end":[977,5]},"visibility":"public","docs":"Get a default set of environment variables.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:269:130":{"id":"b:2:2523-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:378:1971":{"id":"0:378:1971","crate_id":0,"name":"init","span":{"filename":"src/lib.rs","begin":[814,4],"end":[817,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Panics\n\nThis function will panic if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:410:2019":{"id":"0:410:2019","crate_id":0,"name":"default_write_style_or","span":{"filename":"src/lib.rs","begin":[1044,4],"end":[1051,5]},"visibility":"public","docs":"Use the default environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:508:2429":{"id":"b:2:3321-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:100:2500":{"id":"a:2:2676:224-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:683:2636":{"id":"5:683:2636","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:368:1917":{"id":"0:368:1917","crate_id":0,"name":"format_suffix","span":{"filename":"src/lib.rs","begin":[647,4],"end":[650,5]},"visibility":"public","docs":"Configures the end of line suffix.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"borrowed_ref","inner":{"lifetime":"'static","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:169:2416":{"id":"b:2:2528-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:3010-0:585:1780":{"id":"a:2:7735:3010-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[allow(missing_docs)]","#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:60":{"id":"0:60","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[268,0],"end":[275,1]},"visibility":{"restricted":{"parent":"0:14:1762","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:61:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:33:1764":{"id":"b:2:3321-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:215:2524":{"id":"0:215:2524","crate_id":0,"name":"Pipe","span":{"filename":"src/fmt/writer/mod.rs","begin":[23,4],"end":[23,45]},"visibility":"default","docs":"Logs will be sent to a custom pipe.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:217:1552"]},"discriminant":null}},"b:2:2513-0:543:1949":{"id":"b:2:2513-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11428:2269":{"id":"2:11428:2269","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:599:1811":{"id":"a:2:2662:216-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:563:599":{"id":"0:563:599","crate_id":0,"name":"eq","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,39],"end":[88,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:527:1552":{"id":"0:527:1552","crate_id":0,"name":"0","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[513,12],"end":[513,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:402:2013":{"id":"0:402:2013","crate_id":0,"name":"default_filter_or","span":{"filename":"src/lib.rs","begin":[1005,4],"end":[1012,5]},"visibility":"public","docs":"Use the default environment variable to read the filter from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[384,0],"end":[833,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:347:914","0:348:1837","0:351:1840","0:354:1863","0:355:1869","0:356:663","0:358:1888","0:359:1890","0:360:1893","0:361:1895","0:362:1898","0:363:1901","0:364:1905","0:365:1908","0:366:1911","0:367:1914","0:368:1917","0:369:1922","0:370:1927","0:371:1762","0:372:1854","0:373:1373","0:374:1783","0:375:1856","0:376:1954","0:377:1961","0:378:1971","0:379:1963"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:535":{"id":"0:535","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,16],"end":[503,21]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:536:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:585:1780":{"id":"b:2:2513-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[90,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:81:2488","path":"::fmt::humantime::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2662:216-0:458:2564":{"id":"a:2:2662:216-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3321-0:599:1811":{"id":"b:2:3321-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:681-0:543:1949":{"id":"b:5:681-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2636","5:684:2022","5:685:3515"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:33:1764":{"id":"0:33:1764","crate_id":0,"name":"Filter","span":{"filename":"src/filter/mod.rs","begin":[82,0],"end":[85,1]},"visibility":"public","docs":"A log filter.\n\nThis struct can be used to determine whether or not a log record\nshould be written to the output.\nUse the [`Builder`] type to parse and construct a `Filter`.\n\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:40","a:2:7736:3009-0:33:1764","a:2:2676:224-0:33:1764","a:2:2726:3006-0:33:1764","a:2:7735:3010-0:33:1764","a:2:2662:216-0:33:1764","b:2:2238-0:33:1764","b:2:2517-0:33:1764","b:2:2523-0:33:1764","b:2:2513-0:33:1764","b:2:3321-0:33:1764","b:2:2241-0:33:1764","b:2:2528-0:33:1764","0:60"]}},"2:11451:67232":{"id":"2:11451:67232","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[44,0],"end":[44,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::writer::glob","name":"glob","id":"0:206:1763","glob":true}},"a:2:7736:3009-0:342:1797":{"id":"a:2:7736:3009-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11463:67234":{"id":"2:11463:67234","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4467:67234"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50322:4578","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11439:67230":{"id":"2:11439:67230","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:407","self::pattern":"2:11041:4316"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:370:1927":{"id":"0:370:1927","crate_id":0,"name":"filter_level","span":{"filename":"src/lib.rs","begin":[685,4],"end":[688,5]},"visibility":"public","docs":"Adds a directive to the filter for all modules.\n\n# Examples\n\nOnly include messages for info and above for logs globally:\n\n```\nuse env_logger::Builder;\nuse log::LevelFilter;\n\nlet mut builder = Builder::new();\n\nbuilder.filter_level(LevelFilter::Info);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"LevelFilter","id":"24:219:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11422:67223":{"id":"2:11422:67223","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"2:11425:67224","self::pattern":"2:11041:4316","prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50173:4570","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[503,23],"end":[503,25]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:543:1949":{"id":"b:2:2238-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:224-0:458:2564":{"id":"a:2:2676:224-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:364:1905":{"id":"0:364:1905","crate_id":0,"name":"format_timestamp_secs","span":{"filename":"src/lib.rs","begin":[627,4],"end":[629,5]},"visibility":"public","docs":"Configures the timestamp to use second precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:169:2416":{"id":"b:2:2241-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:216-0:543:1949":{"id":"a:2:2662:216-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:481:654":{"id":"0:481:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:543:1949":{"id":"0:543:1949","crate_id":0,"name":"WriteStyle","span":{"filename":"src/fmt/writer/mod.rs","begin":[89,0],"end":[96,1]},"visibility":"public","docs":"Whether or not to print styles to the target.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:544:2532","0:546:2534","0:548:2469"],"impls":["a:2:7736:3009-0:543:1949","a:2:2676:224-0:543:1949","a:2:2726:3006-0:543:1949","a:2:7735:3010-0:543:1949","a:2:2662:216-0:543:1949","b:2:2238-0:543:1949","b:2:2517-0:543:1949","b:2:2523-0:543:1949","b:2:2513-0:543:1949","b:2:3321-0:543:1949","b:2:2241-0:543:1949","b:2:2528-0:543:1949","b:5:681-0:543:1949","0:550","0:552","0:553","0:555","0:556","0:558","0:561","0:562","0:236"]}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/fmt/mod.rs","begin":[57,15],"end":[57,20]},"visibility":{"restricted":{"parent":"0:70:654","path":"::fmt"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:411"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:501:654":{"id":"0:501:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:599:1811":{"id":"b:2:2523-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:486:654":{"id":"0:486:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:359:1890":{"id":"0:359:1890","crate_id":0,"name":"format_level","span":{"filename":"src/lib.rs","begin":[596,4],"end":[599,5]},"visibility":"public","docs":"Whether or not to write the level in the default format.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["write",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11339":{"id":"2:11339","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10604:1351","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11340:788","2:11341:2244","2:11342:67211","2:11343:67212","2:11345:67213","2:11348:62914","2:11349:67214","2:11350:308","2:11351:63279","2:11352:2014","2:11354:63276","2:11356:63277","2:11358:63278","2:11360:67215","2:11361:67216","2:11362:63300","2:11363:63301","2:11364:4597","2:11365:4347","2:11366:2462","2:11367:65185","2:11368:65179","2:11369:3791","2:11370:67217","2:11371:65189","2:11372:63317","2:11375:2280","2:11378:62937","2:11381:3497","2:11385:3459","2:11389:2260","2:11392:63309","2:11395:63311","2:11398:67218","2:11401:67219","2:11404:63313","2:11407:63315","2:11410:67220","2:11413:67221","2:11416:1992","2:11419:67222","2:11422:67223","2:11425:67224","2:11428:2269","2:11430:67225","2:11432:67226","2:11434:67227","2:11435:67228","2:11436:67229","2:11439:67230","2:11442:60770","2:11445:63318","2:11448:67231","2:11451:67232","2:11454:67233","2:11457:1936","2:11459:4761","2:11460:2831","2:11461:60351","2:11462:60352","2:11463:67234","2:11465:3864","2:11466:55939"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:509:2430":{"id":"0:509:2430","crate_id":0,"name":"Black","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[505,4],"end":[505,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2513-0:571:1903":{"id":"b:2:2513-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:407:2017":{"id":"0:407:2017","crate_id":0,"name":"write_style_or","span":{"filename":"src/lib.rs","begin":[1031,4],"end":[1039,5]},"visibility":"public","docs":"Specify an environment variable to read the style from.\n\nIf the variable is not set, the default value will be used.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["write_style_env",{"kind":"generic","inner":"E"}],["default",{"kind":"generic","inner":"V"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"V"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:169:2416":{"id":"b:2:2523-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:605:59":{"id":"0:605:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11360:67215":{"id":"2:11360:67215","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:11361:67216","crate::ops::Index":"2:2987:3996","`str`":"1:12306:1351"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5103":{"id":"5:5103","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5014:1351","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5104:67867","5:5105:2254","5:5108:67868","5:5111:67869","5:5119:67870","5:5120:67871","5:5121:2977","5:5122:60349","5:5123:60350"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:262:1763":{"id":"0:262:1763","crate_id":0,"name":"glob","span":{"filename":"src/fmt/mod.rs","begin":[48,0],"end":[48,19]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:264","0:265","0:266"],"is_stripped":true}},"b:2:2523-0:458:2564":{"id":"b:2:2523-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[902,0],"end":[971,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Log","id":"24:151:1758","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:1994","0:389:1756","0:393:2004"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:585:1780":{"id":"b:2:2241-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:508:2429":{"id":"b:2:2517-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:147:2439":{"id":"0:147:2439","crate_id":0,"name":"default_styled_level","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[67,4],"end":[69,5]},"visibility":"public","docs":"Get a printable [`Style`] for the given level.\n\nThe style can only be used to print the level.","links":{"`Style`":"0:458:2564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["level",{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'static"},{"type":{"kind":"resolved_path","inner":{"name":"Level","id":"24:198:2203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[316,9],"end":[316,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:591:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:377:1961":{"id":"0:377:1961","crate_id":0,"name":"try_init","span":{"filename":"src/lib.rs","begin":[792,4],"end":[803,5]},"visibility":"public","docs":"Initializes the global logger with the built env logger.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:571:1903":{"id":"b:2:2241-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:210:226":{"id":"0:210:226","crate_id":0,"name":"Target","span":{"filename":"src/fmt/writer/mod.rs","begin":[17,0],"end":[24,1]},"visibility":"public","docs":"Log target, either `stdout`, `stderr` or a custom pipe.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:211:2520","0:213:2522","0:215:2524"],"impls":["a:2:7736:3009-0:210:226","a:2:2676:224-0:210:226","a:2:2726:3006-0:210:226","a:2:7735:3010-0:210:226","a:2:2662:216-0:210:226","b:2:2238-0:210:226","b:2:2517-0:210:226","b:2:2523-0:210:226","b:2:2513-0:210:226","b:2:3321-0:210:226","b:2:2241-0:210:226","b:2:2528-0:210:226","0:218","0:220"]}},"0:426:672":{"id":"0:426:672","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[1091,4],"end":[1093,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["filter_env",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:458:2564":{"id":"b:2:2238-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:269:130":{"id":"0:269:130","crate_id":0,"name":"Formatter","span":{"filename":"src/fmt/mod.rs","begin":[97,0],"end":[100,1]},"visibility":"public","docs":"A formatter to write logs into.\n\n`Formatter` implements the standard [`Write`] trait for writing log records.\nIt also supports terminal colors, through the [`style`] method.\n\n# Examples\n\nUse the [`writeln`] macro to format a log record.\nAn instance of a `Formatter` is passed to an `env_logger` format as `buf`:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}: {}\", record.level(), record.args()));\n```\n\n[`Write`]: https://doc.rust-lang.org/stable/std/io/trait.Write.html\n[`writeln`]: https://doc.rust-lang.org/stable/std/macro.writeln.html\n[`style`]: #method.style","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:94","0:144","a:2:7736:3009-0:269:130","a:2:2676:224-0:269:130","a:2:2726:3006-0:269:130","a:2:7735:3010-0:269:130","a:2:2662:216-0:269:130","b:2:2238-0:269:130","b:2:2517-0:269:130","b:2:2523-0:269:130","b:2:2513-0:269:130","b:2:3321-0:269:130","b:2:2241-0:269:130","b:2:2528-0:269:130","0:277","0:280"]}},"5:5111:67869":{"id":"5:5111:67869","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:362:1898":{"id":"0:362:1898","crate_id":0,"name":"format_indent","span":{"filename":"src/lib.rs","begin":[615,4],"end":[618,5]},"visibility":"public","docs":"Configures the amount of spaces to use to indent multiline log records.\nA value of `None` disables any kind of indentation.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["indent",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:508:2429":{"id":"a:2:2662:216-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11358:63278":{"id":"2:11358:63278","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[376,9],"end":[376,16]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:95:1902":{"id":"0:95:1902","crate_id":0,"name":"timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[34,4],"end":[39,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC.\n\n# Examples\n\nInclude the current timestamp with the log record:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let ts = buf.timestamp();\n\n    writeln!(buf, \"{}: {}: {}\", ts, record.level(), record.args())\n});\n```\n\n[`Timestamp`]: struct.Timestamp.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:508:2429":{"id":"b:2:2528-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:519:2663":{"id":"0:519:2663","crate_id":0,"name":"Magenta","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[510,4],"end":[510,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[277,0],"end":[288,1]},"visibility":{"restricted":{"parent":"0:14:1762","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:63:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:559:706":{"id":"0:559:706","crate_id":0,"name":"hash","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:8833:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:366:1911":{"id":"0:366:1911","crate_id":0,"name":"format_timestamp_micros","span":{"filename":"src/lib.rs","begin":[637,4],"end":[639,5]},"visibility":"public","docs":"Configures the timestamp to use microsecond precision.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:546:2534":{"id":"0:546:2534","crate_id":0,"name":"Always","span":{"filename":"src/fmt/writer/mod.rs","begin":[93,4],"end":[93,10]},"visibility":"default","docs":"Try very hard to print styles.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:281:654":{"id":"0:281:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/mod.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11461:60351":{"id":"2:11461:60351","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:100:2500":{"id":"0:100:2500","crate_id":0,"name":"Timestamp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[85,0],"end":[88,1]},"visibility":"public","docs":"An [RFC3339] formatted timestamp.\n\nThe timestamp implements [`Display`] and can be written to a [`Formatter`].\n\n[RFC3339]: https://www.ietf.org/rfc/rfc3339.txt\n[`Display`]: https://doc.rust-lang.org/stable/std/fmt/trait.Display.html\n[`Formatter`]: struct.Formatter.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:7736:3009-0:100:2500","a:2:2676:224-0:100:2500","a:2:2726:3006-0:100:2500","a:2:7735:3010-0:100:2500","a:2:2662:216-0:100:2500","b:2:2238-0:100:2500","b:2:2517-0:100:2500","b:2:2523-0:100:2500","b:2:2513-0:100:2500","b:2:3321-0:100:2500","b:2:2241-0:100:2500","b:2:2528-0:100:2500","b:5:5372-0:100:2500","0:103","0:112"]}},"5:5108:67868":{"id":"5:5108:67868","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5121:2977":{"id":"5:5121:2977","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:342:1797":{"id":"0:342:1797","crate_id":0,"name":"Logger","span":{"filename":"src/lib.rs","begin":[347,0],"end":[351,1]},"visibility":"public","docs":"The env logger.\n\nThis struct implements the `Log` trait from the [`log` crate][log-crate-url],\nwhich allows it to act as a logger.\n\nThe [`init()`], [`try_init()`], [`Builder::init()`] and [`Builder::try_init()`]\nmethods will each construct a `Logger` and immediately initialize it as the\ndefault global logger.\n\nIf you'd instead need access to the constructed `Logger`, you can use\nthe associated [`Builder`] and install it with the\n[`log` crate][log-crate-url] directly.\n\n[log-crate-url]: https://docs.rs/log/\n[`init()`]: fn.init.html\n[`try_init()`]: fn.try_init.html\n[`Builder::init()`]: struct.Builder.html#method.init\n[`Builder::try_init()`]: struct.Builder.html#method.try_init\n[`Builder`]: struct.Builder.html","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:380","a:2:7736:3009-0:342:1797","a:2:2676:224-0:342:1797","a:2:2726:3006-0:342:1797","a:2:7735:3010-0:342:1797","a:2:2662:216-0:342:1797","b:2:2238-0:342:1797","b:2:2517-0:342:1797","b:2:2523-0:342:1797","b:2:2513-0:342:1797","b:2:3321-0:342:1797","b:2:2241-0:342:1797","b:2:2528-0:342:1797","0:387","0:433"]}},"b:2:2528-0:585:1780":{"id":"b:2:2528-0:585:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:33:1764":{"id":"b:2:2517-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:216-0:100:2500":{"id":"a:2:2662:216-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7736:3009-0:269:130":{"id":"a:2:7736:3009-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:100:2500":{"id":"b:2:2513-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:1852"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:36:1811":{"id":"b:2:2517-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:458:2564":{"id":"b:2:2528-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5120:67871":{"id":"5:5120:67871","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:6992:220","`Box<str>`":"5:286:1885"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1885","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6737:3016","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:342:1797":{"id":"b:2:2238-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:33:1764":{"id":"b:2:2241-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:496:654":{"id":"0:496:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:439:2028":{"id":"0:439:2028","crate_id":0,"name":"try_init_from_env","span":{"filename":"src/lib.rs","begin":[1185,0],"end":[1192,1]},"visibility":"public","docs":"Attempts to initialize the global logger with an env logger from the given\nenvironment variables.\n\nThis should be called early in the execution of a Rust program. Any log\nevents that occur before initialization will be ignored.\n\n# Examples\n\nInitialise a logger using the `MY_LOG` environment variable for filters\nand `MY_LOG_STYLE` for writing colors:\n\n```\nuse env_logger::{Builder, Env};\n\n# fn run() -> Result<(), Box<dyn ::std::error::Error>> {\nlet env = Env::new().filter(\"MY_LOG\").write_style(\"MY_LOG_STYLE\");\n\nenv_logger::try_init_from_env(env)?;\n\nOk(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nThis function will fail if it is called more than once, or if another\nlibrary has already initialized a global logger.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["env",{"kind":"generic","inner":"E"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48199:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"SetLoggerError","id":"24:352:1761","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Env","id":"0:585:1780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11348:62914":{"id":"2:11348:62914","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10609:2461"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:3010-0:100:2500":{"id":"a:2:7735:3010-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7735:3010-0:543:1949":{"id":"a:2:7735:3010-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11350:308":{"id":"2:11350:308","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12317:1447","str::as_mut_ptr":"2:11351:63279"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:508:2429":{"id":"b:2:2241-0:508:2429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:210:226":{"id":"b:2:3321-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:571:1903":{"id":"b:2:2517-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:458:2564":{"id":"b:2:2241-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11354:63276":{"id":"2:11354:63276","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48057:175"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208":{"id":"0:208","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[10,4],"end":[10,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"super","name":"super","id":"0:115:1765","glob":true}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/filter/mod.rs","begin":[171,0],"end":[260,1]},"visibility":{"restricted":{"parent":"0:14:1762","path":"::filter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:46:914","0:47:1837","0:48:1922","0:49:1927","0:50:1762","0:52:1936","0:53:1963"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11361:67216":{"id":"2:11361:67216","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"2:11360:67215","crate::ops::IndexMut":"2:2991:3997","`str`":"1:12306:1351"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:578:1915":{"id":"0:578:1915","crate_id":0,"name":"Nanos","span":{"filename":"src/fmt/mod.rs","begin":[66,4],"end":[66,9]},"visibility":"default","docs":"Nanosecond precision (9 decimal digits)","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11445:63318":{"id":"2:11445:63318","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11392:63309":{"id":"2:11392:63309","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11041:4316","prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10865:3962","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:466:654":{"id":"0:466:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:210:226":{"id":"a:2:2662:216-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:554:654":{"id":"0:554:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,22],"end":[88,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:376:1954":{"id":"0:376:1954","crate_id":0,"name":"is_test","span":{"filename":"src/lib.rs","begin":[778,4],"end":[781,5]},"visibility":"public","docs":"Sets whether or not the logger will be used in unit tests.\n\nIf `is_test` is `true` then the logger will allow the testing framework to\ncapture log records rather than printing them to the terminal directly.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["is_test",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:169:2416":{"id":"b:2:2517-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11395:63311":{"id":"2:11395:63311","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:4316","str::split":"2:11389:2260"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50041:3957","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:491:654":{"id":"0:491:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11356:63277":{"id":"2:11356:63277","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:356:663":{"id":"0:356:663","crate_id":0,"name":"format","span":{"filename":"src/lib.rs","begin":[579,4],"end":[585,5]},"visibility":"public","docs":"Sets the format function for formatting the log output.\n\nThis function is called on each record logged and should format the\nlog record and output it to the given [`Formatter`].\n\nThe format function is expected to output the string directly to the\n`Formatter` so that implementations can use the [`std::fmt`] macros\nto format and output without intermediate heap allocations. The default\n`env_logger` formatter takes advantage of this.\n\n# Examples\n\nUse a custom format to write only the log message:\n\n```\nuse std::io::Write;\nuse env_logger::Builder;\n\nlet mut builder = Builder::new();\n\nbuilder.format(|buf, record| writeln!(buf, \"{}\", record.args()));\n```\n\n[`Formatter`]: fmt/struct.Formatter.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`std::fmt`]: https://doc.rust-lang.org/std/fmt/index.html","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["format",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:2932:1883","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Record","id":"24:277:1760","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:2903:206","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97:2443":{"id":"0:97:2443","crate_id":0,"name":"timestamp_millis","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Get a [`Timestamp`] for the current date and time in UTC with\nmillisecond precision.","links":{"`Timestamp`":"0:100:2500"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:33:1764":{"id":"b:2:2528-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:126","2:2532:1425"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11345:67213":{"id":"2:11345:67213","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11343:67212"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:169:2416":{"id":"a:2:2662:216-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11413:67221":{"id":"2:11413:67221","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:458:2564":{"id":"b:2:3321-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:176:2574":{"id":"0:176:2574","crate_id":0,"name":"set_bold","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[305,4],"end":[308,5]},"visibility":"public","docs":"Set the text weight.\n\nIf `yes` is true then text will be written in bold.\nIf `yes` is false then text will be written in the default weight.\n\n# Examples\n\nCreate a style with bold text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bold(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11385:3459":{"id":"2:11385:3459","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48057:175","prim@char":"1:12300:407","self::pattern":"2:11041:4316"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11407:63315":{"id":"2:11407:63315","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12300:407","str::splitn":"2:11404:63313","self::pattern":"2:11041:4316"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50145:3959","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3009-0:599:1811":{"id":"a:2:7736:3009-0:599:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:599:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,29],"end":[88,31]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11342:67211":{"id":"2:11342:67211","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Octal","id":"2:8603:2642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:8603:2642","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:481:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:543:1949":{"id":"b:2:3321-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:429:59":{"id":"0:429:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1097,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:585:1780":{"id":"0:585:1780","crate_id":0,"name":"Env","span":{"filename":"src/lib.rs","begin":[317,0],"end":[320,1]},"visibility":"public","docs":"Set of environment variables to configure from.\n\n# Default environment variables\n\nBy default, the `Env` will read the following environment variables:\n\n- `RUST_LOG`: the level filter\n- `RUST_LOG_STYLE`: whether or not to print styles with records.\n\nThese sources can be configured using the builder methods on `Env`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:394","a:2:7736:3009-0:585:1780","a:2:2676:224-0:585:1780","a:2:2726:3006-0:585:1780","a:2:7735:3010-0:585:1780","a:2:2662:216-0:585:1780","b:2:2238-0:585:1780","b:2:2517-0:585:1780","b:2:2523-0:585:1780","b:2:2513-0:585:1780","b:2:3321-0:585:1780","b:2:2241-0:585:1780","b:2:2528-0:585:1780","0:589","0:423","0:427"]}},"2:2526:126":{"id":"2:2526:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:179:2629":{"id":"0:179:2629","crate_id":0,"name":"set_bg","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[384,4],"end":[387,5]},"visibility":"public","docs":"Set the background color.\n\n# Examples\n\nCreate a style with a yellow background:\n\n```\nuse std::io::Write;\nuse env_logger::fmt::Color;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_bg(Color::Yellow);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["color",{"kind":"resolved_path","inner":{"name":"Color","id":"0:508:2429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:216-0:33:1764":{"id":"a:2:2662:216-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2726:3006-0:543:1949":{"id":"a:2:2726:3006-0:543:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11367:65185":{"id":"2:11367:65185","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11368:65179"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50297:4575","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11365:4347":{"id":"2:11365:4347","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12300:407"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49999:4562","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:269:130":{"id":"b:2:3321-0:269:130","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Formatter","id":"0:269:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:174":{"id":"0:174","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[257,0],"end":[427,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:175:2428","0:176:2574","0:177:2431","0:178:2625","0:179:2629","0:180:2434"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:436:654":{"id":"0:436:654","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1118,8],"end":[1127,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:221:654":{"id":"0:221:654","crate_id":0,"name":"fmt","span":{"filename":"src/fmt/writer/mod.rs","begin":[33,4],"end":[43,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:81:2488":{"id":"0:81:2488","crate_id":0,"name":"imp","span":{"filename":"src/fmt/humantime/extern_impl.rs","begin":[1,0],"end":[118,1]},"visibility":{"restricted":{"parent":"0:80:1565","path":"::fmt::humantime"}},"docs":null,"links":{},"attrs":["#[path = \"extern_impl.rs\"]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:100:2500"],"is_stripped":true}},"b:2:3321-0:169:2416":{"id":"b:2:3321-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1439"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5372-0:100:2500":{"id":"b:5:5372-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5370:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5374:1405"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11459:4761":{"id":"2:11459:4761","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5105:2254":{"id":"5:5105:2254","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6992:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6992:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3009-0:36:1811":{"id":"a:2:7736:3009-0:36:1811","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Builder","id":"0:36:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11410:67220":{"id":"2:11410:67220","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48055:177","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191":{"id":"0:191","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[448,0],"end":[452,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:192:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:100:2500":{"id":"b:2:2238-0:100:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Timestamp","id":"0:100:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:3010-0:571:1903":{"id":"a:2:7735:3010-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:3010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11366:2462":{"id":"2:11366:2462","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50009:2957","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61:654":{"id":"0:61:654","crate_id":0,"name":"fmt","span":{"filename":"src/filter/mod.rs","begin":[269,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:130","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:3009-0:33:1764":{"id":"a:2:7736:3009-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:523:2664":{"id":"0:523:2664","crate_id":0,"name":"White","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[512,4],"end":[512,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:5:681-0:571:1903":{"id":"b:5:681-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:2636","5:684:2022","5:685:3515"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2531:126":{"id":"2:2531:126","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39299:3860","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2676:224-0:33:1764":{"id":"a:2:2676:224-0:33:1764","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Filter","id":"0:33:1764","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:342:1797":{"id":"b:2:2241-0:342:1797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Logger","id":"0:342:1797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:2406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:397:1762":{"id":"0:397:1762","crate_id":0,"name":"filter","span":{"filename":"src/lib.rs","begin":[980,4],"end":[987,5]},"visibility":"public","docs":"Specify an environment variable to read the filter from.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["filter_env",{"kind":"generic","inner":"E"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:146","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:686:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:571:1903":{"id":"b:2:2238-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1753"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:210:226":{"id":"b:2:2517-0:210:226","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Target","id":"0:210:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:3006-0:169:2416":{"id":"a:2:2726:3006-0:169:2416","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11419:67222":{"id":"2:11419:67222","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:12300:407","`DoubleEndedIterator`":"2:7079:119","self::pattern":"2:11041:4316","str::matches":"2:11416:1992"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50245:4573","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11046:4315","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11061:4319","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3323:1439":{"id":"2:3323:1439","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46527:4019","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:551:411":{"id":"0:551:411","crate_id":0,"name":"clone","span":{"filename":"src/fmt/writer/mod.rs","begin":[88,9],"end":[88,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:178:2625":{"id":"0:178:2625","crate_id":0,"name":"set_dimmed","span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[359,4],"end":[362,5]},"visibility":"public","docs":"Set whether the text is dimmed.\n\nIf `yes` is true then text will be written in a dimmer color.\nIf `yes` is false then text will be written in the default color.\n\n# Examples\n\nCreate a style with dimmed text:\n\n```\nuse std::io::Write;\n\nlet mut builder = env_logger::Builder::new();\n\nbuilder.format(|buf, record| {\n    let mut style = buf.style();\n\n    style.set_dimmed(true);\n\n    writeln!(buf, \"{}\", style.value(record.args()))\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:458:2564":{"id":"b:2:2517-0:458:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Style","id":"0:458:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:672"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:571:1903":{"id":"b:2:2523-0:571:1903","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"TimestampPrecision","id":"0:571:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:126","2:2527:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/mod.rs","begin":[88,33],"end":[88,37]},"visibility":{"restricted":{"parent":"0:115:1765","path":"::fmt::writer"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:8819:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WriteStyle","id":"0:543:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:706"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:44:1994":{"id":"0:44:1994","crate_id":0,"name":"enabled","span":{"filename":"src/filter/mod.rs","begin":[163,4],"end":[168,5]},"visibility":"public","docs":"Determines if a log message with the specified metadata would be logged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["metadata",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Metadata","id":"24:296:1759","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt/writer/termcolor/extern_impl.rs","begin":[466,0],"end":[476,1]},"visibility":{"restricted":{"parent":"0:123:2488","path":"::fmt::writer::termcolor::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::LowerHex","id":"2:8607:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:8607:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StyledValue","id":"0:169:2416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:496:654"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:684:2022":{"id":"5:684:2022","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"2:1552:2939":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"9:920:4890":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"26:99:2494":{"crate_id":26,"path":["humantime","date","format_rfc3339_seconds"],"kind":"function"},"17:9764:8345":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:6834:3464":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:1620:3901":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:13594:9051":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"21:2614:5801":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"2:54078:9584":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:2991:3997":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:4385:9086":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:51878:4495":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:11709:9466":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"22:1271:1811":{"crate_id":22,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"28:37:5880":{"crate_id":28,"path":["io_lifetimes","portability","IntoFilelike"],"kind":"trait"},"1:719:13385":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:54063:9583":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"20:949:5700":{"crate_id":20,"path":["regex","re_bytes","CapturesDebug"],"kind":"struct"},"20:2449:2909":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIter"],"kind":"struct"},"17:3125:8234":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"22:1167:4164":{"crate_id":22,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"17:13203:8934":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:12307:1429":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"20:713:8106":{"crate_id":20,"path":["regex","pool","Pool"],"kind":"struct"},"21:1389:3932":{"crate_id":21,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"30:3293:5932":{"crate_id":30,"path":["rustix","backend","io","types","DupFlags"],"kind":"struct"},"5:6893:2864":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:3154:4226":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:46964:4653":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:51748:4506":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:8991:68017":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:6430:7765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"7:32:46583":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:2768:3980":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:9681:8275":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7135:5132":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"30:498:5900":{"crate_id":30,"path":["rustix","backend","io","epoll","Epoll"],"kind":"struct"},"16:2579:5488":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"5:6419:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:50091:4567":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:4379:7412":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"31:6138:6660":{"crate_id":31,"path":["linux_raw_sys","general","tcp_info"],"kind":"struct"},"2:8833:143":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"31:4988:6338":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"1:2401:4210":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:52325:4480":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:9285:3850":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:8609:2644":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:0:1343":{"crate_id":1,"path":["std"],"kind":"module"},"2:5457:4051":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:49097:126":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:3422:2949":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:6759:2979":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:8603:2642":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"12:815:4097":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:4531:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"23:807:5676":{"crate_id":23,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"29:8420:7836":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"31:6590:6796":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"31:6606:6800":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"2:8615:2646":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:8212:5618":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:4246:3911":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"23:769:7869":{"crate_id":23,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:7237:7550":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:13478:9024":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"21:1115:4276":{"crate_id":21,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"22:1514:7930":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"2:10205:6045":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:3084:4647":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:1643:3574":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:20254:3870":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:3157:4227":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:11800:8557":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"29:764:7137":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"17:562:8230":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"18:727:5679":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"21:1208:2970":{"crate_id":21,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"17:8701:8223":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"31:5594:6502":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"6:4690:972":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"31:5964:6623":{"crate_id":31,"path":["linux_raw_sys","general","tcphdr"],"kind":"struct"},"1:7848:3870":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"5:1226:4103":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:5823:4008":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:9526:5517":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"29:5117:7394":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"31:4547:6228":{"crate_id":31,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"28:19:3048":{"crate_id":28,"path":["io_lifetimes","portability","AsFilelike"],"kind":"trait"},"2:50322:4578":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:10506:8410":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:3599:9075":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:2285:184":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"21:1156:5719":{"crate_id":21,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"17:12033:8609":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:9339:5635":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:8363:2979":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"20:2229:2902":{"crate_id":20,"path":["regex","re_bytes","SplitN"],"kind":"struct"},"2:47536:3065":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:7939:13383":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:53571:4478":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"20:2012:8142":{"crate_id":20,"path":["regex","prog","EmptyLook"],"kind":"enum"},"1:8699:4285":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:8613:2647":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:13327:8980":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6146:5311":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:4144:9080":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:7150:10289":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:2800:3994":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"29:9104:6762":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"31:7076:58695":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_11"],"kind":"enum"},"22:0:2794":{"crate_id":22,"path":["aho_corasick"],"kind":"module"},"1:918:4092":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"29:7355:7714":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:2411:5453":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:7057:4180":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"31:6743:10510":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_5"],"kind":"union"},"22:1495:7927":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"17:12164:8629":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:4726:7553":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:11813:8559":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"29:8458:7843":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:4403:4281":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:3263:9072":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:20423:3870":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"5:1195:4102":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:2290:123":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"28:152:5879":{"crate_id":28,"path":["io_lifetimes","raw","FromRawSocketlike"],"kind":"trait"},"17:9350:5636":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:4346:2811":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"31:6597:6798":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"16:5460:5174":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:21711:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"21:2423:5767":{"crate_id":21,"path":["regex_syntax","hir","Group"],"kind":"struct"},"17:10532:126":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:2681:2814":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:12307:8653":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"20:2459:2895":{"crate_id":20,"path":["regex","re_trait","Locations"],"kind":"struct"},"2:50173:4570":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:1615:3900":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:49386:9514":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"18:671:5674":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:5541:5181":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:47285:4064":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"23:681:5689":{"crate_id":23,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:6752:4826":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"31:4567:6232":{"crate_id":31,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"6:4534:7477":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8741:6934":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"31:4822:10391":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage"],"kind":"struct"},"6:4367:7403":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:646:6514":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:135:41482":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:4635:7521":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:52038:4464":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:4297:9083":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:3271:2972":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"9:956:4889":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:21221:8185":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:501:6511":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"21:1932:5771":{"crate_id":21,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"14:31:9362":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"31:4796:6285":{"crate_id":31,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"6:0:793":{"crate_id":6,"path":["libc"],"kind":"module"},"20:2466:5706":{"crate_id":20,"path":["regex","re_trait","SubCapturesPosIter"],"kind":"struct"},"17:12514:8689":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"22:1157:7904":{"crate_id":22,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"21:1184:7979":{"crate_id":21,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"5:1311:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:11893:8568":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:1626:3902":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:6463:5327":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"31:4975:6332":{"crate_id":31,"path":["linux_raw_sys","general","ip_msfilter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"21:1748:5760":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"17:13572:9045":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:487:7113":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:10625:5506":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:5480:7595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:20969:3870":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"28:28:5885":{"crate_id":28,"path":["io_lifetimes","portability","AsSocketlike"],"kind":"trait"},"22:1552:7938":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"2:2321:178":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:12148:8625":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:1602:662":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"17:9021:8321":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:781:4824":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:8713:4238":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:9377:3962":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:4673:7534":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:11134:128":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:47578:9463":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:2673:221":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"21:1974:4263":{"crate_id":21,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"31:6421:4250":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_un"],"kind":"struct"},"29:5893:7549":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:21876:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"21:2544:5716":{"crate_id":21,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"21:2553:4276":{"crate_id":21,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"2:50331:3865":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"20:1605:8102":{"crate_id":20,"path":["regex","dfa","StateFlags"],"kind":"struct"},"2:46846:4744":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:46822:4378":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:49904:3953":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:8611:190":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"29:5513:7480":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"31:5696:6534":{"crate_id":31,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"9:382:4886":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:10579:4755":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:4217:9081":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"31:7148:6914":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe"],"kind":"struct"},"31:5990:58684":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_4"],"kind":"enum"},"6:4286:7363":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:13354:8992":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:47551:2980":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:3484:4865":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:0:484":{"crate_id":2,"path":["core"],"kind":"module"},"2:7736:3009":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"31:6632:6806":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"1:8864:4138":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:1953:4810":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"33:292:3095":{"crate_id":33,"path":["termcolor","LossyStandardStream"],"kind":"struct"},"17:8561:5579":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:4888:9101":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:51001:157":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:3594:4035":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"0:14:1762":{"crate_id":0,"path":["env_logger","filter"],"kind":"module"},"17:11014:8429":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"27:5:2554":{"crate_id":27,"path":["is_terminal","IsTerminal"],"kind":"trait"},"16:5374:5266":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"23:707:7870":{"crate_id":23,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"31:5079:6374":{"crate_id":31,"path":["linux_raw_sys","general","ip_esp_hdr"],"kind":"struct"},"21:1322:5740":{"crate_id":21,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"6:6277:6954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"29:1987:6344":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:49913:3956":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"5:5370:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:12022:8608":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"30:4667:69161":{"crate_id":30,"path":["rustix","process","prctl","TimingMethod"],"kind":"enum"},"1:12321:1443":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:12884:8850":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:2487:146":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:1505:6324":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:7603:5292":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"29:676:6766":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"29:2027:7226":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:50814:3028":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"21:2579:55981":{"crate_id":21,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"2:11267:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:50631:4662":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:5087:3925":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:11661:8539":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:54127:9587":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:6737:3016":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:1043:66636":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"31:6431:6777":{"crate_id":31,"path":["linux_raw_sys","general","oldold_utsname"],"kind":"struct"},"2:46926:4742":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:9384:9690":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:49067:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"23:556:5809":{"crate_id":23,"path":["memchr","cow","Imp"],"kind":"enum"},"31:4575:6233":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"6:6479:7801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:5545:3000":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"29:783:7142":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"31:7356:6973":{"crate_id":31,"path":["linux_raw_sys","general","msghdr"],"kind":"struct"},"20:1947:8109":{"crate_id":20,"path":["regex","prog","Program"],"kind":"struct"},"31:5282:6414":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_rt_hdr"],"kind":"struct"},"9:800:10589":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:10865:3962":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:5660:7676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"29:5650:7508":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:4239:7345":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:10159:8387":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:11514:10149":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:10997:8427":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"21:1504:5747":{"crate_id":21,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"2:53759:4482":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:4200:7327":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:56960:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"22:1630:7891":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"2:47159:4048":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"26:102:2493":{"crate_id":26,"path":["humantime","date","format_rfc3339_nanos"],"kind":"function"},"2:2763:3978":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"20:1814:8105":{"crate_id":20,"path":["regex","input","Char"],"kind":"struct"},"31:5825:6567":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"23:665:139":{"crate_id":23,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:48140:3162":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:7329:5341":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:8752:2957":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:12836:8844":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"29:7074:7654":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:8605:2643":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:4804:10518":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:12550:8720":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:12225:8644":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"30:5193:7109":{"crate_id":30,"path":["rustix","process","sched","CpuSet"],"kind":"struct"},"5:6791:3464":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"23:872:5681":{"crate_id":23,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"30:4212:7070":{"crate_id":30,"path":["rustix","process","membarrier","MembarrierQuery"],"kind":"struct"},"1:7870:1811":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"31:5094:6378":{"crate_id":31,"path":["linux_raw_sys","general","ip_beet_phdr"],"kind":"struct"},"16:7298:5338":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:6604:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:52963:4477":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:5510:7612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:9370:3064":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"21:1919:5770":{"crate_id":21,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"16:7980:5149":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:5443:6584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"13:220:9753":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:11873:8567":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:50750:4589":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"21:1830:5765":{"crate_id":21,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"31:5602:6505":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"6:5727:7707":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"31:5835:6570":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"31:4733:6260":{"crate_id":31,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"6:5749:10527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:6233:202":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"31:6705:10487":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_1"],"kind":"union"},"1:12303:1016":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"31:4833:6291":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"5:4948:3930":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:21205:9754":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"31:6343:6755":{"crate_id":31,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"1:8719:4257":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:6393:4602":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:12797:8835":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:29548:3579":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"20:1561:4138":{"crate_id":20,"path":["regex","dfa","State"],"kind":"struct"},"17:11259:8452":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"31:5704:6537":{"crate_id":31,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"31:6686:10480":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe"],"kind":"struct"},"17:9631:5514":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:4316:3910":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:10108:5561":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:1532:6348":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"12:1859:3902":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"31:5009:10402":{"crate_id":31,"path":["linux_raw_sys","general","group_filter__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"22:1247:8099":{"crate_id":22,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"16:7372:5476":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"31:5983:10464":{"crate_id":31,"path":["linux_raw_sys","general","tcp_word_hdr"],"kind":"union"},"31:6413:6772":{"crate_id":31,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"2:47049:9503":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:5763:4004":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:8556:130":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:9539:5516":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12850:8847":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:5064:3972":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:3689:9077":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:2793:5444":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"28:67:56868":{"crate_id":28,"path":["io_lifetimes","traits","IntoFd"],"kind":"trait"},"29:5154:7401":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:2868:5206":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:49378:9513":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:21370:4693":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:12060:8612":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"22:1013:5811":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"17:9873:8348":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:3147:4648":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:6926:4859":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"18:531:5687":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:54142:9588":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:50762:4592":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"21:2649:5802":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"2:38125:179":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:11217:8447":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:10420:5654":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:48115:3850":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:21810:3832":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:7433:4124":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:50651:4663":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"31:7227:6928":{"crate_id":31,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"12:2190:68010":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"31:7378:4256":{"crate_id":31,"path":["linux_raw_sys","general","ucred"],"kind":"struct"},"1:6217:4113":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"29:6961:7624":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"30:4114:69152":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdClockId"],"kind":"enum"},"17:10360:5653":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"29:5496:7477":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"29:806:41481":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"12:1029:4104":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:11070:8432":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"30:5180:7107":{"crate_id":30,"path":["rustix","process","rlimit","Rlimit"],"kind":"struct"},"29:7925:6954":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:7059:3162":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"0:269:130":{"crate_id":0,"path":["env_logger","fmt","Formatter"],"kind":"struct"},"1:3160:4228":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:6241:5322":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"20:1452:68040":{"crate_id":20,"path":["regex","compile","InstHole"],"kind":"enum"},"16:6704:5287":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:47522:9457":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:6668:5467":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:9261:3850":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:4745:7561":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:10182:8388":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"31:4615:10376":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"29:5914:7559":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:5436:3899":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"31:5041:6353":{"crate_id":31,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"21:2510:5793":{"crate_id":21,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"6:4527:7475":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:8737:4021":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:50145:3959":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:11704:6070":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:8814:4128":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"29:4581:7260":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10949:8425":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"29:8351:7817":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"20:1965:8130":{"crate_id":20,"path":["regex","prog","Inst"],"kind":"enum"},"22:1507:7929":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"17:10721:8421":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:10121:5562":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"31:6623:6803":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"6:495:7118":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:6654:5332":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:4716:7549":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:12934:8867":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"12:1628:6018":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:46606:4384":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:54104:9586":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"31:4660:10387":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"29:1726:6327":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:4689:9095":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"23:624:7869":{"crate_id":23,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11356:8481":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"20:1628:126":{"crate_id":20,"path":["regex","error","Error"],"kind":"enum"},"22:1211:5819":{"crate_id":22,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"26:0:1565":{"crate_id":26,"path":["humantime"],"kind":"module"},"31:4843:58668":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_1"],"kind":"enum"},"31:5586:6499":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"23:853:5680":{"crate_id":23,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"29:5974:7588":{"crate_id":29,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"29:5433:7464":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:12282:62291":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"20:1422:4825":{"crate_id":20,"path":["regex","compile","Hole"],"kind":"enum"},"30:4144:7066":{"crate_id":30,"path":["rustix","process","id","Uid"],"kind":"struct"},"17:12748:8821":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:8645:4239":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:2753:2795":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"5:3804:3851":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:11485:8508":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"31:4771:6274":{"crate_id":31,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"17:13340:8986":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:7005:4054":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"29:4731:7320":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"29:7993:7746":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"33:0:2067":{"crate_id":33,"path":["termcolor"],"kind":"module"},"29:4651:7287":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:4475:7456":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:11655:9619":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"20:2248:2891":{"crate_id":20,"path":["regex","re_bytes","CaptureLocations"],"kind":"struct"},"5:3429:6020":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:5561:4815":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"12:1866:3903":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:6330:5324":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"31:5748:7130":{"crate_id":31,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"16:7872:5283":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:9061:5531":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"29:6893:6978":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:9658:8341":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"30:4541:7076":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointExceptionMode"],"kind":"struct"},"2:51794:4486":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:6690:5274":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:11046:4315":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:11112:4323":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"33:79:3087":{"crate_id":33,"path":["termcolor","BufferedStandardStream"],"kind":"struct"},"31:5843:6573":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"2:51018:4187":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"21:2125:8068":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"6:4592:7505":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"29:5572:7488":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:2476:4848":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:1369:3464":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:1887:42761":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:4096:6537":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:11607:4012":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:8137:49015":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4737:7559":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"12:393:68006":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:13176:8927":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"12:1534:5067":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:9897:8350":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:6852:3075":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"0:446:1837":{"crate_id":0,"path":["env_logger","from_env"],"kind":"function"},"31:4996:10395":{"crate_id":31,"path":["linux_raw_sys","general","group_req"],"kind":"struct"},"2:4003:4173":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:47191:4057":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"20:2169:2904":{"crate_id":20,"path":["regex","re_builder","set_unicode","RegexSetBuilder"],"kind":"struct"},"21:2593:68092":{"crate_id":21,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"2:11657:66547":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:19981:3415":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"12:1555:5068":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:10221:8393":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:4744:4022":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"29:6763:6583":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:4369:2812":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"29:5344:7445":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"21:1535:5749":{"crate_id":21,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"31:4762:6270":{"crate_id":31,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"2:3956:4454":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:46561:2808":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"21:1623:5753":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"2:29642:4645":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"21:1467:5745":{"crate_id":21,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"2:2935:3109":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:9526:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:5692:7693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:6070:5209":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:50927:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:10860:2520":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"20:2444:2908":{"crate_id":20,"path":["regex","re_set","bytes","SetMatchesIntoIter"],"kind":"struct"},"1:3086:2982":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"20:1622:8166":{"crate_id":20,"path":["regex","dfa","StateMap"],"kind":"struct"},"1:12300:407":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"31:5860:10456":{"crate_id":31,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"5:6022:6020":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:9347:4119":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:10455:5655":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:50546:4330":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:11682:10716":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:11186:8445":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:5908:6032":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"20:2572:2892":{"crate_id":20,"path":["regex","re_unicode","CaptureMatches"],"kind":"struct"},"21:1296:5723":{"crate_id":21,"path":["regex_syntax","ast","Position"],"kind":"struct"},"33:81:3088":{"crate_id":33,"path":["termcolor","WriterInner"],"kind":"enum"},"12:1085:5055":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"22:1378:5673":{"crate_id":22,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"2:3968:4455":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"21:1602:5752":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"1:7924:13381":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:5227:16629":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:9283:8332":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:46488:2857":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:4894:3914":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"21:1335:5722":{"crate_id":21,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"29:5800:7531":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:10581:4011":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"30:3797:57325":{"crate_id":30,"path":["rustix","backend","termios","types","OptionalActions"],"kind":"enum"},"29:5993:10523":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:8014:5148":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:8494:8310":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:5703:5188":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:9596:3961":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"29:4749:7322":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"20:931:2894":{"crate_id":20,"path":["regex","re_bytes","Captures"],"kind":"struct"},"1:7896:3826":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:9317:5633":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"31:5002:10398":{"crate_id":31,"path":["linux_raw_sys","general","group_source_req"],"kind":"struct"},"1:9442:9693":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:6761:3899":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:49582:3939":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:7166:6762":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:4317:2809":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:8873:3782":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:11997:8604":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4768:7569":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"29:1887:7174":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:29748:4646":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:12926:8864":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:48106:3463":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"20:1213:2894":{"crate_id":20,"path":["regex","re_unicode","Captures"],"kind":"struct"},"16:6171:5312":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"21:1284:5724":{"crate_id":21,"path":["regex_syntax","ast","Span"],"kind":"struct"},"6:4361:7401":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:6528:5329":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:9805:5640":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"5:2737:66638":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:4324:3918":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"12:762:3900":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:6161:5319":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:7909:5284":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:49339:9508":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:1541:7150":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:46945:4380":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:51816:4474":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"31:4713:6250":{"crate_id":31,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"21:1885:5768":{"crate_id":21,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"5:7069:3900":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:4326:2810":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:6284:5278":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"24:219:1757":{"crate_id":24,"path":["log","LevelFilter"],"kind":"enum"},"2:7079:119":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:12630:8781":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"22:1137:7902":{"crate_id":22,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"17:10583:5501":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"5:4626:2939":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:6392:7753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"20:1880:8196":{"crate_id":20,"path":["regex","literal","imp","SingleByteSet"],"kind":"struct"},"1:9283:4115":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:4621:7516":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:2771:5442":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:7849:3839":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"7:0:1490":{"crate_id":7,"path":["unwind"],"kind":"module"},"18:538:5688":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:4262:3913":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:1943:3820":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:0:281":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:11670:9621":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11841:8563":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"19:0:998":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:21678:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:4629:7520":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:4041:6024":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:47560:6044":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:1021:5638":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"31:6749:58691":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_7"],"kind":"enum"},"15:193:5076":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"12:751:3899":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"30:549:5902":{"crate_id":30,"path":["rustix","backend","io","epoll","EventVec"],"kind":"struct"},"21:1309:5739":{"crate_id":21,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"30:3821:57326":{"crate_id":30,"path":["rustix","backend","termios","types","QueueSelector"],"kind":"enum"},"30:4338:69163":{"crate_id":30,"path":["rustix","process","prctl","DumpableBehavior"],"kind":"enum"},"2:49891:3937":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"31:7387:6982":{"crate_id":31,"path":["linux_raw_sys","general","mmsghdr"],"kind":"struct"},"2:46362:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"29:621:7124":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"31:5814:6563":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"29:6911:6755":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:3066:1035":{"crate_id":1,"path":["std","io","prelude"],"kind":"module"},"26:157:3038":{"crate_id":26,"path":["humantime","duration","FormattedDuration"],"kind":"struct"},"29:8035:6934":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"26:194:126":{"crate_id":26,"path":["humantime","date","Error"],"kind":"enum"},"23:824:4318":{"crate_id":23,"path":["memchr","memmem","Searcher"],"kind":"struct"},"7:79:46590":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"22:1528:7932":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"16:6743:5333":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:46919:4741":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:9183:8324":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"12:1840:3899":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:3162:133":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"29:5454:7468":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:3347:2980":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"29:5594:7494":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:2672:222":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:3470:64610":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:29542:3578":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"31:5618:6508":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"20:2005:8209":{"crate_id":20,"path":["regex","prog","InstEmptyLook"],"kind":"struct"},"6:4581:7497":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:21777:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"12:387:68009":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"22:1102:7901":{"crate_id":22,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"2:2796:3992":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:3472:2969":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:7289:7858":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:8819:139":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"31:5551:6480":{"crate_id":31,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"31:5851:6576":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"16:2930:5207":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:47253:4062":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:50770:4587":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"12:985:4102":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:29584:4644":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:12103:8618":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:2932:1883":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:2676:224":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:21942:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:9401:8336":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"31:7235:6934":{"crate_id":31,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"29:5478:7475":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:10708:5619":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"22:1399:7924":{"crate_id":22,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"6:4665:6255":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:46836:4743":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"11:0:2673":{"crate_id":11,"path":["adler"],"kind":"module"},"2:20971:4368":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:608:7142":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:5646:3998":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:6567:5285":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"22:1644:7951":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"31:4753:6266":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"17:10445:5620":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"29:9297:7858":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:52149:4496":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"23:0:2679":{"crate_id":23,"path":["memchr"],"kind":"module"},"17:10752:5499":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:2987:3996":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"22:1094:7898":{"crate_id":22,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"16:7970:5280":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"12:1681:142":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:10062:8384":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:7539:62621":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:8076:3923":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:5737:5191":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"29:5742:7521":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:2904:115":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"31:5765:6556":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"2:57012:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:2847:3890":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"5:3910:3850":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:9458:5494":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"31:5674:6517":{"crate_id":31,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"13:108:68011":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"22:1560:7939":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"1:11903:9715":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:12118:8622":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:4224:7340":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:8370:2981":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:52885:4489":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"28:132:5876":{"crate_id":28,"path":["io_lifetimes","raw","AsRawSocketlike"],"kind":"trait"},"20:1654:5703":{"crate_id":20,"path":["regex","exec","ExecNoSyncStr"],"kind":"struct"},"17:11909:8573":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:11106:8434":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:51770:4494":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:48330:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"33:396:3093":{"crate_id":33,"path":["termcolor","ParseColorError"],"kind":"struct"},"1:3479:2951":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:4672:13387":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:7343:5275":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:4139:7287":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:9193:68013":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:6200:5320":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:20875:66384":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"20:1914:8201":{"crate_id":20,"path":["regex","pikevm","Threads"],"kind":"struct"},"26:230:3043":{"crate_id":26,"path":["humantime","date","Rfc3339Timestamp"],"kind":"struct"},"5:2947:3850":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"29:1709:6324":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:1695:6982":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"29:5706:7516":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:47069:3936":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:2497:232":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:4693:65409":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"29:1781:6348":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:954:3900":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:13413:9006":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:5587:7626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:586:6513":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"33:311:2555":{"crate_id":33,"path":["termcolor","ColorChoice"],"kind":"enum"},"31:6399:6771":{"crate_id":31,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"5:6909:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:21384:4635":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:11826:4237":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:11174:8444":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"29:8163:7758":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"30:466:5898":{"crate_id":30,"path":["rustix","backend","io","epoll","Borrowing"],"kind":"struct"},"29:4805:7331":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:38142:3415":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4210:4169":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:47150:1764":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:3314:2554":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:7511:5147":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"12:822:4098":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:2736:2636":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"24:290:2833":{"crate_id":24,"path":["log","RecordBuilder"],"kind":"struct"},"1:5506:186":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:9328:5634":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:48250:3851":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:6992:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:11533:3021":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:1919:4174":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:7825:5343":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:5976:3899":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:5380:4050":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"21:2560:126":{"crate_id":21,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"2:6563:4359":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"31:6043:6641":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_window"],"kind":"struct"},"29:1802:7150":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:2959:4807":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:5235:9104":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:6311:7746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"22:1060:5815":{"crate_id":22,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"18:96:55417":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:4449:7444":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:4944:3932":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:9555:2490":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:11436:8486":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:47295:4065":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:12609:8772":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:11774:8554":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:9844:5644":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:13506:9033":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"29:9263:10539":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"21:1733:5759":{"crate_id":21,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"31:5781:10447":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"9:863:4891":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:7978:3533":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"30:4809:69156":{"crate_id":30,"path":["rustix","process","prctl","PTracer"],"kind":"enum"},"24:155:2835":{"crate_id":24,"path":["log","NopLogger"],"kind":"struct"},"6:7266:10539":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"20:1528:8099":{"crate_id":20,"path":["regex","dfa","Transitions"],"kind":"struct"},"31:5913:6584":{"crate_id":31,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"31:6578:10476":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"1:944:3899":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:9700:5582":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:2385:4205":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"12:861:4101":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11853:8564":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"12:834:4099":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:2248:127":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:979:4098":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:46912:4740":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"5:6777:66622":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:7396:5342":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:7429:3853":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:21843:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:4117:4244":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"29:809:41482":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"31:5658:6513":{"crate_id":31,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"23:648:5687":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:3733:3899":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:49999:4562":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:10894:5563":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:10385:5596":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"12:1138:4105":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:4206:7328":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:11089:10713":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"21:2436:5768":{"crate_id":21,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"17:9671:5554":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:6807:4811":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"23:726:7874":{"crate_id":23,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"30:5074:7106":{"crate_id":30,"path":["rustix","process","prctl","PointerAuthenticationKeys"],"kind":"struct"},"1:10902:3826":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:4312:3916":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"31:6310:6740":{"crate_id":31,"path":["linux_raw_sys","general","tcp_diag_md5sig"],"kind":"struct"},"20:1707:68032":{"crate_id":20,"path":["regex","exec","MatchNfaType"],"kind":"enum"},"1:9450:5126":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:7166:5133":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"33:358:2429":{"crate_id":33,"path":["termcolor","Color"],"kind":"enum"},"2:2856:3895":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:3486:2954":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:131:41481":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:52569:9532":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:7483:5277":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:5122:9103":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:13100:8905":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:2833:3883":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"31:6649:6808":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"17:9712:8343":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"31:4588:6237":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"1:11373:6065":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"21:1945:5772":{"crate_id":21,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"17:9274:8331":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:11247:8451":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"31:4467:6215":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"1:1608:3464":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:2320:5142":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"3:223:206":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"21:1779:5762":{"crate_id":21,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"33:221:3092":{"crate_id":33,"path":["termcolor","Ansi"],"kind":"struct"},"29:7345:7725":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4247:7348":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:6448:7776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"31:5580:6496":{"crate_id":31,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"23:836:5678":{"crate_id":23,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:1636:6344":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"18:0:2679":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:6544:202":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:2749:5441":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:4662:9094":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:11307:4007":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:10497:49278":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"29:7302:7712":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:9691:5583":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:11288:8461":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:47220:4059":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"5:3106:3900":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:12730:8817":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:4972:4022":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:7226:7854":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"21:1376:5741":{"crate_id":21,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"16:5996:5315":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:51704:9518":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"29:2151:7253":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"29:573:6517":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"17:8475:5508":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:7637:5281":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:4530:4735":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:5625:7654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:8956:3850":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:8093:3924":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:931:4093":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:20303:4183":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:5554:7613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:7388:5290":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"29:9158:7851":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"21:2360:5789":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"5:6969:4861":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:5699:7694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"29:6721:6584":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"21:2078:5797":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"24:151:1758":{"crate_id":24,"path":["log","Log"],"kind":"trait"},"18:644:7869":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"29:728:6513":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"18:766:5682":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"33:89:3089":{"crate_id":33,"path":["termcolor","WriterInnerLock"],"kind":"enum"},"16:2282:5141":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:9577:5522":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:3377:2939":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:592:7132":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:10609:2461":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:49356:143":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"31:5865:10457":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"31:5739:6552":{"crate_id":31,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"30:2853:5925":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFlags"],"kind":"struct"},"6:4280:7361":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:54032:9580":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"31:5070:6368":{"crate_id":31,"path":["linux_raw_sys","general","ip_auth_hdr"],"kind":"struct"},"5:6881:2863":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:5887:4113":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"29:5225:7427":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:8607:2645":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"20:2211:2892":{"crate_id":20,"path":["regex","re_bytes","CaptureMatches"],"kind":"struct"},"31:4957:6327":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreqn"],"kind":"struct"},"24:296:1759":{"crate_id":24,"path":["log","Metadata"],"kind":"struct"},"1:12304:306":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"12:697:4096":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"30:4161:7067":{"crate_id":30,"path":["rustix","process","id","Gid"],"kind":"struct"},"2:52727:4497":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:22008:4621":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:20454:4462":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"31:5880:7254":{"crate_id":31,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"6:4346:7394":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"22:1292:7919":{"crate_id":22,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"21:2048:130":{"crate_id":21,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"2:6516:4043":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:9253:4007":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:1771:5521":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:10670:5623":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:5211:4786":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:4059:2819":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:2300:5459":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:8577:4278":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"6:5534:6978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"29:7502:7739":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:4441:4286":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:7249:5136":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:11761:66280":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"29:8105:6967":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:46402:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"29:4564:6537":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"22:1677:7958":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"22:1107:5817":{"crate_id":22,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"31:6669:6811":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"23:81:55416":{"crate_id":23,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"31:4528:6220":{"crate_id":31,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"5:869:3850":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:7469:5276":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:49993:4561":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:3168:4040":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"20:1533:8156":{"crate_id":20,"path":["regex","dfa","Fsm"],"kind":"struct"},"29:4905:7353":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:50009:2957":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:13047:8890":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:9627:5527":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"12:2205:2863":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:7278:5336":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"31:4599:6238":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"18:719:5678":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:9416:3950":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"9:586:4930":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"5:630:9440":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:52001:4479":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"20:2609:8123":{"crate_id":20,"path":["regex","sparse","SparseSet"],"kind":"struct"},"17:9446:8339":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:8442:2959":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:2327:185":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"22:1586:5687":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"16:2535:5436":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"31:5049:6357":{"crate_id":31,"path":["linux_raw_sys","general","iphdr"],"kind":"struct"},"1:1632:3903":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:9303:5529":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:47570:9461":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:52201:4503":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:12314:720":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:10322:4251":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:47099:2955":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:47182:4049":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:52249:4488":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"31:6965:6872":{"crate_id":31,"path":["linux_raw_sys","general","io_cqring_offsets"],"kind":"struct"},"2:49578:4759":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:7249:7552":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:8601:118":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"29:8221:7765":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"30:3932:7064":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdFlags"],"kind":"struct"},"17:9422:8337":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:6409:6057":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:6709:3073":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:6376:5326":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"22:1690:7960":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"1:8505:4033":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"5:1414:4095":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:4506:7464":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"29:6986:7625":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"22:1501:7928":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"17:9501:5529":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"30:0:3045":{"crate_id":30,"path":["rustix"],"kind":"module"},"30:457:4175":{"crate_id":30,"path":["rustix","backend","io","epoll","Context"],"kind":"trait"},"17:8441:5621":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:1931:5515":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"18:652:7869":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:8295:49016":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"28:189:5891":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeView"],"kind":"struct"},"28:0:3044":{"crate_id":28,"path":["io_lifetimes"],"kind":"module"},"1:8554:4277":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:13007:8880":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:12311:629":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:12317:1447":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"5:1077:4844":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:9475:5519":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"18:707:4318":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"22:1359:4318":{"crate_id":22,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"18:481:5684":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:62:41420":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"31:6932:58693":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_9"],"kind":"enum"},"17:13091:8904":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"14:165:47316":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"20:2238:2893":{"crate_id":20,"path":["regex","re_bytes","CaptureNames"],"kind":"struct"},"1:7955:4106":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"31:4723:6255":{"crate_id":31,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"29:5922:7561":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:51030:3014":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:56947:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:8881:68016":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"29:4788:7328":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:1889:3539":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"18:624:68027":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:47121:4045":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:12017:3421":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"2:8599:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:1636:575":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:8796:16630":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12874:8849":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"31:5104:58674":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_2"],"kind":"enum"},"1:411:161":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"0:571:1903":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision"],"kind":"enum"},"31:7214:7146":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr"],"kind":"struct"},"1:2257:2948":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"31:5300:10426":{"crate_id":31,"path":["linux_raw_sys","general","rt2_hdr"],"kind":"struct"},"17:13404:9004":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:2928:3108":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"23:844:5679":{"crate_id":23,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"30:3908:69166":{"crate_id":30,"path":["rustix","backend","time","types","DynamicClockId"],"kind":"enum"},"29:4770:7327":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"24:352:1761":{"crate_id":24,"path":["log","SetLoggerError"],"kind":"struct"},"2:21396:4634":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:49368:4138":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:47200:4052":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:10651:4002":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"22:1422:1811":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"29:1762:7146":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:5624:66488":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:12964:8872":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"31:5712:6538":{"crate_id":31,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"1:3194:2974":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:9430:5723":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:10245:8395":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:11099:3923":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"30:5305:7112":{"crate_id":30,"path":["rustix","process","wait","WaitStatus"],"kind":"struct"},"16:6270:5268":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"29:5194:7412":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"20:2047:8213":{"crate_id":20,"path":["regex","prog","InstRanges"],"kind":"struct"},"1:7300:62286":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"30:356:10147":{"crate_id":30,"path":["rustix","backend","reg","ArgReg"],"kind":"struct"},"1:8139:2967":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:39348:3427":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:58300:9598":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"20:2552:2891":{"crate_id":20,"path":["regex","re_unicode","CaptureLocations"],"kind":"struct"},"2:52103:4508":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"33:161:2517":{"crate_id":33,"path":["termcolor","BufferWriter"],"kind":"struct"},"2:49155:3436":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:46466:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:2792:3990":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:8429:2957":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"31:4942:6322":{"crate_id":31,"path":["linux_raw_sys","general","in_addr"],"kind":"struct"},"1:8887:4139":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:10394:5597":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:7929:5345":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:12278:8650":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"22:1304:7921":{"crate_id":22,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"2:52417:4469":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:13366:8995":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:10682:5624":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:7243:7551":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:4605:7510":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:21744:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:8666:8222":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"29:4605:7269":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:4454:4287":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:7319:5340":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"29:5938:7566":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:4417:7428":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:46378:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"5:6488:6037":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:5317:9609":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4307:7373":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:5839:5197":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:12739:8820":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"29:4846:7344":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:4191:203":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"5:5525:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:5861:7728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:8324:4546":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:20266:4369":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"12:1845:3900":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"21:1188:1766":{"crate_id":21,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"2:11066:4320":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:5628:5186":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"13:0:2668":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:50287:4574":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:2509:5447":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:1574:7173":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:661:4197":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"22:929:5820":{"crate_id":22,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"2:7001:4055":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:1611:3899":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:13393:9003":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"20:2202:2897":{"crate_id":20,"path":["regex","re_bytes","Matches"],"kind":"struct"},"6:6409:7758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"12:2178:5767":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"9:827:4888":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:686:13384":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"31:4813:6288":{"crate_id":31,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"1:11144:117":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"21:2311:5751":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"2:50041:3957":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:39335:4852":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:8368:5498":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:13168:8926":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"22:1683:7959":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"5:6331:4788":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"2:14:1891":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:21334:65389":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"22:1188:1811":{"crate_id":22,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"2:9610:3960":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:46785:9497":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:6782:3069":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:48131:3464":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"20:1833:8189":{"crate_id":20,"path":["regex","literal","imp","LiteralSearcher"],"kind":"struct"},"17:12617:8775":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:5720:7706":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"18:590:7870":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:969:4096":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:10310:8400":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:11975:3015":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:1962:5581":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"31:6614:6801":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"31:7318:6968":{"crate_id":31,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"1:11688:10717":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"20:1896:8156":{"crate_id":20,"path":["regex","pikevm","Fsm"],"kind":"struct"},"6:4489:4256":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:5558:5182":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:50738:4585":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:50127:2902":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:9527:3958":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"29:5394:4256":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:52468:9529":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:11469:62851":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:5394:187":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:12322:766":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"20:2096:2905":{"crate_id":20,"path":["regex","re_builder","bytes","RegexBuilder"],"kind":"struct"},"2:46261:3854":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:539:7121":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:6316:6050":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"21:1817:5764":{"crate_id":21,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"2:49831:3947":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:9382:8335":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:10845:5620":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"21:2109:7977":{"crate_id":21,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"17:12781:8832":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:11445:4005":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"22:961:5808":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"6:1738:7254":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:46779:3865":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"22:1581:7941":{"crate_id":22,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"6:6554:7840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:5541:6755":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:484:6070":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"30:3475:5934":{"crate_id":30,"path":["rustix","backend","io","types","EventfdFlags"],"kind":"struct"},"1:10495:4158":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"29:4627:7277":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:2445:3861":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:13039:8889":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:4179:6512":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"20:1417:8134":{"crate_id":20,"path":["regex","compile","Patch"],"kind":"struct"},"1:12310:628":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:1825:2818":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"30:534:3850":{"crate_id":30,"path":["rustix","backend","io","epoll","Iter"],"kind":"struct"},"6:6981:6538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"29:4962:7361":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:50315:4577":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:6953:7849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"29:5171:7403":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"18:491:5809":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:20049:66425":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:5822:18713":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"6:6375:6967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"30:4685:69159":{"crate_id":30,"path":["rustix","process","prctl","EndianMode"],"kind":"enum"},"16:6034:5317":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:2154:576":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"31:6108:58687":{"crate_id":31,"path":["linux_raw_sys","general","tcp_ca_state"],"kind":"enum"},"30:2989:5926":{"crate_id":30,"path":["rustix","backend","io","poll_fd","PollFd"],"kind":"struct"},"30:3086:5930":{"crate_id":30,"path":["rustix","backend","io","types","ReadWriteFlags"],"kind":"struct"},"2:46347:4458":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:4433:4284":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:574:3827":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:1002:4101":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:2029:180":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:2612:2960":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:8973:4144":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:11055:4318":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"3:0:431":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:51724:9519":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:1348:3850":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:21645:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:910:3464":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:4559:7486":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"29:7953:6222":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:7452:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"29:522:6511":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"5:1690:3900":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:50277:2959":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11149:8439":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"29:9252:10535":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:7435:5307":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"20:2496:2896":{"crate_id":20,"path":["regex","re_unicode","Match"],"kind":"struct"},"2:54043:9581":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:9553:5531":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:1091:4102":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:5733:7710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:12237:8645":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"29:2136:4250":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:7543:5269":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:50471:4328":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"31:6585:10478":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"6:4540:7480":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"30:4195:7069":{"crate_id":30,"path":["rustix","process","id","Cpuid"],"kind":"struct"},"2:20297:4181":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"29:5555:7486":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"31:7204:6922":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_getevents_arg"],"kind":"struct"},"2:46300:4305":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"20:2543:2902":{"crate_id":20,"path":["regex","re_unicode","SplitN"],"kind":"struct"},"1:1887:3538":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:4683:7539":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"20:2220:2901":{"crate_id":20,"path":["regex","re_bytes","Split"],"kind":"struct"},"31:7219:6925":{"crate_id":31,"path":["linux_raw_sys","general","linger"],"kind":"struct"},"2:50519:4329":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"33:74:3085":{"crate_id":33,"path":["termcolor","StandardStream"],"kind":"struct"},"31:0:3046":{"crate_id":31,"path":["linux_raw_sys"],"kind":"module"},"2:49119:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"29:8295:7801":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"22:1429:7886":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"2:11920:138":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:9885:8349":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:13518:9035":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:51900:4499":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:10546:49018":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"31:5226:10409":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr__bindgen_ty_1"],"kind":"union"},"29:4927:7356":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:5411:5171":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:9223:49063":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:4719:772":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:6677:3065":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:52515:9530":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:12361:8667":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:9031:68022":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:46976:4654":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"21:1671:5756":{"crate_id":21,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"17:11748:8551":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:5880:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:8222:4162":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:12349:8660":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:3232:2975":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"29:7265:7707":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:3541:3900":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:852:4825":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:2788:3025":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"29:0:793":{"crate_id":29,"path":["libc"],"kind":"module"},"6:7208:7851":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:13221:8937":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:6865:5472":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"28:47:5887":{"crate_id":28,"path":["io_lifetimes","portability","FromFilelike"],"kind":"trait"},"2:10754:4565":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:12674:8811":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"20:2054:8214":{"crate_id":20,"path":["regex","prog","InstBytes"],"kind":"struct"},"6:5713:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"20:1661:8167":{"crate_id":20,"path":["regex","exec","ExecReadOnly"],"kind":"struct"},"1:1826:3521":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:6500:7814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:1240:4105":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"29:5857:7539":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"30:4450:7075":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointEmulationControl"],"kind":"struct"},"1:11496:2490":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:12271:13386":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:4786:9098":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:6781:5286":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:12896:8853":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:11002:2845":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:4575:7494":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:12756:8822":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:4906:6948":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"30:4828:69158":{"crate_id":30,"path":["rustix","process","prctl","FloatingPointMode"],"kind":"enum"},"22:1342:5847":{"crate_id":22,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"21:2087:7963":{"crate_id":21,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"31:4674:58665":{"crate_id":31,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"2:2784:2796":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"20:1861:68031":{"crate_id":20,"path":["regex","literal","imp","LiteralIter"],"kind":"enum"},"31:6389:6766":{"crate_id":31,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"21:2099:5742":{"crate_id":21,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"20:2268:2900":{"crate_id":20,"path":["regex","re_bytes","ReplacerRef"],"kind":"struct"},"17:13557:9044":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:50340:4579":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"21:1871:5767":{"crate_id":21,"path":["regex_syntax","ast","Group"],"kind":"struct"},"17:10350:5497":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:9108:8322":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"20:1545:206":{"crate_id":20,"path":["regex","dfa","Result"],"kind":"enum"},"30:2712:5897":{"crate_id":30,"path":["rustix","backend","io","epoll","EventFlags"],"kind":"struct"},"29:7228:7705":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"22:1042:5813":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"17:8393:5553":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:8545:206":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"18:574:7869":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:46905:4578":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:5582:7625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:11786:4236":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:13141:8919":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"29:8402:7833":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:4969:4020":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:2578:126":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:50227:2897":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"29:4558:42761":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"30:4968:7105":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureState"],"kind":"struct"},"21:2059:5796":{"crate_id":21,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"31:5560:6481":{"crate_id":31,"path":["linux_raw_sys","general","prctl_mm_map"],"kind":"struct"},"6:1707:4250":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:5433:5172":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4427:7434":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:4441:9088":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:7093:5128":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:286:1885":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:7003:4801":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"21:1766:5761":{"crate_id":21,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"9:188:4957":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:5695:4001":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:2605:5489":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:1608:7193":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"26:209:5869":{"crate_id":26,"path":["humantime","date","Precision"],"kind":"enum"},"31:5666:6514":{"crate_id":31,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"2:11623:134":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"20:1289:2899":{"crate_id":20,"path":["regex","re_unicode","Replacer"],"kind":"trait"},"5:1981:4846":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"22:1052:5814":{"crate_id":22,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"31:5904:6583":{"crate_id":31,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"26:134:126":{"crate_id":26,"path":["humantime","duration","Error"],"kind":"enum"},"1:11094:10715":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:47270:4063":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"29:5536:6353":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:13134:8918":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:49803:3946":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:20241:4513":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"31:7167:10513":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction__bindgen_ty_1"],"kind":"union"},"9:33:4982":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:11500:8512":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:4817:9099":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:4659:7531":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:20456:4367":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:6017:3062":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:4262:9082":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:5525:5180":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:8625:4083":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"18:736:5680":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:12325:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:48406:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:9454:3963":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"0:585:1780":{"crate_id":0,"path":["env_logger","Env"],"kind":"struct"},"2:50297:4575":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:7014:4802":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:8613:4082":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:6352:7752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"29:6830:7611":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:12948:8869":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:12198:8642":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:54052:9582":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:47306:2956":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"18:681:5675":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:11061:4319":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:11828:8562":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:8796:5505":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"20:1725:8183":{"crate_id":20,"path":["regex","exec","ProgramCacheInner"],"kind":"struct"},"29:4828:7340":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"22:971:5809":{"crate_id":22,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"2:21280:9474":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:10814:4569":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:13459:9020":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:10095:3951":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"21:1588:5751":{"crate_id":21,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"5:4900:6020":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"29:556:6534":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"29:5763:7523":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:8962:4143":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"29:1687:6514":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"31:4510:6217":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"16:6472:5073":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:1474:2205":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:8868:3781":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:6269:6547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:2917:2817":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:3184:4395":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"21:2404:5792":{"crate_id":21,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"1:8379:2950":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:359:3838":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:9250:8329":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:20215:4459":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"31:5754:10434":{"crate_id":31,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"33:13:2557":{"crate_id":33,"path":["termcolor","WriteColor"],"kind":"trait"},"22:1604:7944":{"crate_id":22,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"30:5209:7111":{"crate_id":30,"path":["rustix","process","wait","WaitOptions"],"kind":"struct"},"16:6123:5265":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"30:4724:69160":{"crate_id":30,"path":["rustix","process","prctl","MachineCheckMemoryCorruptionKillPolicy"],"kind":"enum"},"1:8330:2983":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:50245:4573":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:49085:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"16:4921:9102":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"20:2559:2903":{"crate_id":20,"path":["regex","re_unicode","SubCaptureMatches"],"kind":"struct"},"1:11268:4157":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:46959:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:6137:6050":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"21:2323:5786":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"21:1720:5758":{"crate_id":21,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"20:1380:8055":{"crate_id":20,"path":["regex","backtrack","Bounded"],"kind":"struct"},"29:7906:6547":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:153:5138":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"21:2330:5787":{"crate_id":21,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"20:2277:2898":{"crate_id":20,"path":["regex","re_bytes","NoExpand"],"kind":"struct"},"31:4949:6324":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq"],"kind":"struct"},"30:2624:5896":{"crate_id":30,"path":["rustix","backend","io","epoll","CreateFlags"],"kind":"struct"},"31:5332:58676":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_3"],"kind":"enum"},"6:4335:7389":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"0:0:2065":{"crate_id":0,"path":["env_logger"],"kind":"module"},"17:11330:8476":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"0:578:1915":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Nanos"],"kind":"variant"},"1:4904:6946":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"6:6424:7764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:1114:4104":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"21:2186:126":{"crate_id":21,"path":["regex_syntax","hir","Error"],"kind":"struct"},"21:1549:5750":{"crate_id":21,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"2:2669:3107":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"5:2993:4808":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11300:8464":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:8329:4547":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"31:4558:6229":{"crate_id":31,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"12:119:5061":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:9433:8338":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"26:164:120":{"crate_id":26,"path":["humantime","wrapper","Duration"],"kind":"struct"},"2:2564:114":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"20:213:68030":{"crate_id":20,"path":["regex","dfa","InstPtrs"],"kind":"struct"},"6:600:7137":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"26:181:2500":{"crate_id":26,"path":["humantime","wrapper","Timestamp"],"kind":"struct"},"2:21318:65396":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"29:6847:7612":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:9791:8346":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:6329:6934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:1722:7253":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"23:777:5673":{"crate_id":23,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:3560:6020":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:1643:7218":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:4254:3912":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:7086:4782":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"22:1449:5852":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"16:6903:5126":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"12:0:2674":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"22:1568:68734":{"crate_id":22,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"2:2938:2638":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:10270:8397":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"30:479:5899":{"crate_id":30,"path":["rustix","backend","io","epoll","Owning"],"kind":"struct"},"1:12323:1500":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"20:2524:2893":{"crate_id":20,"path":["regex","re_unicode","CaptureNames"],"kind":"struct"},"16:6842:9174":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"29:7143:7681":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"23:114:55418":{"crate_id":23,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"21:1640:5754":{"crate_id":21,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"1:1604:3850":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"12:1518:5066":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"20:2351:2907":{"crate_id":20,"path":["regex","re_set","unicode","SetMatches"],"kind":"struct"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"22:923:3870":{"crate_id":22,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"16:2993:5446":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"31:6325:6746":{"crate_id":31,"path":["linux_raw_sys","general","tcp_zerocopy_receive"],"kind":"struct"},"22:1333:5846":{"crate_id":22,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"22:1521:7931":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"22:1668:7957":{"crate_id":22,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"29:4884:7348":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:50191:4571":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:7192:6059":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:20711:18519":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"20:1582:8161":{"crate_id":20,"path":["regex","dfa","EmptyFlags"],"kind":"struct"},"18:755:5681":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:12291:8651":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:21363:10711":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11125:8435":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"29:2052:7237":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"29:5685:7513":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:13184:8929":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"23:741:68027":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:9824:127":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"22:1637:7950":{"crate_id":22,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"31:6081:58686":{"crate_id":31,"path":["linux_raw_sys","general","tcp_fastopen_client_fail"],"kind":"enum"},"2:49052:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"22:1261:7916":{"crate_id":22,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"5:6956:4860":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:56986:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:48191:189":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:50826:4675":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:13214:8935":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:11235:8448":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"29:5875:7543":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"31:7298:6967":{"crate_id":31,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"29:4998:7368":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:10528:5616":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:7237:5135":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"23:883:5682":{"crate_id":23,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:2843:3888":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"20:1780:8186":{"crate_id":20,"path":["regex","input","InputAt"],"kind":"struct"},"6:4115:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"21:1057:5804":{"crate_id":21,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"5:108:281":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"1:11601:9616":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:11390:6067":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:9644:5513":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11734:8357":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"12:320:5059":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"31:4645:6241":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"2:49923:3954":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:4749:9097":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:3188:9071":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:10169:3944":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:48292:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"30:438:2808":{"crate_id":30,"path":["rustix","backend","io","epoll","Ref"],"kind":"struct"},"2:47234:4060":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:7735:3010":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:48173:3163":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:12176:8631":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:49347:3783":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"20:0:1563":{"crate_id":20,"path":["regex"],"kind":"module"},"16:2465:5458":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:545:7124":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:2484:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:47211:4058":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"0:574:1909":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Millis"],"kind":"variant"},"33:43:3083":{"crate_id":33,"path":["termcolor","IoStandardStream"],"kind":"enum"},"1:4425:4283":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:8488:4032":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"9:0:2671":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"22:1315:5815":{"crate_id":22,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"2:46992:4655":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:11315:8470":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:5596:5184":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:9489:3957":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"23:699:3415":{"crate_id":23,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:49171:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:10476:49277":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"29:5277:7434":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"21:1998:5725":{"crate_id":21,"path":["regex_syntax","either","Either"],"kind":"enum"},"20:2144:2904":{"crate_id":20,"path":["regex","re_builder","set_bytes","RegexSetBuilder"],"kind":"struct"},"25:0:2670":{"crate_id":25,"path":["cfg_if"],"kind":"module"},"16:6676:5273":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:10796:5617":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:11041:4316":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"12:1044:5053":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:20344:4367":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:2557:5437":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:2683:5438":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:9909:8351":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"29:5033:7373":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:12306:1351":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:51918:9520":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"9:649:4934":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:47090:4042":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:2399:4209":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"12:1003:4103":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"31:6298:10466":{"crate_id":31,"path":["linux_raw_sys","general","tcp_md5sig"],"kind":"struct"},"2:46547:5148":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:51979:4475":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:48815:2644":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:3362:3851":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"30:3571:69151":{"crate_id":30,"path":["rustix","backend","process","types","MembarrierCommand"],"kind":"enum"},"21:2240:5785":{"crate_id":21,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"17:9155:8323":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:6186:5267":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:2490:131":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"5:2738:10596":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"22:1225:4138":{"crate_id":22,"path":["aho_corasick","nfa","State"],"kind":"struct"},"29:9240:7551":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"20:1405:68036":{"crate_id":20,"path":["regex","backtrack","Job"],"kind":"enum"},"2:52393:4468":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:6170:6020":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"29:2074:7243":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:1828:3522":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"29:4979:7363":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"30:4790:7097":{"crate_id":30,"path":["rustix","process","prctl","PrctlMmMap"],"kind":"struct"},"24:241:2832":{"crate_id":24,"path":["log","MaybeStaticStr"],"kind":"enum"},"17:11684:8543":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:52546:9531":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"29:6813:7608":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"31:4966:6330":{"crate_id":31,"path":["linux_raw_sys","general","ip_mreq_source"],"kind":"struct"},"31:5896:6580":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:507:6510":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"20:1647:5708":{"crate_id":20,"path":["regex","exec","ExecNoSync"],"kind":"struct"},"1:598:3829":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:47336:4056":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:49967:4658":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:53929:4485":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:9574:3022":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:3616:3464":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:487:8229":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:4:982":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"21:268:68094":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"2:47140:4047":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:12320:1446":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:581:7130":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"23:691:7869":{"crate_id":23,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"14:0:2675":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"29:5903:7553":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"31:4742:6262":{"crate_id":31,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"6:6293:6222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:11863:4602":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:20026:66420":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"31:6923:6862":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_cqe"],"kind":"struct"},"16:5963:190":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:4565:7488":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"12:1852:3901":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"31:6785:58692":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_8"],"kind":"enum"},"21:2115:7979":{"crate_id":21,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"16:6345:5271":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:11847:4244":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:8596:8220":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:6538:7833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:7497:5272":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:9601:5520":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:9239:4006":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"29:5783:7529":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"24:198:2203":{"crate_id":24,"path":["log","Level"],"kind":"enum"},"1:4014:4236":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:3199:2816":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:29570:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:2780:3986":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:2631:5449":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"9:19:4981":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:47244:4061":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:5709:4002":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:2588:6048":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"20:2432:2906":{"crate_id":20,"path":["regex","re_set","bytes","RegexSet"],"kind":"struct"},"16:4635:9093":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"22:1281:7886":{"crate_id":22,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"17:1903:49101":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:7357:5288":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"20:178:8098":{"crate_id":20,"path":["regex","compile","ByteClassSet"],"kind":"struct"},"2:21062:4617":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:3457:8243":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:8165:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:9071:68019":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:8412:2955":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"31:5773:10442":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"2:25217:4363":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"29:7443:6608":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"18:599:68026":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:47529:9458":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:8596:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:6509:7817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"29:7042:7638":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:960:4094":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:6735:5289":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:7945:3907":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:8069:126":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"31:7369:6978":{"crate_id":31,"path":["linux_raw_sys","general","cmsghdr"],"kind":"struct"},"20:987:2899":{"crate_id":20,"path":["regex","re_bytes","Replacer"],"kind":"trait"},"17:10466:8406":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:7962:3528":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"5:1594:6020":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:5672:7681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:6921:9613":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"31:176:6214":{"crate_id":31,"path":["linux_raw_sys","general","__BindgenUnionField"],"kind":"struct"},"1:5013:3971":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"28:127:5875":{"crate_id":28,"path":["io_lifetimes","raw","AsRawFilelike"],"kind":"trait"},"20:2590:2900":{"crate_id":20,"path":["regex","re_unicode","ReplacerRef"],"kind":"struct"},"1:8147:2969":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:46866:4738":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:48558:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:3269:2522":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:10791:4568":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"33:173:2386":{"crate_id":33,"path":["termcolor","Buffer"],"kind":"struct"},"17:9371:8322":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"29:9276:6229":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"21:1402:5742":{"crate_id":21,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"17:8871:8318":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"30:3379:5933":{"crate_id":30,"path":["rustix","backend","io","types","PipeFlags"],"kind":"struct"},"22:1080:2386":{"crate_id":22,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"6:1701:6232":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:10822:49019":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"21:1194:126":{"crate_id":21,"path":["regex_syntax","ast","Error"],"kind":"struct"},"16:5472:5175":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:4317:7380":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:4398:7427":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:1395:4093":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:6746:3464":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"29:7203:7694":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"22:1437:4367":{"crate_id":22,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"5:2980:3903":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"24:326:2834":{"crate_id":24,"path":["log","MetadataBuilder"],"kind":"struct"},"6:4653:7529":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:6316:5294":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"29:5369:7456":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"31:6737:10507":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_4"],"kind":"union"},"22:1237:7914":{"crate_id":22,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"24:357:2839":{"crate_id":24,"path":["log","ParseLevelError"],"kind":"struct"},"2:4195:2801":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:247:8226":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:2250:4201":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:49933:3955":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:6010:3061":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"31:5251:10414":{"crate_id":31,"path":["linux_raw_sys","general","in6_flowlabel_req"],"kind":"struct"},"10:0:2672":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:13126:8915":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:1500:6322":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"20:2363:2909":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIter"],"kind":"struct"},"2:50425:4321":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:0:2678":{"crate_id":17,"path":["object"],"kind":"module"},"30:4867:7104":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeatureControl"],"kind":"struct"},"33:201:3091":{"crate_id":33,"path":["termcolor","NoColor"],"kind":"struct"},"22:998:5810":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"1:996:4100":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:11894:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"20:1642:5702":{"crate_id":20,"path":["regex","exec","Exec"],"kind":"struct"},"2:53009:4481":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:3174:4391":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"9:111:4949":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:4200:2802":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:3236:3008":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"20:2599:2898":{"crate_id":20,"path":["regex","re_unicode","NoExpand"],"kind":"struct"},"5:4438:654":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:6517:5072":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"23:731:68028":{"crate_id":23,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:46883:3865":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:4721:9096":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:534:5193":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"12:1065:5054":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:7042:148":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:2727:5440":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"12:98:5057":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"21:2574:8092":{"crate_id":21,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"6:1668:7237":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:10233:8394":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:575:6925":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:11154:2950":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:2822:3878":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:2894:5450":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"31:5263:7477":{"crate_id":31,"path":["linux_raw_sys","general","in6_pktinfo"],"kind":"struct"},"17:12909:8859":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:9722:8344":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"21:0:2793":{"crate_id":21,"path":["regex_syntax"],"kind":"module"},"31:4621:10379":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"22:1195:126":{"crate_id":22,"path":["aho_corasick","error","Error"],"kind":"struct"},"15:214:5080":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:5498:7608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:4816:10523":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"30:4178:7068":{"crate_id":30,"path":["rustix","process","id","Pid"],"kind":"struct"},"31:6640:6807":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"6:1714:7250":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:6986:10597":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:9836:6063":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:46794:4375":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"20:1842:68037":{"crate_id":20,"path":["regex","literal","imp","Matcher"],"kind":"enum"},"1:8904:4140":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"29:8181:7760":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"31:5634:6510":{"crate_id":31,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"16:5815:5196":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:3192:2973":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:7942:5346":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:9207:4003":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:39299:3860":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:46554:9496":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:7805:6062":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"20:1922:68038":{"crate_id":20,"path":["regex","pikevm","FollowEpsilon"],"kind":"enum"},"31:7138:6913":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_probe_op"],"kind":"struct"},"17:11271:8453":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:8814:127":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:53821:4502":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:8241:5622":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:54180:9590":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:4496:7457":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"30:2838:5914":{"crate_id":30,"path":["rustix","backend","io","errno","Errno"],"kind":"struct"},"30:3845:46715":{"crate_id":30,"path":["rustix","backend","termios","types","Action"],"kind":"enum"},"1:6838:3074":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"33:339:2556":{"crate_id":33,"path":["termcolor","ColorSpec"],"kind":"struct"},"6:554:6772":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:20447:3870":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:11852:4175":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:1760:4695":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:7279:6229":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:6496:4113":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:9395:3825":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:10088:8386":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"29:7002:7626":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:11161:8442":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:3953:4080":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:5660:3999":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:48482:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:12319:1445":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:3716:9078":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:2705:5439":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:21245:4422":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:11034:8430":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:12816:8836":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:2812:3875":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"12:777:5045":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"22:1406:4315":{"crate_id":22,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"9:592:4932":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:7038:132":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"18:80:55416":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"22:1201:2970":{"crate_id":22,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"17:9263:8330":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:11947:5084":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:50583:4331":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:7847:5344":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:1864:3531":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"22:1368:5848":{"crate_id":22,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"6:5472:6583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:4185:7320":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:1737:4696":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:12046:8611":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:7567:5295":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:12315:721":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"21:2200:2970":{"crate_id":21,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"16:6210:5321":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:2726:3006":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:4766:4028":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"22:1596:1811":{"crate_id":22,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"2:21:664":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"4:0:2669":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:774:140":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:9293:5637":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:13024:8887":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:56999:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"28:182:5892":{"crate_id":28,"path":["io_lifetimes","views","SocketlikeViewType"],"kind":"trait"},"1:9277:3464":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:7982:4852":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:54023:9579":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:4302:3915":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"21:2173:5771":{"crate_id":21,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"17:11708:8544":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:7267:5335":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"29:5321:7444":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:7426:3852":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:20047:66422":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"31:6357:6762":{"crate_id":31,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"17:10332:5660":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"31:6660:6809":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"29:5883:7548":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"21:1905:5769":{"crate_id":21,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"20:1889:8193":{"crate_id":20,"path":["regex","literal","imp","Memmem"],"kind":"struct"},"18:690:5676":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:48634:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"23:798:5675":{"crate_id":23,"path":["memchr","memmem","Finder"],"kind":"struct"},"31:5642:6511":{"crate_id":31,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"31:6677:6812":{"crate_id":31,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"5:6321:4787":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:2493:233":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"12:2184:10584":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:4126:2800":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:8055:5495":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"12:353:5058":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13527:9039":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"29:505:7118":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:5684:7688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"30:4745:69150":{"crate_id":30,"path":["rustix","process","prctl","VirtualMemoryMapAddress"],"kind":"enum"},"2:29333:4688":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:47321:4066":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"31:5292:6416":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_opt_hdr"],"kind":"struct"},"1:8687:3869":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:9389:4175":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:49981:3974":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:5772:7725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:6886:213":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:5568:7624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"29:5987:10520":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:6819:2799":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"21:2455:5763":{"crate_id":21,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"5:6940:4654":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:4574:9091":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"21:2140:55978":{"crate_id":21,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"16:4545:9090":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:50608:4333":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:7890:5282":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"29:7021:7631":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:4706:7548":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"29:5836:7534":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:12313:719":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:4797:7588":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"20:1802:8188":{"crate_id":20,"path":["regex","input","ByteInput"],"kind":"struct"},"5:4026:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"29:7425:7727":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:8131:4222":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"12:1120:5056":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"12:2198:10586":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"18:521:5683":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:8510:8311":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:678:9600":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:8774:5496":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:519:6517":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:4354:7399":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:48672:3060":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"29:2167:7254":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:50793:120":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:49841:3948":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"29:9246:7552":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:3461:2407":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:2657:5448":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:11761:8552":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"22:1611:7945":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"5:5633:2939":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:7102:3110":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"31:6717:10491":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_3"],"kind":"union"},"17:10520:8413":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:21272:9473":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"29:1948:7193":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:5447:5173":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:5761:5192":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:3402:9073":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"21:1178:7977":{"crate_id":21,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"6:1525:7146":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:5219:8311":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:9582:3959":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:3010:5445":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:6816:5469":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:48801:2642":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:11536:8520":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:46806:4376":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:29508:3577":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:7309:5339":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:1678:7243":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:6572:7843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11763:4085":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:3370:4018":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:11137:8438":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"12:646:3851":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"29:7322:10527":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"29:1693:6322":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:4505:4246":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"12:810:4094":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:1518:6330":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"31:6950:6866":{"crate_id":31,"path":["linux_raw_sys","general","io_sqring_offsets"],"kind":"struct"},"1:5680:4000":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"21:254:68093":{"crate_id":21,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"12:2053:4102":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"21:1518:5748":{"crate_id":21,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"1:900:3851":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"29:5412:7457":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:1404:4094":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"28:69:56867":{"crate_id":28,"path":["io_lifetimes","traits","FromFd"],"kind":"trait"},"2:39339:4016":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:12316:717":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:7875:3824":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"0:437:1961":{"crate_id":0,"path":["env_logger","try_init"],"kind":"function"},"21:1416:5743":{"crate_id":21,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"17:8526:5599":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:3632:9076":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:2918:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:6463:6032":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"31:6035:6638":{"crate_id":31,"path":["linux_raw_sys","general","tcp_repair_opt"],"kind":"struct"},"16:6137:5263":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:9269:4112":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:50988:4601":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"31:4651:10384":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"6:560:6480":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:10857:2973":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:48258:3464":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:9857:5569":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:10139:5531":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"22:1457:5702":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"17:11515:8516":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"20:2519:2364":{"crate_id":20,"path":["regex","re_unicode","Regex"],"kind":"struct"},"31:6452:6782":{"crate_id":31,"path":["linux_raw_sys","general","old_utsname"],"kind":"struct"},"31:6373:6765":{"crate_id":31,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"16:7659:5264":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:46422:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"21:1850:5766":{"crate_id":21,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"1:9302:4116":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:6415:7760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:7426:5291":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:10075:8385":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:50766:4586":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:11164:62849":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:2739:3428":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:57025:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:3980:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"29:5015:7370":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:13059:8896":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"31:5221:7858":{"crate_id":31,"path":["linux_raw_sys","general","in6_addr"],"kind":"struct"},"5:1211:4104":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:11343:8480":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:2049:4845":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"31:4806:6287":{"crate_id":31,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"22:1698:2896":{"crate_id":22,"path":["aho_corasick","Match"],"kind":"struct"},"17:10296:8399":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:12299:911":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"16:6496:5328":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:12142:6071":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"31:7174:58696":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_12"],"kind":"enum"},"20:2174:2896":{"crate_id":20,"path":["regex","re_bytes","Match"],"kind":"struct"},"21:1802:5763":{"crate_id":21,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"1:4657:4255":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:4329:7386":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:6052:5318":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:54005:4470":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:1595:7186":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:49878:3936":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:973:4097":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"29:8924:7850":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"23:788:5674":{"crate_id":23,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"20:307:8101":{"crate_id":20,"path":["regex","dfa","TransitionsRow"],"kind":"struct"},"29:4865:7345":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:2954:3902":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"5:4986:6028":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"18:548:139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:1436:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:1105:4103":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:8471:4031":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:9437:9692":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"20:1754:2808":{"crate_id":20,"path":["regex","expand","Ref"],"kind":"enum"},"31:5888:10462":{"crate_id":31,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"2:46520:4396":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"29:480:41420":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"16:5878:5198":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:53883:4467":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:50746:4590":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"31:5269:10423":{"crate_id":31,"path":["linux_raw_sys","general","ip6_mtuinfo"],"kind":"struct"},"6:6524:7824":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:20706:4370":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"31:5650:6512":{"crate_id":31,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"21:2569:5798":{"crate_id":21,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"5:1425:4096":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:10799:6064":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:48794:2643":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:545:3820":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:4272:2808":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"29:9194:7853":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:1686:7244":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:10642:5626":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"29:4945:7359":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:2916:5558":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:20028:66424":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:8066:1759":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:6298:5293":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"29:2143:7250":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"31:6497:58689":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"16:7211:5134":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:5876:7739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:4212:7331":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:1637:3904":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"20:1906:8127":{"crate_id":20,"path":["regex","pikevm","Cache"],"kind":"struct"},"17:9947:49205":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:3157:229":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:7051:3111":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:5782:7714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"18:614:68028":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"22:985:5673":{"crate_id":22,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"17:13231:8942":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:22407:4307":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:52295:4476":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:7860:62289":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:8951:68021":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:8162:5567":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:2578:2966":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:353:3837":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"23:632:5686":{"crate_id":23,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:8631:8221":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"31:7278:6954":{"crate_id":31,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"16:4413:9087":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:46444:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:11477:4673":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"30:3192:5931":{"crate_id":30,"path":["rustix","backend","io","types","SpliceFlags"],"kind":"struct"},"16:2825:5443":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:5169:3866":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"29:2005:7218":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:6769:4827":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:1580:7174":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"0:341:1772":{"crate_id":0,"path":["env_logger","DEFAULT_WRITE_STYLE_ENV"],"kind":"constant"},"1:4216:4168":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:2869:4164":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:12301:1463":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:11721:8547":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:7117:5131":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"31:7097:6907":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_files_update"],"kind":"struct"},"6:4274:7359":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:20863:4182":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:54089:9585":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:8160:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:1445:4841":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:10321:5652":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"20:2119:2905":{"crate_id":20,"path":["regex","re_builder","unicode","RegexBuilder"],"kind":"struct"},"20:2358:2908":{"crate_id":20,"path":["regex","re_set","unicode","SetMatchesIntoIter"],"kind":"struct"},"29:8440:7840":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:2534:2901":{"crate_id":20,"path":["regex","re_unicode","Split"],"kind":"struct"},"31:6473:6783":{"crate_id":31,"path":["linux_raw_sys","general","new_utsname"],"kind":"struct"},"2:21909:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:11921:10672":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:2444:3870":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"20:1732:8184":{"crate_id":20,"path":["regex","expand","CaptureRef"],"kind":"struct"},"16:6877:5125":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"22:1351:1811":{"crate_id":22,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"17:10283:8398":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"31:6998:58694":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_10"],"kind":"enum"},"22:1659:7955":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"16:5614:5185":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:9831:5643":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:10854:5580":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:2426:1755":{"crate_id":1,"path":["std","io"],"kind":"module"},"31:4827:10393":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sockaddr_storage__bindgen_ty_1"],"kind":"union"},"29:7282:7710":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:967:8231":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:8694:4282":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:8981:8320":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"20:1473:8146":{"crate_id":20,"path":["regex","compile","SuffixCacheEntry"],"kind":"struct"},"20:1518:8151":{"crate_id":20,"path":["regex","dfa","CacheInner"],"kind":"struct"},"31:5314:10429":{"crate_id":31,"path":["linux_raw_sys","general","ipv6hdr"],"kind":"struct"},"31:7126:6912":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update2"],"kind":"struct"},"16:4606:9092":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:11054:8431":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"31:6711:10489":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_sqe__bindgen_ty_2"],"kind":"union"},"2:2713:3426":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:8822:68014":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:21115:4618":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:11606:8530":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"21:2227:5784":{"crate_id":21,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"6:6998:7850":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:3382:4017":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"20:2581:2897":{"crate_id":20,"path":["regex","re_unicode","Matches"],"kind":"struct"},"21:2367:5790":{"crate_id":21,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"16:6252:5323":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:5011:3969":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"0:438:1971":{"crate_id":0,"path":["env_logger","init"],"kind":"function"},"6:4267:7356":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:13192:8930":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:5664:5187":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:8217:4161":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"29:6936:7613":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"12:659:3464":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:10207:8389":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:9128:3870":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"5:6095:3464":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:12008:8606":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"31:5245:7121":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_mreq"],"kind":"struct"},"1:7748:9716":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"29:8377:7824":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"31:5275:7539":{"crate_id":31,"path":["linux_raw_sys","general","in6_ifreq"],"kind":"struct"},"31:5085:6376":{"crate_id":31,"path":["linux_raw_sys","general","ip_comp_hdr"],"kind":"struct"},"21:1131:5717":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"16:2487:5435":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:20295:3870":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"18:699:5677":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:8749:9465":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"18:609:7874":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:21168:9468":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:7841:4315":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:21257:4423":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:49034:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"23:97:55417":{"crate_id":23,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:5184:47389":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"14:187:47322":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:0:2677":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:7220:7853":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:9225:4005":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"31:6980:6875":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_params"],"kind":"struct"},"14:202:4804":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:56973:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:990:4099":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:9485:9757":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:48596:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:12324:1090":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"21:1958:5773":{"crate_id":21,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"2:9568:2902":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:10434:8403":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:48199:206":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:7156:155":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"29:8017:7751":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:6593:5330":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:5388:5170":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:2742:66626":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"12:1836:3464":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:5835:7727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:10426:3531":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"28:181:5890":{"crate_id":28,"path":["io_lifetimes","views","FilelikeViewType"],"kind":"trait"},"2:49058:129":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"6:4551:6353":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"30:4359:7074":{"crate_id":30,"path":["rustix","process","prctl","UnalignedAccessControl"],"kind":"struct"},"31:4536:6222":{"crate_id":31,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"20:1671:68042":{"crate_id":20,"path":["regex","exec","MatchType"],"kind":"enum"},"6:6322:7751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"28:137:5877":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawFilelike"],"kind":"trait"},"5:6302:4786":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"23:638:5683":{"crate_id":23,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:5009:3926":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:12980:8876":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:2253:3792":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"0:442:2043":{"crate_id":0,"path":["env_logger","init_from_env"],"kind":"function"},"17:9165:68018":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:8946:4141":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"29:9176:7852":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"33:62:3084":{"crate_id":33,"path":["termcolor","IoStandardStreamLock"],"kind":"enum"},"31:7338:6969":{"crate_id":31,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"29:1913:7186":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"0:340:1769":{"crate_id":0,"path":["env_logger","DEFAULT_FILTER_ENV"],"kind":"constant"},"2:47168:9504":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"9:709:4138":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"29:6783:7595":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"22:1127:7895":{"crate_id":22,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"17:12972:8874":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"31:6569:10471":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"22:1023:5812":{"crate_id":22,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"2:2839:3886":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:53429:4510":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:567:6766":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"20:1938:6017":{"crate_id":20,"path":["regex","pool","PoolGuard"],"kind":"struct"},"31:4782:6278":{"crate_id":31,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"31:5307:10428":{"crate_id":31,"path":["linux_raw_sys","general","ipv6_destopt_hao"],"kind":"struct"},"29:5298:7435":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:10863:2522":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"29:6871:6973":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2774:3983":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"20:1998:8206":{"crate_id":20,"path":["regex","prog","InstSplit"],"kind":"struct"},"2:20178:4364":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"16:6059:5433":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:5494:5176":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"31:6202:58688":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_6"],"kind":"enum"},"16:2842:5205":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"20:1790:8187":{"crate_id":20,"path":["regex","input","CharInput"],"kind":"struct"},"1:12298:365":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"22:1388:5849":{"crate_id":22,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"2:49852:3938":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:12337:5620":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"12:1872:3904":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"5:1358:3851":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:8227:2970":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:386:8227":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:10973:8426":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:2367:5434":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:10921:8423":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:2903:206":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:7737:3164":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"9:896:4893":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"23:716:68026":{"crate_id":23,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:50597:4332":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"29:5955:7574":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"20:2040:8212":{"crate_id":20,"path":["regex","prog","InstChar"],"kind":"struct"},"20:2255:2903":{"crate_id":20,"path":["regex","re_bytes","SubCaptureMatches"],"kind":"struct"},"12:632:3850":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:46858:4579":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"31:5521:58677":{"crate_id":31,"path":["linux_raw_sys","general","socket_state"],"kind":"enum"},"17:13580:9048":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"26:100:2492":{"crate_id":26,"path":["humantime","date","format_rfc3339_millis"],"kind":"function"},"6:1550:7156":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:1059:4843":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"15:175:5075":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:2674:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:1938:4195":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:12134:8623":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:10875:5564":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:12485:8669":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:58321:9599":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"12:725:4092":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"18:113:55418":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:21189:4427":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:2652:2968":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:10774:5497":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"29:7185:7693":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:9515:163":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"31:5872:10459":{"crate_id":31,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"15:0:2676":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:9334:2901":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:11199:8446":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:5826:4009":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:6719:5465":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"21:2348:5788":{"crate_id":21,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"1:8391:2952":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:6441:9612":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"30:4846:69164":{"crate_id":30,"path":["rustix","process","prctl","SpeculationFeature"],"kind":"enum"},"29:8896:6538":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:13279:8979":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:2433:5140":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"31:5236:7150":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in6"],"kind":"struct"},"29:5136:7399":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"21:2119:1766":{"crate_id":21,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"2:50937:207":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"29:5054:7380":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:4152:7297":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5504:7611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:6975:10533":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"24:277:1760":{"crate_id":24,"path":["log","Record"],"kind":"struct"},"29:1869:7173":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:4585:4254":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:420:5210":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:9831:4200":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"6:4698:7543":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"11:36:10588":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"5:4071:2939":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:5178:4078":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11787:8555":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:9637:3538":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:2827:3880":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"21:2665:5803":{"crate_id":21,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"29:2113:6982":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"12:738:4093":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:48242:3850":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"18:660:5673":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"14:221:9366":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"12:1832:3850":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"31:7157:10512":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_restriction"],"kind":"struct"},"2:47039:6038":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:8639:4238":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:6610:4125":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"28:142:5872":{"crate_id":28,"path":["io_lifetimes","raw","IntoRawSocketlike"],"kind":"trait"},"2:48182:3555":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:50073:4566":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:4327:9084":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:4257:7353":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"30:3610:69157":{"crate_id":30,"path":["rustix","backend","process","types","Resource"],"kind":"enum"},"2:47112:4044":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"29:712:7130":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"20:1574:8086":{"crate_id":20,"path":["regex","dfa","Byte"],"kind":"struct"},"30:4023:7065":{"crate_id":30,"path":["rustix","backend","time","types","TimerfdTimerFlags"],"kind":"struct"},"31:5020:6344":{"crate_id":31,"path":["linux_raw_sys","general","in_pktinfo"],"kind":"struct"},"1:9531:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:19994:66381":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"14:215:9365":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:1476:142":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:681:9602":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:2905:126":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:12305:1321":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:2254:4849":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"22:1651:7953":{"crate_id":22,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"16:6017:5316":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:52056:9522":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"29:4714:6512":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"20:1693:68041":{"crate_id":20,"path":["regex","exec","MatchLiteralType"],"kind":"enum"},"17:12768:8827":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:9331:4118":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"29:8070:7752":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:6799:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"12:2069:4103":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"18:515:5686":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"31:5729:6547":{"crate_id":31,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"6:4810:10520":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:11112:9708":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"30:3670:69154":{"crate_id":30,"path":["rustix","backend","process","types","Signal"],"kind":"enum"},"16:7288:5337":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"14:7:9362":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:6829:5470":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"29:8890:10533":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"12:444:140":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:686:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12695:8816":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"29:5817:6255":{"crate_id":29,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:50758:4591":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:4357:9085":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:7044:5127":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:3566:9074":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:8110:49011":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"29:5077:7386":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:11559:8524":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"9:977:4894":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:965:4095":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:1386:4092":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:3349:3850":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"30:4706:69162":{"crate_id":30,"path":["rustix","process","prctl","TimeStampCounterReadability"],"kind":"enum"},"17:9751:5584":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:9536:3021":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"31:5610:6507":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"17:13114:8912":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"29:5668:7510":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:2383:1995":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:5841:6608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:9820:5641":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:12955:8871":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"21:2294:5746":{"crate_id":21,"path":["regex_syntax","hir","Class"],"kind":"enum"},"17:13071:8897":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"29:7246:7706":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:4231:7344":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:4761:7566":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"20:1512:8127":{"crate_id":20,"path":["regex","dfa","Cache"],"kind":"struct"},"6:1511:6327":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"21:1144:5718":{"crate_id":21,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"1:11277:4004":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"31:6560:10469":{"crate_id":31,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"2:48444:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"29:8253:7776":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:50754:4593":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"29:1929:7188":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:8422:2956":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:10257:8396":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:8435:2901":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"29:2130:6232":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:5523:6973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"12:853:4100":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:9464:60755":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"21:1706:5757":{"crate_id":21,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"22:1310:7922":{"crate_id":22,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"2:48055:177":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:6640:9613":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:5894:4114":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:8123:117":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"0:36:1811":{"crate_id":0,"path":["env_logger","filter","Builder"],"kind":"struct"},"23:816:5677":{"crate_id":23,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:52649:4509":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"22:1536:7933":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"21:1654:5755":{"crate_id":21,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"29:8856:7849":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"20:1231:5700":{"crate_id":20,"path":["regex","re_unicode","CapturesDebug"],"kind":"struct"},"2:52371:4465":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"21:1167:5720":{"crate_id":21,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"0:576:1912":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Micros"],"kind":"variant"},"29:5611:7497":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"23:655:5688":{"crate_id":23,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:13436:9019":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12860:8848":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:628:3862":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:2515:2965":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:20428:18501":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:6430:3471":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:6109:5164":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"12:300:5060":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:6681:3066":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:3338:159":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:12322:8657":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:4838:4170":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"22:1489:7926":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"28:147:5878":{"crate_id":28,"path":["io_lifetimes","raw","FromRawFilelike"],"kind":"trait"},"1:10668:61108":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:50945:191":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"0:445:1839":{"crate_id":0,"path":["env_logger","builder"],"kind":"function"},"6:4778:7574":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"29:1744:6330":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:12251:8646":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:5000:6030":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:8272:5625":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:13382:8999":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"20:2062:8215":{"crate_id":20,"path":["regex","re_builder","RegexOptions"],"kind":"struct"},"29:5725:7520":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:8083:4202":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:7956:5279":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"29:4675:7297":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:46889:4739":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"31:4635:10381":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"6:6302:6228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"31:5946:6608":{"crate_id":31,"path":["linux_raw_sys","general","sysinfo"],"kind":"struct"},"17:10403:5499":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:52803:4504":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"8:0:2670":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:5981:5203":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:5741:7712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:4849:9100":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"29:2093:7244":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:21975:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:3908:2939":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:4102:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"20:1433:68035":{"crate_id":20,"path":["regex","compile","MaybeInst"],"kind":"enum"},"16:5780:5194":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"31:6542:58690":{"crate_id":31,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"16:8056:5146":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:48808:2645":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:9778:5585":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:6785:3070":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:11070:4024":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"18:507:7869":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"22:1147:7903":{"crate_id":22,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"29:604:7121":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:1811:596":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:50980:4600":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:7737:8230":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:48267:179":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:10830:4572":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:8763:4023":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:48123:3851":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:8106:128":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:6619:5331":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:217:4823":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:6545:7836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:13374:8998":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:949:6020":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2969:4304":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"29:7476:7728":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:9118:68015":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:5595:7631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:49821:3949":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"29:8329:7814":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:12266:8127":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"9:622:4933":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"17:11974:8603":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"20:2346:2906":{"crate_id":20,"path":["regex","re_set","unicode","RegexSet"],"kind":"struct"},"32:0:3047":{"crate_id":32,"path":["bitflags"],"kind":"module"},"1:11640:9618":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:24:596":{"crate_id":2,"path":["core","env"],"kind":"macro"},"6:4598:7508":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12638:8782":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"28:183:5889":{"crate_id":28,"path":["io_lifetimes","views","FilelikeView"],"kind":"struct"},"1:3404:2947":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:4644:7523":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"20:1492:8147":{"crate_id":20,"path":["regex","compile","SuffixCacheKey"],"kind":"struct"},"29:695:6925":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"2:50403:4317":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:52179:4500":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:1751:10599":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:1600:7188":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"29:539:6510":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"2:9138:218":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"31:5029:6348":{"crate_id":31,"path":["linux_raw_sys","general","sockaddr_in"],"kind":"struct"},"16:3854:9079":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:4611:7513":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"31:6054:58685":{"crate_id":31,"path":["linux_raw_sys","general","_bindgen_ty_5"],"kind":"enum"},"2:51848:4507":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:20009:66381":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"29:9234:7550":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"29:7120:7676":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"20:2197:2364":{"crate_id":20,"path":["regex","re_bytes","Regex"],"kind":"struct"},"33:76:3086":{"crate_id":33,"path":["termcolor","StandardStreamLock"],"kind":"struct"},"1:12318:1444":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:9738:5586":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:9315:4117":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:13148:8920":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:50023:2901":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:4437:7435":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:50454:4327":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"31:4501:6213":{"crate_id":31,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"6:4515:7468":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:50618:4334":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"23:753:7879":{"crate_id":23,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"18:636:7879":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"22:1622:7890":{"crate_id":22,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"29:5981:10518":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:2805:3873":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"29:8203:7764":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:8941:8319":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:49331:3784":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:887:3850":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:242:8225":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"20:2437:2907":{"crate_id":20,"path":["regex","re_set","bytes","SetMatches"],"kind":"struct"},"5:6828:3464":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:12211:8643":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"21:1484:5746":{"crate_id":21,"path":["regex_syntax","ast","Class"],"kind":"enum"},"17:13158:8923":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"31:5626:6509":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"31:5799:10448":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"2:11636:35132":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:7255:10535":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"31:7106:6909":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_register"],"kind":"struct"},"18:582:3415":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"20:1468:8145":{"crate_id":20,"path":["regex","compile","SuffixCache"],"kind":"struct"},"21:2160:8073":{"crate_id":21,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"17:11951:8594":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:9407:60741":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:11954:5084":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"0:70:654":{"crate_id":0,"path":["env_logger","fmt"],"kind":"module"},"2:52019:9521":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"29:5256:7428":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"30:2529:6985":{"crate_id":30,"path":["rustix","process","uname","Uname"],"kind":"struct"},"1:8071:4200":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"33:409:3094":{"crate_id":33,"path":["termcolor","ParseColorErrorKind"],"kind":"enum"},"17:9362:5531":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:7557:5270":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:4017:4237":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:3249:5570":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"30:3872:69153":{"crate_id":30,"path":["rustix","backend","time","types","ClockId"],"kind":"enum"},"2:56590:4607":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"1:11457:4006":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"21:1081:5713":{"crate_id":21,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"2:54219:9591":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:50774:4673":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:513:6534":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:2758:3024":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:1672:1054":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"29:7166:7688":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"21:2489:5766":{"crate_id":21,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"0:33:1764":{"crate_id":0,"path":["env_logger","filter","Filter"],"kind":"struct"},"1:10756:4003":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"29:486:7113":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"2:2481:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:2341:5452":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"22:1544:7934":{"crate_id":22,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"2:49812:3945":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:5510:5179":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:48368:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:11368:8484":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"29:641:6772":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"29:8134:7753":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:8650:4240":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:11617:8531":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"20:2476:2897":{"crate_id":20,"path":["regex","re_trait","Matches"],"kind":"struct"},"20:1991:8204":{"crate_id":20,"path":["regex","prog","InstSave"],"kind":"struct"},"6:1654:7226":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:2029:66709":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"9:676:4979":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:12312:722":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"29:5945:7569":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:47545:9459":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"29:745:7132":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"1:4908:6950":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:9488:5518":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:13536:9041":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:47130:4046":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:4268:3914":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:4519:9089":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:11576:8527":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"5:2988:3901":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:4126:7277":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:3319:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"5:36:4781":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:11547:8523":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:10128:3952":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"30:3778:7041":{"crate_id":30,"path":["rustix","backend","process","types","RawCpuSet"],"kind":"struct"},"12:60:68005":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"18:564:5689":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"14:40:8427":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:11684:188":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"21:1107:5716":{"crate_id":21,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"2:52347:4483":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:54157:9589":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:50306:4576":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:3230:2520":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"20:1398:8127":{"crate_id":20,"path":["regex","backtrack","Cache"],"kind":"struct"},"1:6043:3063":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:52773:4501":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"5:4104:6024":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"12:2080:4104":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"27:0:2066":{"crate_id":27,"path":["is_terminal"],"kind":"module"},"2:5845:4053":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:5203:8310":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:2817:3871":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:11594:8528":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:6359:5325":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"21:2132:8070":{"crate_id":21,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"2:48520:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:11585:6068":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:12087:8616":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"29:5633:7505":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:4747:3000":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:11639:8538":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:2261:5165":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"29:1822:7156":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"29:7973:6228":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"29:658:6480":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"2:53681:4498":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:2389:5139":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:53223:4490":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:5163:5208":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:53039:4484":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"28:42:5886":{"crate_id":28,"path":["io_lifetimes","portability","IntoSocketlike"],"kind":"trait"},"6:4300:7370":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:2026:181":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:4294:7368":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:12265:8649":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"31:5788:6559":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"1:2411:4215":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:2662:216":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"31:4628:10380":{"crate_id":31,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"14:160:9362":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:1123:4105":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"31:7117:6911":{"crate_id":31,"path":["linux_raw_sys","general","io_uring_rsrc_update"],"kind":"struct"},"31:7261:6953":{"crate_id":31,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"1:11124:4202":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"22:1413:5850":{"crate_id":22,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"21:2277:5742":{"crate_id":21,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"17:13031:8888":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"21:2385:5791":{"crate_id":21,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"1:11384:6066":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:8546:2407":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:10595:4757":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:53967:4505":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"20:2487:2892":{"crate_id":20,"path":["regex","re_trait","CaptureMatches"],"kind":"struct"},"23:546:5684":{"crate_id":23,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:5949:5201":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:8534:5724":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"1:5574:118":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:11289:60767":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:524:6046":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:2851:3892":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:8911:68020":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:3026:8239":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:4191:7322":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"22:1086:7885":{"crate_id":22,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"17:10374:5595":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:21297:65380":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:6079:3072":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"0:439:2028":{"crate_id":0,"path":["env_logger","try_init_from_env"],"kind":"function"},"17:8339:49017":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"0:572:1906":{"crate_id":0,"path":["env_logger","fmt","TimestampPrecision","Seconds"],"kind":"variant"},"2:2670:2815":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:677:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:53073:4466":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:7786:6060":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:51949:4487":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"9:505:4881":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:1967:4196":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:10445:1780":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:8418:5566":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:50742:4588":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:9213:182":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"0:342:1797":{"crate_id":0,"path":["env_logger","Logger"],"kind":"struct"},"17:13082:8901":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:9930:8353":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:13492:9026":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"29:5094:7389":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:6790:5334":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:5605:7638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"29:1845:7165":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:4461:7445":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"26:101:2491":{"crate_id":26,"path":["humantime","date","format_rfc3339_micros"],"kind":"function"},"23:761:7869":{"crate_id":23,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"17:12073:8613":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:49752:4560":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"12:274:10707":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:10608:5504":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:11528:8518":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"21:2029:126":{"crate_id":21,"path":["regex_syntax","error","Error"],"kind":"enum"},"21:1442:5744":{"crate_id":21,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"31:4519:6219":{"crate_id":31,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"5:271:6020":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"16:5793:5195":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:4262:2807":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:10490:8408":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:2746:66627":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"11:44:5043":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"5:3763:6020":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:50440:4324":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:3014:3904":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"24:0:1756":{"crate_id":24,"path":["log"],"kind":"module"},"2:9309:3851":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:46527:4019":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:11087:8433":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"21:2469:5765":{"crate_id":21,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"6:1562:7165":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:4086:2820":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:8590:3869":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"1:8705:4249":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"31:5805:10450":{"crate_id":31,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"12:669:4095":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"29:9212:7854":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:11264:3533":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:5348:9609":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"28:56:5888":{"crate_id":28,"path":["io_lifetimes","portability","FromSocketlike"],"kind":"trait"},"1:8448:151":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"30:3000:5929":{"crate_id":30,"path":["rustix","backend","io","types","FdFlags"],"kind":"struct"},"6:7214:7852":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"0:599:1811":{"crate_id":0,"path":["env_logger","Builder"],"kind":"struct"},"17:11939:8592":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"}},"external_crates":{"24":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"25":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"33":{"name":"termcolor","html_root_url":null},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"27":{"name":"is_terminal","html_root_url":null},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"31":{"name":"linux_raw_sys","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"regex_syntax","html_root_url":null},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"32":{"name":"bitflags","html_root_url":"https://docs.rs/bitflags/1.3.2/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"rustix","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"26":{"name":"humantime","html_root_url":null},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"io_lifetimes","html_root_url":null},"20":{"name":"regex","html_root_url":null},"29":{"name":"libc","html_root_url":null},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"aho_corasick","html_root_url":null},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"memchr","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}